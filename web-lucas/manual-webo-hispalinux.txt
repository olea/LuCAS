
NOTA de Ismael: este manual era para el webo de Hispalinux, pero como ese y
el de LuCAS eran primos hermanos en diseño, organización y automatismos son
útiles para que los nuevos se hagan rápidamente con la movida.



HISPALINUX -- MANUAL DEL WEBMASTER
----------------------------------

Autor: Juan José Amor
Fecha: Enero de 2000
Revisado: Marzo de 2000

RCSID: $Id: manual-webo-hispalinux.txt,v 1.1 2000/12/12 23:50:15 olea Exp $


Introducción.-

	Con el fin de facilitar la rápida familiarización del webmaster de
turno de Hispalinux, con el sistema adoptado para sus páginas; se
escribe este manual.

	Este manual puede ser actualizado por el webmaster si lo considera
oportuno, aunque se recomienda mantenerlo lo más conciso posible.

    Puesto que el mantenimiento del web ha sido migrado a CVS, es
preciso trabajar con una copia de la base de trabajo y actualizar los
ficheros mediante CVS. Por tanto se hacen precisos unos conocimientos
mínimos de CVS. Dichos conocimientos se resumen en el apéndice del
final.


Tareas diarias.-

	La tarea diaria del webmaster es mantener el contenido de las
páginas del servidor. Estas páginas se mantienen con el preprocesador
WML (Website MetaLanguage), consiguiendo de este modo una gran
simplificación del trabajo.

	Las páginas a editar son los archivos con extensión WML que se
encontrarán en la copia de trabajo de CVS, en el directorio
web-hispalinux.

	Si se observa un fichero cualquiera de este directorio, se verá
que son páginas parciales de HTML, con la presencia de algunas líneas
de control que como norma general no deberemos tocar.

    Por ejemplo, la página asociate.wml es más o menos:

use wml::fmt::isolatin
#use wml::fmt::url
<isolatin>
#include 'Icabecera.wml' autor="Germán Jiménez Gómez" titulo="Asociate!" resumen="Asociate para aprovechar las ventajas de esta organizacion desde el primer momento."
#include 'Imenu.wml'

<H2 ALIGN=JUSTIFY>1 de Junio de 1999 - HispaLinux abre su libro de
Socios</H2>

 [...]


#include 'Ipie.wml'
</isolatin>

Se deberán editar las líneas HTML que suceden al #include Imenu.wml, y
preceden a #include Ipie.wml

	La edición puede realizarse mediante caracteres ISO-8859-1, ya que
el generador de páginas convertirá los caracteres especiales a la
notación exigida en los estándares HTML.

	Al editar debe tenerse en cuenta que solo modificamos el 'cuerpo'
de la página, ya que la cabecera (banner de Hispalinux), el menú de la
izquierda y el pie (nota de copyright) están en otros ficheros
comunes.

	Una vez finalizada la edición, bastará con enviar las
modificaciones al servidor CVS. Mediante una tabla de cron, cada día
es actualizado el servidor principal, slug.hispalinux.es,
regenerándose las páginas HTML correspondientes.

    Si se tiene una instalación local de WML será posible simular el
resultado ejecutando en el directorio web-hispalinux la orden make.

    Si no se tiene, siempre podemos entrar en la cuenta hispa del
servidor slug.hispalinux.es, y ejecutar el script act_cvs que se
encuentra en el directorio ~hispa/public_html/web-hispalinux.

RESUMEN DE PASOS:

1. Editar una página WML: vi pagina.wml
2. Ejecutar make en ese directorio si se tiene instalado WML.
3. Comprobar con el navegador la correcta generación de la página.
4. Enviar cambios al CVS.

Nótese que WML no es un sistema de HTML dinámico como puedan ser los
"server side includes" o PHP. Es simplemente un sistema de proceso de
macros y rutinas de lenguajes script para la generación de páginas
HTML estáticas.



Mantenimiento de Novedades.-

Las novedades que se quieran resaltar en la página principal, se
mantienen en el fichero novedades.conf.

Dicho fichero se editará añadiendo *por el principio* una nueva
sección que constará de:

- Fecha de la noticia (formato DD-MM-AAAA)
- Una línea en blanco
- Texto de la noticia, que podrá incluir hiperenlaces HTML si es preciso.

Finalmente ejecutaremos la herramienta make para regenerar las
páginas.


Ejemplo de archivo novedades.conf:

29-01-2000

HispaLiNUX consigue el patrocinio permanente de <A
HREF="http://www.micro.soft.com/">Micros**ft</A>. Esto supondrá un flujo
continuo de inversiones en nuestra asociación.




Creación de páginas nuevas.-

Para crear una página nueva, podemos tomar como modelo la existente
enpreparacion.wml, que modificaremos y salvaremos con nuevo nombre.

Una vez editada, hay que dar de alta el fichero en el servidor
CVS. Esta operación se detalla en el apéndice del final.

Al finalizar la edición, es necesario ejecutar la herramienta con *dos
pasos*: make dep y make. Si hacemos las pruebas en el servidor web de
Hispalinux, bastará con ejecutar el script act_cvs.

Probablemente será necesario modificar el menú para crear un enlace a
la nueva página. Ver sección más adelante.

RESUMEN DE PASOS:

1. Crear nueva página WML, tomar como modelo enpreparacion.wml
2. Enviar fichero nuevo al servidor CVS.
3. make dep; make si se tiene instalado WML localmente.
4. Comprobar con el navegador la correcta generación.



Cómo modificar el menú y otros ficheros comunes.-

Los ficheros comunes a todas las páginas comienzan por la letra
mayúscula 'I'. En este momento existen tres:

- Icabecera.wml
- Imenu.wml
- Ipie.wml

El fichero que se modificará con más frecuencia será el del menú, para
crear referencias a las nuevas páginas que se creen, o incluir
referencias a otros webs relacionados con Hispalinux o Linux en español.

Al igual que sucede con las páginas generales, éstas deben modificarse
respetando lo que sean macros WML (líneas #include) o código embebido
(Icabecera.wml, index.wml e Ipie.wml contienen código PERL embebido).

De todas formas un vistazo a Imenu.wml nos hará ver la sencillez para
la inclusión de nuevos elementos o secciones de menú.

El fichero Icabecera.wml define en su inicio dos símbolos utilizados
para construir referencias al webmaster. Pueden ser modificados al
relevarse este puesto. En cualquier fichero WML puede incluirse una
URL de referencia al webmaster sin más que incluir un código similar
a:

	El webmaster es <A HREF="mailto:DIR_WMASTER">NOM_WMASTER</A>

	Al procesarlo el código WML podría ser:

	El webmaster es <A HREF="mailto:pepeperez@pp.org">Pepe P&eacute;rez</A>



	Una vez modificado un fichero común, la ejecución de la orden make
o act_cvs provocará la regeneración de varios ficheros HTML.



Banners de promoción.-

	En la página index.wml se pueden incluir banners de promoción de
eventos (por ejemplo, en el momento de escribir esto estábamos
promocionando la Linux-Expo 2000). Ello implica la inclusión de un
código similar a:

# Parte a~nadida: Promocion Linux-Expo
<div align="center">
<a href="http://www.linux-expo.com/"><img
src="img/lexpo.jpg" width="357" height="59" border="0" alt=""></a><br>
Palacio de congresos, Madrid, 26-27 abril 2000 
<br> <b>Hispalinux</b> colabora con <b>
<a href="http://www.linux-expo.com/">Linux-Expo 2000</a></b>
<p>Si está interesado puede participar en la petición de artículos:
<a href="http://www.hispalinux.es/linux-expo/appel_a_com_Madrid.pdf">pdf</a>
<a href="http://www.hispalinux.es/linux-expo/PeticionLinuxExpo.html">html</a>  
<a href="http://www.hispalinux.es/linux-expo/PeticionLinuxExpo.sdw">StarOffice</a>
</div>
<P><HR></P>
# Fin parte a~nadida para Promocion Linux-Expo

Cuando no haya ninguna promoción, se dejará este mismo código
comentado (líneas iniciadas con el carácter '#') para facilitar
futuras promociones.



Páginas especiales.-

	Con ocasión a la celebración de eventos, puesta en marcha de
iniciativas, etc; es posible que se generen páginas que estén fuera
del árbol basado en WML. Aunque habrá que evitarlo en la medida de lo
posible, la norma general será:

	- Crear el subárbol HTML debajo del directorio principal.

	Por ejemplo, esta es la decisión que se tomó para las páginas del
fiestorro de verano ( http://www.hispalinux.es/fiestorro/ ) o para
el congreso, que tenía un diseño totalmente distinto
(http://www.hispalinux.es/congreso/ o http://congreso.hispalinux.es/
).



Conclusiones.-

El lenguaje WML es muy potente y puede añadir una gran complejidad a
un sitio web logrando un mantenimiento sencillo. 

El mantenimiento básico del web consiste en modificar los archivos WML
como si fueran HTML, evitando tocar lo que "no se
conoce". Posteriormente, un vistazo a los manuales de WML nos
permitirá la implantación de alguna funcionalidad nueva que queramos
incluir.



APÉNDICE: Uso básico de CVS.-

    El web de Hispalinux se mantiene en un servidor CVS
(cvs.hispalinux.es) con pserver. Ello significa que los contenidos de
la cuenta hispa de la máquina slug.hispalinux.es se encuentran
mantenidos en el servidor CVS y deben modificarse ahí.

    El webmaster deberá instalar en su estación de trabajo CVS y
realizarse una copia de trabajo o bien utilizar la copia creada en la
cuenta hispa, bajo el directorio /home/hispa/copiacvs/.

    Es deseable que el webmaster instale en su estación de trabajo el
software para poder probar la generación (WML). Aunque no es obligatorio
hacerlo, las pruebas generarían ficheros que no deben enviarse al
CVS. Para ello debe crearse un fichero .cvsignore en la raíz de la cuenta
utilizada, con el siguiente contenido:

*.tex *.aux *.dvi *.ps *.log .dependencias .dependencias.mini


    A) Creación de copia de trabajo CVS.

    Si el webmaster dispone en su estación de trabajo de CVS en Unix,
podrá crearse la copia de trabajo mediante el siguiente procedimiento:

    a.1) Crear un directorio de trabajo.

    mkdir copiacvs

    a.2) Entrar en el servidor CVS.

    cvs -d :pserver:USUARIO@cvs.hispalinux.es:/home/cvsowner login

    USUARIO será el login proporcionado por el responsable del CVS. Se
solicitará una password también proporcionada por dicho responsable.

    a.3) Obtener una copia de los ficheros.

    cvs -d :pserver:USUARIO@cvs.hispalinux.es:/home/cvsowner co web-hispalinux

    Con ello se creará la copia de trabajo.


    B) Con la copia de trabajo creada, la forma normalizada de
realizar modificaciones será (desde dentro del directorio de trabajo):

    cvs update    (obtendrá las últimas modificaciones del servidor)
    ... editar los ficheros (puede hacerse sin estar conectados a Internet)
    cvs update    (obtendrá más modificaciones de haberse producido y
                   analizará posibles inconsistencias generadas)
    cvs ci        (envío de modificaciones una vez que se hayan
                   corregido las inconsistencias si éstas existen).


    Si se añade un fichero nuevo, antes del ci (check-in) deberá
    hacerse:

	cvs add fichero

    cvs add -kb fichero (este caso si el fichero es binario: .gif, etc)


    Si se borra un fichero, antes del ci deberá hacerse:

    cvs remove fichero

    cvs remove -R directorio (eliminar recursivamente un directorio).

    Estos dos comandos asumen que los ficheros se han borrado
previamente de la copia de trabajo. Cuando son muchos los ficheros a
borrar, resulta más cómodo utilizar la opción -f:

    cvs remove -f fichero
    cvs remove -Rf directorio

