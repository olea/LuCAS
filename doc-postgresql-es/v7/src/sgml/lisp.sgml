<!-- 
   $Header: /home/cvs/lucas/doc-postgresql-es/v7/src/sgml/lisp.sgml,v 1.3 2002/06/05 19:13:46 emaldonadog Exp $ 
--> 
<chapter id="lisp">
  <title id="lisp-title">Interfaz de Programación Lisp</title>

  <abstract>
   <para>
    <filename>pg.el</filename> es una interfaz para emacs que permite establecer 
    una conexión por socket con <productname>Postgres</productname>.
   </para>
  </abstract>

  <note>
   <title>Autor</title>
   <para>
    Escrito por
    <ulink url="mailto:emarsden@mail.dotcom.fr">Eric Marsden</ulink>
    21-07-1999.
   </para>
  </note>

  <para>
   <flename>pg.el</filename> es una interfaz para emacs (extraordinario editor de textos). El módulo es
   capaz de asignar tipos de SQL al tipo equivalente de Lisp de Emacs. Actualmente no soporta encriptación,
   autentificación Kerberos, ni objetos grandes (large objects).
  </para>

  <para>
   El código (version 0.2) está disponible bajo la licencia GNU GPL en
   <ulink url="http://www.chez.com/emarsden/downloads/pg.el">
    Eric Marsden</ulink>
  </para>

  <para>
  Cambios desde la última versión:

   <itemizedlist mark="bullet" spacing="compact">
    <listitem>
     <para>
      Incluye funcionalidad con XEmacs (probado con Emacs 19.34 y 20.2, y XEmacs 20.4)
     </para>
    </listitem>

    <listitem>
     <para>
      Añade funciones que proveen de metainformación (lista de bases de datos, de tablas, de columnas).
     </para>
    </listitem>

    <listitem>
     <para>
      los argumentos de `pg:result` son ahora :keywords
     </para>
    </listitem>

    <listitem>
     <para>
      Resistente a MULE
     </para>
    </listitem>

    <listitem>
     <para>
      Introduce más código de autocomprobación
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   Por favor, nótese que esta es una API de programadores, y no proporciona
   ninguna forma de interfaz con el usuario. Ejemplo:

   <programlisting>
 (defun demo ()
    (interactive)
    (let* ((conn (pg:connect "template1" "postgres" "postgres"))
           (res (pg:exec conn "SELECT * from scshdemo WHERE a = 42")))
      (message "status is %s"   (pg:result res :status))
      (message "metadata is %s" (pg:result res :attributes))
      (message "data is %s"     (pg:result res :tuples))
      (pg:disconnect conn)))
   </programlisting>
  </para>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->
