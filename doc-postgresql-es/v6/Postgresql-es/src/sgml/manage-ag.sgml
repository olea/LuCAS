 <chapter id="manage-ag">
  <title>Gestión de una base de datos</title>

  <para>
   Si el programa <application>postmaster</application> de
   <productname>Postgres</productname> está cargado y en ejecución,
   podemos crear algunas bases de datos con las que experimentar. En
   este documento describiremos las órdenes básicos para gestionar
   una base de datos.
  </para>

  <sect1>
   <title>Creación de una base de datos</title>

   <para>
    Supongamos que quiere crear una base de datos llamada
    mibase. Puede hacerlo con el siguiente orden: 

    <programlisting>
% createdb <replaceable class="parameter">nombredb</replaceable>
    </programlisting> 

    <productname>Postgres</productname> le permite crear cualquier
    número de bases de datos en una máquina dada, y usted se
    convierte automáticamente en el administrador de la base de
    datos que acaba de crear. Los nombres de las bases de datos 
    han de comenzar por un caracter alfabético, y su longitud está
    limitada a 31 caracteres. No todos los usuarios están autorizados
    para convertirse en administradores de bases de datos. Si
    <productname>Postgres</productname> rechaza la orden de crear
    bases de datos, es que necesita que el administrador del sistema 
    le garantice derechos para crear las bases de datos. Consulte a
    su administrador de sistemas si le ocurre eso. 
   </para>
  </sect1>

  <sect1>
   <title>Acceso a la base de datos</title>

   <para>
    Una vez que ha construido la base de datos, puede acceder a ella por los
    siguientes medios:

    <itemizedlist spacing="compact" mark="bullet">
     <listitem>
      <para>
       Ejecutando el programa monitor de terminal de
       <productname>Postgres</productname>
       (<application>psql</application>) que le permite introducir, editar
       y ejecutar órdenes <acronym>SQL</acronym> de un modo interactivo. 
      </para>
     </listitem>

     <listitem>
      <para>
       Escribiendo un programa en C que use la biblioteca de rutinas
       <literal>libpq</literal>. Esto le permite enviar órdenes
       <acronym>SQL</acronym> desde C y obtener las respuestas y mensajes
       de estado en su programa. Esta interfaz se discute en el documento
       <citetitle>Guía de programación en PostgreSQL</citetitle>.
      </para>
     </listitem>
    </itemizedlist>

    Puede que quiera ejecutar el programa <application>psql</application>, 
    para probar los ejemplos de este manual. Puede activarlo para la base
    de datos <replaceable class="parameter">nombredb</replaceable>
    escribiendo la orden: 

    <programlisting>
% psql <replaceable class="parameter">nombredb</replaceable> 
    </programlisting>

    Recibirá como respuesta el siguiente mensaje:

    <programlisting>
Welcome to the Postgres interactive sql monitor:

  type \? for help on slash commands
  type \q to quit
  type \g or terminate with semicolon to execute query
You are currently connected to the database: <replaceable>nombredb</replaceable>

<replaceable>nombredb</replaceable>=&gt;
    </programlisting>
   </para>

   <para>
    Este indicativo le informa de que el monitor de terminal se encuentra
    dispuesto y que puede escribir consultas <acronym>SQL</acronym> en el
    espacio de trabajo creado por el citado monitor de terminal.
    El programa <application>psql</application> responde a códigos de
    escape que comienzan con la barra invertida, "\". Por ejemplo, puede
    obtener ayuda sobre la sintaxis de varias órdenes
    <acronym>SQL</acronym> de <productname>Postgres</productname>
    escribiendo:

    <programlisting>
<replaceable>nombredb</replaceable>=> \h
    </programlisting>

    Una vez que ha terminado de introducir sus consultas en el espacio
    de trabajo, puede pasar el contenido de éste al servidor de 
    <productname>Postgres</productname> escribiendo:

    <programlisting>
<replaceable>nombredb</replaceable>=> \g
    </programlisting>

    Esto le dice al servidor que procese la consulta. Si termina su 
    consulta con punto y coma, no es necesario que introduzca la 
    secuencia \g. <application>psql</application> procesará
    automáticamente consultas terminadas en punto y coma. Para leer las
    consultas de un fichero, en lugar de introducirlas interactivamente,
    escriba:

    <programlisting>
<replaceable>nombredb</replaceable>=> \i <replaceable class="parameter">fichero</replaceable>
    </programlisting>

    Para salir de <application>psql</application> y volver a Unix, escriba:

    <programlisting>
<replaceable>nombredb</replaceable>=&gt; \q
    </programlisting>

    y <application>psql</application> terminará y le devolverá el
    intérprete de órdenes. (Para conocer más órdenes de escape, escriba
    \h en la entrada del monitor.)
    Los espacios en blanco (espacios, tabuladores y saltos de línea) pueden
    usarse libremente en las consultas <acronym>SQL</acronym>.
    Los comentarios en una sola línea se indican mediante dos guiones
    (<quote>--</quote>).
    Todo lo que vaya desde los guiones hasta el fin de la línea será
    ignorado. Los comentarios que abarcan múltiples líneas, o que están
    dentro de una línea se encierran entre <quote>/* ... */</quote>, una
    convención que se tomó prestada de <productname>Ingres</productname>.
   </para>
  </sect1>
     
  <sect1>
   <title>Destrucción de una base de datos</title>

   <para>
    Si usted es el administrador de la base de datos mibase, puede
    destruirla usando el siguiente orden de Unix:

    <programlisting>
% dropdb <replaceable class="parameter">nombredb</replaceable>
    </programlisting>

    Esta acción elimina físicamente todos los ficheros asociados con la
    base de datos y no puede ser invertida, por lo que sólo debe ser usada
    con gran precaución.
   </para>

   <para>
    Es también posible destruir una base de datos desde una sesión
    <acronym>SQL</acronym> usando: 

    <programlisting>
&gt; drop database <replaceable class="parameter">nombredb</replaceable>
    </programlisting>
   </para>
  </sect1>

  <sect1>
   <title>Copia de seguridad y restauración</title>

   <caution>
    <para>
     Deben realizarse copias de seguridad de las bases de datos
     regularmente. Dado que <productname>Postgres</productname> gestiona
     sus propios ficheros en el sistema,
     <emphasis>no se recomienda</emphasis> confiar en los sistemas de
     copia de seguridad del sistema para las copias de respaldo de las
     bases de datos; no hay garantía de que los ficheros estén en un
     estado consistente que permita su uso después de la restauración.
    </para>
   </caution>

   <para>
    <productname>Postgres</productname> proporciona dos utilidades para
    realizar las copias de seguridad de su sistema:
    <application>pg_dump</application> para copias de seguridad de bases
    de datos individuales y <application>pg_dumpall</application> para
    realizar copias de seguridad de toda la instalación de una sola vez.
   </para>

   <para>
    La copia de seguridad de una sola base de datos puede realizarse
    usando la siguiente orden:

    <programlisting>
% pg_dump <replaceable class="parameter">nombredb</replaceable> &gt; <replaceable class="parameter">nombredb</replaceable>.pgdump
    </programlisting>

    y puede ser restaurada usando

    <programlisting>
cat <replaceable class="parameter">nombredb</replaceable>.pgdump | psql <replaceable class="parameter">nombredb</replaceable>
    </programlisting>
   </para>

   <para>
    Esta técnica puede usarse para mover bases de datos a una nueva
    localización y para renombrar bases de datos existentes..
   </para>

   <sect2>
    <title>Bases de datos grandes</title>

    <note>
     <title>Autor</title>
     <para>
      Escrito por <ulink url="hannu@trust.ee">Hannu Krosing</ulink> on
      1999-06-19.
     </para>
    </note>

    <para>
     Dado que <productname>Postgres</productname> permite tablas de mayor
     tamaño que el permitido por el sistema de ficheros, puede resultar
     problemático el volcado de una tabla a un fichero, ya que el fichero
     resultante seguramente superará el tamaño máximo permitido.
    </para>

    <para>
     Como <application>pg_dump</application> escribe en stdout, puede usar
     las herramientas *nix para sortear estos posibles problemas:

     <itemizedlist>
      <listitem>
       <para>
        Uso de volcados comprimidos:

        <programlisting>
% pg_dump <replaceable class="parameter">nombredb</replaceable> | gzip > <replaceable class="parameter">nombrefichero</replaceable>.dump.gz
        </programlisting>

        la recuperamos con:

        <programlisting>
% createdb <replaceable class="parameter">nombredb</replaceable>
% gunzip -c <replaceable class="parameter">nombrefichero</replaceable>.dump.gz | psql <replaceable class="parameter">nombredb</replaceable>
        </programlisting>

        o

        <programlisting>
% cat <replaceable class="parameter">nombrefichero</replaceable>.dump.gz | gunzip | psql <replaceable class="parameter">nombredb</replaceable>
        </programlisting>
       </para>
      </listitem>

      <listitem>
       <para>

        Use split:

        <programlisting>
% pg_dump <replaceable class="parameter">nombredb</replaceable> | split -b 1m - <replaceable class="parameter">nombrefichero</replaceable>.dump.
        </programlisting>
        
        y lo recuperamos con:

        <programlisting>
% createdb <replaceable class="parameter">nombredb</replaceable>
% cat <replaceable class="parameter">nombrefichero</replaceable>.dump.* | pgsql <replaceable class="parameter">nombredb</replaceable>
        </programlisting>
       </para>
      </listitem>
     </itemizedlist>
    </para>

    <para>
     Por supuesto, el nombre del fichero
     (<replaceable class="parameter">nombrefichero</replaceable>) 
     y el contenido de la salida de <application>pg_dump</application> no
     tiene por qué coincidir con el nombre de la base de datos. Además, la
     base de datos restaurada puede tener un nombre distinto, por lo que
     este mecanismo también es efectivo para renombrar bases de datos.
    </para>
   </sect2>
  </sect1>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/CATALOG"
sgml-local-ecat-files:nil
End:
-->
