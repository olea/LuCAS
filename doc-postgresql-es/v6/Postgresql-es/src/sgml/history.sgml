<sect1>
 <title>Breve historia de <productname>Postgres</productname></title>

 <para>
  El Sistema Gestor de Bases de Datos Relacionales Orientadas a Objetos
  conocido como <productname>PostgreSQL</productname> (y brevemente
  llamado <productname>Postgres95</productname>) está derivado del
  paquete <productname>Postgres</productname> escrito en Berkeley.
  Con cerca de una década de desarrollo tras él,
  <productname>PostgreSQL</productname>
  es el gestor de bases de datos de código abierto más avanzado hoy en día,
  ofreciendo control de concurrencia multi-versión, soportando casi toda
  la sintaxis SQL (incluyendo subconsultas, transacciones, y tipos y
  funciones definidas por el usuario), contando también con un amplio
  conjunto de enlaces con lenguajes de programación (incluyendo C, C++,
  Java, perl, tcl y python).
 </para>

 <sect2>
  <title>El proyecto <productname>Postgres</productname> de
  Berkeley</title>

  <para>
   La implementación del <acronym>DBMS</acronym>
   <productname>Postgres</productname>
   comenzó en 1986.  Los conceptos iniciales para el sistema
   fueron presentados en
   <xref endterm="STON86-full" linkend="STON86">
   y la definición del modelo de datos inicial apareció en
   <xref endterm="ROWE87-full" linkend="ROWE87">.
   El diseño del sistema de reglas fue descrito en ese momento en
   <xref endterm="STON87a-full" linkend="STON87a">.
   La lógica y arquitectura del gestor de almacenamiento
   fueron detalladas en
   <xref endterm="STON87b-full" linkend="STON87b">.
  </para>

  <para>
   <productname>Postgres</productname> ha pasado por varias revisiones 
   importantes desde entonces. El primer sistema de pruebas fue operacional
   en 1987 y fue mostrado en la Conferencia
   <acronym>ACM-SIGMOD</acronym> de 1988. Lanzamos la Versión 1,
   descrita en <xref endterm="STON90a-full" linkend="STON90a">,
   a unos pocos usuarios externos en Junio de 1989. En respuesta a una
   crítica del primer sistema de reglas
   (<xref endterm="STON89-full" linkend="STON89">), 
   éste fue rediseñado
   (<xref endterm="STON90b-full" linkend="STON90b">)
   y la Versión 2, que salió en Junio de 1990, lo incorporaba.
   La Versión 3 apareció en 1991 y añadió una implementación para múltiples
   gestores de almacenamiento, un ejecutor de consultas mejorado y un
   sistema de reescritura de reglas nuevo. En su mayor parte, las
   siguientes versiones hasta el lanzamiento
   de <productname>Postgres95</productname> (ver más abajo) se centraron
   en mejorar la portabilidad y la fiabilidad.
  </para>

  <para>
   <productname>Postgres</productname> forma parte de la implementación de 
   muchas aplicaciones de investigación y producción. Entre ellas: un
   sistema de análisis de datos financieros, un paquete de
   monitorización de rendimiento de motores a reacción, una base de
   datos de seguimiento de asteroides y varios sistemas de información
   geográfica.
   También se ha utilizado como una
   herramienta educativa en varias universidades.
   Finalmente,
   <ulink url="http://www.illustra.com/">Illustra  Information
   Technologies</ulink>
   (posteriormente absorbida por
   <ulink url="http://www.informix.com/">Informix</ulink>)
   tomó el código y lo comercializó.
   <productname>Postgres</productname> llegó a ser el principal gestor
   de datos para
   el proyecto científico de computación
   <ulink url="http://www.sdsc.edu/0/Parts_Collabs/S2K/s2k_home.html">
   Sequoia 2000</ulink>
   a finales de 1992.
  </para>

  <para>
   El tamaño de la comunidad de usuarios externos casi se duplicó
   durante 1993. Pronto se hizo obvio que el mantenimiento del código
   y las tareas de soporte estaban ocupando tiempo que debía dedicarse
   a la investigación. En un esfuerzo por reducir esta carga, el proyecto
   terminó oficialmente con la Versión 4.2.
  </para>
 </sect2>

 <sect2>
  <title><productname>Postgres95</productname></title>

  <para>
   En 1994,
   <ulink url="mailto:ayu@informix.com">Andrew Yu</ulink>
   y
   <ulink url="http://http.cs.berkeley.edu/~jolly/">Jolly Chen</ulink>
   añadieron un intérprete de lenguage SQL a
   <productname>Postgres</productname>.
   <productname>Postgres95</productname>
   fue publicado a continuación en la Web para que encontrara su propio
   hueco en el mundo como un descendiente de dominio público y código
   abierto del código original <productname>Postgres</productname>
   de Berkeley.
  </para>

  <para>
   El código de <productname>Postgres95</productname>
   fue adaptado a ANSI C y su tamaño reducido en un 25%. Muchos
   cambios internos mejoraron el rendimiento y la facilidad de
   mantenimiento.
   <productname>Postgres95</productname> v1.0.x se ejecutaba en
   torno a un 30-50% más rápido en el Wisconsin Benchmark comparado
   con
   <productname>Postgres</productname> v4.2.
   Además de corrección de errores, éstas fueron las principales mejoras:

   <itemizedlist>
    <listitem>
     <para>
      El lenguage de consultas <productname>Postquel</productname>
      fue reemplazado con <acronym>SQL</acronym> (implementado en el servidor).
      Las subconsultas no fueron soportadas hasta
      <productname>PostgreSQL</productname> (ver más abajo), pero podían ser
      emuladas en <productname>Postgres95</productname> con funciones
      <acronym>SQL</acronym> definidas por el usuario. Las funciones agregadas
      fueron reimplementadas. También se añadió una implementación de la
      cláusula GROUP BY.
      La interfaz <filename>libpq</filename> permaneció disponible para
      programas escritos en <acronym>C</acronym>.
     </para>
    </listitem>

    <listitem>
     <para>
      Además del programa de monitorización, se incluyó un nuevo programa
      (<application>psql</application>) para realizar consultas SQL
      interactivas usando la librería <acronym>GNU</acronym>
      <filename>readline</filename>.
     </para>
    </listitem>

    <listitem>
     <para>
      Una nueva librería de interfaz, <filename>libpgtcl</filename>,
      soportaba clientes basados en <acronym>Tcl</acronym>.
      Un shell de ejemplo, pgtclsh, aportaba nuevas órdenes Tcl para
      interactuar con el motor <productname>Postgres95</productname>
      desde programas <application>tcl</application>
     </para>
    </listitem>

    <listitem>
     <para>
      Se revisó la interfaz con objetos grandes.
      Los objetos grandes de Inversion fueron el único mecanismo para
      almacenar objetos grandes (el sistema de archivos de Inversion fue
      eliminado).
     </para>
    </listitem>

    <listitem>
     <para>
      Se eliminó también el sistema de reglas a nivel de instancia, si bien
      las reglas siguieron disponibles como reglas de reescritura.
     </para>
    </listitem>

    <listitem>
     <para>
      Se distribuyó con el código fuente un breve tutorial introduciendo
      las características comunes de <acronym>SQL</acronym>
      y de <productname>Postgres95</productname>.
     </para>
    </listitem>

    <listitem>
     <para>
      Se utilizó <acronym>GNU</acronym> make (en vez de
      <acronym>BSD</acronym> make) para la compilación.
      <productname>Postgres95</productname> también podía ser
      compilado con un <productname>gcc</productname> sin parches
      (al haberse corregido el problema de alineación de variables de longitud doble).
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2>
  <title><productname>PostgreSQL</productname></title>

  <para>
   En 1996, se hizo evidente que el nombre <quote>Postgres95</quote> no
   resistiría el paso del tiempo. Elegimos un nuevo nombre,
   <productname>PostgreSQL</productname>, para reflejar la relación entre
   el <productname>Postgres</productname> original y las versiones más
   recientes con capacidades <acronym>SQL</acronym>.  Al mismo tiempo,
   hicimos que los números de versión partieran de la 6.0, volviendo a la
   secuencia seguida originalmente por el proyecto
   <productname>Postgres</productname>.
  </para>

  <para>
   Durante el desarrollo de <productname>Postgres95</productname>
   se hizo hincapié
   en identificar y entender los problemas en el código del motor
   de datos. Con <productname>PostgreSQL</productname>,
   el énfasis ha pasado a aumentar características y capacidades,
   aunque el trabajo continúa en todas las áreas.
  </para>

  <para>
   Las principales mejoras en <productname>PostgreSQL</productname>
   incluyen:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Los bloqueos de tabla han sido sustituidos por el control
     de concurrencia multi-versión, el cual permite a los accesos de
     sólo lectura continuar leyendo datos consistentes durante la
     actualización de registros, y permite copias de seguridad en
     caliente desde pg_dump mientras la base de datos permanece
     disponible para consultas.
    </para>
   </listitem>

   <listitem>
    <para>
     Se han implementado importantes características del motor de datos,
     incluyendo subconsultas, valores por defecto, restricciones a valores
     en los campos (constraints) y disparadores (triggers).
    </para>
   </listitem>

   <listitem>
    <para>
     Se han añadido funcionalidades en línea con el estándar
     <acronym>SQL92</acronym>, incluyendo claves primarias, identificadores
     entrecomillados, forzado de tipos cadena literales,
     conversión de tipos y entrada de enteros binarios y hexadecimales.
    </para>
   </listitem>

   <listitem>
    <para>
     Los tipos internos han sido mejorados, incluyendo nuevos tipos de
     fecha/hora de rango amplio y soporte para tipos geométricos
     adicionales.
    </para>
   </listitem>

   <listitem>
    <para>
     La velocidad del código del motor de datos ha sido incrementada
     aproximadamente en un 20-40%, y su tiempo de arranque ha bajado el
     80% desde que la versión 6.0 fue lanzada.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
