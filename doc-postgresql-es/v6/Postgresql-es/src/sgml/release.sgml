 <chapter id="release">
  <title>Notas de versiones</title>

<sect1>
<title>Version 6.5.3</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>1999-10-13</date>
</docinfo>
-->

<para>
Esta es basicamente una limpieza de la version 6.5.2. Hemos añadido un
nuevo pgacces que se perdio en la 6.5.2, e instalado una correcion especifica
para NT.
</para>


<sect2>
<title>Migracion a v6.5.3</title>

<para>
<emphasis>No</emphasis> se requiere un dump/restores para aquellos que
esten ejecutando una 6.5.*.
</para>
</sect2>
<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Version actualizada de pgacces 0.98
Parche especifico para NT
Correccion para reglas de volcado en tablas heredadas
</programlisting>
</para>
</sect2>
</sect1>


<sect1>
<title>Version 6.5.2</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>1999-09-15</date>
</docinfo>
-->

<para>
Esta es basicamente una limpieza de la version 6.5.1. Hemos corregio una variedad
de problemas reportados por usuarios de 6.5.1.
</para>


<sect2>
<title>Migracion to v6.5.2</title>

<para>
<emphasis>No</emphasis> se requiere un dump/restores para aquellos que
esten ejecutando una 6.5.*.
</para>
</sect2>
<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
corregidas las subselect+CASE (Tom)
Añadida configuracion de SHLIB_LINK para los portes de solaris_i386 y solaris_sparc(Daren Sefcik)
Correciones para CASE y WHERE en clausulas "join"(Tom)
Correcion para aborto en BTScan(Tom)
Reparada la comprobacion para UNIQUE redundante e indices PRIMARY KEY(Thomas)
Mejorado para que se compruebe las restricciones en multi-columnas(Thomas)
Correcion para Win32 que tenia problemas con MB habilitado(Hiroki Kataoka)
Permite a yacc de BSD y a bison compilar codigo pl(Bruce)
Corregido el trabajo con SET NAMES
corregidos los int8 (Thomas)
Correccion del consumo de memoria de "vacuum"(Hiroshi,Tatsuo)
Reduccion del consumo total de memoria de "vacuum"(Tom)
Correcion para timestamp(datetime)
Correcciones de problemas en las reglas de paso al analizador sintactico(Tom)
Correccion del problema de cuotas en mkMakefile.tcldefs.sh.in y mkMakefile.tkdefs.sh.in(Tom)
This is to re-use space on index pages freed by vacuum(Vadim)
documentado -x para pg_dump(Bruce)
Correcin para operadores unarios en la regla de paso al analizador sintactico(Tom)
Comentado el FileUnlink de exceso de segmentos durante mdtruncate() (Tom)
Enlazamiento en Irix corregido por Yu Cao &gt;yucao@falcon.kla-tencor.com&lt;
Reparado el error logico en LIKE: no debia devolver un LIKE_ABORT
   cuando alcanza el final de un patron antes del final del texto(Tom)
Reparada limpieza incorrecta de montones de memoria reservadas durante aborto de transaccion(Tom)
Version actualizada de pgaccess 0.98
</programlisting>
</para>
</sect2>
</sect1>


<sect1>
<title>Version 6.5.1</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>1999-07-15</date>
</docinfo>
-->

<para>
Esta es basicamente una limpieza de la version 6.5. Hemos corregio una variedad
de problemas reportados por usuarios de 6.5.
</para>


<sect2>
<title>Migracion to v6.5.1</title>

<para>
<emphasis>No</emphasis> se requiere un dump/restores para aquellos que
esten ejecutando una 6.5.
</para>
</sect2>
<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Añadido un fichero NT LEAME
Correciones de portabilidad para linux_ppc, Irix, linux_alpha, OpenBSD, alpha
Eliminado QUERY_LIMIT, utilizar SELECT...LIMIT
Correcion para EXPLAIN en herencia(Tom)
Parche para permitir "vacuum" en tablas con multi-segmentos(Hirosi)
Correcion para la selectividad del optimizador R-Tree(Tom)
Corregida laguna el descriptor de ficheros ACL(Atsushi Ogawa)
Nueva expresion del codigo de sub arboles(Tom)
Se evitan escrituras en disco para transacciones de solo-lectura(Vadim)
Correccion para eliminacion de tablas temporales si la ultima transaccion fue abortada (Bruce)
Correccion para prevenir que sean creadas tuplas demasiado largas(Bruce)
correciones en plpgsql
Se permiten numeros de puerto de 32k - 64k(Bruce)
Añadido ^ precidence(Bruce)
Renombrados ficheros ordendo llamados pg_temp a pg_sorttemp(Bruce)
Correcion para microsegundos en valores temporales(Tom)
Limpieza de la fuente del Tutorial
Nuevo porte a linux_m68k
Correccion para la ordenacion de NULL's en algunos casos(Tom)
Corregidas las dependencias para librerias compartidas(Tom)
Corregido fallos tecnicos que afectaban a GROUP BY en subselects(Tom)
Correccion para algunas alarmas del compilador (Tomoaki Nishiyama)
Añadido soporte para Win1250 (Checo) (Pavel Behal)
</programlisting>
</para>
</sect2>
</sect1>


  <sect1>
   <title>Version 6.5</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>1998-06-09</date>
</docinfo>
-->

   <para>
    Esta version marca un avance grande en el conocimiento que el equipo de desarrollo tiene
    del codigo fuente que heredamos de Berkeley. Veras que podemos añadir mayores features
    mas facilmente, gracias al incremento en tamaño y experiencia de nuestro mundialmente
    extenso equipo de desarrollo.
   </para>

   <para>
    He aqui un conciso sumario de los mas notables cambios:

    <variablelist>
     <varlistentry>
      <term>
       Control de concurrencia multi-version(MVCC en ingles Multi-version concurrency control)
      </term>
      <listitem>
       <para>
        Esto elimina nuestro viejo
        bloqueo a nivel de tabla, y lo reemplaza con un bloqueo del sistema que
        es superior a la mayoria de los sistemas de bases de datos comerciales. En un sistema tradicional,
        cada registro que es modificado se bloquea hasta que se confirma la transaccion, previniendo
        lecturas por otros usuario. MVCC utiliza de modo natural el caracter multi-version de PostgreSQL
        para permitir que las lecturas continuen leyendo datos consistentes durante la actividad
        de escritura. Las escrituras continuan utilizando el sistemas de transacciones compacto
        pg_log. Todo esto se realiza sin tener que reservar un bloqueo para cada registro como
        en los sistemas tradicionales de base de datos. Asi que, basicamente, ya no estaremos restringidos
        por mas tiempo por el bloqueo simple a nivel de tabla; tenemos algo mejor que el bloqueo a nivel de registro.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>
       Copias de seguridad en caliente con <application>pg_dump</application>
      </term>
      <listitem>
       <para>
        <application>pg_dump</application> se beneficia de las nuevas prestaciones
        de MVCC para dar consistencia a un dump/backup mientras la base de dato
        pemanece en linea y disponible para ser consultada.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>
       Tipos de datos numericos
      </term>
      <listitem>
       <para>
        Ahora tenemos tipos de datos verdaderamente numericos, con precision
        especificada por el usuario.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>
       Tablas temporales
      </term>
      <listitem>
       <para>
        Se garantiza que las tablas temporales tienen nombres unicos
        durante una sesion en la base de datos, y que son destruidas al salir de la sesion.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>
       Nuevas prestaciones SQL
      </term>
      <listitem>
       <para>
        Ahora tenemos soporte para declaraciones CASE, INTERSECT, and EXCEPT.
        Tenemos nuevos LIMIT/OFFSET, SET TRANSACTION ISOLATION LEVEL,
        SELECT ... FOR UPDATE, y un mejorado comando LOCK TABLE.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>
       Aceleramiento
      </term>
      <listitem>
       <para>
        Continuamos acelerando PostgreSQL, gracias a la variedad de talentos
        que hay en nuetsro equipo. Hemos acelerdo la asignacion de memoria,
        la optimizacion, las uniones de tablas (table join), y las rutinas de transferencias de registros.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>
       Portes
      </term>
      <listitem>
       <para>
        Continuamos ampliando nuestra lista de portes, esta vez incluimos
        WinNT/ix86 y NetBSD/arm32.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>
       Interfaces
      </term>
      <listitem>
       <para>
        La mayoria de interfaces tienen una nueva version, y la funcionalidad existentes
        ha sido mejorada.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>
       Documentacion
      </term>
      <listitem>
       <para>
        Nuevo y actualizado material esta presente por toda la
        documentacion. Se han aportado nuevas <acronym>FAQ</acronym>s
        para las plataformas SGI y AIX.
        El <citetitle>Tutorial</citetitle> tiene informacion introductoria
        sobre <acronym>SQL</acronym> de Stefan Simkovics.
        Para la <citetitle>Guia del Usuario</citetitle>, hay paginas
        de referencia cubriendo la utilidad postmaster y mas programas de utilidad,
        un apendice nuevo contiene detalles sobre el comportamiento de date/time.
        La <citetitle>Guia del Administrador</citetitle> tiene un nuevo
        capitulo sobre resolucion de problemas de Tom Lane.
        Y la <citetitle>Guia del Programador</citetitle> tiene una
        descripcion del proceso de interrogacion, tambien de Stefan, y detalles
        acerca de como obtener el arbol del codigo fuente de <productname>Postgres</productname>
        por <productname>CVS</productname> anonimo y
        <productname>CVSup</productname>.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>

   <sect2>
    <title>Migracion to v6.5</title>

    <para>
     Un dump/restore utilizando <application>pg_dump</application>
     es necesario para aquellos que deseen migrar datos de cualquier
     version previa de <productname>Postgres</productname>.
     <application>pg_upgrade</application> <emphasis>not</emphasis> puede
     ser utilizado para actualizar esta version porque la estructura en disco
     de las tablas ha cambiado comparada con versiones precedentes.
    </para>

    <para>
     La nueva caracteristica de Control de Concurrencia Multi-Version (MVCC, en ingles)
     puede dar comportamientos un poco diferentes en entornos multiusuarios.
     <emphasis>Lea y comprenda la seccion siguiente para asegurar que sus aplicaciones
     existentes le proporcionaran el comportamiento que necesita.</emphasis>
    </para>

    <sect3>
     <title>Control de Concurrencia Multi-Version</title>

     <para>
      A causa de que las lecturas en 6.5 no bloquean los datos, a pesar del
      nivel de aislamiento de transaccion, los datos leidos por una transaccion
      pueden ser sobre escritos por otra. En otras palabras, si un registro es devuelto
      por <command>SELECT</command> eso no significa que este registro exista
      realmente en el momento en que es devuelto. (i.e algunas veces despues de
      que la sentencia o la transaccion comience) ni tampoco que el registro este protegido
      de ser borrado o actualizado por una transaccion en concurrente antes de que la transccion
      en curso haga commit o rollback.
     </para>

     <para>
      Para asegurar la existencia actual de un registro y protegerlo contra
      actulizaciones concurrentes se debe utilizar <command>SELECT FOR UPDATE</command>
      o una sentencia <command>LOCK TABLE</command> apropiada. Esto deberia ser
      tenido en cuento cuando se porten aplicaciones desde versiones precedentes de
      <productname>Postgres</productname> y otros entornos.
     </para>

     <para>
      Tenga todo lo anterior en mente su utiliza
      triggers <filename>contrib/refint.*</filename> para
      integridad referencial. Ahora se requieren tecnicas adicionales. Un modo
      es utilizar el comando <command>LOCK parent_table IN SHARE ROW EXCLUSIVE MODE</command>
      si una transaccion va a actualizar/borrar una clave primaria y
      utilizar el comando <command>LOCK parent_table IN SHARE MODE</command> si una
      transaccion va a actualizar/insertar una clave foranea.

      <note>
       <para>
        Notese que si ejecuta una transaccion en modo SERIALIZABLE entonces debe
        ejecutar el comando <command>LOCK</command> anterior antes de la ejecucion de cualquier
        sentencia DML
        (<command>SELECT/INSERT/DELETE/UPDATE/FETCH/COPY_TO</command>) en la
        transaccion.
       </para>
      </note>
     </para>

     <para>
      Esto inconvenientes desapareceran en el futuro
      cuando la habilidad para leer datos sucios (no confirmados)
      (a pesar del nivel de aislamiento) y la verdadera integridad referencial
      sea implementada.
     </para>
    </sect3>
    </sect2>

   <sect2>
    <title>Lista Detalla de Cambios</title>
    <para>
     <programlisting>
Correciones de errores
---------
Correcion de las funciones de conversion text<->float8 y text<->float4(Thomas)
Correcion para creacion de tablas con constraints con mixed-case(Billy)
Cambiado comportamiento de exp()/pow() para generar error en underflow/overflow(Jan)
Correcion de error en pg_dump -z
Limpiezas de invasiones de memoria(Tatsuo)
Correcion para abortos de lo_import(Tatsuo)
Ajustes en el manejo de nombres de tipo de datos para suprimir dobles comillas(Thomas)
Uso de coersion de tipo para emparejar columnas y DEFAULT(Thomas)
Correccion de deadlock de este modo solo verifica una vez despues de un segundo de espera(Bruce)
Correciones para agregaciones y PL/pgsql(Hiroshi)
Correcion para aborto de subquery(Vadim)
Correccion de libpq para la funcion PQfnumber y nombres que no distinguen mayusculas-minusculas(Bahman Rafatjoo)
Correcion para objetos grandes escritos-en-medio, no bloques extra, consumo de memoria(Tatsuo)
Correcion para pg_dump -d o -D y entrecomillado de caracteres especiales en INSERT
Reparados serios problemas con dynahash(Tom)
Correjidos problemas de portabilidad para INET/CIDR
Correcion de problema con error de selectividad en ALTER TABLE ADD COLUMN(Bruce)
Correcion del ejecutor de ese modo trabaja merjejoin de diferentes tipos de columnas(Tom)
Correcion de error para selectividad de OR en Alpha
Correcion para problema de selectividad de indice OR(Bruce)
Correcion \d para que muestre de ese modo la extension apropiada para char()/varchar()(Ryan)
Correcion en el codigo del tutorial(Clark)
Mejoras en la comprobacion de destroyuser(Oliver)
Correcion para Kerberos(Rodney McDuff)
Correcion para borrado de la base de datos mientras los buffers no se han limpiado(Bruce)
Correcion la secuencia nextval() para que pueda asi distinguir mayusculas-minusculas
Correcion para operador !!=
Borrado de buffers antes de destruir los ficheros de las base de datos(Bruce)
Correcion del caso en que el ejecutor evalua las funciones dos veces(Tatsuo)
Se permite a las acciones de secuencia netxval distinguir mayusculas-minusculas(Bruce)
Correcion de optimizador de indexacion para que no trabaje para numeros negativos(Bruce)
Correcion de perdidas de memoria en ejecuciones con fjIsNull
Correcion de perdidas de memoria para aggregate(Erik Riedel)
Se permite que username contenga una almohadilla (#, dash en ingles) en los permisos GRANT
Limpieza de NULL en los tipos inet
Limpieza de errores en tablas del sistema(Tom)
Correcion de problemas de PAGER y del comando \?(Masaaki Sakaida)
Reducido el tamaño de fichero de multi-segment por defecto a 1GB(Peter)
Correcion del volcado de CREATE OPERATOR(Tom)
Correccion para escaneo hacia atras de cursores(Hiroshi Inoue)
Correccion para COPY FROM STDIN cuando se utiliza \i(Tom)
Correcion para una subselect cuando es comparada dentro de una expresion(Jan)
Correcion para manejo de devolucion de error mientras se duelven registros(Tom)
Correcion de problemas con referencia a tipos de array(Tom,Jan)
Se previene oid de UPDATE SET (Jan)
Correcion de pg_dump asi ña opcion -t puede manejar nombres de tabla en mayusculas-minusculas
Correciones para GROUP BY es casos especiales(Tom, Jan)
Correcion de perdidas de memoria en queries falladas(Tom)
DEFAULT soporta ahora identificadores mixed-case(Tom)
Correcion para que multi-sefment utilice DROP/RENAME de tabla, de indice(Ole Gjerde)
Dehabilitacion de uso de pg_dump con las dos opciones -o y -d(Bruce)
Se permite a pg_dump volver adecuadamente permisos de GROUP(Bruce)
Correcion para GROYP BY en INSERT INTO table SELECT * FROM table2(Jan)
Correccion para computaciones en vistas(Jan)
Correciones para agregaciones en array con indices(Tom)
Correccion para como maneja DEFAULT entrecomillado simple en valores que requieren demasiadas comillas
Correccion de problema de seguridad con no super-usuarios que importan/exportan objectos de gran tamaño.(Tom)
Vuelta atras de transaccion que crea table la limpia adecuadamente(Tom)
Correccion para permitir que tablas largas y nombres de columnas generen nombres en serie adecuados(Tom)

Mejoras
------------
Añadida la utilidad "vacuumdb"
Se acelera libpq por mejor asignacion de memoria(Tom)
EXPLAIN utiliza todos los indices(Tom)
Implementadas las expresiones CASE, COALESCE, NULLIF(Thomas)
Nuevo formato de salida de pg_dump(Constantin)
Añadida la cadena min()/max() a las funciones(Thomas)
Extendidas nuevo tipo de coersiones para agregaciones(Thomas)
Nueva contribucion moddatetime (Terry)
Actualizacion a pgaccess 0.96(Constantin)
Añadida rutina para byte unico en tipo de caracter "char"(Thomas)
Mejorada la funcion substr()(Thomas)
Mejorado el manejo de  multi-byte (Tatsuo)
Control de concurrencia Multi-version /MVCC(Vadim)
Nuevo modo Serialized(Vadim)
Correcion para tablas por encima de 2gigs(Peter)
Nuevo SET TRANSACTION ISOLATION LEVEL(Vadim)
Nuevo LOCK TABLE IN ... MODE(Vadim)
Actualizado el driver ODBC(Byron)
Nuevo tipo de datos NUMERIC(Jan)
Nueva SELECT FOR UPDATE(Vadim)
Manejo de "NaN" e "Infinity" para valores de entrada(Jan)
Mejorado el manejo de date/year(Thomas)
Mejorado el manejo de conexiones con el motor de base de datos(backend)(Magnus)
Nuevas opciones ELOG_TIMESTAMPS y la opcion USE_SYSLOG para ficheros de registro(Massimo)
Nueva opcion TCL_ARRAYS (Massimo)
Nueva INTERSECT y EXCEPT(Stefan)
Nuevo pg_index.indisprimary para restro de claves primarias(D'Arcy)
Nuevas opcion pg_dump para permitir el borrado de tablas antes de su creacion(Brook)
Acelaracion de las rutinas de salida de registro(Tom)
Nuevo nivel de aislamiento de READ COMMITTED (Vadim)
Nuevas tablas/indices TEMP (Bruce)
Se evita el ordenamiento si el resultado ya esta ordenado(Jan)
Nueva optimizacin para la asignacion de memoria(Jan)
Se permite a psql ejecutar \p\g(Bruce)
Se permiten multiples reglas de acciones(Jan)
Añadida funcionalidad LIMIT/OFFSET (Jan)
Mejorado el optimizador cuando se unen un numero grande de tablas(Bruce)
Nueva introduccion a SQL de La Tesis de Doctorado de S. Simkovics(Stefan, Thomas)
Nueva introduccion a procesamiento del motor de base de datos (backend) de la Tesis de Doctorado de S. Simkovics(Stefan)
Mejorado el soporte para int8(Ryan Bradetich, Thomas, Tom)
Nuevas rutinas para convertir entre tipos int8 y text/varchar(Thomas)
Nuevos planes arboreos, donde se unen meta-tablas(Bruce)
Habilitadas consultas por la mano derecha por defecto(Bruce)
Se permite que el numero maximo de procesos en servidor (backends) se parametrice en el momento de la configuracion
      (--with-maxbackends and postmaster switch (-N backends))(Tom)
GEQO por defecto tenga ahora 10 tablas porque el optimizador se acelera(Tom)
Se permite NULL=Var para MS-SQL portabilidad(Michael, Bruce)
Modificados contrib check_primary_key() y consecuentemente "automatic" or "dependent"(Anand)
Se permite que psql \d en una vista muestre la consulta(Ryan)
Se acelera el LIKE(Bruce)
Correciones/prestaciones Ecpg , vease fichero src/interfaces/ecpg/ChangeLog(Michael)
Correciones/prestacines JDBC , vease src/interfaces/jdbc/CHANGELOG(Peter)
Se hace que el operador % tenga precedencia como /(Bruce)
Añadida la nueva opcion postgres -O para permitir cambios en la estructura de tablas del sistema(Bruce)
Actualizado el script contrib/pginterface/findoidjoins (Tom)
Major aceleracion en vacuum de lineas borradas con indices(Vadim)
Se permitte la ejecucion de diferentes versiones de funciones no-SQL basadas en argumentos(Tom)
Añadida la opcion -E que muestra las consultas actuales enviadas pro \dt y sus amigos(Masaaki Sakaida)
Añadido numero de version en los banners de arranque de psql(Masaaki Sakaida)
Nuevo contrib/vacuumlo que elimina objetos grandes no referenciados(Peter)
Nueva inicializacion para tamaños de tablas, asi las tablas no vacuumeadas se ejecutan mejor(Tom)
Mejorados los mensajes de error cuando una conexion es rechazada(Tom)
Soporte para array de campos char() y varchar() (Massimo)
Revision del codigo has para incrementar fiabilidad y prestaciones(Tom)
Actualizacion a PyGreSQL 2.4(D'Arcy)
Cambiadas las opciones de depuracion asi -d4 y -d5 producen diferentes displays de nodos(Jan)
nuevas opciones: pretty_plan, pretty_parse, pretty_rewritten(Jan)
Mejor optimizacion de estadisticas para los accesos a tablas del sistema(Tom)
Mejor manejo de tamaño de bloque no por defecto(Massimo)
Mejorado el optmizador de comsumo de memoria GEQO(Tom)
UNION soporta ahora ORDER BY de columnas que no estan en la lista de target(Jan)
Mejoras grandes en libpq++ (Vince Vielhaber)
pg_dump utiliza ahora -z(ACL's) por omision(Bruce)
cache de procesos en servidor (backend), aceleracion de memoria(Tom)
Se hace que pg_dump lo haga todo en una transaccion snapshot(Vadim)
correcion de perdidas de memoria para objetos grandes, correccion para pg_dumping(Tom)
INET escribe ahora respecto a la netmask para comparaciones
Se hace que VACUUM ANALYZE solo utilice un readlock(Vadim)
Se permiten vistas (VIEW) en UNIONS(Jan)
pg_dump puede generar ahora snapshots consistentes en bases de datos activas(Vadim)

Cambios en el Arbol Fuente
-------------------
Mejorado el emparejamiento en el porte(Tom)
Correcciones de portabilidad para SunOS
Añadido porte para NT/Win32 del proceso en el servidor (backend) y se habilita carga dinamica(Magnus and Daniel Horak)
Nuevo porte a Cobalt Qube(Mips) ejecutando Linux(Tatsuo)
Porte a NetBSD/m68k(Mr. Mutsuki Nakajima)
Porte a NetBSD/sun3(Mr. Mutsuki Nakajima)
Porte a NetBSD/macppc(Toshimi Aoki)
Correccion para configuracion de tcl/tk(Vince)
Eliminada la clave CURRENT para consultas por regla(Jan)
carga dinamica en NT ahora funciona(Daniel Horak)
Añadido soporte para ARM32(Andrew McMurry)
Mejor soporte para HPUX 11 y Unixware
Mejorado el manejo de ficheros para ser mas uniforme, previene lagunas en los descriptores de ficheros.(Tom)
Nuevos comandos de instalacion para plpgsql(Jan)
     </programlisting>
    </para>
   </sect2>
  </sect1>


<sect1>
<title>Version 6.4.2</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>1999-12-20</date>
</docinfo>
-->

<para>
La verson 6.4.1 fue incorrectamente empaquetada.  Esta tiene tambien una correcion
adicional para un bug
</para>


<sect2>
<title>Migracion a v6.4.2</title>

<para>
<emphasis>No</emphasis> se requiere un dump/restores para aquellos que
esten ejecutando una 6.4.*.
</para>
</sect2>
<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Correcion para problema de constante de fecha y hora en algunas plataformas(Thomas)
</programlisting>
</para>
</sect2>
</sect1>



<sect1>
<title>Version 6.4.1</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>1999-12-18</date>
</docinfo>
-->

<para>
Esta es basicamente una limpieza de la version 6.4. Hemos corregio una variedad
de problemas reportados por usuarios de 6.4
</para>

<sect2>
<title>Migracion a v6.4.1</title>

<para>
<emphasis>No</emphasis> se requiere un dump/restores para aquellos que
esten ejecutando una 6.4.

</para>
</sect2>
<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Añadida la opcion -N a pg_dump para forzar dobles comillas alrededor de los identificadores. Este es la opcion por omision(Thomas)
Correccion para NOT in donde la clausula causa abortos(Bruce)
Correcion para el coredump de EXPLAIN VERBOSE (Vadim)
Correcion para problemas de shared-library en Linux
Correcion del test de existencia de tabla para permitir combinacion de mayusculas y minusculas y
        espacios en blanco en el nombre de tabla(Thomas)
Fijacion de un par de problemas de pg_dump
La configuracion empareja mejor entradas similares en la platilla template/. (Tom)
Cambios en la construccion de los nombre de la funcion de SPI_* a spi_*
Correcion para la clausula OR WHERE(Vadim)
Correciones para nombres de tablas con mayusculas y minusculas(Billy)
Correcion para contrib/linux/postgres.init.csh/sh (Thomas)
rebasamiento de memoria en libpq corregido
Correciones para SunOS(Tom)
Se cambia el comportamiento de exp() para generar error en negativos(Thomas)
pg_dump fixes for memory leak, inheritance constraints, layout change
Actualizado pgaccess a 0.93
Se corrige el prototipo para plataformas de 64-bit
Correciones para Multi-byte(Tatsuo)
Nueva pagina de manual ecpg
Corregidos rebasamientos de memoria(Tatsuo)
Correcion para fallos en lo_import()(Bruce)
Mejores busquedas para el programa de instalacion(Tom)
Correciones para zona horaria(Tom)
Correciones para HPUX(Tom)
Se utiliza coersiones de tipo implicito para emparejar valores DEFAULT(Thomas)
Anadidas rutinas para ayudar a tipo de caracter bytes-solo(single-byte) (internal)(Thomas)
Correcciones para compilacion de libpq en Win32(Magnus)
Actualizacion a PyGreSQL 2.2(D'Arcy)
</programlisting>
</para>
</sect2>
</sect1>



<sect1>
<title>Version 6.4</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>1998-10-30</date>
</docinfo>
-->

<para>
Hay <emphasis>muchas</emphasis> prestaciones nuevas y mejoras en esta version.
Gracias a unestros desarrolladores y mantenedores, casi todos los aspectos del sistema
han recibido alguna atencion desde la version anterior.
He aqui un resumen, sumario incompleto:


<itemizedlist>
<listitem>
<para>
Las vistas y las reglas son ahora funcionales gracias al extensivo nuevo codigo
en las reglas de re escritura de Jan Wieck.  Tambien escribio un capitulo sobre ello
en la <citetitle>Guia del Programador</citetitle>.
</para>
</listitem>
<listitem>
<para>

Jan tambien contribuyo al segundo lenguaje procedural, PL/pgSQL, para ir con el
original lengaje procedural PL/pgTCL con el que el contribuyo la ultima version.
</para>
</listitem>

<listitem>
<para>
Tenemos soporte opcional de caracter multiple-byte de Tatsuo Iisho para
complementar nuestro soporte local.
</para>
</listitem>

<listitem>
<para>
Las comunicaciones cliente/servidor han sido depuradas, con mejor soporte para
mensajes asincronos e interrupciones, gracias a Tom Lane.
</para>
</listitem>

<listitem>
<para>
El depurador de sintactico ejecuta ahora coersiones de tipo automatico para
emparejar argumentos a los operadores y funciones disponibles, y para
emparejar columnas y expresiones con columnas destino. Esto utiliza un mecanismo
generico que soporta las prestaciones de extensibilidad de tipo de <productname>Postgres</productname>.
Hay un nuevo capitulo en la  <citetitle>Guia de Usuario</citetitle>
que cubre este asunto.
</para>
</listitem>

<listitem>
<para>
Tres nuevos tipos de datos han sido anadidos.
Dos tipos, <type>inet</type> y <type>cidr</type>, soportan varias formas
de trabajo en red IP, subred, y direccionamiento por maquina. Ahora hay un tipo
entero de 8 byte disponible para algunas plataformas. Vease el capitulo de tipos de
datos en la <citetitle>Guia del Usuario</citetitle> para mas detalles.

Un cuarto tipo, <type>serial</type>, se soporta ahora por el depurador de sintactico
como una amalgama de tipo <type>int4</type>, una secuencia, y un indice unico.
</para>
</listitem>

<listitem>
<para>
Han sido añadidas varias prestaciones mas sintacticas compatibles con
<acronym>SQL92</acronym>, incluyendo <command>INSERT DEFAULT VALUES</command>
Several more <acronym>SQL92</acronym>-compatible syntax features have been
added, including <command>INSERT DEFAULT VALUES</command>
</para>
</listitem>

<listitem>
<para>
La instalacion y configuracion automatica del sistema ha recibido alguna
atencio, y deberia ser mas robusta para mas plataformas de lo que nunca
ha sido.
</para>
</listitem>

</itemizedlist>
</para>

<sect2>
<title>Migracion a v6.4</title>

<para>
Se requiere un dump/restore utilizando <application>pg_dump</application>
o <application>pg_dumpall</application>
para aquellas que desen migrar datos desde cualquier
version anterior de <productname>Postgres</productname>.
</para>
</sect2>
<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Correciones de errores
---------
Correcion para una minuscula perdida en PQsetdb/PQfinish(Bryan)
Se elimina char2-16 de los tipos de datos, se utiliza char/varchar(Darren)
Pqfn no maneja un mensaje de NOTICE(Anders)
Reducidas elevadas esperas por ocupacion a causa de bloqueos en transacciones  con muchos procesos en servidor(backends) (dg)
Deteccion de bloqueos de transacciones atascadas (dg)
Correcion para masrcas de tiempo en estilo "ISO" en decodificacion y codificacion(Thomas)
Correccion del problema con borrado de tabla (drop) despues de deshacer (rollback) una transaccion(Vadin)
Cambiado mensaje de error y eliminado mensaje actualizado no funcional(Vadim)
Correccion para verificacion de la matriz (array) de COPY
Correccion para SELECT 1 UNION SELECT NULL
Correccion para perdidas de buffer en llamadas a objetos grandes(Pascal)
Cambio de propietario de tipo oid a int4(Bruce)
Correccion de error en la compatibilidad con oracle de las funciones btrim() ltrim() y rtrim()
Correccion de invalidacion en rebasamientos de cache compartida(Massimo)
Prevencion de perdidas en descriptores de ficheros en COPY's fallidos(Bruce)
Correccion para perdidas en la pg_select de libpgtcl(Constantin)
Correccion de problemas con usuario/contrasena de mas de 8 caracteres(Tom)
Correccion de problemas con manejo de NOTIFY asincronos en el proceso en servidor(backend)(Tom)
Correccion de muchas entradas de sistema malas(Tom)

Mejoras
------------
Actualizacion de ecpg y ecpglib, vease src/interfaces/ecpg/ChangeLog(Michael)
Se muestra en indice utilizado en un EXPLAIN(Zeugswette)
EXPLAIN invoca una regla de sistema y muestra plan(es) para la reescritura de consultas(Jan)
Conocimiento multi-byte de muchos tipos de datos y funciones, via configure(Tatsuo)
Nuevo configure con la opcion --with-mb(Tatsuo)
Nueva opcion initdb --pgencoding(Tatsuo)
Nueva opcion createdb -E multibyte(Tatsuo)
Select version(); ahora devuelve la version de PostgreSQL(Jeroen)
Libpq permite ahora clientes asincronos(Tom)
Se permite la cancelacion desde el cliente de una consulta en el proceso en servidor(backend)(Tom)
Psql cancelas las consultas ahora con Control-C(Tom)
Usuarios de Libpq no necesitan dar consultas dummy para obtener mensajes NOTIFY(Tom)
NOTIFY envia ahora al PID del emisor, asi que puedes decir si eras tu mismo(Tom)
La estructura de PGresult ahora incluye un mensaje de error asociado, si lo hay(Tom)
Se definen los argumentos "tz_hour" y "tz_minute" como date_part()(Thomas)
Se anaden rutinas para convertir entre varchar y bpchar(Thomas)
Se anaden runtinas para permitir el dimensionamiento de
varchar y bpchar dentro de las columnas de destino(Thomas)
Se anade un bit a las etiquetas (flags) oara soportar
zona horaria y minutos en la devolucion de fecha(Thomas)
Se permiten mas variaciones en numeros de coma flotante (por ej. ".1", "1e6")(Thomas)
Se corrigen el analisis sintactico de menores unarios empezando con espacios(Thomas)
Se implementa TIMEZONE_HOUR, TIMEZONE_MINUTE por especificaciones SQL92(Thomas)
Se verifica i se ignora adecuadamente constraints de columna FOREIGN KEY(Thomas)
SE defina USER como sinonimo de CURRENT_USER por especificacines de SQL92(Thomas)
Se habilita HAVING en clausulas pero no se corrije en ningun otro lugar aun.
Se hace el tipo "char" un sinonimo de "char(1)" (actualmente implementado como bpchar)(Thomas)
Se guarda el tipo de cadena si esta especificado por el manejo de la clausula DEFAULT(Thomas)
Operaciones de coercion abarcan diferentes tipos de datos(Thomas)
Se permite a algunos indices utilizar columnas de diferentes tipos(Thomas)
Anadidas capcidades para coersiones de tipo automatico(Thomas)
Depuraciones para objetos grandes, de este modo un fichero es truncado en su apertura(Peter)
Depuraciones de la lectura de lineas(Tom)
Se permite que psql \f \ tomen los espacios en blanco como delimitadores(Bruce)
Se pasa el pg_attribute.atttypmod al frontal de la aplicacion para las longitudes de los campos(Tom,Bruce)
Libreria de compatibilidad con Msql en /contrib(Aldrin)
Se elimina el requerimiento de que las clausulas identificadoras ORDER/GROUP BY
estuvieran incluidas en la lista de la busqueda(David)
Se convierten columnas para emparejarlas en las clausulas de UNION(Thomas)
Se elimina fork()/ecec() y solo se hace fork()(Bruce)
Depuraciones en Jdbc(Peter)
Se muestra el estado del proceso en el servidor (backend) en la
linea de comandos de ps(solo funciona en algunas plataformas)(Bruce)
Pg_hba.conf tiene ahora una opcion sameuser en el campo de la base de datos
Se hace que lo_unlink tome el parametro oid, no el int4
Nueva DISABLE_COMPLEX_MACRO para compiladores que no pueden manejar nuestras macros(Bruce)
Libpgtcl maneja los NOTIFY ahora como un evento Tcl, no se necesitan enviar consultas tontas(Tom)
Depuraciones en libpgtcl(Tom)
Anadida una opcion -error al comando pg_result de libpgtcl(Tom)
Anadido parche locale, vease docs/README/locale(Oleg)
Correccion para pg_dump con ella la sintaxis de CONSTRAINT y CHECK es correcta(ccb)
Nuevo codigo contrib/lo para eliminar grandes objetos huerfanos(Peter)
Nuevp comando psql "SET CLIENT_ENCODING TO 'encoding'" para prestaciones
multi.byte, vease /doc/README.mb(Tatsuo)
codigo /contrib/noupdate para revocar permisos de actualizacion en una columna
Libpq puede ser compilada ahora en win32(Magnus)
Anadido PQsetdbLogin() en libpq
Nuevo tipo entero 8-byte, comprobado por el configure del soporte para OS(Thomas)
Mejor soporte para nombres entrecomillados de tabla/columnas(Thomas)
Se rodean los nombres de tabla y columnas con dobles comillas en pg_dump(Thomas)
PQreset() trabaja ahora con contrasenas(Tom)
Handle case of GROUP BY target list column number out of range(David)
Se permite UNION en las subconsultas
Anadido auto-dimensionamiento a la pantalla a los comandos \d?(Bruce)
Se utiliza UNION para mostrar todos los resultados de \d? en una consulta(Bruce)
Se anade la prestacion de busqueda de campo \d?(Bruce)
Pg_dump utiliza menos peticiones \connect(Tom)
Se hace que la opcion -z de pg_dump trabaje mejor, se documenta en la pagina de manual(Tom)
Se anade la clausula HAVING con total soporte para subconsultas y uniones(Stephan)
Texto completo de las rutinas de indexado en contrib/fulltextindex(Maarten)
Los ids de transacciones se almacenan ahora en memoria compartida(Vadim)
Nuevo PGCLIENTENCODING cuando ejecutan el comando COPY(Tatsuo)
Soporte para la sintaxis SQL92 "SET NAMES"(Tatsuo)
Soporte para LATIN2-5(Tatsuo)
Anadido el caso UNICODE los test de refresion(Tatsuo)
Depuracion de gestor de bloqueos, nuevos modos de bloqueos para LLL(Vadim)
Se permite el uso de indice en clausulas OR(Bruce)
Se permite "SELECT NULL ORDER BY 1;"
La explicacion VERBOSE del plan lo imprime, y ahora imprime en bonito el plan al
fichero de log del postmaster(Bruce)
Se anaden indices al display para el comando \d(Bruce)
Se permite el GROUP BY en funciones(David)
Nuevo pg_class.relkind para obejtos grandes(Bruce)
Nuevo modo de enviar libpq mensajes NOTICE a diferentes localizaciones(Tom)
Nuevo comando de escritura \w para psql(Bruce)
Nuevo /contrib/findoidjoins escanea columnas oid para encontrar relaciones de union(Bruce)
Se permite que sean considerados indices compatibles binarios cuando se verifican
indices validos para una clausula de restriccion conteniendo una constante(Thomas)
Nuevo codigo ISBN/ISSN en /contrib/isbn_issn
Se permite NOT LIKE, IN, NOT IN, BETWEEN, y NOT BETWEEN constraint(Thomas)
Nuevo sistema de reescritura corrige muchos problemas con reglas y vistas(Jan)
        * Reglas en trabajos relacionados
        * Cualificaciones de eventos en trabajos de inserciones/actualizaciones/borrados
        * Nueva variable OLD para referirse a CURRENT, CURRENT se eliminara en un futuro
        * Las reglas de actualizacion se pueden referir a NEW y OLD en la regla cualificacion/accion
        * Inserciones/actualizaciones/borrados en vistas de trabajo
        * Reglas multiples de accion se soportan ahora, rodeadas entre parentesis
        * Usuarios normales pueden crear vistas/reglas en las tablas en las que tengan permisos de RULE
        * Las reglas y las vistas heredan los permisos del creador
        * No hay reglas a nivel de columna
        * No hay reglas de ACTUALIZACION NUEVA/VIEJA (UPDATE NEW/OLD)
        * Nuevas vistas de sistema pg_tables, pg_indexes, pg_rules y pg_views
        * Solo se puede ejecutar una accion en las reglas de SELECT
        * Re escritura total revisada, tal vez para la 6.5
        * manejo de subselects
        * manejo de agregaciones en vistas
        * manejo de inserciones dentro de una seleccion desde una vista ahora funciona
Los indices del sisteme ahora son multi-clave(Bruce)
Los tipos Oidint2, oidint4, y oidname types se eliminan(Bruce)
Se utiliza cache del sistema para mas busquedas en tablas del sistema(Bruce)
Nueva lenguaje de programacion en el proceso en servidor(backend) PL/pgSQL en backend/pl(Jan)
El nuevo tipo de datos SERIAL, auto crea la secuencia/indice(Thomas)
Se permite la comprobacion de declaraciones sin recompilar(Massimo)
Mejoras en el bloqueo de usuario(Massimo)
Nuevo comando setval() para configurar el valor de una secuencia(Massimo)
Auto eliminacion del fichero de socket de unixsi no hay un postmaster ejecutandose(Massimo)
Paquete de traceo condicional(Massimo)
Nuevo comando UNLISTEN(Massimo)
Psql y libpq se compilan ahora bajo win32 utilizando win32.mak(Magnus)
Lo_read ya no almacena rastros NULL (Bruce)
Los identificadores son truncados ahora internamente a 31 caracteres(Bruce)
Opciones de createuser estan disponibles ahora en la linea de comando
Anadido soporte para codigo de enteros de 64-bit, configuracion comprobada, tipos de int8(Thomas)
Se previene la perdida de un descriptor a causa de un COPY fallido(Bruce)
Nuevo comando pg_upgrade(Bruce)
Directorios Updated /contrib (Massimo)
Nueva setencia CREATE TABLE DEFAULT VALUES disponible(Thomas)
Nueva sentencia INSERT INTO TABLE DEFAULT VALUES disponible(Thomas)
Nueva prestacin DECLARE y FETCH(Thomas)
Estructuras internas de libpq ahora no se exportan (Tom)
Se permiten indices con mas de 8 claves(Bruce)
Se elimina el teclado ARCHIVE, que ya no se utiliza(Thomas)
La opcion -n de pg_dump para suprimir comillas alrededor de los identificadores
se deshabilita las columnas del sistema para las vistas(Jan)
nuevos tipos INET y CIDR para direcciones de red(TomH, Paul)
No mas comillas en las salidas de psql
pg_dump ahora vuelca las vistas(Terry)
nuevo SET QUERY_LIMIT(Tatsuo,Jan)

Cambios en el Arbol Fuente
-------------------
Limpieza de /contrib (Jun)
Enlazadas algunas pequenas funciones llamadas para cada registro(Bruce)
Inline some small functions called for every row(Bruce)
Correcciones paraAlpha/linux
Limpiezas para Hp/UX (Tom)
Test de regresion para Multi-byte (Soonmyung.)
Se elimina la opcion --disabled del configure
Se define PGDOC para que utilice POSTGRESDIR por defecto
Se hace la regresion opcional
Se eliminan corchetes extras en el codigo de pgindent(Bruce)
Se anade soporte para la libreria compartida bsdi(Bruce)
Nueva soporte para opcion de configuracion --without-CXX support(Brook)
Nueva FAQ_CVS
Actualizado flowchart de proceso de servidor en tools/backend(backend)
Cambiado atttymod de int16 a int32(Bruce, Tom)
Se corrige Getrusage() para plataformas que no lo tienen(Tom)
Se anade PQconnectdb, PGUSER, PGPASSWORD a la pagina de manual de libpq
NS32K platform fixes(Phil Nelson, John Buller)
Correcciones para Sco 7/UnixWare 2.x (Billy,others)
Correccines para Sparc/Solaris 2.5 (Ryan)
Pgbuiltin.3 esta obsoleto, movido a los ficheros de documentacion(Thomas)
Aun mas documentacion(Thomas)
Soporte para Nexstep(Jacek)
Soporte para Aix (David)
Pagina de manual para pginterface(Bruce)
Todas las librerias compartidas tienen numero de version
Unidas todos los defines de las librerias compartidas de SO-especificos dentro de un unico fichero
Comprobacion de configuracion TCL/TK mas inteligente(Billy)
Configuracion de perl mas inteligente(Brook)
confdigure utiliza install-sh facilitado si no se encuentra script de instalacion(Tom)
nueva Makefile.shlib para configuracion de librerias compartidas(Tom)
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title>Version 6.3.2</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>Tue Apr  7 16:53:16 EDT 1998</date>
</docinfo>
-->

<para>
Esta es una version de correccion de erroes para 6.3.x.
Consultese las notas de la version v6.3 para un sumario completo de las nuevas prestaciones.
</para>
<para>
Sumario:

<itemizedlist>
<listitem>
<para>
Se repara soporte para configuracion automatica para algunas plataformas, incluyendo Linux,
a causa de fallos introducidos sin advertirlo en v6.3.1.
</para>
</listitem>

<listitem>
<para>
Se manejan correctamente las llamadas a funciones en la parte izquierda de las clausulas
BETWEEN y LIKE.
</para>
</listitem>

</itemizedlist>
</para>
<para>
No se requiere un dump/restore para aquellos que esten ejecutando 6.3 o 6.3.1. Un
'make distclean', 'make', y 'make install' es todo lo requerido.
Este ultimo paso deberia ser ejecutado mientras que la postmaster no este ejecutandose.
Deberia re-enlazar (re-link) cualquier aplicacion cliente que utilice librerias
<productname>Postgres</productname>.

</para>
<para>
Para actualizaciones desde instalaciones pre-v6.3,
consultese las instrucciones de instalacion y migracion para v6.3
</para>

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Cambios
-------
Mejoras en la deteccion del configure para tcl/tk(Brook Milligan, Alvin)
Mejoras en las paginas de manual(Bruce)
correcciones para BETWEEN y LIKE (Thomas)
correccion para psql \connect utilizado por pg_dump(Oliver Elphick)
Nuevo driver odbc
pgaccess, version 0.86
eliminado qsort, se utiliza ahora la version de libc, depuraciones(Jeroen)
correcciones para buffer excedidos que se han detectado(Maurice Gittens)
correcciones para buffer excedidos en libpgtcl(Randy Kunkee)
correccion para UNION con DISTICNT en ORDER BY(Bruce)
se comprueba en el configure el gettimeofday (Doug Winterburn)
Correccion para el error "indices no usados"(Vadim)
Adicciones a la documentcion(Thomas)
Correcciones para perdida de memoria en el proceso en el servidor(backend)(Bruce)
limpiezas en libreadline (Erwan MAS)
Eliminado DISTDIR(Bruce)
limpieza de las dependencias de Makefile (Jeroen van Vianen)
correcciones para ASSERT (Bruce)
</programlisting>
</para>
</sect2>
</sect1>
<sect1>
<title>Version 6.3.1</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Mon Mar 23 10:21:52 EST 1998
</date>
</docinfo>
-->

<para>
Sumario:

<itemizedlist>
<listitem>
<para>
Soporte adicional para conjuntos de caracteres multi-byte.
</para>
</listitem>

<listitem>
<para>
Reparacion de la ordenacion de bytes para clientes y servidores de frontal mixto.
</para>
</listitem>

<listitem>
<para>
Actualizaciones menores para permitir sintaxis SQL.
</para>
</listitem>

<listitem>
<para>
Mejoras a la autodeteccion de la configuracion durante la instalacion.
</para>
</listitem>

</itemizedlist>
</para>
<para>
No se requiere un dump/restore para aquellos que ejecuten 6.3. Un
'make distclean', 'make', y 'make install' es todo lo que se requiere.
Deberia re-enlazar (re-link) cualquier aplicacion cliente que utilice librerias
<productname>Postgres</productname>.
</para>
<para>
Para actualizaciones desde instalaciones pre-v6.3,
consultese las instrucciones de instalacion y migracion para v6.3
</para>

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Cambios
-------
depuracione/correcciones para ecpg, ahora en version 1.1(Michael Meskes)
depuracion en pg_user(Bruce)
correccion para objetos largos para pg_dump y tclsh(alvin)
correccion de LIKE para multiples subrayados adyacentes
correccion para redefiniciones en la construccion de funciones(Thomas)
depuraciones para ultrix4
actualizacion a pg_access 0.83
actualizacion de la pagina de manual CLUSTER
Soporte para juego de caracteres multi-byte, vease doc/README.mb(Tatsuo)
correccion para configure --with-pgport
correccion para pg_ident
correccion de big-endian para comunicaciones en el proceso servidor(backend)(Kataoka)
correccion para SUBSTR() y substring() (Jan)
varias correcciones para jdbc (Peter)
libpgtcl improvements, see libptcl/README(Randy Kunkee)
Correccion del error "Datasize = 0" (Vadim)
Se previene la ocultacion de \do(Bruce)
Eliminadas entradas de juegos de caracteres Ruso duplicadas
depuracion para Sunos4
Se permiten claves opcionales de TABLA en LOCK y SELECT INTO(Thomas)
Opciones de CREATE SECUENCE para permitir enteros negativos(Thomas)
Se anade "PASSWORD" como un identificador de columna valido(Thomas)
Se anade comprobacion de los campos objeto en UNION (Bruce)
Correccion para el porte a Alpha(Dwayne Bailey)
Correccion para matrices con texto conteniedo comillas(Doug Gibson)
Correccion para la compilacion en Solaris(Albert Chin-A-Young)
Se indentifica mejor librerias e includes de tcl y tk(Bruce)
</programlisting>
</para>
</sect2>
</sect1>
<sect1>
<title>Version 6.3</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Sun Mar  1 14:57:30 EST 1998
</date>
</docinfo>
-->

<para>
Hay <emphasis>muchas</emphasis> prestacines nuevas y mejoras en esta version.
He aqui un breve, incompleto sumario:

<itemizedlist>
<listitem>
<para>
Muchas prestaciones nuevas, incluyendo
capacitacion total para subconsultas <acronym>SQL92</acronym>
(todo esta aqui excepto la lista destino en la subconsulta)
</para>
</listitem>

<listitem>
<para>
Soporte para variables de entorno del lado del cliente para especificar zona horaria
y estilo de fecha.
</para>
</listitem>

<listitem>
<para>
Interfaz de conexion (socket) para conexiones cliente/servidor. Esto es por
ahora defecto asi que necesitas iniciar <application>postmaster</application>
con la opcion <quote>-i</quote>
</para>
</listitem>

<listitem>
<para>
Mejores mecanismos de autorizacion con contrasena. Los permisos de tabla por defecto
han cambiado.
</para>
</listitem>

<listitem>
<para>
El viejo estilo de <quote>time travel</quote> ha sido eliminado. Se han mejorado los resultados.
</para>
</listitem>

</itemizedlist>
</para>

<note>
<para>
Bruce Momjian escribio las siguientes notas para presentar la nueva version.
</para>
</note>

<para>
Hay algunas cosas generales en la 6.3 que quiero mencionar. Son
solo los grandes items que no pueden ser descritos en una frase.
Se aun necesita una revision de la lista de cambios detallado.
</para>
<para>
Primero, ahora tenemos subconsultas. Ahora que las tenemos, quiero decir
que sin subconsultas, SQL es un lenguaje muy limitado.
Las subconsultas son una prestacion mayor, y deberia revisar su codigo en
los lugares en los que una subconsulta le provea de una mejor solucion para
su sconsultas. Creo que encontrara que hay mas usos para las subconsultas de los
que usted cree. Vadim nos ha puesto en el gran mapa de SQL con las subconsultas, y
con ellas funcionales totalmente. La unica cosa que no puede hacer con las
subconsultas en utilizarlas en lista a obtener(target list).
</para>
<para>
Segundo, la 6.3 utiliza conexion de dominio unix(unix domain sockets) en vez
TCP/IP por defecto. Para permitir conexiones desde otras maquinas, tiene que
utilizar la nueva opcion postmaster -i, y por supuesto editar pg_hda.conf.
Tambien por esta razon el formato de pg_hba.conf ha cambiado.
</para>
<para>
Tercero, loas campos char() permitiran ahora un acceso mas rapido que varchar()
o que campos de texto. Especificamente, el texto y el varchar() tienen una
penalizacin para el acceso a cualquier columna despues de la primera columna
de este tipo. char() utilizo tambien este acceso penalizado, pero
ya no existe por mas tiempo. Esto puede sugerir que redisene algunas de sus
tablas, especificamente si tienes columnas de caracteres cortos que haya
definido como varchar () o texto. Este y otros cambios hacen la 6.3 aun mas
rapida que versiones precedentes.
</para>
<para>
Tenemos ahora contrasenas definibles independientemente de cualquier fichero Unix.
Hay nuevos comandos SQL USER. Vease la pagina de manual pg_hba.conf para mas
informacion. Hay una tabla nueva, pg_shadow, que es utilizada para almacenar
informacion de los usuario y las constrasenas de los usuarios, y que es, por
defecto solo consultable (SELECT-able) por el super usuario de postgres. pg_user es
ahora una vista de pg_shadow, y es consultable (SELECT-able) por PUBLIC. Debe seguir
utilizando pg_user en sus aplicaciones sin cambios.
</para>
<para>
Las tablas creadas por usuarios ahora ya no tienen permisos de consulta (SELECT)
para PUBLIC por defecto. Esto se hizo porque los estandares ANSI lo requieren. Puede
por supuesto conceder (GRANT) cualquier permiso que quiera despues de que la tabla sea
creada. Las tablas del sistema continuan siendo consultables (SELECT-able) por PUBLIC.
</para>
<para>
Tenemos tambien verdaderos codigos de deteccion de bloqueos (deadlock). No mas sesenta
segundos de tiempo de expiracion (timeouts). Y el nuevo codigo implementa un FIFO
mejor, asi que deberia haber un menor agotamiento de recursos durante un uso fuerte.
</para>
<para>
Muchas quejas han sido hechas acerca de la inadecuada documentacion en versiones
anteriores. Thomas ha puesto mucho esfuerzo en muchos manuales nuevos para esta
version. Compruebe en directorio /doc.
</para>
<para>
Por razones de rendimiento, time travel se elimina, pero puede ser implementado
utilizando disparadores (triggers) (vease pgsql/contrib/spi/README). Por favor,
compruebe el nuevo comando \d para tipos, operadores, etc. También las vistas
tienen ahora sus propios permisos, no basados en las tablas subyacentes, asi que
los permisos para ellas deben ser configurados separadamente. Compruebe /pgsql/interfaces
para ver algunas maneras de dialogar con <productname>Postgres</productname>.
</para>
<para>
Esta es la primera version que realmente requiere una explicacion para los usuarios
existentes. De muchas maneras, fue necesario esto porque la nueva version elimina
muchas limitaciones, y las soluciones provisionales (work-around) que eran la gente
estaba utilizando ya no se necesitan.
</para>

<sect2>
<title>Migracion a v6.3</title>

<para>
Se requiere la utilizacion de un <application>pg_dump</application>
o de un <application>pg_dumpall</application>
para todos aquellos que deseen migrar datos de cualquier
version anterior de <productname>Postgres</productname>.
</para>
</sect2>

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Correccion de errores
---------
Correccion de cursores binarios rotos por implementacion de MOVE (Vadim)
Correccion para fallos de la libreria tcl(Jan)
Correccion para el manejo de matrizes (arrays), por Gerhard Hintermayer
Correccion de error en acl, y se elimina pqtrace duplicado (Bruce)
Correccion para psql \e con fichero vacio (Bruce)
Correccion para texcat en campos varchar() (Bruce)
Correccion para DBT Sendproc (Zeugswetter Andres)
Correccion para problema de sintaxis en vacuum analyze(Bruce)
Correccion para indentificadores internacionales(Tatsuo)
Correccion para agregaciones en tablas heredadas (Bruce)
Correccion fr substr() para datos fuera de rango
Correccion para select 1=1 o 2=2, select 1=1 and 2=2, y selec sum (2+) (Bruce)
Correccion para mostrar estado de del resultado cuando no hay tty de salida. La opcion -q
          aun no lo devuelve (Bruce)
Correccion para count(*), argumentos con vistas y tablas multiples y sum(3)(Bruce)
Correccion para cluster (Bruce)
Correccion para PQtrace start/stop muchas veces (Bruce)
Correccion para una variedad de problemas como bloqueos más recientes en espera
        que tienen bloqueo antes que procesos en espera mas viejos, y teniendo gente bloqueada
        en lectura no se comparte bloqueo si proceso que escribe esta esperando para cojer el                 bloqueo, y los procesos escritores que esperan no obtienen prioridad sobre los
        procesos lectores que esperan(Bruce)
Correccion para abortos en psql cuando se ejecutan consultas desde ficheros externos (James)
Correccion para el problema de multiples ordenaciones por columnas, cuando la primera
          tiene valores NULL (Jeroen)
Utilización correcto soporte de funciones de la tabla hash para float8 e int4(Thomas)
Re-enable JOIN= option in CREATE OPERATOR statement (Thomas)
Se cambia la precedencia de los operadores booleanos para emparejarlos con el comportamiento esperado(Thomas)
Se genera elog(ERORR) en enteros que sobre-crecen (Bruce)
Se permite argumentos multiples en las funciones de clausulas de constraint(Thomas)
Se comprueba los literales booleanos de entrada para 'true', 'false','yes','no','1','0'
        y se envian a elog(ERROR) si no se reconocen(Thomas)
Correccion para objetos de gran tamano importante
Correccion para GROUP BY mostrando duplicados(Vadim)
Correccion para exploracion de indice en MergeJion(Vadim)

Mejoras
------------
Sub consultas con las palabras claves EXISTS, IN, ALL y ANY (Vadim, Bruce, Thomas) 
Nuevo Manual del Usuario(Thomas, others)
Aceleracion por alineamiento de algunas funciones frecuentemente llamadas
Deteccion real de bloqueos(deadlock), no mas expiraciones por tiempo(timeout)(Bruce)
se anaden las "constantes" SQL92 CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP,
        CURRENT_USER(Thomas)
Se modifica la sintaxis para ser compatibles con SQL-92(Thomas)
Se implementa las clausulas SQL PRIMARY KEY y UNIQUE utilizando indices(Thomas)
Se reconoce la sintaxis SQL92 para CLAVES FORANEAS (FOREIGN KEYS). Se pone una
       aviso (notice) en el elog (Thomas)
Se permite la clausula de restriccion NOT NULL UNIQUE (cada una de ellas
       permitidas separadamente antes)(Thomas) 
Se permite el estilo de arrojar no constantes (::") Postgres (Thomas)
Se anade soporte para las constantes boleanas de SQL3 TRUE y FALSE (Thomas)
Se soporta la sintaxis SQL92 para IS TRUE/IS FALSE/IS NOT TRUE/IS NOT FALSE(Thomas)
Se permiten cadenas mas cortas para literales booleanos(por ej. "t", "tr", "tru")(Thomas)
Se permiten identificadores de delimitacion SQL92(Thomas)
Se implementa decodificacion para cadenas binarias y hexadecimales SQL92 (b'10' and x'1F')(Thomas)
Support SQL92 syntax for type coercion of literal strings
        (e.g. "DATETIME 'now'")(Thomas)
Se añade conversiones para tipos int2, int4, y OID a y desde texto (Thomas)
Se utilizan bloqueos compartidos cuando se crean indices (Vadim)
La memoria libre reservada para una consulta de usuario dentro de un bloque de transaccion
        despues de esa consulta sea hecha, se habia desactivado <= 6.2.1(Vadim)
Nueva declaracion SQL, CREATE PROCEDURAL LANGUAJE (Jan)
Nuevo interfaz para el motor de base de datos en el servidor (backend)Lenguaje Procedural (PL)
      <productname>Postgres</productname>(Jan)
Se renombra la opcion pg_dump -H a -h(Bruce)
Se anade soporte Java para contrasenas, fechas euopeas (Peter)
Se utilizan indices para operaciones LIKE y ~, !~ (Bruce)
Se anade funciones hash para fecha (datetime) y marca de tiempo (timespan) (Thomas)
Se elimina Time Travel(Vadim, Bruce)
Se anade paginacion para \d y \z, y se corrige \i (Bruce)
Se anade soporte para conexiones de dominio Unix (Unix domain socket) al motor de base de datos y a 
       la libreria del frontal(Goran)
Se implementa CREATE DATABASE/WITH LOCATION y la utilidad initlocation(Thomas)
Se permiten mas palabras reservadas SQL92 y/o <productname>Postgres</productname> como identificadores de 
       columnas(Thomas)
Aumenta el soporte para SQL92 SET TIME ZONE...(Thomas)
SET/SHOW/RESET TIME ZONE utilizan la variable de entorno del motor de base de datos (backend) TZ(Thomas)
Se implementa SET keyword = DEFAULT y SET TIME ZONE DEFAULT(Thomas)
Se habilita SET TIME ZONE utilizando la variable de entorno (Thomas)
Se anade la variable de entorno PGDATESTYLE a la inicializacion del frontal y del motor de base de 
       datos(backend)(Thomas)
Se anaden las variables de entorno PGTZ, PGCOSTHEAP, PGCOSTINDEX, PGRPLANS, PGGEQO a la libreria de 
        inicializacion del frontal(Thomas)
Se configura automaticamente la zona horario en los test de regresion con "setenv PGTZ PST8PDT"(Thomas)
Se anade la tabla pg_descripcion para informacion sobre tablas, columnas, operadores, tipos y 
        agregaciones (Bruce)
Se incremente el limite de caracteres de 16 a 32 en los nombres de tablas/indices de sistema(Bruce)
Se renombran los indices del sistema(Bruce)
Se anade la opcion 'GERMAN' para SET DATESTYLE(Thomas)
Se define un "ISO-style" formato de salida de fecha extendida con los campos "hh:mm:ss"(Thomas)
Se permite valores fraccionales para tiempos delta (por ej. '2.5 dias')(Thomas)
Se valida la entrada de numeros mas cuidadosamente para tiempos delta(Thomas)
Se implementa el dia del ano como una entrada posible para date_part()(Thomas)
Se definen las funciones timespan_finite() y text_timespan() (Thomas)
Se elimina materia archivada(Bruce)
Se habilita una base de datos de autentificacion pg_password que esta separada del fichero de contrasenas
        del sistema(Todd)
Se vuelcan los permisos ACLs, GRANT, REVOKE(Matt)
Se definen funciones de longitud de cadena text, varchar y bpchar(Thomas)
Correccion para el manejo de herencia en consultas, y computos de coste(Bruce)
Se implementa CREATE TABLE/AS SELECT (una alternativa a SELECT/INTO)(Thomas)
Se permite NOT, IS NULL, IS NOT NULL en restrccines(Thomas)
Se implementa UNIONes para SELECT(Bruce)
Se anade UNION, GROUP, DISTINCT a INSERT(Bruce)
varchar() almacena solo los bytes necesarios en disco(Bruce)
Correccion para BLOBs(Peter)
Mega-Parche para JDBC... vease README_6.3 para lista de cambios(Peter)
Se elimina "opcion" no utilizada de PQconnectdb()
Nuevo comando LOCK y pagina de manual describiendo bloqueos(deadlocks)(Bruce)
Se anaden nuevos comandos psql \da, \dd, \df, \do, \dS, and \dT(Bruce)
Mejora de psql \z para mostrar secuencias(Bruce)
Se muestran NOT NULL y DEFAULT en tabla psql \d (Bruce)
Nuevo fichero de arranque de psql .psqlrc(Andrew)
Se modifican el script de muestra del arranque en contrib/linux para mostrar syslog(Thomas)
Nuevos tipos para direcciones IP y MAC en contrib/ip_and_mac(TomH)
Conversiones de tiempo en sistema Unis con tipos date/time en contrib/unixdate(Thomas)
Actualizacion del material contrib(Massimo)
Se anade soporte para conexion Unix (Unix socket) para DBD::Pg(Goran)
Nueva interfaz para python (PyGreSQL 2.0)(D'Arcy)
El nuevo protocolo para frontal/motor de base de datos(backend) tiene un numero version, byte de orden de 
         red (Phil)
Caracteristicas de seguridad en pg_hba.conf mejorada y documentada, muchas depuraciones(Phil)
CHAR() tiene ahora acceso mas rapido que VARCHAR() o TEXT
prepocesador SQL embebido en ecpg
Se reduce la carga de columnas del sistemas(Vadim)
Se elimina la tabla pg_time(Vadim)
Se anade el atributo pg_type para indentificar tipos que necesitan longitud (bpchar, varchar)
Se anade informe de final de linea fuera de termino cuando el comando COPY falla
Se permiten que los permisos en VIEW se configuren separadamente de las tabla subyacentes.
        Por seguridad, se utiliza como apropiado GRANT/REVOKE en vistas(Jan)
Las tablas ahora no tienen por omision GRANT SELECT TO PUBLIC. Debes conceder explicitamente esos permisos.
Limpieza de ejemplos en el tutorial(Darren)


Cambios en el Arbol Fuente
-------------------
Se anaden nuevas herramientas de desarrollo html, y caracteres flotantes en /tools/backend
Correccion para compilacion en SCO
Porte a computador Stratus, Robert Gillies
Anadido soporte para shlib para BSD44_derived & i386_solaris
Se hace la configuracion de Make mas automatizada(Brook)
Se anade script para comprobar los resultados del test de regresion
Se separan las funciones de verificacion sintactica en ficheros mas pequenos, agrupados juntos(Bruce)
Se renombran heap_create a heap_create_and_catalog, rename heap_creatr
        a heap_create()(Bruce)
Parche para bloqueos en Sparc/Linux (TomS)
Se elimina PORTNAME y se reorganiza el material especifico de puertos(Marc)
Se anade fichero de optimizador README(Bruce)
Se elminan algunas recursiones en el optimizados y se limpia algo de codigo ahi(Bruce)
Correccion para bloqueo en NetBSD(Henry)
Correccion para el make libptcl(Tatsuo)
Parche para AIX(Darren)
Cambio IS TRUE, IS FALSE, ... a la expresiones utilizando "=" mas que a llamadas a funcion
        istrue() o isfalse() para permitir optimizacion(Thomas)
Varias correcciones relacionadas con NetBSD/Sparc(TomH)
Bloqueos para linux Alpha(Travis,Ryan)
Se cambian elog(ALARMAS)(WARM) a elog(ERROR)(Bruce)
FAQ para FreeBSD(Marc)
Bring in the PostODBC source tree as part of our standard distribution(Marc)
Un parche menor para HP/UX vs 9(Stan)
New pg_attribute.atttypmod for type-specific info like varchar length(Bruce)
Parches para Unixware(Billy)
Nuevo 'bloqueo' i386 para giro de bloqueo en asm(Billy)
Soporte para procesos en servidor (backends) multiplezados se elimina
Comienza un porte a OpenBSD
Comienza un porte a AUX
Comienza un porte a Cygnus
Se anaden funciones de cadena para la suite de regresion(Thomas)
Se expanden unos pocos nombres de funcion anteriormente truncados a 16 caracteres(Thomas)
Emilinada llamadas a malloc() no necesitadas y reemplazadas con palloc()(Bruce)
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title>Version 6.2.1</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Fri Oct 17 00:01:27 EDT 1997
</date>
</docinfo>
-->

<para>
La v6.2.1 es un a version de correción de error y de usabilidad sobre la v6.2
</para>
<para>
Summary:

<itemizedlist>
<listitem>
<para>
Se permite a las cadenas extender lineas, por <acronym>SQL92</acronym>.
</para>
</listitem>

<listitem>
<para>
Se incluyen ejemplos de funciones desencadenadoras(triggers) para insertar nombres de usuario en actualizaciones de tablas.
</para>
</listitem>

</itemizedlist>
</para>
<para>
esta es una version menor de correccion de error sobre la v6.2
Para actualizaciones desde sistemas pre-v6.2, se requiere un dump/reload completo.
Mire las notas de la version v6.2 para instrucciones.
</para>

<sect2>
<title>Migracion desde v6.2 a v6.2.1</title>

<para>
Esta es una version menor de correccion de error. No se requiere un dump/reload desde la v6.2,
pero se requiere desde cualquier version anterior a la v6.2
</para>
<para>
Al actualizar desde v6.2, si escojes un dump/reload encontraras que
avg(money) se calcula ahora correctamente. Todos las otras correcciones de errores 
tendran efecto al actualizar los ejecutables.
</para>
<para>
Otra manera de evitar el dump/reload es utilizar el siguiente comando SQL
desde psql para actualizar la tabla de sistema existente:


<programlisting>
  update pg_aggregate set aggfinalfn = 'cash_div_flt8'
   where aggname = 'avg' and aggbasetype = 790;
</programlisting>
</para>
<para>
Se necesita hacer esto a todas las bases de datos exitentes, incluyendo template1.
</para>
</sect2>
<sect2>
<title>Lista Detalladas de Cambios</title>

<para>
<programlisting>
Cambios en esta version
-----------------------
Se permite bombres de columna TIME y TYPE (Thomas)
Se permite un rango grande de true/false como valores booleanos(Thomas)
Se soporta la salida de "now" y "current"(Thomas)
Manejo de DEFAULT con INSERT de NULL adecuado(Vadim)
Correccion para el proble de contar relaciones de referencia en el gestor de buffer(Vadim)
Se permite que las cadenas (strings) se extiendan a lineas, como ANSI(Thomas)
Correccion para cursor recursivo con ORDER BY(Vadim)
Correccion de computacion de avg(cash)(Thomas)
Correccion para especificacion de una columna dos veces en un ORDER/GROUP BY(Vadim)
Documentada nueva funcion de libpq que devuelve las lineas afectadas, PQcmdTuples(Bruce)
Funcion desencadenadora (trigger) para insertar nombres de usuario para INSERT/UPDATE(Brook Milligan)
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title>Version 6.2</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Thu Oct 02 12:53:46 EDT 1997
</date>
</docinfo>
-->

<para>
Se requiere un dump/restore para aquellos que deseen migrar datos desde versiones 
anteriores de <productname>Postgres</productname>.
</para>

<sect2>
<title>Migracion desde v6.1 a v6.2</title>

<para>
Esta version requiere un volcado (dump) completo de la base de datos en 6.1 y una 
retauracion de la base de datos en 6.2
</para>
<para>
Notese que la utilidad pg_dump y pg_dumpall de 6.2 deberia utilizarse 
para volcar (dump) la base de datos 6.1.
</para>
</sect2>

<sect2>
<title>Migracion desde v1.x a v6.2</title>

<para>
Aquellas migraciones desde versiones anteriores a 1.* deberian actualizarse 
primero a 1.09 porque el formato de salida de COPY fue mejorado desde la version 1.02.
</para>
</sect2>

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Correcion de errores
---------
Correccion de problemas con pg_dump para herencia, secuencias, tablas archivo(Bruce)
Correccion de errores de compilacion en desbordamientos para shifts, unsigned y prototipos malos 
         de Solaris(Diab Jerius)
Correccion de errores en lineas aritmetricas geometricas (malos calculos de intersecciones)(Thomas)
Comprobacion de intersecciones geometricas en los puntos de finalizacion para evitar lo feo del redondeo(Thomas)
Se cojen tentativas no-funcionales de borrado(Vadim)
Se cambia los nombres de la funcion de tiempo para ser mas consistentes(Michael Reifenberg)
Se comprueba las divisiones por cero(Michael Reifenberg)
Correccion para error muy antiguo que hacia que tuplas cambiadas/insertadas por un comando
        fueran visibles para el propio comando (de ese modo teniamos multiples actualizaciones 
        de tuplas actualizadas, etc)(Vadim)
Correccion para SELECT null, 'fail' FROM pg_am(Patrick)
No se permite SELECT NULL como EMPTY_FIELD(Patrick)
Se elimina senas innecesario de contrib/pginterface
Correccion OR(donde x!= 1 o x sea nulo no devolvera tuplas con x NULL)(Vadim)
Correccion para la funcion time_cmp (Vadim)
Correccion en el manejo de funciones con argumentos que no tiene el atributo primero en 
        las clausulas WHERE (Vadim)
Correccion de GROUP BY cuando el orden de las entradas es diferente del orden en la lista de 
        seleccion (Vadim)
Correccion de pg_dump para agrgaciones sin sfunc1(Vadim)

Mejoras
------------
El parametro del optimizador genetico por defecto GEQO es ahora 8(Bruce)
Se permite el uso de parametros en la lista de consulta teniendo agraciones en las funciones(Vadim)
Se anade driver JDBC como una interfaz(Adrian & Peter)
Utilidad pg_password
Se devuelve el numero de tuplas insertadas/afectadas por una INSERT/UPDATE/DELETE etc.(Vadim)
Los disparadores (triggers) son implementados con CREATE TRIGGER (SQL3) (Vadim)
SPI (Interfaz de Programacion en el Servidor) permite la ejecución de consultas dentro de 
        funciones C (Vadim)
Implementado NOT NULL (SQL92) (Robson Paniago de Miranda)
Se incluyen palabras reservadas para el manejo de cadenas (strings), uniones externas (outer 
        joins) y uniones (unions) (Thomas)
Implementados comentarios extendidos ("/* ... */") utilizando estados exclusivos(Thomas)
Anadido comentarios de una sola linea "//" (Bruce)
Eliminadas algunas restricciones de caracteres en nombres de operadores(Thomas)
Implementado DEFAULT y CONSTRAINT para tablas (SQL92)(Vadim & Thomas)
Anadido operador de concatenacion de texto y funcion (SQL92) (Thomas)
Soporte para sintaxis WITH TIME ZONE (SQL92) (Thomas)
Soporte para sintaxis INTERVAL unidad TO unidad (SQL92)(Thomas)
Se definen los tipos (de datos) DOUBLE PRECISION, INTERVAL, CHARACTER,
        y CHARACTER VARYING (SQL92)(Thomas)
Se define el tipo FLOAT(p) y DECIMAL(p,s), NUMERIC(p,s) rudimentariamente (SQL92)(Thomas)
Se define EXTRACT(), POSITION(), SUBSTRING(), y TRIM() (SQL92)(Thomas)
Se define CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP (SQL92)(Thomas)
Se anade sintaxis y avisos para UNION, HAVING, INNER y OUTER JOIN (SQL92)(Thomas)
Se anaden mas palabras reservadas, la mayoria para cumplir con SQL92(Thomas)
Se permite la entrada de tiempo hh:mm:ss para tipos de marca de tiempo/tiempo 
         relativo (timespan/reltime) (Thomas)
Se anaden rutinas center() para lseg, path, polygon(Thomas)
Se anaden rutinas distance() para circle-polygon, polygon-polygon(Thomas)
Se verifica explicidad para puntos y poliginis contenidos en los poligonos
        utilizando un algoritmo de cruzamiento de ejes(Thomas)
Se anade rutina para convertir circle-box(Thomas)
Se unen operadores conflictivos para diferentes tipos de datos geometricos(Thomas)
Se reemplaza el operador de distancia "<===>" con "<->"(Thomas)
Se reemplaza el operador "above", "!^" con ">^", y el operador "below", "!|" con "<^"(Thomas)
Se anaden rutinas para recorte de texto en ambos extremos, subcadenas y posiciones de cadena(Thomas)
Se han anadido rutinas de conversion circle(box) and poly(circle)(Thomas)
Se permite que las ordenaciones se almacenen en memoria antes que en ficheros(Bruce & Vadim)
Se permite que funciones y operadores con tipos internamente identicos finalicen con exito(Bruce)
Speed up backend startup after profiling analysis(Bruce)
Se alinean frecuentes llamadas a funciones para mejorar las prestaciones(Bruce)
Se reducen las llamadas open() (Bruce)
psql:  Se anade correccion para PAGER \h y \?,\C
Correccion para el paginador psql cuando no hay tty(Bruce)
Nueva utilidad entab (Bruce)
Funciones generales de disparadores para integridad referencial (Vadim)
Funciones generales de disparadores para tiempo transcurrido (Vadim)
Funciones generales de disparadores para la prestacion AUTOINCREMENT/IDENTITY (Vadim)
Se implemente MOVE (Vadim)

Cambios en el Arbol Fuente
-------------------
Parches para HPUX 10 (Vladimir Turin)
Anadido soporte para SCO (Daniel Harris)
parches para mkLinux(Tatsuo Ishii)
Se cambia la terminologia geometica de caja de "length" a "width"(Thomas)
Se desaprueban campos incrmentales temporales no almacenados en el codigo geometrico(Thomas)
Se eliminan instrucciones de reinicio de INSTALL(Bruce)
Se mira en /usr/ucb antes de instalar(Bruce)
Correccion para el codigo de ejemplo de c++(Thomas)
Anadido -o a la pagina de manual de psql(Bruce)
Se previene que la longitud de la cadena relname no asignada sea copiada dentro de la base de datos (Bruce)
Depuracion del uso de NAMEDATALEN (Bruce)
Correccion para nombres pg_proc por encima de los 15 caracteres de salida(Bruce)
Anadida la funcion strNcpy() (Bruce)
eliminados algunos (void) repartidos que son innecesarias(Bruce)
nuevo directorio de interfaces(Marc)
Se remplazan las llamadas fopen() con llamadas a las funciones fd.c(Bruce)
Se hacen las funciones estaticas donde es posible(Bruce)
Se encierran las funciones no usadas con #ifdef NOT USED(Bruce)
Se eliminan las llamadas a difftime() en el soporte de estampacion de fecha para corregir SunOS(Bruce & Thomas)
Cambios para Digital Unix
Correccion de portabilidad para pg_dumpall(Bruce)
Se renombra pg_attribute.attnvals a attdisbursion(Bruce)
Pagina de manual "intro/unix" ahora es "pgintro"(Bruce)
Pagina de manual "built-in" ahora es "pgbuiltin"(Bruce)
Pagina de manual "drop" ahora es "drop_table"(Bruce)
Anadidas paginas de manual "create_trigger", "drop_trigger"(Thomas)
Anadidas constraints a los test de regresion(Vadin 6 Thomas)
Anadidos comentarios a la sintaxis del test de regresion(Thomas)
Anadido PGIDENT y programa de soporte(Bruce)
Commit masivo al ajecutar PGIDENT en todos los ficheros *.c y *.h(Bruce)
Ficheros movidos al directorio /src/tools(Bruce)
Guias de programacion de SPI y disparadores(triggers)(Vadim & D'Arcy)
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title>Version 6.1.1</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Mon Jul 22 18:04:49 EDT 1997
</date>
</docinfo>
-->


<sect2>
<title>Migración desde v6.1 a v6.1.1</title>

<para>
Esta es una versión de correcciones menores. No se necesita volcado/recarga desde
la versión 6.1, pero sí para cualquier versión previa.
Diríjase a las notas de versión de v6.1 para conseguir más detalles.
</para>
</sect2>

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Cambios en esta versión
-----------------------
Correcciones para SET con opciones (Thomas)
se permite a pg_dump/pg_dumpall preservar la propiedad de todos los
   objetos/tablas (Bruce)
la nueva opción \connect de psql permite cambiar el código de usuario sin
   cambiar de base de datos.
corrección de la opción --debug de initdb (Yoshihiko Ichikawa)
limpieza de lextest (Bruce)
correcciones en la rutina hash (Vadim)
corrección en la aritmética de construcción del mes en fecha/hora (Thomas)
corrección en la manipulación del horario en zonas horarias en algunas
   migraciones (Thomas, Bruce, Tatsuo)
timestamp sobrecargado al utilizar funciones standard (Thomas)
otras limpiezas del código en rutinas de fecha y hora (Thomas)
\d de psql ahora es insensible a las mayúsculas (Bruce)
los comandos con \ de psql ahora pueden tener ; final (Bruce)
corrección de huecos de memoria en psql cuando se utiliza \g (Bruce)
correcciones mayores para la manipulación final de la comunicación con el
   servidor (Thomas, Tatsuo)
Correcciones para el ensamblador de Solaris y los ficheros de
   include (Yoshihiko Ichikawa)
pg_dumpall devuelve ahora el status correcto, corregida la portabilidad (Bruce)
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title>Version 6.1</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Sun Jun  8 14:41:13 EDT 1997
</date>
</docinfo>
-->

<para>
  Las pruebas de regresión se han adaptado y modificado extensamente para la
  versión v6.1 de <productname>Postgres</productname>.
</para>

<para>
  Se han añadido tres nuevos tipos de datos (datetime, timespan, and circle)
  al conjunto nativo de tipos de <productname>Postgres</productname>.
  Puntos, cajas, rutas y polígonos tienen sus formatos de salida consistentes
  por encima de los tipos de datos. La salida polígono en misc.out sólo se ha
  revisado para hacer correcciones relativas a la salida de regresión original.
</para>

<para>
  <productname>Postgres</productname> v6.1 introduce un nuevo optimizador
  alternativo que utiliza algoritmos <firstterm>geneticos</firstterm>.
  Estos algoritmos introducen un comportamiento aleatorio en la ordenación
  de los resultados de la consulta cuadno la consulta contiene múltiples
  calificadores o múltiples tablas (dando el optimizador una elección en el
  orden de evaluación). Se han modificado varias pruebas de regresión para
  ordenar explícitamente el resultado, y hacerlo así insensible a las
  elecciones del optimizador. Unas pocas pruebas de regresión corresponden a tipos
  de datos que son inherentemente desordenados (como puntos o intervalos de tiempo),
  y las pruebas que involucran estos tipos se fuerzan explicitamente con
  <command>set geqo to 'off'</command> y <command>reset geqo</command>.
</para>

<para>
  La interpretación de los especificadores de vectores (los corchetes alrededor
  de valores atómicos) parece haber cambiado alguna vez tras las pruebas de regresión
  originales. Los ficheros actuales <filename>./expected/*.out</filename> reflejan
  esta nueva interpretación, ¡que puede no ser correcta!
</para>

<para>
  Las pruebas de regresión con float8 fallan al menos en algunas plataformas. Esto
  se debe a las diferencias en las implementaciones de pow() y exp() y a los
  mecanismos de señalización utilizados para las condiciones de sobrecarga y
  subcarga.
</para>

<para>
  Los resultados "aleatorios" en la prueba aleatoria deberían probocar que la
  prueba "aleatoria" resultase "fallida", pueso que los test de regresión se
  evalúan con un simple diff. Sin embargo, la prueba "aleatoria" no parece producir
  resultados aleatorios en mi máquina de pruebas (Linux/gcc/i686).
</para>

<sect2>
<title>Migración a v6.1</title>

<para>
Esta migración requiere un volcado completo de la base de datos 6.0
y su restauración en la base de datos en 6.1.
</para>
<para>
Aquellos que quieran migrar desde versiones iniciales 1.* deberían primero
actualizarse a 1.09, porque el formato de salida de COPY se mejoró en la versión 1.02.
</para>
</sect2>

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Corrección de errores
---------------------
comprobaciones en la longitud empaquetada en rutinas de la librería
parche de prioridad en el gestor de bloqueos
comprobaciones para sub/sobrecarga de float8 (Bruce)
correcciones en cruces de múltiples tablas (Vadim)
corrección de un aborto de SIGPIPE (Darren)
correcciones sobre objetos grandes (Sven)
se permite que los índices btree manipulen NULL,s (Vadim)
correcciones en timezone (D'Arcy)
select SUM(x) puede devolver NULL cuando no hay filas (Thomas)
se corrigen errores del optimizador interno y del ejecutor (Vadim)
se corrigen problemas cuando bucles internos en < o <= no tienen filas (Vadim)
se previene la re-inversión de cláusulas join de índices (Vadim)
corregida la clausula join para múltiples tablas (Vadim)
corregidos hash y hashjoin para vectores (Vadim)
corrección en btree para el tipo abstime (Vadim)
correcciones para objetos grandes (Raymond)
corregidos huecos en el buffer en índices hash (Vadim)
corregido rtree para el uso de barridos internos (Vadim)
correcciones esenciales para el uso de barridos internos, limpiezas (Vadim, Andrea)
se impide la colocación de buffers locales innecesarios (Vadim, Massimo)
corregidos huecos de buffers locales en abortos de transacciones (Vadim)
corregidos huecos de memoria del gestor de ficheros, limpiados (Vadim, Massimo)
corregidos huecos de memoria del gestor de almacenamiento (Vadim)
corregido que btree duplique la manipulación (Vadim)
corregida la reencarnación de tuplas borradas causada por vacuum (Vadim)
corregido SELECT varchar()/char() INTO TABLE hace campos de longitud cero (Bruce)
corregidas muchos huecos de memoria de psql, pg_dump y libpq utiliando Purify (Igor)


Mejoras
--------------
estadisticas de optimización de atributos (Bruce)
nuevo código de carga masivo btree mucho más rápido (Paul)
añadido BTREE UNIQUE para código de carga masiva (Vadim)
nuevo aspecto del código de depuración (Massimo)
cambios masivos en libpq++ (Leo)
el nuevo optimizador GEQO acelera la optimización en tablas multi-tabla (Martin)
nuevo mensaje de alarma para inserciones no únicas en claves únicas (Marc)
update x=-1, sin espacios, ahora es válido (Bruce)
se elimina la manipulación de identificadores sensibles a las mayusculas (Bruce, Thomas, Dan)
la depuración del servidor ahora imprime un árbol agradable (Darren)
nuevas funciones de caracteres de Oracle (Edmund)
nuevas funciones de palabra clave con texto plano (Dan)
se cambian a mensajes diferentes no tal clase y insuficientes privilegios (Dan)
nueva función ANSI timestamp (Dan)
nuevos tipos ANSI Time y Date (Thomas)
mueve grandes grupos de datos en el servidor (Martin)
índices btree multicolumna (Vadim)
nuevo comando SET var TO valor (Martin)
status de transacción de actualización en las lecturas (Dan)
nuevos ajustes locales para tipos de caracteres (Oleg)
nuevo generador de series de números SEQUENCE (Vadim)
ahora es posible GROUP BY una función (Vadim)
reorganizada la prueba de regresión (Thomas, Marc)
nuevos pesos de operaciones en el optimizador (Vadim)
nueva opción psql \z grant/permit (Marc)
nuevo tipo de datos MONEY (D'Arcy, Thomas)
incrementada la velocidad de comunicación por el socket tcp (Vadim)
nueva opción VACUUM para estadisticas de atributos, y para ciertas columnas (Vadim)
muchas potenciaciones de tipos geométricos (Thomas, Keith)
Pruebas de regresión adicionales (Thomas)
nuevas variables de estilo de datos (Thomas, Vadim, Martin)
más operadores de comparación para ordenar tipos (Thomas)
nuevas funciones de conversión (Thomas)
no más formato btree compacto (Thomas)
ser permite a pg_dumpall preservar la propiedad de las bases de datos (Bruce)
nuevas variables SET GEQO=# y R_PLANS (Vadim)
el viejo optimizador (!GEQO) puede utilizar planes del lado derecho (VADIM)
merjorado el control de tipos en el traductor de SQL (Bruce)
nuevos comandos SET, SHOW y RESET (Thomas, Vadim)
nueva opción USER \connect basededatos
nueva opción destroydb -i (Igor)
nuevos comandos de psql \dt y \di (Darren)
SELECT "\n" ahora genera nueva línea (A. Duursma)
nuevas funciones de conversión de la geometría desde el formato anterior (Thomas)

Cambios en el arbol fuente
--------------------------
nuevo guión de configuración (Marc)
añadida la opción de configuración de lectura de línea (Marc)
nuevos ficheros de plantillas especificas del Sistema Operativo (Marc)
ya no se necesita editar Makefile.global (Marc)
se reordenan los ficheros de include (Marc)
parche para nextstep (Gregor Hoffleit)
se elimina código específico de WIN32 (Bruce)
se elimina la opción -e de postmaster, se mantiene sólo la opción postgres -e (Bruce)
se mezcla el código de librerías duplicadas en clientes y servidores (Martin)
ahora trabaja con eBones, Kerberos internacional (Jun)
más soporte a librerías compartidas
c++ incluye limpieza de fichero (Bruce)
Aviso sobre flex erróneo (Bruce)
Correcciones en la portabilidad para DG-UX, Ultrix, Irix, AIX.
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title>Version v6.0</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Wed Jan 29 00:19:54 EST 1997
</date>
</docinfo>
-->

<para>
Aquellos que quieran migrar datos desde versiones previas de
<productname>Postgres</productname> necesitarán hacer un volcado/recuperación.
</para>

<sect2>
<title>Migración desde v1.09 a v6.0</title>

<para>
Esta migración necesita un volcado completo de la base de datos 1.09 y una
recuperación de los datos en 6.0.
</para>
</sect2>

<sect2>
<title>Migración desde versiones previas a v1.09 hasta v6.0</title>

<para>
Quienes quieran migrar desde las iniciales versiones 1.* deberían actualizarse
primero a la versión 1.09, ya que el formato de salida de COPY se mejoró a partir de la
versión 1.02.
</para>
</sect2>

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Corrección de errores
---------------------
Error ALTER TABLE - corriendo el proceso postgress se necesita re-leer la definición
   de la tabla.
Se permite que vacuum se ejecute sobre una tabla o sobre la base entera (Bruce)
Correcciones en tablas.
Corregido una sobre-escritura en tabla en escritura de memoria (Kurt)
Corregido un error en btree elusivo en rango/no en rango (Dan)
Correciones en los índices hash para algunos tipos como time y date.
Correcciones para la explosión del tamaño de pg_log.
Corregidos los permisos en lo_export()(Bruce).
Corregidas lecturas no inicializadas de memoria (Kurt).
Corregido un error ALTER TABLE ... char(3) (Bruce)
Corregidas una pocas lagunas de memoria pequeñas.
Corregida la manipulación de EXPLAIN de opciones y cambiado el nombre de opción del
   path completo.
Corregida la salida de permisos de grupos de acl
Lagunas en la memoria (localizadas y eliminadas con herramientas como Purify (Kurt))
Mejoras menores de las reglas del sistema.
Se corrige NOTIFY
Nuevas instrucciones para ejecutar-comprobar.
Repaso general del código del analizador/traductor para informar correctamente de los
   errores e incrementar la velocidad.
Pg_dump -d ahora manipula correctamente los NULL (Bruce)
Se evita que SELECT NULL mate el servidor (Bruce)
Se informan adecuadamente erores cuando las columnas de INSERT ... SELECT no casan.
Se informan adecuadamente errores cuando se están insertando nombres de columna que no
   son correctos.
Psql \g nombrefichero ahora trabaja (Bruce)
Corregido un problema de psql con instrucciones múltiples en una línea con múltiples
   salidas.
Eliminados oid's de sistema duplicados
SELECT * INTO TABLE . GROUP/ORDER BY daba un error de enlace si la tabla existía (Bruce)
Varias correciones a consultas que mataban el servidor
Las comillas al principio de una cadena a insertar produce un error (Bruce)
El lanzamiento de una consulta vacía ahora devuelve un status de vacío, no sólo
   la consulta " " (Bruce)

Mejoras
--------------
Se añade una página de manual para EXPLAIN (Bruce)
Se añade la capacidad de indice UNIQUE (Dan)
Se añade control de acceso vigilando nombre_host/usuario, más que sólo nombre_host y usuario.
Se añade el sinónimo != para &lt;&gt; (Bruce)
Se permite "select oid,* from table"
Se permite a ORDER BY especificar columnas por número, o por tabla.columna que no
   son alias (Bruce)
Se permite el comando COPY desde la apliación cliente (Bryan)
Se permite a GROUP BY que utilice alias de nombres de columnas (Bruce)
Se permite la compresión actual, no sólo en la misma página (Vadim)
Se permite la opción de instalación-configuración para auto-ayudar a todos
   los usuarios locales (Bryan)
Se permite a libpq que distinga entre textos con valor '' y nulo (Bruce)
Se premite a los usuarios diferentes de postgres con privilegios de createdb
   ejecutar destroydb.
Se permiten restricciones sobre quién puede crear funciones C (Bryan)
Se permiten restricciones sobre quien puede hacer COPY del servidor (Bryan)
Se pueden reducir tablas, pg_timer y pg_log (Vadim & Erich)
Cambiado el nivel de debug 2 para imprimir sólo consultas, cambiado el formato de
   la cabecera del debug (Bruce)
Se cambia la representación de las constantes decimales desde float4 a float8(Bruce)
Ahora se fija el formato de fecha europeo cuando se arranca el postmaster.
Se ejecutan las funciones con el nombre en minúscula si no se encuentran
   con el nombre exacto.
Las correcciones del procesado de agregados/GROUP, permiten
   'select sum(func(x),sum(x+y) from z'
Gist está ahora incluido en la distribución (Marc)
Autenticación Idendde usuarios locales (Bryan)
Se implementa el calificador BETWEEN (Bruce)
Se implementa el calificador IN (Bruce)
Libpq tiene PQgetisnull()(Bruce)
Mejoras de Libpq++
Nuevas opciones en initdb(Bryan)
Pg_dump permite volcar los oid's (Bruce)
Pg_dump crea los índices tras cargar las tablas, por velocidad (Bruce)
Pg_dumpall vuelca todas las bases de datos, y la tabla de usuarios.
Adiciones a Pginterface para los valores NULL (Bruce)
Se previene la ejecución de postmaster como root
\h y \? son ahora legibles (Bruce)
Psql permite punto y coma escapados (\;) en cualquier parte de la línea (Bruce)
Se cambia el promp de comandos de Psql para líneas intermedias en consultas
   o en líneas entre comillas (Bruce)
Las variables char(3) de Psql se muestran ahora como (bp)char en salidas \d (Bruce)
El código de retorno de Psql es ahora más ajustado (Bryan?)
Se actualiza la sintaxis de la ayuda de Psql (Bruce)
Se re-visita y corrige vacuum (Vadim)
Se reduce el tamaño de las diferencias de regresión, se elimna la
   diferecia del nombre de la zona horaria (Bruce)
Se eliminan parámetros de tiempo de compilación para capacitar
   distribuciones binarias (Bryan)
Gestión inversa de máscaras HBA (Bryan)
Autenticación segura de usuarios locales (Bryan)
Se incrementa la seguridad de vacuum(Vadim)
Vacuum ahora tiene opción VERBOSE (Bruce)

Cambios en el árbol fuente
--------------------------
Todas las funciones tienen ahora prototipos que se comparan contra las llamadas.
Se permite inhabilitar facilmente las declaraciones en Makefile.global(Bruce).
Se cambian las constantes oid utilizadas en el código para los nombres de #define
Se desacoplan las defines de sparc y solaris(Kurt)
gcc -Wall compila limpiamente con avisos (warnings) sólo a partir de construcciones
  no corregidas.
Gran reorganización/reducción del fichero de include (Marc).
Make ahora para en fallos de compilación(Bryan)
Reestructuración del Makefile(Bryan, Marc).
Se mezcla bsdi_2_1 con bsdi(Bruce)
Se elimina el programa Monitor-
Se cambia el nombre de Postgres95 a PostgreSQL
Nuevo fichero config.h(Marc, Bryan)
PG_VERSION se fija ahora a 6.0 y lo utiliza el postmaster.
Adiciones a la portabilidad, incluyendo Ultrix, DG/UX, AIX, y Solaris
Se reduce el número de #define's, se centralizan las #define's
Se eliminan OIDS duplicadas en las tablas del sistema(Dan)
Se elimina información duplicada en el catálogo del sistema o errores de informe(Dan)
Se eliminan muchas #define's específicas del sistema operativo.
Generación/localización del fichero de objetos reestructurada(Bryan, Marc)
Reestructuradas las localizaciones de ficheros específicas de la
    migración(Bryan, Marc)
Corregidas variables no utilizadas/no inicializadas.
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title>Version v1.09</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Unknown
</date>
</docinfo>
-->

<para>
Lo siento, hemos parado de registrar los cambios desde 1.02 a 1.09.  Algunos
de los cambios listados en 6.0 estaban ya incluidos en las versiones 1.02.1 a
1.09.
</para>
</sect1>

<sect1>
<title>Version v1.02</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Thu Aug  1 18:00:00 EDT 1996
</date>
</docinfo>
-->

<sect2>
<title>Migración de v1.02 a v1.02.1</title>

<para>
Aquí tenemos un nuevo fichero de migración para 1.02.1.  Este el cambio
de 'copy' y un guión para convertir los antiguos ficheros ascii.
</para>
<note>
<para>
Las siguientes notas son para el beneficio de los usuarios que quieren
migrar bases de datos desde postgres95 1.01 y 1.02 a postgres95 1.02.1.
</para>
<para>
Si está usted arrancando con postgres95 1.02.1 de nuevas y no necesita
migrar una base de datos antígua, no necesita leer lo que sigue.
</para>
</note>

<para>
Para actualizar anteriores bases de datos postgres95 versiones 1.01 o 1.02
a la versión 1.02.1, se requieren los siguientes pasos:
</para>
<procedure>
<step>
<para>
Arranque un nuevo postmaster 1.02.1
</para>
</step>
<step>
<para>
Añadi las nuevas funciones y operadores incluidos de 1.02.1 a bases de datos
   1.02 o 1.02. Esto se hace ejecutando el nuevo servidor 1.02.1 contra su
   propia base de datos 1.01 o 1.02, y aplicando las consultas incluídas al final
   de este fichero.  Se puede hacer esto muy facilmente con psql.  Si su
   base de datos 1.01 o 1.02 se llama "testdb", y ha cortado los comandos
   del final de este fichero y los ha salvado en addfunc.sql:
<programlisting>
        % psql testdb -f addfunc.sql
</programlisting>

Aquellos que estén actualizado bases de datos 1.02 obtendrán un aviso cuando
ejecuten las dos últimas instrucciones en el fichero, pues ya están presentes
en 1.02. No hay motivo para preocuparse.
</para>
</step>
</procedure>
</sect2>

<sect2>
<title>Procedimiento de Volcado/Recarga Procedure</title>

<para>
Si está intentando recargar un pg_dump o 'copy tablename to stdout' en modo
texto generados con una versión previa, necesitará ejecutar el guión de sed
siguiente sobre el fichero ASCII antes de cargarlo en la base de datos.
El formato antiguo utilizaba ',' como end-of-data, mientras que el nuevo
marcador de end-of-data (fin de los datos) es '\.'. También, las cadenas vacías
se cargan ahora como '' en lugar de como NULL. Vea la página del manual de copy
para obtener detalles completos.

<programlisting>
        sed 's/^\.$/\\./g' &lt;in_file &gt;out_file
</programlisting>
</para>
<para>
Si está usted cargando una copia binaria más vieja, o una copia que no procede
de stdout, no hay caracter end-of-data, y por ello no se necesita conversión.

<programlisting>
-- following lines added by agc to reflect the case-insensitive
-- añadidas las siguientes líneas por agc para que no sea sensible a las mayusculas
-- regexp searching for varchar (in 1.02), and bpchar (in 1.02.1)
-- regexp buscando varchar (en 1.02) y bpchar (en 1.02.1)
create operator ~* (leftarg = bpchar, rightarg = text, procedure = texticregexeq);
create operator !~* (leftarg = bpchar, rightarg = text, procedure = texticregexne);
create operator ~* (leftarg = varchar, rightarg = text, procedure = texticregexeq);
create operator !~* (leftarg = varchar, rightarg = text, procedure = texticregexne);
</programlisting>
</para>
</sect2>

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Mantenimiento y desarrollo del código fuente.
 * equipo de voluntarios extendido por todo el mundo.
 * el árbol fuente se encuentra ahora en CVS en ftp.ki.net

Mejoras
 * psql (y la librería libpq que subyace) tiene ahora muchas más opciones
   para dar forma a sus salidas, incluyendo HTML
 * pg_dump ahora extrae el esquema y/o los datos, con muchas mejoras para
   asegurar que se complete.
 * se utiliza psql en lugar de monitor en los guiones de órdenes de administración.
   monitor será despreciado en la siguiente versión.
 * mejoradas las funciones de fecha/hora
 * la comparación/inserción/actualzación de NULL corregidos/potenciados.
 * la librería y el interprete de órdenes de TCL/TK corregidos para que trabajen
   tanto con tcl7.4/tk4.0 como con tcl7.5/tk4.1

Errores corregidos (anque demasiados numerosos para mencionarlos)
 * índices
 * gestión de almacenamiento
 * comprobación de punteros a NULL antes de dereferenciarlos
 * Correcciones en el Makefile.

Nuevas Migraciones
 * añadida la migración a SolarisX86
 * añadida la migración a BSDI 2.1
 * añadida la migración a DGUX
</programlisting>
</para>
<!--
Contribuyentes (desaparecidas las apologías de todos ellos)
 * Kurt J. Lidl <lidl@va.pubnix.com>
        (desaparecido en primer lugar, pero no menos importante)
 * Erich Stamberger <eberger@gewi.kfunigraz.ac.at>
 * Jason Wright <jason@shiloh.vnet.net>
 * Cees de Groot <C.deGroot@inter.NL.net>
 * ernst.molitor@uni-bonn.de
 * michael.siebenborn@ae3.Hypo.DE (Michael Siebenborn (6929))
 * Brian E. Gallew <geek+@cmu.edu>
 * Vadim B. Mikheev <vadim@sable.krasnoyarsk.su>
 * Adam Sussman <myddryn@vidya.com>
 * Chris Dunlop <chris@onthe.net.au>
 * Marc G. Fournier <scrappy@ki.net>
 * Dan McGuirk <mcguirk@indirect.com>
 * Dr_George_D_Detlefsen <drgeorge@ilt.com>
 * Erich Stamberger <eberger@gewi.kfunigraz.ac.at>
 * Massimo Dal Zotto <dz@cs.unitn.it>
 * Randy Kunkee <kunkee@Starbase.NeoSoft.COM>
 * Rick Weldon <rick@wisetech.com>
 * Thomas van Reimersdahl <reimersd@dali.techinfo.rwth-aachen.de>
 * david bennett <dave@bensoft.com>
 * ernst.molitor@uni-bonn.de
 * Julian Assange <proff@suburbia.net>
 * Bruce Momjian <maillist@candle.pha.pa.us>
 * Paul "Shag" Walmsley <ccshag@cclabs.missouri.edu>
 * "Alistair G. Crooks" <azcb0@sde.uts.amdahl.com>
-->
</sect2>
</sect1>

<sect1>
<title>Version v1.01</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Fri Feb 23 18:20:36 PST 1996
</date>
</docinfo>
-->

<sect2>
<title>Migración desde v1.0 a v1.01</title>

<para>
Las siguientes notas son para beneficio de los usuarios que quieren
migrar bases de datos de postgres95 1.0 a postgres95 1.01
</para>
<para>
Si está usted arrancando de nuevas con postgres95 1.01 y no necesita
migrar bases de datos anteriores, no necesita usted leer lo siguiente.
</para>
<para>
Para que postgres95 versión 1.01 funcione con bases de datos creadas con
postgres95 versión 1.0, se requieren los siguientes pasos:
</para>
<procedure>
<step>
<para>
Fije la definición de NAMEDATALEN en src/Makefile.global a 16
   y OIDNAMELEN a 20.
</para>
</step>
<step>
<para>
Decida si quiere usted autenticación basada en el ordenador.
</para>
<substeps>
<step>
<para>
Si lo hace, debe usted crear un fichero llamado "pg_hba" en su directorio
   de datos de nivel superior (típicamente el valor de su $PGDATA).
   src/libpq/pg_hba muestra un ejemplo de sintaxis.
</para>
</step>
<step>
<para>
Si no quiere autenticación basada en el ordenador, puede usted comentar
   la línea
<programlisting>
        HBA = 1
</programlisting>
   en src/Makefile.global
</para>
<para>
   Compruebe que la autenticación basada en el ordenador se ha activado por
   defecto, y si no sigue los pasos A o B anteriores, el out-of-the-box 1.01
   no le permitirá conectar a las bases de datos 1.0
</para>
</step>
</substeps>
</step>

<step>
<para>
Compile e instale 1.01, pero NO ejecute el paso initdb.
</para>
</step>
<step>
<para>
Antes de hacer ninguna otra cosa, pare su postmaster 1.0, y respalde
   su directorio $PGDATA existente.
</para>
</step>
<step>
<para>
Fije su variable de entorno PGDATA a sus bases de datos 1.0, pero fijela de forma
   que los binarios 1.01 sean los que se utilizan.
</para>
</step>
<step>
<para>
Modifique el fichero $PGDATA/PG_VERSION de 5.0 a 5.1
</para>
</step>
<step>
<para>
Arranque un nuevo postmaster 1.01
</para>
</step>
<step>
<para>
Añada las nuevas funciones y operadores incluidas en 1.01 sobre bases de datos 1.0.
   Esto se hace ejecutando el nuevo servidor 1.01 contra su propia base de datos 1.0,
   y aplicando las consultas unidas y salvadas en el fichero 1.0_to_1.01.sql.
   Se puede hacer facilmente desde psql.
   Si su base de datos se llama "testdb":

<programlisting>
        % psql testdb -f 1.0_to_1.01.sql
</programlisting>

y entonces ejecute los siguientes comandos(copiar y pegar desde aquí):

<programlisting>
-- funciones incluidas añadidas que son nuevas en 1.01

create function int4eqoid (int4, oid) returns bool as 'foo'
language 'internal';
create function oideqint4 (oid, int4) returns bool as 'foo'
language 'internal';
create function char2icregexeq (char2, text) returns bool as 'foo'
language 'internal';
create function char2icregexne (char2, text) returns bool as 'foo'
language 'internal';
create function char4icregexeq (char4, text) returns bool as 'foo'
language 'internal';
create function char4icregexne (char4, text) returns bool as 'foo'
language 'internal';
create function char8icregexeq (char8, text) returns bool as 'foo'
language 'internal';
create function char8icregexne (char8, text) returns bool as 'foo'
language 'internal';
create function char16icregexeq (char16, text) returns bool as 'foo'
language 'internal';
create function char16icregexne (char16, text) returns bool as 'foo'
language 'internal';
create function texticregexeq (text, text) returns bool as 'foo'
language 'internal';
create function texticregexne (text, text) returns bool as 'foo'
language 'internal';

-- funciones incluidas añadidas que son nuevas en 1.01

create operator = (leftarg = int4, rightarg = oid, procedure = int4eqoid);
create operator = (leftarg = oid, rightarg = int4, procedure = oideqint4);
create operator ~* (leftarg = char2, rightarg = text, procedure = char2icregexeq);
create operator !~* (leftarg = char2, rightarg = text, procedure = char2icregexne);
create operator ~* (leftarg = char4, rightarg = text, procedure = char4icregexeq);
create operator !~* (leftarg = char4, rightarg = text, procedure = char4icregexne);
create operator ~* (leftarg = char8, rightarg = text, procedure = char8icregexeq);
create operator !~* (leftarg = char8, rightarg = text, procedure = char8icregexne);
create operator ~* (leftarg = char16, rightarg = text, procedure = char16icregexeq);
create operator !~* (leftarg = char16, rightarg = text, procedure = char16icregexne);
create operator ~* (leftarg = text, rightarg = text, procedure = texticregexeq);
create operator !~* (leftarg = text, rightarg = text, procedure = texticregexne);
</programlisting>
</para>
</step>
</procedure>
</sect2>

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Incompatibilidades:
 * 1.01 es compatible hacia atrás con 1.0 si el usuario sigue los pasos
   marcados en el fichero MIGRATION_from_1.0_to_1.01.
   En caso contrario, 1.01 no es compatible con la base de datos 1.0

Potenciaciones:
 * se añade PQdisplayTuples() a libpq y se modifican monitor y psql para que lo utilicen.
 * se añade la migración a NeXT (requiere la implementación de SysVIPC)
 * se añade la sintaxis CAST .. AS ...
 * se añaden las palabras clave ASC y DESC
 * se añade 'internal' como un posible lenguaje para CREATE FUNCTION
   las funciones internas son funciones en C que se han linkado estáticamente en el
   servidor de postgres.
 * se ha añadido un nuevo tipo "name" para identificadores de sistema (nombres de tablas,
   nombres de atributos, etc.)  Esto reemplaza al viejo tipo char16.
   La longitud del nombre se fija en la definición (#define)
   NAMEDATELEN de src/Makefile.global
 * un manual de referencia legible que describe el lenguaje de consulta.
 * se ha añadido un control de acceso basado en el ordenador.  Se utiliza un fichero de
   configuración ($PGDATA/pg_hba) para almacenar los datos de configuración.
   Si el control de acceso basado en el ordenador no es deseable, comente
   HBA=1 en src/Makefile.global.
 * cambiada la manipulación de reges para hacerla uniforme con el código regex de
   Henry Spencer sin mirar la plataforma.  Es código regex está incluido en la distribución.
 * añadidas funciones y operadores para expresiones regulares insensibles a las mayusculas.
   Los operadores son ~* y !~*.
 * pg_dump utiliza COPY en lugar de un bucle de SELECT para incrementar el rendimiento.

Errores corregidos:
 * corregido un error del optimizador que provocaba volcados de memoria cuando
   se utilizaban llamadas a funciones en comparaciones en la cláusula WHERE.
 * se cambian todos los usos de getuid a geteuid se modo que se utilicen los
   uids efectivos.
 * psql devuelve ahora status distintos de cero en los errores cuando se usa -c
 * se aplican los parches públicos 1-14
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title>Version v1.0</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Tue Sep  5 11:24:11 PDT 1995
</date>
</docinfo>
-->

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Cambio en el Copyright:
 * Se ha aflojado el copyright de <productname>Postgres</productname> 1.0 para que sea
   libremente modificable para cualquier propósito.  Lea por favor el fichero
   COPYRIGHT.
   Gracias al Profesor Michael Stonebraker por hacerlo posible.

Incompatibilidades:
 *  los formatos de fecha tienen que ser MM-DD-YYYY (o DD-MM-YYYY si está usted utilizando
   EUROPEAN STYLE).  Esto sigue las especificaciones SQL-92.
 *  "delimiters" es ahora una palabra clave.

Potenciaciones:
 *  se ha añadido la sintaxis LIKE de sql
 *  el comando copy ahora recibe una especificación opcional USING DELIMITER.
    Los delimitadores pueden ser cualquier cadena de un único carácter.
 *  se ha añadido la migración a IRIX 5.3.
    Gracias a Paul Walmsley y otros.
 *  se ha actualizado pg_dump para trabajar con una nueva libpq.
 *  se ha añadido \d a psql
    Gracias a Keith Parks
 *  se ha incrementado el rendimiento de regexp para arquitecturas que utilizan
    regex de POSIX regex debido a la memorización (caching) de patrones precompilados.
    Gracias a Alistair Crooks
 *  una nueva versión de libpq++
    Gracias a William Wanders

Errores corregidos:
 *  se pueden especificar usuarios arbitrarios en el guión (script) createuser.
 *  ya funciona \c para conectar a otras bases de datos.
 *  se ha corregido una mala entrada en pg_proc para float4inc()
 *  los usuarios con el campo usecreatedb fijado, ya pueden crear bases de datos
    sin ser el superusuario.
 *  se eliminan las entradas del control de acceso cuando la entrada ya no tiene
    ningún permiso.
 *  corregida la implementación de formatos de fecha/hora no portables.
 *  añadidas marcas (banderas=flags) kerberos en src/backend/Makefile
 *  libpq ya trabaja con kerberos.
 *  se han corregido errores tipográficos en el manual de usuario.
 *  btree con índices múltiples no ha trabajado nunca, pero ahora le decimos que
    no trabajan cuando intenta utilizarlo.
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title><productname>Postgres95</productname> Beta 0.03</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Fri Jul 21 14:49:31 PDT 1995
</date>
</docinfo>
-->

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Cambios incompatibles:
 * BETA-0.3 ES INCOMPATIBLE CON BASES DE DATOS CREADAS CON VERSIONES PREVIAS
   (debido a cambios en el catálogo del sistema y a cambios en la estructura de los índices).
 * las dobles comillas (") se desprecian como un carácter de limitación para cadenas literales;
   necesitarás convertirlas a apostrofes (').
 * el nombre de los agregados (como int4sum) se renombran de acuerdo con el SQL
   estándar (por ejemplo sum).
 * la sintaxis CHANGE ACL se reemplaza por la sintaxis GRANT/REVOKE.
 * los literales flotantes (como 3.14) son ahora del tipo float4 (en lugar del float8
   de versiones anteriores); deberá realizar un transformado de tipos si su instalación
   depende de que siga siendo float8.
   ¡Si rechaza realizar el transformado de tipos, y asigna un literal flotante a un
   campo de tipo float8, es posible que los valores almacenados sean incorrectos!
 * se ha recompuesto totalmente LIBPQ para que las aplicaciones cliente (frontend) puedan
   conectarse a multiples servidores (backend).
 * el campo usesysid de pg_user se ha cambiado de int2 a int4 para permitir mayores
   rangos de identificadores de usuarios de Unix.
 * los portes a los sistemas operativos netbsd/freebsd/bsd se han consolidado en un
   unico port derivado de BSD44. (Gracias a Alistair Crooks).

Cumplimento del estándar SQL (los siguientes detalles cambian para hacer a posgres95
más ajustado al estándar SQL-92):
 * se han incluido los siguientes tipos SQL: smallint, int(eger), float, real,
   char(N), varchar(N), date y time.

   Los siguientes son alias de los tipos postgres existentes:
                smallint -> int2
                integer, int -> int4
                float, real  -> float4
   char(N) y varchar(N) se han implementado como tipos text truncados.
 Además, char(N) rellena a blancos el espacio no utilizado.
 * se utiliza el apóstrofe (') para limitar cadenas literales; " (además de \') se soportan
   para permitir insertar un único límite en una cadena.
 * se utilizan los nombres de agregados de SQL estándar (MAX, MIN, AVG, SUM, COUNT)
   (También, se pueden ahora sobrecargar los agregados, es decir, puede usted definir
    su propio agregado MAX para disponer de un tipo definido por el usuario).
 * se ha eliminado CHANGE ACL. Se añade la sintaxis GRANT/REVOKE.
   - Se pueden dar privilegios a un grupo utilizando la palabra clave "GROUP".
            Por ejemplo:
                         GRANT SELECT ON mi_tabla TO GROUP mi_grupo;
            La palabra clave 'PUBLIC' también está soportada para autorizar a
            todos los usuarios.

      Sólo de pueden otorgar o retirar privilegios a un usuario o grupo cada vez.

      "WITH GRANT OPTION" no está soportado. Sólo los propietarios de clases pueden
      cambiar el control de acceso.

   - El control de acceso de defecto es autorizar a los usuarios sólo a leer.
     Deberá usted autorizar explícitamente el acceso en inserción/actualización a
     los usuarios. Para cambiar esto, deberá modificar la línea
                src/backend/utils/acl.h
     que define ACL_WORLD_DEFAULT

Errores corregidos:
 * se ha corregido el error segun el cual los agregados de tablas vacías no
   trabajaban adecuadamente. Ahora, los agregados ejecutados sobre tablas vacías
   devuelven las condiciones iniciales de los agregados. Así, COUNT de una tabla
   vacía devuelve correctamente el valor 0. MAX/MIN de una taba vacía devolverá
   una tupla de valor NULL.
 * se permite el uso de \; dentro del monitor.
 * el mecanismo de notificación asincrono LISTEN/NOTIFY ya trabaja.
 * NOTIFY en el cuerpo de las reglas de acción ya trabaja.
 * ya funcionan los índices hash, y los método de acceso en general deberían
   funcionar mejor. La creación de grandes índices btree debería ser mucho más
   rápida. (Gracias a Paul Aoki).

Otros cambios y potenciaciones:
 * se añade la instrucción EXPLAIN utilizada para analizar el plan de ejecución
   de una consulta. (es decir: "EXPLAIN SELECT * FROM EMP" muestra el plan de
   ejecución de la consulta).
 * los mensajes WARN y NOTICE ya no muestran tiempo de ejecución en sí mismos.
   Para activar el tiempo de ejecución en los mensajes de error, descomente en
       src/backend/utils/elog.h:
   la línea
        /* define ELOG_TIMESTAMPS */
 * En una violación del control de acceso, se dará el mensaje
        "Either no such class or insufficient privilege"
   Este es el mismo mensaje que se devuelve cuando no se encuentra una clase. Esto
   disuade a los usuarios no privilegiados de sospechar la existencia de clases
   privilegiadas.
 * se han hecho algunos cambios adicionales en el catálogo del sistema que no son
   visibles para el usuario.

cambios en libpgtcl:
 * se añade la opción -oid al comando de tcl "pg_result". pg_result -oid devolverá
   el oid de la última tupla insertada.  Si el último comando no fue una inserción,
   pg_result -oid devuelve "".
 * el interface de objetos largos está utilizable como comandos tcl pg_lo*:
   pg_lo_open, pg_lo_close, pg_lo_creat, etc.

Potenciaciones de la Portabilidad y Nuevas Migraciones:
 * Se han limpiado problemas con flex/lex.  Ahora, se debería poder utilizar flex
   en lugar de lex en cualquier plataforma.  Ya se harán asumciones sobre la forma
   de analizador sintáctico elegido basadas en la plataforma que utilice.
 * Ahora se soporta la migración a Linux-ELF. Se han probado varias configuraciones:
   Se sabe que la siguiente configuración funciona:
        kernel 1.2.10, gcc 2.6.3, libc 4.7.2, flex 2.5.2, bison 1.24
   todo en formato ELF.

Nuevas utilidades:
 * ipcclean añadido a la distribución
   habitualmente no se necesita ejecutar ipcclean, pero si cae su servidor y
   deja segmentos de memoria ocupados, ipcclean los limpiara para usted.

Nueva documentación:
 * se ha revisado el manual del usuario y se ha añadido la documentación de libpq.
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title><productname>Postgres95</productname> Beta 0.02</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Thu May 25 16:54:46 PDT 1995
</date>
</docinfo>
-->

<sect2>
<title>Lista Detallada de Cambios</title>

<para>
<programlisting>
Cambios incompatibles:
 * La declaracion SQL para crear una base de datos en 'CREATE DATABASE' en lugar
   de 'CREATEDB'. De modo similar, el borrado de una base de datos en 'DROP DATABASE' en lugar
   de 'DESTROYDB'. Sin embargo los nombres de los ejecutables 'createdb' y 'destroydb'
   permanecen igual.


Nuevas herramientas:
 * pgperl - una interfaz Perl (4.036) para Postgres95
 * pg_dump - una utlidad para volcar una base de datos postgres en un fichero
        fichero de script conteniedo los comandos de creacion. Los ficheros script estan
        en formato ASCII y pueden ser usados para reconstruir una base de datos, incluso
        en otras maquinas y otras arquitecturas. (Tambien es bueno para convertir
        una base de datos Postgres 4.2 a base de datos Postgres95.)


Los siguientes portes han sido incorporados en postgres95-beta-0.02:
 * el porte a NetBSD por Alistair Crooks
 * el porte a AIX por Mike Tung
 * el porte a Windows NT por Jon Forrest (hay mas gente pero aun no han hecho nada)
 * el porte a Linux ELF por Brian Gallew

Los siguientes errores han sido corregidos en postgres95-beta-0.02:
 * lineas nuevas no acaban en escape en COPY OUT y problemas con COPY OUT cuando
   la primera linea es un '.'
 * no se puede escribir un "retur" para utilizar el id del usuario por omision en "createuser"
 * SELECT DISTINCT en tablas grandes aborta
 * Problemas en la instalacion en Linux
 * monitor no acepta el uso de 'localhost' como PGHOST
 * psql genera un volcado de memoria cuando ejecuta \c or \l
 * la etiqueta "pgtclsh" desaparecida de src/bin/pgtclsh/Makefile
 * libpgtcl tiene un número de puerto de defecto codificado en duro
 * SELECT DISTINCT INTO TABLE se cuelga
 * CREATE TYPE no acepta 'variable' como longitud interna ("internallenght")
 * resultados incorrectos utilizando mas de 1 agregado en una SELECT
</programlisting>
</para>
</sect2>
</sect1>

<sect1>
<title><productname>Postgres95</productname> Beta 0.01</title>
<!--
<docinfo>
<authorgroup>
<author>
<firstname>Bruce</firstname>
<surname>Momjian</surname>
</author>
</authorgroup>
<date>
Lun May 1 19:03:10 PDT 1995
</date>
</docinfo>
-->

<para>
Version inicial.
</para>
</sect1>

  <sect1>
   <title>Tiempos Resultantes</title>

   <para>
    Estos son los tiempos resultantes de ejecutar los test de regresion con los comandos

    <programlisting>
% cd src/test/regress
% make all
% time make runtest
    </programlisting>
   </para>
   <para>
    Los tiempos bajo Linux 2.0.27 parecen tener una variacion de aproximadamente 5%
    de ejecucion a ejecucion, presumiblemente debido a vaguedades de planificacion en
    los sistemas multitareas.
   </para>

   <sect2>
    <title>v6.5</title>

    <para>
     Como ha sido el caso para versiones precedentes, los tiempos entre
     versiones no son directamente comparables puesto que se han añadido
     nuevos test de regresion. En general, la v6.5 es mas rapida que versiones precedentes.
    </para>

    <para>
     Tiempo con <function>fsync()</function> desabilitado:

     <programlisting>
  Tiempo   Sistema
  02:00  Dual Pentium Pro 180, 224MB, UW-SCSI, Linux 2.0.36, gcc 2.7.2.3 -O2 -m486
  04:38  Sparc Ultra 1 143MHz, 64MB, Solaris 2.6
     </programlisting>
    </para>

    <para>
     Tiempos con <function>fsync()</function> habilitado:

     <programlisting>
  Tiempo Sistema
  04:21  Dual Pentium Pro 180, 224MB, UW-SCSI, Linux 2.0.36, gcc 2.7.2.3 -O2 -m486
     </programlisting>

     Para el sistema Linux anterior, la utilizacion de discos UW-SCSI mejores que los
     (viejos) IDE conducen a una mejora de un 50% en la velocidad de los test de regresion.
    </para>
   </sect2>

<sect2>
<title>v6.4beta</title>

<para>
Los tiempos para esta version no son directamente comparables a aquellos de versiones precedentes
puesto que algunos test de regresion adicionales han sido incluidos.
No obstante, en general, la v6.4 puede ser levemente mas rapida que versiones precedentes (gracias, Bruce!).
</para>
<para>
<programlisting>
  Tiempo   Sistema
  02:26  Dual Pentium Pro 180, 96MB, UW-SCSI, Linux 2.0.30, gcc 2.7.2.1 -O2 -m486
</programlisting>
</para>
</sect2>

<sect2>
<title>v6.3</title>

<para>
Los tiempos para esta version no son directamente comparables a aquellos de versiones precedentes
puesto que algunos test de regresion adicionales han sido incluidos y algunos test obsoletos
incluyendo los tiempos de viaje han sido eliminados.
No obstante, en general, la v6.3 es sustancialmente mas rapida que versiones precedentes (gracias, Bruce!).
</para>
<para>
<programlisting>
  Tiempo   Sistema
  02:30  Dual Pentium Pro 180, 96MB, UW-SCSI, Linux 2.0.30, gcc 2.7.2.1 -O2 -m486
  04:12  Dual Pentium Pro 180, 96MB, EIDE, Linux 2.0.30, gcc 2.7.2.1 -O2 -m486
</programlisting>
</para>
</sect2>

<sect2>
<title>v6.1</title>

<para>
<programlisting>
  Tiempo   Sistema
  06:12  Pentium Pro 180, 32MB, EIDE, Linux 2.0.30, gcc 2.7.2 -O2 -m486
  12:06  P-100, 48MB, Linux 2.0.29, gcc
  39:58  Sparc IPC 32MB, Solaris 2.5, gcc 2.7.2.1 -O -g
</programlisting>
</para>
</sect2>
</sect1>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
