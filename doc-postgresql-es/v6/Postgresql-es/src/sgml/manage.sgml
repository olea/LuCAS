 <Chapter Id="manage">
  <Title>Administración de una Base de Datos</Title>

  <Note>
   <Para>
    Actualmente esta sección es una copia disfrazada del tutorial.
    Será necesario ampliarla.
    - thomas 1998-01-12
   </Para>
  </Note>

  <Para>
   a pesar de que el <FirstTerm>administrador local</FirstTerm> es responsable
   por la gestión general de la instalación de
   <ProductName>Postgres</ProductName>, algunas bases de datos instaladas
   pueden ser administradas por otra persona, llamada el
   <FirstTerm>administrador de la base de datos</FirstTerm>.
   La responsabilidad de la administración se delega en el momento en que se
   crea la base de datos. A un usuario se le puede dar privilegio para
   crear nuevas bases de datos y/o nuevos usuarios.
   Un usuario que tenga los dos tipos de privilegio puede realizar la mayoría
   de las labores administrativas en <ProductName>Postgres</ProductName>, pero
   normalmente no tendrá los mismos privilegios de sistema operativo que el
   administrador local.
  </Para>

  <Para>
   La Guía del Administrador del PostgreSQL trata estos tópicos con mas detalle.
  </Para>

  <Sect1>
   <Title>Creación de Bases de Datos</Title>

   <Para>
    Las bases de datos se crean dentro de <ProductName>Postgres</ProductName>
    con el comando <Command>create base-de-datos</Command>.
    <Application>createdb</Application> es un utilitario hecho para
    suministrar la misma función fuera de <ProductName>Postgres</ProductName>,
    a partir de la línea de comandos.
   </Para>

   <Para>
    El motor de <ProductName>Postgres</ProductName> debe estar corriendo para
    que cualquiera de los dos métodos funcione, y el usuario que da el comando
    debe ser el <FirstTerm>supe-usuario</FirstTerm> de
    <ProductName>Postgres</ProductName>, o haber obtenido privilegio  por
    parte del super-usuario para crear bases de datos.
   </Para>

   <Para>
    Para crear una base de datos llamada <Quote>mibd</Quote> a partir de la
    línea de comandos, escriba
    <ProgramListing>
% createdb mibd
    </ProgramListing>

    y para obtener el mismo resultado dentro de
    <Application>psql</Application> escriba
    <ProgramListing>
* CREATE DATABASE mibd;
    </ProgramListing>
   </Para>

   <Para>
    Si no tiene el privilegio necesario para crear una base de datos, verá el
    siguiente mensaje:
    <ProgramListing>
% createdb mibd
WARN:user "your username" is not allowed to create/destroy databases
createdb: database creation failed on mibd.
    </ProgramListing>
   </Para>

   <Para>
    <ProductName>Postgres</ProductName> le permite crear cualquier número de
    bases de datos en un servidor y usted será automáticamente el
    administrador de la base de datos que acaba de crear. Los nombres de las
    bases de datos deben comenzar por una letra y están limitados a una
    longitud total de 32 caracteres.
   </Para>

  </Sect1>

  <Sect1>
   <Title>Ubicaciones Alternativas de las Bases de Datos</Title>

   <Para>
    Es posible crear una base de datos en un lugar diferente del que fue
    destinado para el efecto durante la instalación. Recuerde que cualquier
    consulta a la base de datos es hecha realmente a través del motor de la
    base de datos, de manera que el lugar donde sea creada la base de datos
    debe permitir el acceso al motor.
   </Para>

   <Para>
    Las ubicaciones alternativas de bases de datos se crean y son referidas
    por medio de una variable de estado que da el camino absoluto al lugar
    donde se almacenará la base de datos. Esta variable de estado debe haber
    sido definida antes de arrancar el motor y el lugar para donde apunta debe
    permitir escritura desde la cuenta del administrador postgres. Consulte
    con el administrador local sobre ubicaciones preconfiguradas para bases de
    datos. Se puede usar cualquier nombre de variable válido para indicar
    locales alternativos, aunque se recomienda usar nombres de variables con
    el prefijo <quote>PGDATA</quote> para evitar confusiones con otras
    variables.
   </Para>

   <Note>
    <Para>
     En versiones antiguas de <ProductName>Postgres</ProductName>, también se
     permitía el uso de nombres absolutos de fichero para especificar
     diferentes locales de almacenamiento. Aunque es preferible el uso de
     variables de estado ya que da mayor flexibilidad al administrador local
     para gestionar el espacio en disco, también es posible usar caminos
     absolutos para especificar ubicaciones alternativas. La Guía del
     Administrador discute como activar esta funcionalidad.
    </Para>
   </Note>

   <Para>
    Por razones de seguridad y de integridad, a cualquier camino o variable de
    estado dada se le agregan al final algunos caminos adicionales.
    Las ubicaciones alternativas deben ser preparadas ejecutando
    <Application>initlocation</Application>.
   </Para>

   <Para>
    Para crear un área de almacenamiento usando la variable
    <envar>PGDATA2</envar> (que para este ejemplo tiene el valor
    <filename>/alt/postgres</filename>), asegurese que
    <FileName>/alt/postgres</FileName> existe y se puede escribir en el
    a partir
    de la cuenta del administrador de Postgres. Posteriormente, desde la
    línea de comandos, escriba
    <ProgramListing>
% initlocation $PGDATA2
Creating Postgres database system directory /alt/postgres/data
Creating Postgres database system directory /alt/postgres/data/base
    </ProgramListing>
   </Para>

   <Para>
    Para crear una base de datos en el área de almacenamiento alternativa
    <envar>PGDATA2</envar>, a partir de la línea de comandos, use el siguiente
    comando:
    <ProgramListing>
% createdb -D PGDATA2 mibd
    </ProgramListing>

    y para hacer lo mismo a partir de <Application>psql</Application> escriba
    <ProgramListing>
* CREATE DATABASE mibd WITH LOCATION = 'PGDATA2';
    </ProgramListing>
   </Para>

   <Para>
    Si no tiene el privilegio necesario para crear bases de datos, verá el
    siguiente mensaje:
    <ProgramListing>
% createdb mibd
WARN:user "your username" is not allowed to create/destroy databases
createdb: database creation failed on mibd.
    </ProgramListing>
   </Para>

   <Para>
    Si el local elegido no existe o el motor de la base de datos no tiene
    autorización para entrar en el o escribir en subdirectorios, verá lo
    siguiente:
    <ProgramListing>
% createdb -D /alt/postgres/data mibd
ERROR:  Unable to create database directory /alt/postgres/data/base/mydb
createdb: database creation failed on mibd.
    </ProgramListing>
   </Para>

  </Sect1>

<Sect1>
<Title>Acceso a una Base de Datos</Title>

<Para>
     Una vez haya creado una base de datos, puede accederla de las siguientes
     formas:

<ItemizedList Mark="bullet" Spacing="compact">
<ListItem>
<Para>
      ejecutando los programas monitores de <ProductName>Postgres</ProductName>
        (Por ejemplo <Application>psql</Application>) que le permite
        introducir, editar y ejecutar comandos <Acronym>SQL</Acronym>
        interactivamente.)
</Para>
</ListItem>
<ListItem>
<Para>
      escribiendo un programa en C que use la librería de subrutinas
      LIBPQ. Esta le permite enviar comandos <Acronym>SQL</Acronym> desde C y
      recibir los resultados y mensajes de vuelta en su programa. Esta
      interfaz se discute mas ampliamente en la sección ??.
</Para>
</ListItem>
</ItemizedList>

Puede querer arrancar <Application>psql</Application> para experimentar los
ejemplos en este manual.
El psql puede ser activado para la base de datos <Database>mibd</Database>
escribiendo el comando:
<ProgramListing>
% psql mibd
</ProgramListing>

     Será saludado con el siguiente mensaje:
<ProgramListing>
Welcome to the POSTGRESQL interactive sql monitor:
  Please read the file COPYRIGHT for copyright terms of POSTGRESQL

   type \? for help on slash commands
   type \q to quit
   type \g or terminate with semicolon to execute query
 You are currently connected to the database: mibd

mibd=>
</ProgramListing>
</Para>

<Para>
Este símbolo indica que el monitor lo escucha y que puede escribir pedidos
     <Acronym>SQL</Acronym> dentro de un área de trabajo que mantiene el
     monitor.
     El programa <Application>psql</Application> responde a códigos de escape
     que comiencen con la barra invertida, <Quote>\</Quote>  Por ejemplo,
     puede obtener ayuda sobre la sintaxis de varios comandos
     <Acronym>SQL</Acronym> de <ProductName>Postgres</ProductName> por medio
     de:
<ProgramListing>
mibd=> \h
</ProgramListing>

     Una vez termine de introducir sus consultas en el área de trabajo, puede
     pasar el contenido al servidor de <ProductName>Postgres</ProductName>
     escribiendo:
<ProgramListing>
mibd=> \g
</ProgramListing>

     Esto le dice al servidor que debe procesar su pedido. Si termina su
     pedido con punto y coma, no necesita el comando <Quote>\g</Quote>.
<Application>psql</Application> procesará automáticamente los pedidos que
     terminen con punto y coma. Para leer peticiones a partir de un fichero,
     digamos miFichero, en vez de introducirlas interactivamente, escriba:
<ProgramListing>
mibd=> \i miFichero
</ProgramListing>

     Para salir de <Application>psql</Application> y regresar a Unix, escriba
<ProgramListing>
mibd=> \q
</ProgramListing>

     y <Application>psql</Application> finalizará y lo hará regresar a su
     shell de comandos. (Para ver otros comandos de psql, escriba
     <Command>\h</Command> mientras ejecuta psql.)
     En los pedidos <Acronym>SQL</Acronym> se puede usar libremente espacio
     en blanco (espacio, tabuladores nuevas líneas). Comentarios de una línea
     se indican con <Quote>--</Quote>. Todo lo que aparezca después de las dos
     rayas y hasta el fin de la línea será ignorado. Para comentarios de
     varias líneas o dentro de una línea se usa <Quote>/* ... */</Quote>
</Para>

<Sect2>
<Title>Privilegios para Bases de Datos</Title>

<Para>
</para>
</Sect2>

<Sect2>
<Title>Privilegios para Tablas</Title>

<Para>
TBD
</Para>

</Sect2>

</Sect1>
     
<Sect1>
<Title>Destrucción de una Base de Datos</Title>

<Para>
     Si usted es el administrador de la base de datos
     <Database>mibd</Database>,  puede destruirla usando el siguiente comando
     Unix:
<ProgramListing>
% dropdb mibd
</ProgramListing>
     Esto retira físicamente todos los ficheros Unix asociados con la base de
     datos y no podrán ser recuperados, de manera que debe ser hecho con mucha
     premeditación.
</Para>
</Sect1>

</Chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/CATALOG"
sgml-local-ecat-files:nil
End:
-->
