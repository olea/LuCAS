<!--
$Header: /home/cvs/lucas/doc-postgresql-es/v6/Postgresql-es/src/sgml/ref/create_aggregate.sgml,v 1.5 2001/04/21 22:12:33 olea Exp $
Postgres documentation
-->

<refentry id="SQL-CREATEAGGREGATE">
 <refmeta>
  <refentrytitle id="sql-createaggregate-title">
   CREATE AGGREGATE
  </refentrytitle>
  <refmiscinfo>SQL - Sentencias del lenguaje</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>
   CREATE AGGREGATE
  </refname>
  <refpurpose>
   Define una nueva función de agregado
  </refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <refsynopsisdivinfo>
   <date>1999-07-20</date>
  </refsynopsisdivinfo>
  <synopsis>
CREATE AGGREGATE <replaceable class="PARAMETER">name</replaceable> [ AS ] ( BASETYPE = <replaceable class="PARAMETER">data_type</replaceable>
    [ , SFUNC1 = <replaceable class="PARAMETER">sfunc1</replaceable>, STYPE1 = <replaceable class="PARAMETER">sfunc1_return_type</replaceable> ]
    [ , SFUNC2 = <replaceable class="PARAMETER">sfunc2</replaceable>, STYPE2 = <replaceable class="PARAMETER">sfunc2_return_type</replaceable> ]
    [ , FINALFUNC = <replaceable class="PARAMETER">ffunc</replaceable> ]
    [ , INITCOND1 = <replaceable class="PARAMETER">initial_condition1</replaceable> ]
    [ , INITCOND2 = <replaceable class="PARAMETER">initial_condition2</replaceable> ] )
  </synopsis>

  <refsect2 id="R2-SQL-CREATEAGGREGATE-1">
   <refsect2info>
    <date>1998-09-09</date>
   </refsect2info>
   <title>
    Entradas
   </title>
   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="PARAMETER">name</replaceable></term>
      <listitem>
       <para>
        El nombre de la función de agregado a crear.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">data_type</replaceable></term>
      <listitem>
       <para>
        El tipo de dato fundamental sobre el que opera esta función de agregado.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">sfunc1</replaceable></term>
      <listitem>
       <para>
        La función de estado de trancisión que ha de llamarse para cada campo no nulo desde la 
        columna fuente. Toma una variable del tipo <replaceable class="PARAMETER">sfunc1_return_type</replaceable> 
        como primer argumento y el campo como segundo argumento.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">sfunc1_return_type</replaceable></term>
      <listitem>
       <para>
        El tipo devuelto de la primera función de trancisión.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">sfunc2</replaceable></term>
      <listitem>
       <para>
	La función de estado de trancisión que ha de llamarse para cada campo no nulo de la 
        columna origen. Toma una variable de tipo <replaceable class="PARAMETER">sfunc2_return_type</replaceable> 
        como argumento unico y devuelve una variable del mismo tipo.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">sfunc2_return_type</replaceable></term>
      <listitem>
       <para>
        EL tipo devuelto por la segunda función de trancisión.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">ffunc</replaceable></term>
      <listitem>
       <para>
        La función final llamada tras convertir todos los campos de entrada. Esta función 
        debe recibir dos argumentos de los tipos 
        <replaceable class="PARAMETER">sfunc1_return_type</replaceable> y 
        <replaceable class="PARAMETER">sfunc2_return_type</replaceable>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">initial_condition1</replaceable></term>
      <listitem>
       <para>
        El valor inicial para el argumento de la primera función de trancisión.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">initial_condition2</replaceable></term>
      <listitem>
       <para>
        El valor inicial del argumento de la segunda función de trancisión.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </refsect2>

  <refsect2 id="R2-SQL-CREATEAGGREGATE-2">
   <refsect2info>
    <date>1998-09-09</date>
   </refsect2info>
   <title>
    Outputs
   </title>
   <para>

    <variablelist>
     <varlistentry>
      <term><computeroutput>
CREATE
       </computeroutput></term>
      <listitem>
       <para>
        Mensaje devuelto si el comando se completa satifactoriamente.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </refsect2>
 </refsynopsisdiv>

 <refsect1 id="R1-SQL-CREATEAGGREGATE-1">
  <refsect1info>
   <date>1998-09-09</date>
  </refsect1info>
  <title>
   Description
  </title>
  <para>
   <command>CREATE AGGREGATE</command> 
   permite a un usuario o programador extender la funcionalidad de <productname>Postgres</productname> 
   definiendo nuevas funciones de agregado. Algunas funciones de agregado para tipos base como 
   <function>min(int4)</function> y <function>avg(float8)</function> están ya disponibles en la 
   distribución base. Si se definen nuevos tipos o se necesita una función de agregado que no 
   se proporciona, puede usarse el comando <command>CREATE AGGREGATE</command> para proporcionar 
   las características deseadas.
  </para>
  <para>
   Una función de agregados puede requerir hasta tres funciones, dos funciones de trancisión de 
   estado, <replaceable class="PARAMETER">sfunc1</replaceable> y <replaceable class="PARAMETER">sfunc2</replaceable>:
   <programlisting>
<replaceable class="PARAMETER">sfunc1</replaceable>( internal-state1, next-data_item ) ---> next-internal-state1 <replaceable class="PARAMETER">sfunc2</replaceable>( internal-state2 ) ---> next-internal-state2
   </programlisting>
   y una función final de cálculo,
   <replaceable class="PARAMETER">ffunc</replaceable>:
   <programlisting>
<replaceable class="PARAMETER">ffunc</replaceable>(internal-state1, internal-state2) ---> aggregate-value
   </programlisting>
  </para>
  <para>
   <productname>Postgres</productname> crea hasta dos variables temporales (referidas aquí como 
   <replaceable class="PARAMETER">temp1</replaceable> y <replaceable class="PARAMETER">temp2</replaceable>) 
   para mantener resultados intermadios usados como argumentos por las funciones de trancisión.
  </para>
  <para>
   Estas funciones de trancisión han de tener las siguinetes propiedades:
   <itemizedlist>
    <listitem>
     <para>
      Los argumentos de <replaceable class="PARAMETER">sfunc1</replaceable> deben ser 
      <replaceable class="PARAMETER">temp1</replaceable> del tipo 
      <replaceable class="PARAMETER">sfunc1_return_type</replaceable> y 
      <replaceable class="PARAMETER">column_value</replaceable> de tipo 
      <replaceable class="PARAMETER">data_type</replaceable>.
      El valor devuelto debe ser del tipo <replaceable class="PARAMETER">sfunc1_return_type</replaceable> 
      y será usado como primer argumento en la proxima llamada a <replaceable class="PARAMETER">sfunc1</replaceable>. 
     </para>
    </listitem>
    
    <listitem>
     <para>
      El argumento y valor devuelto de <replaceable class="PARAMETER">sfunc2</replaceable> ha de 
      ser <replaceable class="PARAMETER">temp2</replaceable> del tipo 
      <replaceable class="PARAMETER">sfunc2_return_type</replaceable>.
     </para>
    </listitem>
    <listitem>     
     <para>
      Los argumento para la función de cálculo final  ha de ser <replaceable class="PARAMETER">temp1</replaceable> 
      y <replaceable class="PARAMETER">temp2</replaceable> y su valor devuelto debe ser un tipo 
      base de <productname>Postgres</productname> (no necesariamente <replaceable class="PARAMETER">data_type</replaceable> 
      que ha sido especificado por BASETYPE).
     </para>
    </listitem>
    <listitem>
     <para>	
      FINALFUNC debe ser especificado si y solo si ambas funciones de trancisión de estado son 
      especificadas.
     </para></listitem>
   </itemizedlist>
  </para>  
  
  <para>	
   Una función de agregado puede requerir solo una o dos condiciones iniciales, una para cada 
   función de trancisión. Estas se especifican y almacenan en la base de datos como campos de 
   tipo <type>text</type>.
  </para>
  
  <refsect2 id="R2-SQL-CREATEAGGREGATE-3">
   <refsect2info>
    <date>1998-09-09</date>
   </refsect2info>
   <title>
    Notes
   </title>
   <para>
    Use <command>DROP AGGREGATE</command> para desechar funciones de agregado.
   </para>

   <para>
    Es posible especificar funciones de agregado que tengan diversas convinaciones de funciones 
    de estado y funciones finales. Por ejemplo, la función de agregado <function>count</function> 
    requiere SFUNC2 (una función de incremento) pero no SFUNC1 o FINALFUNC, mientras que la 
    función de agregado <function>sum</function> requiere SFUNC1 (una función de adicción) pero 
    no SFUNC2 ni FINALFUNC y la función de agregado <function>avg</function> requiere tanto las 
    dos funciones de estado como una FINALFUNC (una función de división) para producir su 
    resultado. En cualquier caso, al menos una de las funciones de estado debe ser definida, y 
    cualquier SFUNC2 debe tener el correspondiente INITCOND2.
   </para>

  </refsect2>
 </refsect1>

 <refsect1 id="R1-SQL-CREATEAGGREGATE-2">
  <title>
   Usage
  </title>
  <para>
   Vease el capítulo de las funciones de agregado en la Guia del Programador 
   (<citetitle>PostgreSQL Programmer's Guide</citetitle>) para ejemplos de uso más completos.
  </para>
 </refsect1>

 <refsect1 id="R1-SQL-CREATEAGGREGATE-3">
  <title>
   Compatibilidad
  </title>

  <refsect2 id="R2-SQL-CREATEAGGREGATE-4">
   <refsect2info>
    <date>1998-09-09</date>
   </refsect2info>
   <title>
    SQL92
   </title>
   <para>
    <command>CREATE AGGREGATE</command> es una extensión del lenguaje de <productname>Postgres</productname> 
    No existe la orden <command>CREATE AGGREGATE</command> en SQL92.
   </para>
  </refsect2>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
