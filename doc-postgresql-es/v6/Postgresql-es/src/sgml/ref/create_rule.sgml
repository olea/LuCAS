<!--
$Header: /home/cvs/lucas/doc-postgresql-es/v6/Postgresql-es/src/sgml/ref/create_rule.sgml,v 1.3 2001/04/21 21:57:14 olea Exp $
Postgres documentation
-->

<refentry id="SQL-CREATERULE">
 <refmeta>
  <refentrytitle id="sql-createrule-title">
   CREATE RULE
  </refentrytitle>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
 <refnamediv>
  <refname>
   CREATE RULE
  </refname>
  <refpurpose>
   Define una nueva regla
  </refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <refsynopsisdivinfo>
   <date>1999-07-20</date>
  </refsynopsisdivinfo>
  <synopsis>
CREATE RULE <replaceable class="parameter">name</replaceable> AS ON <replaceable class="parameter">event</replaceable>
    TO <replaceable class="parameter">object</replaceable> [ WHERE <replaceable class="parameter">condition</replaceable> ]
    DO [ INSTEAD ] [ <replaceable class="parameter">action</replaceable> | NOTHING ]
  </synopsis>

  <refsect2 id="R2-SQL-CREATERULE-1">
   <refsect2info>
    <date>1998-09-11</date>
   </refsect2info>
   <title>
    Inputs
   </title>
   <para>

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
       <para>
        El nombre de la regla a crear.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable class="parameter">event</replaceable></term>
      <listitem>
       <para>
	Evente puede ser <literal>select</literal>,
	<literal>update</literal>, <literal>delete</literal>
	o <literal>insert</literal>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable class="parameter">object</replaceable></term>
      <listitem>
       <para>
	Object puede ser <replaceable class="parameter">table</replaceable>
	o <replaceable class="parameter">table</replaceable>.<replaceable
	 class="parameter">column</replaceable>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable class="parameter">condition</replaceable></term>
      <listitem>
       <para>
	Cualquiera clausula SQL WHERE. <literal>new</literal> o 
	<literal>current</literal> pueden aparecer en lugar de una
	variable de instancia*** siempre que una variable de instancia
	es admisible en SQL.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable class="parameter">action</replaceable></term>
      <listitem>
       <para>
	Cualquiera clausula SQL. <literal>new</literal> o
	<literal>current</literal> pueden aparecer en lugar de una
	variable de instancia*** siempre que una variable de instancia sea
	admisible en SQL.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </refsect2>

  <refsect2 id="R2-SQL-CREATERULE-2">
   <refsect2info>
    <date>1998-09-11</date>
   </refsect2info>
   <title>
    Salidas
   </title>
   <para>

    <variablelist>
     <varlistentry>
      <term><computeroutput>
CREATE
       </computeroutput></term>
      <listitem>
       <para>
	Mensage devulte si la regla es creada con éxito.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </refsect2>
 </refsynopsisdiv>

 <refsect1 id="R1-SQL-CREATERULE-1">
  <refsect1info>
   <date>1998-09-11</date>
  </refsect1info>
  <title>
   Description
  </title>

  <para>
   El <productname>Postgres</productname> 
   <firstterm>rule system</firstterm>permite
   que una action alternativa sea realizada en updates, inserts o
   deletes en tablas o clases. Actualmente se utilizan reglas para
   implementar vistas de tablas.
  </para>

  <para>
   El significado de una regla es que cuando una instancia individual
   es accedida, actualizada, insertada o borrada, existe una instancia
   actual (para consultas, actualizaciones y borrados) y una nueva instancia
   (para actualizaciones y añadidos). Si el 
   <replaceable class="parameter">event</replaceable> especificado en
   la clausula ON y la <replaceable class="parameter">condition</replaceable>
   especificada en la clausula WHERE son verdaderas para la instancia actual
   la parte <replaceable class="parameter">action</replaceable> de la
   regla es ejecutada. Antes, sin embargo, los valores de los campos de
   la instancia actual y/o la nueva instancia son sustituidos por
   <literal>current.</literal><replaceable class="parameter">attribute-name</replaceable> 
   y <literal>new.</literal><replaceable class="parameter">attribute-name</replaceable>.
  </para>

  <para>
   La parte <replaceable class="parameter">action</replaceable> de la 
   regla se ejecuta con el mismo identificador de comando y transacción
   que el comando de usuario que causó la activación.
  </para>
  
  <refsect2 id="R2-SQL-CREATERULE-3">
   <refsect2info>
    <date>1998-09-11</date>
   </refsect2info>
   <title>
    Notas
   </title>
   <para>
    Es pertinente la precaución con reglas de SQL. Si el mismo nombre
    de clase o variable de instancia aparece en el
    <replaceable class="parameter">event</replaceable>, la
    <replaceable class="parameter">condition</replaceable> y la parte
    <replaceable class="parameter">action</replaceable> de la regla,
    son considerados todos diferentes tuplas. De forma más precisa,
    <literal>new</literal> y <literal>current</literal> son las únicas
    tuplas que son compartidas entre cláusulas. Por ejemplo, las siguientes
    dos reglas tienen la misma semántica.
    <programlisting>
ON UPDATE TO emp.salary WHERE emp.name = "Joe"
    DO UPDATE emp ( ... ) WHERE ...
    </programlisting>

    <programlisting>
ON UPDATE TO emp-1.salary WHERE emp-2.name = "Joe"
    DO UPDATE emp-3 ( ... ) WHERE ...
    </programlisting>

    Cada regla puede tener el tag opcional INSTEAD.
    Sin este tag, la <replaceable class="parameter">action</replaceable> 
    sera realizada en adición al comando de usuario cuando el 
    <replaceable class="parameter">event</replaceable> en la parte 
    <replaceable class="parameter">condition</replaceable> de la regla
    aparezcan. Alternativamente, la parte
    <replaceable class="parameter">action</replaceable> 
    será realizada en lugar del comando del usuario. En este último caso
    la 
    instead of the user command. In this later case, the
    <replaceable class="parameter">action</replaceable> puede ser la palabra
    clave
    <literal>NOTHING</literal>.
   </para>
   <para>
    Cuando se elige entre los sistemas de reescritura y reglas 
    de instancia para una aplicación particular de una regla,
    recuerdese que en el sistema de reescritura,
    <literal>current</literal> se refiere a la relación y algunos
    cualificadores mientras que en el sistema de instancias se refiere
    a una instancia (tupla).
   </para>
   <para>
    Es muy importante notar que el sistema de reescritura nunca detectará
    ni procesará reglas circulares. Por ejemplo, aunque cada una de las
    siguientes dos reglas con aceptadas por 
    <productname>Postgres</productname>, el comando de recogida causará
    la caída de
    <productname>Postgres</productname> :

    <example>
     <title>Ejemplo de combinación circular de regals.</title>
     <programlisting>
CREATE RULE bad_rule_combination_1 AS
    ON SELECT TO emp
    DO INSTEAD SELECT TO toyemp;
     </programlisting>

     <programlisting>
CREATE RULE bad_rule_combination_2 AS
    ON SELECT TO toyemp
    DO INSTEAD SELECT TO emp;
     </programlisting>
     <para>
      Este intento de obtención de datos desde EMP provocará
      la caída de 
      <productname>Postgres</productname>.
      <programlisting>
SELECT * FROM emp;
      </programlisting></para>
    </example>
   </para>

   <para>
    Es necesario tener permiso de definición de reglas en una clase
    para poder definir una regla en el. Se debe utilizar el comando
    <command>GRANT</command>
    y <command>REVOKE</command> para modificar estos permisos.
   </para>

   <para>
    El objeto en una regla
    <acronym>SQL</acronym> no puede ser unna referencia a un array
    y no puede tener parámetros.
   </para>

   <para>
    Aparte del campo "oid", los atributos del sistema no pueden ser
    referenciados en ningún lugar en una regla. Entre otras cosas esto
    significa que las funciones de instancias (por ejemplo
    ,<literal>foo(emp)</literal> donde
    <literal>emp</literal> es una clase) no pueden ser llamadas en
    ningún lugar dentro de una regla.
   </para>

   <para>
    El sistema almacena el texto de la regla y los planes de
    consulta como atributos de texto. Esto implica que la creación
    de reglas puede fallar si la regla más sus varias internas
    representaciones exceden algún valor que es del orden de una página.
   </para>
  </refsect2>
 </refsect1>
 
 <refsect1 id="R1-SQL-CREATERULE-2">
  <title>
   Uso
  </title>
  <para>
   Hacer que Sam obtenga el mismo ajuste de salario que Joe:
   
   <programlisting>
CREATE RULE example_1 AS
    ON UPDATE emp.salary WHERE current.name = "Joe"
    DO UPDATE emp (salary = new.salary)
    WHERE emp.name = "Sam";
   </programlisting>

   Al mismo tiempo que Joe recive un ajuste de salario, el evento
   será verdadero y la instancia actual de Joe y la nueva instancia
   propuesta están disponibles para las rutinas de ejecución. 
   Por lo tanto, este nuevo salario es sustituido en la parte de
   acción de la regla que es subsiguientemente ejecutada.
   Esto propaga el salario de Joe a Sam.
  </para>
  <para>
   Hacer que Bill obtenga el salario de Joe cuando es accedido:
   <programlisting>
CREATE RULE example_2 AS
    ON SELECT TO EMP.salary
    WHERE current.name = "Bill"
    DO INSTEAD
    SELECT (emp.salary) from emp
        WHERE emp.name = "Joe";
   </programlisting>
  </para>
  <para>
   Denegar a Joe el acceso al salario de empleados en el departamento
   de calzado
   (<function>current_user</function> devuelve el nombre del usuario
   actual):
   <programlisting>  
CREATE RULE example_3 AS
    ON SELECT TO emp.salary
    WHERE current.dept = "shoe" AND current_user = "Joe"
    DO INSTEAD NOTHING;
   </programlisting>
  </para>
  <para>
   Crear una vista de empleados trabajando en el departamente de juguetes.
   <programlisting>
CREATE toyemp(name = char16, salary = int4);

CREATE RULE example_4 AS
    ON SELECT TO toyemp
    DO INSTEAD
    SELECT (emp.name, emp.salary) FROM emp
        WHERE emp.dept = "toy";
   </programlisting>
  </para>
  <para>
   Todos los nuevos empleados deben hacer 5.000 o menos.
   <programlisting>
CREATE RULE example_5 AS
    ON INERT TO emp WHERE new.salary > 5000
    DO UPDATE NEWSET salary = 5000;
   </programlisting>
  </para>
 </refsect1>

 <refsect1 id="R1-SQL-CREATERULE-4">
  <title>
   Compatibility
  </title>

  <refsect2 id="R2-SQL-CREATERULE-4">
   <refsect2info>
    <date>1998-09-11</date>
   </refsect2info>
   <title>
    SQL92
   </title>

   <para>
    El comando <command>CREATE RULE</command>  es una extensión de <productname>Postgres</productname>

    No existe la sentencia <command>CREATE RULE</command> en <acronym>SQL92</acronym>.
   </para>
  </refsect2>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->

