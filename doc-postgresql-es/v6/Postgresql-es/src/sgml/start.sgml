<Chapter Id="start">
<Title>Empezando</Title>

<Abstract>
<Para>
¿Cómo empezar a trabajar con <ProductName>Postgres</ProductName>?
</Para>
</Abstract>

<Para>
Algunos de los pasos necesarios para usar <ProductName>Postgres</ProductName>
pueden ser realizados por cualquier usuario, y algunos los deberá
realizar el administrador de la base de datos. Este
administrador es la persona que instaló el software,
creó los directorios de las bases de datos e inició el proceso
<Application>postmaster</Application>.
Esta persona no tiene que ser el superusuario Unix (<Quote>root</Quote>)
o el administrador del sistema. Una persona puede instalar y usar
<ProductName>Postgres</ProductName> sin tener una
cuenta especial o privilegiada
</Para>

<Para>
Si está instalando <ProductName>Postgres</ProductName>, consulte
las instrucciones de instalación en la Guía de Administración 
y regrese a esta guía cuando haya concluido la instalación.
</Para>

<Para>
Mientras lee este manual, cualquier ejemplo que vea que comience
con el carácter <Quote>%</Quote> son órdenes que se escribirán en el
la línea de órdenes de Unix. Los ejemplos que comienzan con el caracter
<Quote>*</Quote> son órdenes en el lenguaje de consulta Postgres,
Postgres <Acronym>SQL</Acronym>.
</Para>

<Sect1>
<Title>Configurando el entorno</Title>

<Para>
Esta sección expone la manera de configurar el entorno,
para las aplicaciones. Asumimos que
<ProductName>Postgres</ProductName> ha sido instalado
e iniciado correctamente; consulte la Guía del Administrador y
las notas de instalación si desea instalar Postgres.
</Para>

<Para>
<ProductName>Postgres</ProductName> es una aplicación cliente/servidor.
Como usuario, únicamente necesita acceso a la parte cliente
(un ejemplo de una aplicación cliente es el monitor interactivo
<Application>psql</Application>) Por simplicidad, asumiremos que
<ProductName>Postgres</ProductName> ha sido instalado
en el directorio <FileName>/usr/local/pgsql</FileName>.
Por lo tanto, donde vea el directorio <FileName>/usr/local/pgsql</FileName>,
deberá sustituirlo por el nombre del directorio donde
<ProductName>Postgres</ProductName> esté instalado realmente.
Todos los programas de <ProductName>Postgres</ProductName>
se instalan (en este caso) en el directorio
<FileName>/usr/local/pgsql/bin</FileName>. Por lo tanto,
deberá añadir este directorio a la de su shell ruta de órdenes.
Si usa una variante del C shell de Berkeley, tal como tcsh o csh, deberá
añadir

<ProgramListing>
% set path = ( /usr/local/pgsql/bin path )
</ProgramListing>

en el archivo <FileName>.login</FileName> de su directorio personal.
Si usa una variante del Bourne shell, tal como sh, ksh o bash entonces
deberá añadir

<ProgramListing>
% PATH=/usr/local/pgsql/bin:$PATH
% export PATH
</ProgramListing>

en el archivo <FileName>.profile</FileName> de su directorio personal.
Desde ahora, asumiremos que ha añadido el directorio bin de
<ProductName>Postgres</ProductName> a su path.
Además, haremos referencia frecuentemente a <Quote>configurar una
variable de shell</Quote> o <Quote>configurar una variable de
entorno</Quote> a lo largo de este documento.
Si no entiende completamente el último párrafo
al respecto de la modificación de su path, antes de continuar debería
consultar los manuales de Unix que describen el shell que utiliza.
</Para>

<Para>
Si el administrador del sistema no tiene la configuración en el
modo por defecto, tendrá que realizar trabajo extra. Por ejemplo,
si la máquina servidor de bases de datos es una máquina remota,
necesitará configurar la variable de entorno <Acronym>PGHOST</Acronym>
con el nombre de la máquina servidor de bases de datos. También deberá
especificar la variable de entorno <Acronym>PGPORT</Acronym>.
Si trata de iniciar un programa de aplicación y éste notifica
que no puede conectarse al <Application>postmaster</Application>, deberá
consultar al administrador para asegurarse de que su entorno
está configurado adecuadamente.
</Para>
</Sect1>

<Sect1>
<Title>Ejecución del Monitor Interactivo (psql)</Title>

<Para>
Asumiendo que su administrador haya ejecutado adecuadamente el proceso
<Application>postmaster</Application> y le haya autorizado a utilizar la
base de datos, puede comenzar a ejecutar aplicaciones como usuario. 
Como mencionamos previamente, debería añadir
<FileName>/usr/local/pgsql/bin</FileName> al <Quote>path</Quote> de
búsqueda de su intérprete de órdenes. En la mayoría de los casos, es
lo único que tendrá que hacer en términos de preparación.
</Para>

<Para>
Desde <ProductName>Postgres</ProductName> v6.3, se soportan dos tipos
diferentes de conexión. El administrador puede haber elegido permitir
conexiones por red TCP/IP, o restringir los accesos a la base de datos a
través de conexiones locales (en la misma máquina).
Esta elección puede ser significativa si encuentra problemas a la hora de
conectar a la base de datos.
</Para>

<Para>
Si obtiene los siguientes mensajes de error de una orden
<ProductName>Postgres</ProductName> (tal como
<Application>psql</Application> o <Application>createdb</Application>):

<ProgramListing>
% psql template1
Connection to database 'postgres' failed.
connectDB() failed: Is the postmaster running and accepting connections
    at 'UNIX Socket' on port '5432'?
</ProgramListing>

o

<ProgramListing>
% psql -h localhost template1
Connection to database 'postgres' failed.
connectDB() failed: Is the postmaster running and accepting TCP/IP
    (with -i) connections at 'localhost' on port '5432'?
</ProgramListing>

normalmente es debido a que (1) el <Application>postmaster</Application>
no está en funcionamiento, o (2) está intentando conectar al servidor
equivocado. Si obtiene el siguiente mensaje de error:

<ProgramListing>
FATAL 1:Feb 17 23:19:55:process userid (2360) != database owner (268)
</ProgramListing>

Significa que el administrador ejecutó el
<Application>postmaster</Application> mediante el usuario equivocado.
Dígale que lo reinicie utilizando el superusuario de
<ProductName>Postgres</ProductName>.
</Para>
</Sect1>

<Sect1>
<Title>Administrando una Base de datos</Title>

<Para>
Ahora que <ProductName>Postgres</ProductName> está ejecutándose podemos
crear alguna base de datos para experimentar con ella. Aquí describimos
las órdenes básicas para administrar una base de datos
</Para>

<Para>
La mayoría de las aplicaciones <ProductName>Postgres</ProductName>
asumen que el nombre de la base de datos, si no se especifica, es el
mismo que el de su cuenta en el sistema.
</Para>

<Para>
Si el administrador de bases de datos ha configurado su cuenta sin privilegios
de creación de bases de datos, entonces deberán decirle el nombre de sus
bases datos. Si este es el caso, entonces puede omitir la lectura de esta
sección sobre creación y destrucción de bases de datos.
</Para>

<Sect2>
<Title>Creación de una base de datos</Title>


<Para>
Digamos que quiere crear una base de datos llamada <Database>mydb</Database>.
Puede hacerlo con la siguiente orden:

<ProgramListing>
% createdb mydb
</ProgramListing>
</Para>

<Para>
Si no cuenta con los privilegios requeridos para crear bases de datos,
verá lo siguiente:
<ProgramListing>
% createdb mydb
NOTICE:user "su nombre de usuario" is not allowed to create/destroy databases
createdb: database creation failed on mydb.
</ProgramListing>
</Para>

<Para>
<ProductName>Postgres</ProductName> le permite crear cualquier número de
bases de datos en un sistema dado y automáticamente será el administrador
de la base de datos que creó. Los nombres de las bases de datos deben comenzar
por un carácter alfabético y están limitados a una longitud de 32 caracteres.
No todos los usuarios están autorizados para ser administrador
de una base de datos. Si <ProductName>Postgres</ProductName> le niega la
creación de bases de datos, seguramente es debido a que el administrador del sistema ha de
otorgarle permisos para hacerlo.
En ese caso, consulte al administrador del sistema.
</Para>
</Sect2>

<Sect2>
<Title>Acceder a una base de datos</Title>

<Para>
Una vez que ha construido una base de datos, puede acceder a ella:

<ItemizedList Mark="bullet" Spacing="compact">
<ListItem>
<Para>
Ejecutando los programas de monitorización de
<ProductName>Postgres</ProductName>
(por ejemplo <Application>psql</Application>) los cuales le permiten
introducir, editar y ejecutar órdenes SQL interactivamente
</Para>
</ListItem>
<ListItem>
<Para>
Escribiendo un programa en C usando la librería de subrutinas LIBPQ, la cual
le permite enviar órdenes <Acronym>SQL</Acronym> desde C y obtener
mensajes de respuesta en su programa. Esta interfaz es discutida más
adelante en la <citetitle>Guía de Programadores de PostgreSQL</citetitle>
</Para>
</ListItem>
</ItemizedList>

Puede que desee ejecutar <Application>psql</Application>, para probar
los ejemplos en este manual. Lo puede activar para la base de datos
<Database>mydb</Database> escribiendo la orden:

<ProgramListing>
% psql mydb
</ProgramListing>

Se le dará la bienvenida con el siguiente mensaje:

<ProgramListing>
Welcome to the POSTGRESQL interactive sql monitor:
  Please read the file COPYRIGHT for copyright terms of POSTGRESQL

   type \? for help on slash commands
   type \q to quit
   type \g or terminate with semicolon to execute query
 You are currently connected to the database: template1

mydb=>
</ProgramListing>
</Para>

<Para>
Este prompt indica que el monitor está listo y puede
escribir sus consultas SQL dentro de un espacio de trabajo mantenido por
el monitor. El programa <Application>psql</Application> responde a los
códigos de escape que empiezan por el carácter <Quote>\</Quote>.
Por ejemplo, puede obtener la ayuda acerca de la sintaxis de varias
órdenes SQL <ProductName>Postgres</ProductName> escribiendo:

<ProgramListing>
mydb=> \h
</ProgramListing>

Una vez que haya terminado de introducir consultas, puede pasar el contenido
del espacio de trabajo al servidor <ProductName>Postgres</ProductName>
escribiendo:

<ProgramListing>
mydb=> \g
</ProgramListing>

Esto le dice al servidor que procese la consulta. Si termina
su consulta con un punto y coma, la <Quote>\g</Quote> no es necesaria.
<Application>psql</Application> procesará automáticamente las consultas
terminadas con punto y coma. Para leer consultas desde un archivo, digamos
myFile, en lugar de introducirlas interactivamente, escriba:

<ProgramListing>
mydb=> \i nombreDelFichero
</ProgramListing>

Para salir de <Application>psql</Application> y regresar a Unix escriba:

<ProgramListing>
mydb=> \q
</ProgramListing>

y <Application>psql</Application> terminará y volverá a la línea de órdenes.
(Para conocer más códigos de escape, escriba <Command>\h</Command>
en el prompt del monitor).
Se pueden utilizar espacios en blanco (por ejemplo espacios, tabulador y
el carácter de nueva línea) en las consultas SQL. Las líneas simples
comentadas comienzan por <Quote>--</Quote>. Lo que haya después de los guiones
hasta el final de línea será ignorado.
Los comentarios múltiples y los que ocupan más de una línea se señalan con
<Quote>/* ... */</Quote>
</Para>
</Sect2>

<Sect2>
<Title>Eliminando bases de datos</Title>

<Para>
Si es el administrador de la base de datos <Database>mydb</Database>,
puede eliminarla utilizando la siguiente orden Unix:

<ProgramListing>
% dropdb mydb
</ProgramListing>

Esta acción elimina físicamente todos los archivos Unix
asociados a la base de datos y no pueden recuperarse,
así que deberá hacerse con precaución.
</Para>
</Sect2>
</Sect1>

</Chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/CATALOG"
sgml-local-ecat-files:nil
End:
-->
