<HTML
><HEAD
><TITLE
> Formatting Functions </TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.54"><LINK
REL="HOME"
TITLE="PostgreSQL"
HREF="postgres.htm"><LINK
REL="UP"
TITLE="Functions"
HREF="functions.htm"><LINK
REL="PREVIOUS"
TITLE="Date/Time Functions"
HREF="x2486.htm"><LINK
REL="NEXT"
TITLE="Geometric Functions"
HREF="x2975.htm"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>PostgreSQL</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="x2486.htm"
>Anterior</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Capítulo 5. Functions</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x2975.htm"
>Siguiente</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
><A
NAME="AEN2571"
>Formatting Functions</A
></H1
><DIV
CLASS="NOTE"
><BLOCKQUOTE
CLASS="NOTE"
><P
><B
>Author: </B
>     Written by 
     <A
HREF="mailto:zakkr@zf.jcu.cz"
TARGET="_top"
>Karel Zak</A
>
     on 2000-01-24.
    </P
></BLOCKQUOTE
></DIV
><P
>    Formatting functions provide a powerful set of tools for converting 
    various datetypes (date/time, int, float, numeric) to formatted strings 
    and reverse convert from formatted strings to original datetypes. 
   </P
><P
>    <DIV
CLASS="TABLE"
><P
><B
>Tabla 5-6. Formatting Functions</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><THEAD
><TR
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Function</TH
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Returns</TH
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Description</TH
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Example</TH
></TR
></THEAD
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(datetime, text) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> text </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert datetime to string </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char('now'::datetime, 'HH12:MI:SS') </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(timestamp, text) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> text </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert timestamp to string </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( now(), 'HH12:MI:SS') </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(int, text) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> text </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert int4/int8 to string </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(125, '999') </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(float, text) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> text </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert float4/float8 to string </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(125.8, '999D9') </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(numeric, text) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> text </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert numeric to string </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(-125.8, '999D99S') </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_datetime(text, text) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> datetime </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert string to datetime </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_datetime('05 Dec 2000 13', 'DD Mon YYYY HH') </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_date(text, text) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> date </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert string to date </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_date('05 Dec 2000', 'DD Mon YYYY') </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_timestamp(text, text) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> date </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert string to timestamp </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_timestamp('05 Dec 2000', 'DD Mon YYYY') </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_number(text, text) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> numeric </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert string to numeric </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_number('12,454.8-', '99G999D9S') </TD
></TR
></TBODY
></TABLE
></DIV
>
   </P
><P
>    For all formatting functions is second argument format-picture. 
   </P
><P
>    <DIV
CLASS="TABLE"
><P
><B
>Tabla 5-7. Format-pictures for date/time to_char() version.</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><THEAD
><TR
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Format-picture</TH
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Description</TH
></TR
></THEAD
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> HH </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> hour of day (01-12) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> HH12 </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> hour of day (01-12) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> MI </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> minute (00-59) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> SS </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> socond (00-59) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> SSSS </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> seconds past midnight (0-86399) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> Y,YYY </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> year (4 and more digits) with comma </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> YYYY </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> year (4 and more digits) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> YYY </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> last 3 digits of year </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> YY </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> last 2 digits of year </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> Y </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> last digit of year </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> MONTH </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> full month name (9-letters) - all characters is upper  </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> Month </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> full month name (9-letters) - first character is upper  </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> month </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> full month name (9-letters) - all characters is lower </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> MON </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> abbreviated month name (3-letters) - all characters is upper </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> Mon </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> abbreviated month name (3-letters) - first character is upper </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> mon </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> abbreviated month name (3-letters) - all characters is lower </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> MM </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> month (01-12) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> DAY </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> full day name (9-letters) - all characters is upper </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> Day </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> full day name (9-letters) - first character is upper </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> day </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> full day name (9-letters) - all characters is lower </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> DY </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> abbreviated day name (3-letters) - all characters is upper </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> Dy </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> abbreviated day name (3-letters) - first character is upper </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> dy </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> abbreviated day name (3-letters) - all characters is upper </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> DDD </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> day of year (001-366) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> DD </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> day of month (01-31) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> D </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> day of week (1-7; SUN=1) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> W </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> week of month </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> WW </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> week number of year </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> CC </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> century (2-digits) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> J </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> julian day (days since January 1, 4712 BC) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> Q </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> quarter </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> RM </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> month in roman numeral (I-XII; I=JAN) </TD
></TR
></TBODY
></TABLE
></DIV
>
   </P
><P
>    All format-pictures	allow use suffixes (postfix / prefix). The suffix is 
    always valid for a near format-picture. The 'FX' is global prefix only.      
   </P
><P
>    <DIV
CLASS="TABLE"
><P
><B
>Tabla 5-8. Suffixes for format-pictures for date/time to_char() version.</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><THEAD
><TR
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Suffix</TH
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Description</TH
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Example</TH
></TR
></THEAD
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> FM </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> fill mode - prefix </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> FMMonth </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> TH </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> upper ordinal number - postfix </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> DDTH </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> th </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> lower ordinal number - postfix </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> DDTH </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> FX </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> FX - (Fixed format) global format-picture switch. 
	 The TO_DATETIME / TO_DATE skip blank space if this option is
	 not use. Must by used as first item in formt-picture. </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> FX Month DD Day </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> SP </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> spell mode (not implement now)</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> DDSP </TD
></TR
></TBODY
></TABLE
></DIV
>
   </P
><P
>     '\' - must be use as double \\, example '\\HH\\MI\\SS' 
   </P
><P
>     '"' - string between a quotation marks is skipen and not is parsed. 
     If you want write '"' to output you must use \\", example '\\"YYYY Month\\"'.
   </P
><P
>     text - the PostgreSQL's to_char() support text without '"', but string 
     between a quotation marks is fastly and you have guarantee, that a text 
     not will interpreted as a keyword (format-picture), exapmle '"Hello Year: "YYYY'.  
   </P
><P
>    <DIV
CLASS="TABLE"
><P
><B
>Tabla 5-9. Format-pictures for number (int/float/numeric) to_char() version.</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><THEAD
><TR
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Format-picture</TH
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Description</TH
></TR
></THEAD
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> 9 </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> return value with the specified number of digits, and if digit is
	 not available use blank space </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> 0 </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> as 9, but instead blank space use zero </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> . (period) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> decimal point </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> , (comma) </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> group (thousand) separator </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> PR </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> return negative value in angle brackets </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> S </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> return negatice value with minus sign (use locales) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> L </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> currency symbol (use locales) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> D </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> decimal point (use locales) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> G </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> group separator (use locales) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> MI </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> return minus sign on specified position (if number &#60; 0) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> PL </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> return plus sign on specified position (if number &#62; 0) - PostgreSQL extension </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> SG </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> return plus/minus sign on specified position - PostgreSQL extension </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> RN </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> return number as roman number (number must be between 1 and 3999) </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> TH or th </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> convert number to ordinal number (not convert numbers under zero and decimal numbers) - PostgreSQL extension </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> V </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> arg1 * (10 ^ n); - return a value multiplied by 10^n (where 'n' is number of '9's after the 'V'). 
	        The to_char() not support use 'V' and decimal poin together, example "99.9V99".   </TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> EEEE </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
> science numbers. Now not supported. </TD
></TR
></TBODY
></TABLE
></DIV
>
   </P
><P
>      Note: A sign formatted via 'SG', 'PL' or 'MI' is not anchor in number;
      to_char(-12, 'S9999') produce: <PRE
CLASS="PROGRAMLISTING"
> '  -12' </PRE
>, 
      but to_char(-12, 'MI9999') produce: <PRE
CLASS="PROGRAMLISTING"
> '-  12' </PRE
>. 
      The Oracle not allow use 'MI' ahead of '9', in the Oracle must be it always
      after '9'.
   </P
><P
>    <DIV
CLASS="TABLE"
><P
><B
>Tabla 5-10.  The to_char() examples. </B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><THEAD
><TR
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Input</TH
><TH
ALIGN="LEFT"
VALIGN="TOP"
>Output</TH
></TR
></THEAD
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(now(), 'Day, HH12:MI:SS') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> 'Tuesday  , 05:39:18' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char(now(), 'FMDay, HH12:MI:SS') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> 'Tuesday, 05:39:18' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( -0.1, '99.99') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' -.10' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( -0.1, 'FM9.99') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '-.1' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 0.1, '0.9') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 0.1' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 12, '9990999.9') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '    0012.0' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 12, 'FM9990999.9') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '0012' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485, '999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 485' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( -485, '999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '-485' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485, '9 9 9') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 4 8 5' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 1485,	'9,999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 1,485' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 1485,	'9G999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 1 485' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 148.5, '999.999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 148.500' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 148.5, '999D999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 148,500' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 3148.5,'9G999D999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 3 148,500' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( -485,	'999S') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '485-'	</PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( -485,	'999MI') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '485-'	</PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485,	'999MI') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '485' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485,	'PL999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '+485'	</PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485,	'SG999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '+485'	</PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( -485,	'SG999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '-485'	</PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( -485,	'9SG99') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '4-85'	</PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( -485,	'999PR') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '&#60;485&#62;' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485,	'L999')	</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> 'DM 485' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485,	'RN') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> '        CDLXXXV' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485,	'FMRN')	</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> 'CDLXXXV' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 5.2,	'FMRN')	</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> 'V' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 482,	'999th') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 482nd' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485,	'"Good number:"999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> 'Good number: 485' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 485.8, '"Pre-decimal:"999" Post-decimal:" .999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> 'Pre-decimal: 485 Post-decimal: .800' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 12, '99V999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 12000' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 12.4, '99V999') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 12400' </PRE
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
> to_char( 12.45, '99V9') </TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><PRE
CLASS="PROGRAMLISTING"
> ' 125' </PRE
></TD
></TR
></TBODY
></TABLE
></DIV
>
   </P
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="x2486.htm"
>Anterior</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="postgres.htm"
>Inicio</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x2975.htm"
>Siguiente</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Date/Time Functions</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="functions.htm"
>Subir</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Geometric Functions</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>