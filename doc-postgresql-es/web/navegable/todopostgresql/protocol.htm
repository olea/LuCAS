<HTML
><HEAD
><TITLE
>Protocolo Frontend/Backend</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.54"><LINK
REL="HOME"
TITLE="PostgreSQL"
HREF="postgres.htm"><LINK
REL="UP"
TITLE="Guía del Desarrollador"
HREF="part-developer.htm"><LINK
REL="PREVIOUS"
TITLE="Futuras Tareas de Implementación para el OGEC de Postgres"
HREF="x23252.htm"><LINK
REL="NEXT"
TITLE="Protocolo"
HREF="x23367.htm"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>PostgreSQL</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="x23252.htm"
>Anterior</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x23367.htm"
>Siguiente</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="PROTOCOL"
>Capítulo 56. Protocolo Frontend/Backend</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>Tabla de contenidos</B
></DT
><DT
><A
HREF="protocol.htm#AEN23359"
>Introducción</A
></DT
><DT
><A
HREF="x23367.htm"
>Protocolo</A
></DT
><DT
><A
HREF="x23522.htm"
>Tipos de Datos de Mensajes</A
></DT
><DT
><A
HREF="x23559.htm"
>Formatos de Mensajes</A
></DT
></DL
></DIV
><P
><DIV
CLASS="NOTE"
><BLOCKQUOTE
CLASS="NOTE"
><P
><B
>Nota: </B
>Escrito por <A
HREF="mailto:phil@river-bank.demon.co.uk"
TARGET="_top"
>Phil Thompson</A
>.
Actualizaciones del protocolo por <A
HREF="mailto:tgl@sss.pgh.pa.us"
TARGET="_top"
>Tom Lane</A
>.</P
></BLOCKQUOTE
></DIV
></P
><P
><SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> utiliza un protocolo basado en mensajes
para la comunicación entre frontend y backends. El protocolo  está implementado
sobre <SPAN
CLASS="ACRONYM"
>TCP/IP</SPAN
> y también sobre Unix sockets.
<SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> v6.3 introdució números de versión en el
protocolo.
Esto fue hecho de tal forma que aún permite conexiones desde versiones
anteriores de los frontends, pero este documento no cubre el protocolo utilizado
por esas versiones.</P
><P
>Este documento describe la versión 2.0 del protocolo, implementada en 
<SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> v6.4 y posteriores.</P
><P
>Las características de alto nivel sobre este protocolo (por ejemplo, como
<TT
CLASS="FILENAME"
>libpq</TT
> pasa ciertas variables de entorno despues de que
la comunicación es establecida), son tratadas en otros lugares.</P
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
><A
NAME="AEN23359"
>Introducción</A
></H1
><P
>Los tres principales componentes son el frontend (ejecutandose en el clicente)
y el postmaster y backend (ejecutandose en el servidor). El postmaster y 
backend juegan diferentes roles pero pueden ser implementados por el mismo
ejecutable.</P
><P
>Un frontend envía un paquete de inicio al postmaster. Este incluye los nombres
del usuario y base de datos a la que el usuario quiere conectarse. El postmaster
entonces utiliza esto, y la información en el fichero pg_hba.conf(5) para
determinar que información adicional de autentificación necesita del frontend
(si existe) y responde al frontend en concordancia.</P
><P
>El frontend envía entonces cualquier información de autentificación requerida.
Una vez que el postmaster valida esta información responde al frontend que está
autentificado y entrega una conexión a un backend. El backend entonces envía un
mensaje indicando arranque correcto (caso normal) o fallo (por ejemplo, un
nombre de base de datos inválido).</P
><P
>Las subsiguientes comunicaciones son paquetes de consulta y resultados
intercambiados entre el frontend y backend. El postmaster no interviene
ya en la comunicación ordinaria de cosultas/resultados. Sin embargo el
postmaster se involucra cuando el frontend desea cancelar una consulta
que se esté efectuando en su backend. Más detalles sobre esto aparecen
más abajo.</P
><P
>Cuando el frontend desea desconectar envía un paquete apropiado y cierra
la conexión sin esperar una respuesta del backend.</P
><P
>Los paquetes son enviados como un flujo de datos. El primer byte determina
que se debería esperar en el resto del paquete. La excepción son los paquetes
enviados desde un frontend al postmaster, los cuales incluyen la longitud
del paquete y el resto de él. Esta diferencia es histórica.</P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="x23252.htm"
>Anterior</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="postgres.htm"
>Inicio</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x23367.htm"
>Siguiente</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Futuras Tareas de Implementación para el <SPAN
CLASS="ACRONYM"
>OGEC</SPAN
> de <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="part-developer.htm"
>Subir</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Protocolo</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>