<HTML
><HEAD
><TITLE
>Funciones</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.54"><LINK
REL="HOME"
TITLE="Manual del usuario de PostgreSQL"
HREF="user.htm"><LINK
REL="UP"
TITLE="Conversión de tipos"
HREF="typeconv.htm"><LINK
REL="PREVIOUS"
TITLE="Operadores"
HREF="x3307.htm"><LINK
REL="NEXT"
TITLE="Resultados de consultas"
HREF="x3423.htm"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>Manual del usuario de PostgreSQL</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="x3307.htm"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Chapter 6. Conversión de tipos</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x3423.htm"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
><A
NAME="AEN3370"
>Funciones</A
></H1
><DIV
CLASS="PROCEDURE"
><P
><B
>Evaluación de función</B
></P
><OL
TYPE="1"
><LI
><P
>Busca una entrada exacta en el catálogo del sistema pg_proc.</P
></LI
><LI
><P
>Busca la mejor entrada.</P
><OL
CLASS="SUBSTEPS"
TYPE="a"
><LI
><P
>Hace una lista de todas las funciones con el mismo nombre y con el mismo número
de argumentos.</P
></LI
><LI
><P
>Si solo hay una función en la lista, usa esta si los tipos de la entrada pueden
ser convertidos, y produce un error si los tipos no pueden ser convertidos.</P
></LI
><LI
><P
>Guarda todas las funciones con los ajustes más explicitos para los tipos. Guarda
todas si no hay ajustes explicitos y salta al siguiente paso.
Si solo queda un candidato, usa este si el tipo puede ser convertido.</P
></LI
><LI
><P
>Si cualquiera de los argumentos de entrada son de tipo desconocido, clasifica 
los argumentos de entrada candidatos en categorías como boolean, numeric, string, geometric o 
user-defined. Si hay una mezcla de categorias, o más de un tipo definido por el usuario, se produce un error
debido a que la elección correcta no puede ser deducida si no se aportan más pistas.
Si solo hay una categoría , entonces asigna el "tipo preferido" a la columna de entrada que
antes era de tipo desconocido.</P
></LI
><LI
><P
>Escoge el candidato con el ajuste de tipos más exacto, y el cual ajusta el "tipo preferido"
a cada catagoría de columna desde el paso anterior.
Si hay más de un candidato, o si no hay ninguno, entonces se produce un error.</P
></LI
></OL
></LI
></OL
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
><A
NAME="AEN3389"
>Ejemplos</A
></H2
><DIV
CLASS="SECT3"
><H3
CLASS="SECT3"
><A
NAME="AEN3391"
>Función factorial</A
></H3
><P
>Solo hay una función factorial definidad en el catálogo pg_proc.
Debido a esto, las siguientes consultas convierten automáticamente el argumento <SPAN
CLASS="TYPE"
>int2</SPAN
>
a <SPAN
CLASS="TYPE"
>int4</SPAN
>:

<PRE
CLASS="PROGRAMLISTING"
>tgl=&#62; select int4fac(int2 '4');
int4fac
-------
     24
(1 row)</PRE
>

y es de hecho transformado por el analizador a
and is actually transformed by the parser to
<PRE
CLASS="PROGRAMLISTING"
>tgl=&#62; select int4fac(int4(int2 '4'));
int4fac
-------
     24
(1 row)</PRE
></P
></DIV
><DIV
CLASS="SECT3"
><H3
CLASS="SECT3"
><A
NAME="AEN3398"
>Función substring</A
></H3
><P
>Hay dos funciones <TT
CLASS="FUNCTION"
>substr</TT
> declaradas en pg_proc. Sin embargo,
solo una tiene dos argumentos, de tipos <SPAN
CLASS="TYPE"
>text</SPAN
> y <SPAN
CLASS="TYPE"
>int4</SPAN
>.</P
><P
>Si es llamada con una constante de cadena de tipo sin especificar, el tipo es ajustado
directamente con la unica fucnión candidata de tipo:
<PRE
CLASS="PROGRAMLISTING"
>tgl=&#62; select substr('1234', 3);
substr
------
    34
(1 row)</PRE
></P
><P
>Si la cadena es declarada como tipo <SPAN
CLASS="TYPE"
>varchar</SPAN
>, como puede ser en 
el caso de que venga de una tabla, entonces el analizador intentará convertirla
 al tipo <SPAN
CLASS="TYPE"
>text</SPAN
>:
<PRE
CLASS="PROGRAMLISTING"
>tgl=&#62; select substr(varchar '1234', 3);
substr
------
    34
(1 row)</PRE
>
lo que es transformado por el analizador a:
<PRE
CLASS="PROGRAMLISTING"
>tgl=&#62; select substr(text(varchar '1234'), 3);
substr
------
    34
(1 row)</PRE
></P
><DIV
CLASS="NOTE"
><BLOCKQUOTE
CLASS="NOTE"
><P
><B
>Note: </B
>Hay algunas estrategias en el analizador para optimizar la relación entre
los tipos <SPAN
CLASS="TYPE"
>char</SPAN
>, <SPAN
CLASS="TYPE"
>varchar</SPAN
> y <SPAN
CLASS="TYPE"
>text.
En este caso, la función <FONT
COLOR="RED"
>substr es llamada directamente con 
una cadena <SPAN
CLASS="TYPE"
>varchar</SPAN
> en vez de hacer una llamada para realizar
una conversión explicita.</FONT
></SPAN
></P
></BLOCKQUOTE
></DIV
><P
>Y, si la función es llamada con un <SPAN
CLASS="TYPE"
>int4</SPAN
>, el analizador intentará convertirlo
a <SPAN
CLASS="TYPE"
>text</SPAN
>
<PRE
CLASS="PROGRAMLISTING"
>tgl=&#62; select substr(1234, 3);
substr
------
    34
(1 row)</PRE
>
realmente se ejecuta como
<PRE
CLASS="PROGRAMLISTING"
>tgl=&#62; select substr(text(1234), 3);
substr
------
    34
(1 row)</PRE
></P
></DIV
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="x3307.htm"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="user.htm"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x3423.htm"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Operadores</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="typeconv.htm"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Resultados de consultas</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>