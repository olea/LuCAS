<HTML
><HEAD
><TITLE
>   SELECT
  </TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.54"><LINK
REL="HOME"
TITLE="Manual del usuario de PostgreSQL"
HREF="user.htm"><LINK
REL="UP"
TITLE="Instrucciones SQL"
HREF="sql-commands.htm"><LINK
REL="PREVIOUS"
TITLE="   ROLLBACK
  "
HREF="sql-rollback.htm"><LINK
REL="NEXT"
TITLE="   SELECT INTO
  "
HREF="sql-selectinto.htm"></HEAD
><BODY
CLASS="REFENTRY"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>Manual del usuario de PostgreSQL</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="sql-rollback.htm"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="sql-selectinto.htm"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><H1
><A
NAME="SQL-SELECT"
>SELECT</A
></H1
><DIV
CLASS="REFNAMEDIV"
><A
NAME="AEN9982"
></A
><H2
>Name</H2
>   SELECT
  &nbsp;--&nbsp;	Recupera registros desde una tabla o vista.
  </DIV
><DIV
CLASS="REFSYNOPSISDIV"
><A
NAME="AEN9985"
></A
><H2
>Synopsis</H2
><PRE
CLASS="SYNOPSIS"
>SELECT [ ALL | DISTINCT [ ON ( <TT
CLASS="REPLACEABLE"
><I
>expression</I
></TT
> [, ...] ) ] ]
    <TT
CLASS="REPLACEABLE"
><I
>expression</I
></TT
> [ AS <TT
CLASS="REPLACEABLE"
><I
>name</I
></TT
> ] [, ...]
    [ INTO [ TEMPORARY | TEMP ] [ TABLE ] <TT
CLASS="REPLACEABLE"
><I
>new_table</I
></TT
> ]
    [ FROM <TT
CLASS="REPLACEABLE"
><I
>table</I
></TT
> [ <TT
CLASS="REPLACEABLE"
><I
>alias</I
></TT
> ] [, ...] ]
    [ WHERE <TT
CLASS="REPLACEABLE"
><I
>condition</I
></TT
> ]
    [ GROUP BY <TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
> [, ...] ]
    [ HAVING <TT
CLASS="REPLACEABLE"
><I
>condition</I
></TT
> [, ...] ]
    [ { UNION [ ALL ] | INTERSECT | EXCEPT } <TT
CLASS="REPLACEABLE"
><I
>select</I
></TT
> ]
    [ ORDER BY <TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
> [ ASC | DESC | USING <TT
CLASS="REPLACEABLE"
><I
>operator</I
></TT
> ] [, ...] ]
    [ FOR UPDATE [ OF <TT
CLASS="REPLACEABLE"
><I
>class_name</I
></TT
> [, ...] ] ]
    LIMIT { <TT
CLASS="REPLACEABLE"
><I
>count</I
></TT
> | ALL } [ { OFFSET | , } <TT
CLASS="REPLACEABLE"
><I
>start</I
></TT
> ]
  </PRE
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-SELECT-1"
></A
><H3
>    Inputs
   </H3
><P
>    <P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>expression</I
></TT
></DT
><DD
><P
>	El nombre de una columna de la tabla o una expresi&oacute;n.
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>name</I
></TT
></DT
><DD
><P
>	Especifica otro nombre para una columna o una expresi&oacute;n que 	utilice la cl&aacute;usula AS. Este nombre se utiliza principalmente 	como etiqueta para la columna de salid. El nombre no puede ser utilizado 	en las cl&aacute;usulas WHERE, GROUP BY o HAVING. Sin embargo, puede ser 	referenciado en cl&aacute;usulas ORDER BY.
       </P
></DD
><DT
>TEMPORARY, TEMP</DT
><DD
><P
>	La tabla se crea solamente para esta sesi&oacute;n, y es 	autom&aacute;ticamente descartada al finalizar la misma.
      </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>new_table</I
></TT
></DT
><DD
><P
>	Si se utiliza la cl&aacute;usula INTO TABLE, el resultado de la consulta 	se almacenar&aacute; en otra tabla con el nombre indicado. 
	La tabla objetivo 
	(<TT
CLASS="REPLACEABLE"
><I
><FONT
COLOR="RED"
>"PARAMETER"&#62;new_table</FONT
></I
></TT
>)
	ser&aacute; creada autom&aacute;ticamente y no deber&aacute; existir 	previamente a la utilizaci&oacute;n de este comando. Consulte el comando 
	<B
CLASS="COMMAND"
>SELECT INTO</B
> para m&aacute;s informaci&oacute;n.

	<DIV
CLASS="NOTE"
><BLOCKQUOTE
CLASS="NOTE"
><P
><B
>Note: </B
>	  La declaraci&oacute;n <B
CLASS="COMMAND"
>CREATE TABLE AS</B
> 	  	  tambi&eacute;n crear&aacute; una nueva tabla a partir de la consulta.
	 </P
></BLOCKQUOTE
></DIV
>
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>table</I
></TT
></DT
><DD
><P
>	El nombre de una tabla existente a la que se refiere la	cl&aacute;usula 	FROM.
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>alias</I
></TT
></DT
><DD
><P
>	Un nombre alternativo para la tabla precedente 
	<TT
CLASS="REPLACEABLE"
><I
>table</I
></TT
>.
	Se utiliza para abreviar o eliminar ambigüedades en uniones dentro de 	una misma tabla.
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>condition</I
></TT
></DT
><DD
><P
>	Una expresi&oacute;n booleana que da como resultado verdadero o falso 	(true or false). Consulte la cl&aacute;usula WHERE.
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
></DT
><DD
><P
>	El nombre de una columna de la tabla.	
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>select</I
></TT
></DT
><DD
><P
>	Una declaraci&oacute;n de selecci&oacute;n (select) exceptuando la 	cl&aacute;usula ORDER BY.
	   </P
></DD
></DL
></DIV
>
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-SELECT-2"
></A
><H3
>    Outputs
   </H3
><P
>&#13;    <P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>Registros</DT
><DD
><P
>	El conjunto completo de registros (filas) que resultan de la 	especificaci&oacute;n de la consulta.
       </P
></DD
><DT
><SPAN
CLASS="RETURNVALUE"
><TT
CLASS="REPLACEABLE"
><I
>count</I
></TT
></SPAN
></DT
><DD
><P
>	La cantidad de registros (filas) devueltos por la consulta.
       </P
></DD
></DL
></DIV
>
   </P
></DIV
></DIV
><DIV
CLASS="REFSECT1"
><A
NAME="R1-SQL-SELECT-1"
></A
><H2
>   Descripci&oacute;n
  </H2
><P
>   <B
CLASS="COMMAND"
>SELECT</B
> devuelve registros de una o m&aacute;s tablas. 	Los candidatos a ser seleccionados son aquellos registros que cumplen la 	condici&oacute;n especificada con WHERE; si se omite WHERE, se retornan 	todos los registros.

   (Consulte <A
HREF="sql-select.htm#SQL-WHERE"
><I
>Cl&aacute;usula WHERE</I
></A
>.)
  </P
><P
>   <B
CLASS="COMMAND"
>DISTINCT</B
> elimina registros duplicados del resultado.
   <B
CLASS="COMMAND"
>ALL</B
> (predeterminado) devolver&aacute; todos los 	registros, que cumplan con la consulta, incluyendo los duplicados.
  </P
><P
>   <B
CLASS="COMMAND"
>DISTINCT ON</B
> elimina los registros que cumplen con 	todas las expresiones especificadas, manteniendo solamente el primer 	registro de cada conjunto de duplicados. Note que no se puede 	predecir cu&aacute;l ser&aacute; "el primer registro" a menos que se 	utilice <B
CLASS="COMMAND"
>ORDER BY</B
> para asegurar que el registro 	eseado es el que efectivamente aparece primero. Por ejemplo:

   <PRE
CLASS="PROGRAMLISTING"
>        SELECT DISTINCT ON (location) location, time, report
        FROM weatherReports
        ORDER BY location, time DESC;
   </PRE
>
	recuperea el reporte de tiempo (weather report) m&aacute;s reciente para 	cada locaci&oacute;n (location). Pero si no se hubiera utilizado ORDER 	BY para forzar el orden descendente de los valores de fecha para cada 	locaci&oacute;n, se hubiesen recuperado reportes de una fecha 	impredecible para cada locaci&oacute;n.
  </P
><P
>	La cl&aacute;usula GROUP BY permite al usuario dividir una tabla 	conceptualmente en grupos.

   (Consulte <A
HREF="sql-select.htm#SQL-GROUPBY"
><I
>Cl&aacute;usula GROUP BY</I
></A
>.)
  </P
><P
>	La cl&aacute;usula HAVING especifica una tabla con grupos derivada de 	la eliminacin de grupos del resultado de la cl&aacute;usula 	previamente especificada.

   (Consulte <A
HREF="sql-select.htm#SQL-HAVING"
><I
>Cl&aacute;usula HAVING</I
></A
>.)
  </P
><P
>	La cl&aacute;usula ORDER BY permite al usuario especificar si quiere los 	registros ordenados de manera ascendente o descendente utilizando los 	operadores de modo ASC y DESC.

   (Consulte .)
  </P
><P
>	El operador UNION permite permite que el resultado sea una 	colecci&oacute;n de registros devueltos por las consultas involucradas.

   (Consulte <A
HREF="sql-select.htm#SQL-UNION"
><I
>Cl&aacute;usula UNION</I
></A
>.)
  </P
><P
>	El operador INTERSECT le da los registros comunes a ambas consultas.

   (Consulte <A
HREF="sql-select.htm#SQL-INTERSECT"
><I
>Cl&aacute;usula INTERSECT</I
></A
>.)
  </P
><P
>	El operador EXCEPT le da los registros devueltos por la primera consulta 	que no se encuentran en la segunda consulta.

   (Consulte <A
HREF="sql-select.htm#SQL-EXCEPT"
><I
>Cl&aacute;usula EXCEPT</I
></A
>.)
  </P
><P
>	La cl&aacute;usula FOR UPDATE permite a SELECT realizar un bloqueo 	exclusivo de los registros seleccionados.
  </P
><P
>	La cl&aacute;usula LIMIT permite devolver al usuario un subconjunto de 	los registros producidos por la consulta.

   (Consulte <A
HREF="sql-select.htm#SQL-LIMIT"
><I
>Cl&aacute;usula LIMIT</I
></A
>.)
  </P
><P
>	Usted debe tener permiso de realizar SELECT sobre una tabla para poder 	leer sus valores.

   	(Consulte las declaraciones 	<B
CLASS="COMMAND"
>GRANT</B
>/<B
CLASS="COMMAND"
>REVOKE</B
>).
  </P
><DIV
CLASS="REFSECT2"
><A
NAME="SQL-WHERE"
></A
><H3
>    Cl&aacute;usula WHERE 
   </H3
><P
>	La condici&oacute;n opcional WHERE tiene la forma general:

    
    <PRE
CLASS="SYNOPSIS"
>WHERE <TT
CLASS="REPLACEABLE"
><I
>boolean_expr</I
></TT
>
    </PRE
>
    
    <TT
CLASS="REPLACEABLE"
><I
>boolean_expr</I
></TT
>
	puede consistir de cualquier expresi&oacute;n cuyo resultado sea un 	valor booleano. En muchos casos, esta expresi&oacute;n ser&aacute;:

    <PRE
CLASS="SYNOPSIS"
>     <TT
CLASS="REPLACEABLE"
><I
>expr</I
></TT
> <TT
CLASS="REPLACEABLE"
><I
>cond_op</I
></TT
> <TT
CLASS="REPLACEABLE"
><I
>expr</I
></TT
>
    </PRE
>

    o

    <PRE
CLASS="SYNOPSIS"
>     <TT
CLASS="REPLACEABLE"
><I
>log_op</I
></TT
> <TT
CLASS="REPLACEABLE"
><I
>expr</I
></TT
>
    </PRE
>


    donde <TT
CLASS="REPLACEABLE"
><I
>cond_op</I
></TT
>
	puede ser uno de: =, &lt;, &lt;=, &gt;, &gt;= or &lt;&gt;,
	un operador condicional como ALL, ANY, IN, LIKE o operador definido 	localmente,
	y <TT
CLASS="REPLACEABLE"
><I
>log_op</I
></TT
> puede ser uno de: 	AND, OR, NOT.
	La comparaci&oacute;n devuelve TRUE (verdadero) o FALSE (falso) y todas 	las instancias ser&aacute;n descartadas si la expresi&oacute;n resulta 	falsa.
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="SQL-GROUPBY"
></A
><H3
>    Cl&aacute;usula GROUP BY 
   </H3
><P
>	GROUP BY especifica una tabla con grupos derivada de la 	aplicaci&oacute;n de esta cl&aacute;usula:

    <PRE
CLASS="SYNOPSIS"
>	GROUP BY <TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
> [, ...]
    </PRE
>
   </P
><P
>	GROUP BY condensar&aacute; en una sola fila todos aquellos registros que 	compartan los mismos valores para las columnas agrupadas. Las funciones 	de agregaci&oacute;n, si las hubiera, son computadas a trav&eacute;s de 	todas las filas que conforman cada grupo, produciendo un valor separado 	por cada uno de los grupos (mientras que sin GROUP BY, una 	funci&oacute;n de agregaci&oacute;n produce un solo valor computado a 	trav&eacute;s de todas las filas seleccionadas). Cuando GROUP BY 	est&aacute; presente, no es v&aacute;lido hacer referencia a columnas no 	agrupadas excepto dentro de funciones de agregaci&oacute;n, ya que 	habr&iacute;a m&aacute;s de un posible valor de retorno para una columna 	no agrupada.
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="SQL-HAVING"
></A
><H3
>    Cl&aacute;usula HAVING 
   </H3
><P
>	La condici&oacute;n opcional HAVING tiene la forma general:
    
    <PRE
CLASS="SYNOPSIS"
>HAVING <TT
CLASS="REPLACEABLE"
><I
>cond_expr</I
></TT
>
    </PRE
>

	donde <TT
CLASS="REPLACEABLE"
><I
>cond_expr</I
></TT
> cumple las 	mismas condiciones que las especificadas para WHERE. 
   </P
><P
>    HAVING especifica una tabla con grupos derivada de la eliminaci&oacute;n 	de grupos, del resultado de la cl&aacute;usula previamente especificada, 	que no cumplen con <TT
CLASS="REPLACEABLE"
><I
>cond_expr</I
></TT
>.</P
><P
>	Cada columna referenciada en 
    <TT
CLASS="REPLACEABLE"
><I
>cond_expr</I
></TT
> 
	debe referirse precisamente (sin ambigüedades) a una columna de grupo, a 	menos que la referencia aparezca dentro de una funci&oacute;n de 	agregaci&oacute;n.
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="SQL-ORDERBY"
></A
><H3
>    Cl&aacute;usula ORDER BY 
   </H3
><P
>    <PRE
CLASS="SYNOPSIS"
>ORDER BY <TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
> [ ASC | DESC ] [, ...]
    </PRE
></P
><P
>    <TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
> puede ser tanto el 	nombre de una columna como un n&uacute;mero ordinal.
   </P
><P
>	Los n&uacute;meros ordinales hacen referencia a la posici&oacute;n (de 	izquierda a derecha) de la columna. Esta caracter&iacute;stica hace 	posible definir un orden basado en una columna que no tiene un nombre 	adecuado.
	Esto nunca es absolutamente necesario ya que siempre es posible asignar 	un nombre a una columna calculada utilizando la cl&aacute;usula AS, 	por ej.:	
    <PRE
CLASS="PROGRAMLISTING"
>	SELECT title, date_prod + 1 AS newlen FROM films ORDER BY newlen;
    </PRE
>
   </P
><P
>	A partir de la versi&oacute;n 6.4 de PostgreSQL, es tambi&eacute;n 	posible ordenar, con ORDER BY, seg&uacute;n expresiones arbitrarias, 	incluyendo campos que no aparecen en el resultado de SELECT.
	Por lo tanto, la siguiente declaraci&oacute;n es legal:

    <PRE
CLASS="PROGRAMLISTING"
>	SELECT name FROM distributors ORDER BY code;
    </PRE
>
   </P
><P
>	Opcionalmente una puede agregar la palabra clave DESC (descendente) o 	ASC (ascendente) luego del nombre de cada columna en la cl&aacute;usula 	ORDER BY. Si no se especifica, se asume ASC de forma predeterminada. 	Alternativamente, puede indicarse un nombre de operador de orden 	espec&iacute;fico. ASC es equivalente a USING '&lt;' y DESC es 	equivalente a USING '&gt;'.
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="SQL-UNION"
></A
><H3
>    Cl&aacute;usula UNION 
   </H3
><P
>    <PRE
CLASS="SYNOPSIS"
><TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
> UNION [ ALL ] <TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
>
    [ ORDER BY <TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
> [ ASC | DESC ] [, ...] ]
    </PRE
>

    donde
    <TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
>
	especifica cualquier declaraci&oacute;n SELECT sin la cl&aacute;usula 	ORDER BY.
   </P
><P
>	El operador UNION permite que el resultado sea una colecci&oacute;n de 	registros devueltos por las consultas involucradas.
	Los dos SELECTs que representan los dos operandos directos de la UNION 	deben producir el mismo n&uacute;mero de columnas, y las columnas 	correspondientes deben ser de tipos de datos compatibles.
   </P
><P
>	De forma predeterminada, el resultado de UNION no contiene registros 	duplicados a menos que se especifique la cl&aacute;usula ALL.
   </P
><P
>	Si se utilizan varios operadores UNION en la misma declaraci&oacute;n 	SELECT se eval&uacute;an de izquierda a derecha.
	Note que la palabra clave ALL no es global, siendo aplicada solamente al 	par de tablas de resultado actual.
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="SQL-INTERSECT"
></A
><H3
>    Cl&aacute;usula INTERSECT 
   </H3
><P
>    <PRE
CLASS="SYNOPSIS"
><TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
> INTERSECT <TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
>
    [ ORDER BY <TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
> [ ASC | DESC ] [, ...] ]
    </PRE
>
    
    donde
    <TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
>
	especifica cualquier expresin SELECT sin la cl&aacute;usula 	ORDER BY.
   </P
><P
>	El operador INTERSECT le da los registros comunes a ambas consultas.	
	Los dos SELECTs que representan los operandos directos de la 	intersecci&oacute;n deben producir el mismo n&uacute;mero de columnas, 
	y las columnas correspondientes deben ser de tipos de datos compatibles.
   </P
><P
>	Si se utilizan varios operadores INTERSECT en la misma 	declaraci&oacute;n SELECT se eval&uacute;an de izquierda a derecha, a 	menos que se utilicen par&eacute;ntesis para modificar esto.
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="SQL-EXCEPT"
></A
><H3
>    Cl&aacute;usula EXCEPT 
   </H3
><P
>    <PRE
CLASS="SYNOPSIS"
><TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
> EXCEPT <TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
>
     [ ORDER BY <TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
> [ ASC | DESC ] [, ...] ]
    </PRE
>
    
    donde
    <TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
>
	especifica cualquier expresi&oacute;n SELECT sin la cl&aacute;usula
	ORDER BY. 
   </P
><P
>	El operador EXCEPT le da los registros devueltos por la primera consulta 	pero no por la segunda.
	Los dos SELECTs que representan los operandos directos de la 	intersecci&oacute;n deben producir el mismo n&uacute;mero de columnas, 
	y las columnas correspondientes deben ser de tipos de datos compatibles.
   </P
><P
>	Si se utilizan varios operadores INTERSECT en la misma 	declaraci&oacute;n SELECT se eval&uacute;an de izquierda a derecha, a 	menos que se utilicen par&eacute;ntesis para modificar esto.
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="SQL-LIMIT"
></A
><H3
>    Cl&aacute;usula LIMIT 
   </H3
><P
>    <PRE
CLASS="SYNOPSIS"
>    LIMIT { <TT
CLASS="REPLACEABLE"
><I
>count</I
></TT
> | ALL } [ { OFFSET | , } <TT
CLASS="REPLACEABLE"
><I
>start</I
></TT
> ]
    OFFSET <TT
CLASS="REPLACEABLE"
><I
>start</I
></TT
>
    </PRE
>
    
    donde
    <TT
CLASS="REPLACEABLE"
><I
>count</I
></TT
> 
	especifica el m&aacute;ximo n&uacute;mero de registros a devolver y	
    <TT
CLASS="REPLACEABLE"
><I
>start</I
></TT
> 
	especifica el n&uacute;mero de registros a saltear antes de empezar a 	devolver registros.
   </P
><P
>	LIMIT le permite recuperar s&oacute;lo una porci&oacute;n de los 	registros que se generan por el resto de la consulta. Si se especifica 	un n&uacute;mero l&iacute;mite, no se devolver&aacute;n m&aacute;s 	registros que esa cantidad. Si se da un valor de desplazamiento, esa 	cantidad de registros ser&aacute; salteada antes de comenzar a devolver 	registros.
   </P
><P
>	Cuando se utiliza LIMIT es una buena idea utilizar la cl&aacute;usula 	ORDER BY para colocar los registros del resultado en un orden 	&uacute;nico. De otra forma obtendr&aacute; un subconjunto impredecible 
	de los registros de la consulta --- tal vez est&eacute; buscando los 	registros del d&eacute;cimo al vig&eacute;simo, ¿pero del d&eacute;cimo 	al vig&eacute;simo en qu&eacute; orden? Usted no conoce el orden a menos 	que utilice ORDER BY.
   </P
><P
>	Ya en Postgres 7.0, el optimizador de consultas toma en cuenta a LIMIT 	cuando genera un plan de consulta, as&iacute; que es muy factible que 	usted obtenga diferentes planes (abarcando diferentes criterios de 	ordenamiento de registros) dependiendo de los valores dados a LIMIT y 	OFFSET. Por lo tanto, utilizar diferentes valores para LIMIT/OFFSET para 	seleccionar diferentes subconjuntos del resultado de una consulta, 
	<I
CLASS="EMPHASIS"
>provocar&aacute; resultados inconsistentes</I
> a menos
	que usted se asegura un resultado predecible ordenando con ORDER BY. 	Esto no es un bug; es una consecuencia inherente al hecho de que SQL no
	establece ning&uacute;n compromiso de entregar los resultados de una 	consulta en un orden en particular a menos que se utilice ORDER BY para
	especificar un criterio de orden expl&iacute;citamente.
   </P
></DIV
></DIV
><DIV
CLASS="REFSECT1"
><A
NAME="R1-SQL-SELECT-2"
></A
><H2
>   Uso
  </H2
><P
>	Para unir la tabla <TT
CLASS="LITERAL"
>films</TT
> con la tabla
    <TT
CLASS="LITERAL"
>distributors</TT
>:

   <PRE
CLASS="PROGRAMLISTING"
>SELECT f.title, f.did, d.name, f.date_prod, f.kind
    FROM distributors d, films f
    WHERE f.did = d.did

title                    |did|name            | date_prod|kind
-------------------------+---+----------------+----------+----------
The Third Man            |101|British Lion    |1949-12-23|Drama
The African Queen        |101|British Lion    |1951-08-11|Romantic
Une Femme est une Femme  |102|Jean Luc Godard |1961-03-12|Romantic
Vertigo                  |103|Paramount       |1958-11-14|Action
Becket                   |103|Paramount       |1964-02-03|Drama
48 Hrs                   |103|Paramount       |1982-10-22|Action
War and Peace            |104|Mosfilm         |1967-02-12|Drama
West Side Story          |105|United Artists  |1961-01-03|Musical
Bananas                  |105|United Artists  |1971-07-13|Comedy
Yojimbo                  |106|Toho            |1961-06-16|Drama
There's a Girl in my Soup|107|Columbia        |1970-06-11|Comedy
Taxi Driver              |107|Columbia        |1975-05-15|Action
Absence of Malice        |107|Columbia        |1981-11-15|Action
Storia di una donna      |108|Westward        |1970-08-15|Romantic
The King and I           |109|20th Century Fox|1956-08-11|Musical
Das Boot                 |110|Bavaria Atelier |1981-11-11|Drama
Bed Knobs and Broomsticks|111|Walt Disney     |          |Musical
   </PRE
>
  </P
><P
>	Para sumar la columna <TT
CLASS="LITERAL"
>len</TT
> (duraci&oacute;n) de todos 	los filmes y agrupar los resultados seg&uacute;n 	la columna <TT
CLASS="LITERAL"
>kind</TT
> (tipo):

   <PRE
CLASS="PROGRAMLISTING"
>SELECT kind, SUM(len) AS total FROM films GROUP BY kind;

    kind      |total
    ----------+------
    Action    | 07:34
    Comedy    | 02:58
    Drama     | 14:28
    Musical   | 06:42
    Romantic  | 04:38
   </PRE
>
  </P
><P
>	Para sumar la columna <TT
CLASS="LITERAL"
>len</TT
> de todos los filmes, 	agrupar los resultados seg&uacute;n la columna <TT
CLASS="LITERAL"
>kind</TT
> y 	mostrar los totales de esos grupos que sean menores a 5 horas:

   <PRE
CLASS="PROGRAMLISTING"
>SELECT kind, SUM(len) AS total
    FROM films
    GROUP BY kind
    HAVING SUM(len) &#60; INTERVAL '5 hour';

    kind      |total
    ----------+------
    Comedy    | 02:58
    Romantic  | 04:38
   </PRE
>
  </P
><P
>	Los siguientes dos ejemplos muestran maneras id&eacute;nticas de ordenar 	los resultados individuales de acuerdo con los contenidos de la segunda 
	columna (<TT
CLASS="LITERAL"
>name</TT
>):

   <PRE
CLASS="PROGRAMLISTING"
>SELECT * FROM distributors ORDER BY name;
SELECT * FROM distributors ORDER BY 2;

    did|name
    ---+----------------
    109|20th Century Fox
    110|Bavaria Atelier
    101|British Lion
    107|Columbia
    102|Jean Luc Godard
    113|Luso films
    104|Mosfilm
    103|Paramount
    106|Toho
    105|United Artists
    111|Walt Disney
    112|Warner Bros.
    108|Westward
   </PRE
>
  </P
><P
>	Este ejemplo muestra c&oacute;mo obtener la union de las tablas
   <TT
CLASS="LITERAL"
>distributors</TT
> y <TT
CLASS="LITERAL"
>actors</TT
>, 
	restringiendo los resultados a aquellos que comienzan con la letra W en 	cada tabla. No se quieren duplicados, as&iacute; que la palabra clave 	ALL se omite.

   <PRE
CLASS="PROGRAMLISTING"
>    --        distributors:                actors:
    --        did|name                     id|name
    --        ---+------------             --+--------------
    --        108|Westward                  1|Woody Allen
    --        111|Walt Disney               2|Warren Beatty
    --        112|Warner Bros.              3|Walter Matthau
    --        ...                           ...

SELECT distributors.name
    FROM   distributors
    WHERE  distributors.name LIKE 'W%'
UNION
SELECT actors.name
    FROM   actors
    WHERE  actors.name LIKE 'W%'

name
--------------
Walt Disney
Walter Matthau
Warner Bros.
Warren Beatty
Westward
Woody Allen
   </PRE
>
  </P
></DIV
><DIV
CLASS="REFSECT1"
><A
NAME="R1-SQL-SELECT-3"
></A
><H2
>   Compatibilidad
  </H2
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-SELECT-4"
></A
><H3
>    <SPAN
CLASS="ACRONYM"
>Extensiones</SPAN
>
   </H3
><P
><SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> permite omitir la cl&aacute;usula
<B
CLASS="COMMAND"
>FROM</B
> de una consulta. Esta caracter&iacute;stica fue conservada del lenguaje original de consulta PostQuel:

  <PRE
CLASS="PROGRAMLISTING"
>SELECT distributors.* WHERE name = 'Westwood';

    did|name
    ---+----------------
    108|Westward
  </PRE
>
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-SELECT-5"
></A
><H3
>    <SPAN
CLASS="ACRONYM"
>SQL92</SPAN
>
   </H3
><P
>   </P
><DIV
CLASS="REFSECT3"
><A
NAME="R3-SQL-SELECT-1"
></A
><H4
>     Cl&aacute;usula SELECT 
    </H4
><P
>	En el est&aacute;ndar <SPAN
CLASS="ACRONYM"
>SQL92</SPAN
>, la palabra clave  	opcional "AS" es totalmente prescindible y puede ser omitida sin afectar 	el significado. 
	El analizador sint&aacute;ctico de <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> 	requiere la presencia de esta palabra cuando se renombran columnas 	debido a las caracter&iacute;sticas de extensibilidad de tipos que 	pueden llevar a interpretaciones ambiguas en este contexto.
	</P
><P
>	 DISTINCT ON no es parte de <SPAN
CLASS="ACRONYM"
>SQL92</SPAN
>.
     Tampoco los son LIMIT y OFFSET.
    </P
></DIV
><DIV
CLASS="REFSECT3"
><A
NAME="R3-SQL-UNION-1"
></A
><H4
>     Cl&aacute;usula UNION
    </H4
><P
>     La sintaxis de <SPAN
CLASS="ACRONYM"
>SQL92</SPAN
> para UNION admite una 	 	 cl&aacute;usula adicional CORRESPONDING BY:

     <PRE
CLASS="SYNOPSIS"
> 
<TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
> UNION [ALL]
    [CORRESPONDING [BY (<TT
CLASS="REPLACEABLE"
><I
>column</I
></TT
> [,...])]]
    <TT
CLASS="REPLACEABLE"
><I
>table_query</I
></TT
>
     </PRE
></P
><P
>     La cl&aacute;usula CORRESPONDING BY no es soportada por 
     <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
>.
    </P
></DIV
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="sql-rollback.htm"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="user.htm"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="sql-selectinto.htm"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>ROLLBACK</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="sql-commands.htm"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>SELECT INTO</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>