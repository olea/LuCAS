<HTML
><HEAD
><TITLE
>   SET
  </TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.54"><LINK
REL="HOME"
TITLE="Manual del usuario de PostgreSQL"
HREF="user.htm"><LINK
REL="UP"
TITLE="Instrucciones SQL"
HREF="sql-commands.htm"><LINK
REL="PREVIOUS"
TITLE="   SELECT INTO
  "
HREF="sql-selectinto.htm"><LINK
REL="NEXT"
TITLE="   SHOW
  "
HREF="sql-show.htm"></HEAD
><BODY
CLASS="REFENTRY"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>Manual del usuario de PostgreSQL</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="sql-selectinto.htm"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="sql-show.htm"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><H1
><A
NAME="SQL-SET"
>SET</A
></H1
><DIV
CLASS="REFNAMEDIV"
><A
NAME="AEN10324"
></A
><H2
>Name</H2
>   SET
  &nbsp;--&nbsp;   Set run-time parameters for session
  </DIV
><DIV
CLASS="REFSYNOPSISDIV"
><A
NAME="AEN10327"
></A
><H2
>Synopsis</H2
><PRE
CLASS="SYNOPSIS"
>SET <TT
CLASS="REPLACEABLE"
><I
>variable</I
></TT
> { TO | = } { '<TT
CLASS="REPLACEABLE"
><I
>value</I
></TT
>' | DEFAULT }
SET TIME ZONE { '<TT
CLASS="REPLACEABLE"
><I
>timezone</I
></TT
>' | LOCAL | DEFAULT }
SET TRANSACTION ISOLATION LEVEL { READ COMMITTED | SERIALIZABLE }
  </PRE
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-SET-1"
></A
><H3
>    Inputs
   </H3
><P
>		
    <P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>variable</I
></TT
></DT
><DD
><P
>	Settable global parameter.
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>value</I
></TT
></DT
><DD
><P
>	New value of parameter.  <TT
CLASS="OPTION"
>DEFAULT</TT
> can be
	used to specify resetting the parameter to its default value.
       </P
></DD
></DL
></DIV
>
   </P
><P
>    The possible variables and allowed values are:
		
    <P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>CLIENT_ENCODING | NAMES</DT
><DD
><P
>	Sets the multi-byte client encoding. Parameters are:
	
	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>value</I
></TT
></DT
><DD
><P
>	    Sets the multi-byte client encoding to
	    <TT
CLASS="REPLACEABLE"
><I
>value</I
></TT
>.
	    The specified encoding must be supported by the backend.
	   </P
></DD
></DL
></DIV
>
       </P
><P
>	This option is only available if MULTIBYTE support was enabled
	during the configure step of building Postgres.
       </P
></DD
><DT
>DateStyle</DT
><DD
><P
>	Set the date/time representation style. Affects the output format,
	and in some cases it can affect the interpretation of input.

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ISO</DT
><DD
><P
>	    use ISO 8601-style dates and times
	   </P
></DD
><DT
>SQL</DT
><DD
><P
>	    use Oracle/Ingres-style dates and times
	   </P
></DD
><DT
>Postgres</DT
><DD
><P
>	    use traditional <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> format
	   </P
></DD
><DT
>European</DT
><DD
><P
>	    use dd/mm/yyyy for numeric date representations.
	   </P
></DD
><DT
>NonEuropean</DT
><DD
><P
>	    use mm/dd/yyyy for numeric date representations.
	   </P
></DD
><DT
>German</DT
><DD
><P
>	    use dd.mm.yyyy for numeric date representations.
	   </P
></DD
><DT
>US</DT
><DD
><P
>	    same as 'NonEuropean'
	   </P
></DD
><DT
>DEFAULT</DT
><DD
><P
>	    restores the default values ('US,Postgres')
	   </P
></DD
></DL
></DIV
>
       </P
><P
>	Date format initialization may be done by:
	<P
></P
><TABLE
BORDER="0"
><TBODY
><TR
><TD
>	  Setting the <TT
CLASS="ENVAR"
>PGDATESTYLE</TT
> environment variable.
	  If PGDATESTYLE is set in the frontend environment of a client
	  based on libpq, libpq will automatically set DATESTYLE to the
	  value of PGDATESTYLE during connection startup.
	 </TD
></TR
><TR
><TD
>	  Running postmaster using the option <TT
CLASS="OPTION"
>-o -e</TT
> to set
	  dates to the <TT
CLASS="LITERAL"
>European</TT
> convention.
	  Note that this affects only some combinations of date styles; for example
	  the ISO style is not affected by this parameter.
	 </TD
></TR
><TR
><TD
>	  Changing variables in 
	  <TT
CLASS="FILENAME"
>src/backend/utils/init/globals.c</TT
>.
	 </TD
></TR
></TBODY
></TABLE
><P
></P
>
       </P
><P
>	The variables in <TT
CLASS="FILENAME"
>globals.c</TT
> which can be changed are:
	<P
></P
><TABLE
BORDER="0"
><TBODY
><TR
><TD
>	  bool EuroDates = false | true
	 </TD
></TR
><TR
><TD
>	  int  DateStyle = USE_ISO_DATES | USE_POSTGRES_DATES | USE_SQL_DATES | USE_GERMAN_DATES
	 </TD
></TR
></TBODY
></TABLE
><P
></P
>
       </P
></DD
><DT
>SERVER_ENCODING</DT
><DD
><P
>	Sets the multi-byte server encoding
	
	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>value</I
></TT
></DT
><DD
><P
>	    Sets the multi-byte server encoding.
	   </P
></DD
></DL
></DIV
>
       </P
><P
>	This option is only available if MULTIBYTE support was enabled
	during the configure step of building Postgres.
       </P
></DD
><DT
>TIMEZONE</DT
><DD
><P
>	The possible values for timezone depends on your operating
	system. For example on Linux /usr/lib/zoneinfo contains the
	database of timezones.
       </P
><P
>	Here are some valid values for timezone:
				
	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>'PST8PDT'</DT
><DD
><P
>	    set the timezone for California
	   </P
></DD
><DT
>'Portugal'</DT
><DD
><P
>	    set time zone for Portugal.
	   </P
></DD
><DT
>'Europe/Rome'</DT
><DD
><P
>	    set time zone for Italy.
	   </P
></DD
><DT
>DEFAULT</DT
><DD
><P
>	    set time zone to your local timezone
	    (value of the TZ environment variable).
	   </P
></DD
></DL
></DIV
>
       </P
><P
>	If an invalid time zone is specified, the time zone
	becomes GMT (on most systems anyway).
       </P
><P
>	The second syntax shown above, allows one to set the timezone
	with a syntax similar to SQL92 <B
CLASS="COMMAND"
>SET TIME ZONE</B
>.
	The LOCAL keyword is just an alternate form
	of DEFAULT for SQL92 compatibility.
       </P
><P
>        If the PGTZ environment variable is set in the frontend
	environment of a client based on libpq, libpq will automatically
	set TIMEZONE to the value of PGTZ during connection startup.
       </P
></DD
><DT
>TRANSACTION ISOLATION LEVEL</DT
><DD
><P
>	Sets the isolation level for the current transaction.
	
	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>READ COMMITTED</DT
><DD
><P
>	    The current transaction queries read only rows committed
	    before a query began. READ COMMITTED is the default.
	   </P
><DIV
CLASS="NOTE"
><BLOCKQUOTE
CLASS="NOTE"
><P
><B
>Note: </B
>	    <SPAN
CLASS="ACRONYM"
>SQL92</SPAN
> standard requires 
	    SERIALIZABLE to be the default isolation level.
	   </P
></BLOCKQUOTE
></DIV
></DD
><DT
>SERIALIZABLE</DT
><DD
><P
>	    The current transaction queries read only rows committed
	    before first DML statement 
	    (<B
CLASS="COMMAND"
>SELECT/INSERT/DELETE/UPDATE/FETCH/COPY_TO</B
>)
	    was executed in this transaction. 
	   </P
></DD
></DL
></DIV
>
       </P
></DD
></DL
></DIV
>
   </P
><P
>    There are also several internal or optimization
    parameters which can be specified
    by the <B
CLASS="COMMAND"
>SET</B
> command:
    
    <P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>RANDOM_PAGE_COST</DT
><DD
><P
>        Sets the optimizer's estimate of the cost of a nonsequentially
	fetched disk page.  This is measured as a multiple of the cost
	of a sequential page fetch.
	
	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>float8</I
></TT
></DT
><DD
><P
>	    Set the cost of a random page access
	    to the specified floating-point value.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>CPU_TUPLE_COST</DT
><DD
><P
>        Sets the optimizer's estimate of the cost of processing each
	tuple during a query.  This is measured as a fraction of the cost
	of a sequential page fetch.
	
	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>float8</I
></TT
></DT
><DD
><P
>	    Set the cost of per-tuple CPU processing
	    to the specified floating-point value.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>CPU_INDEX_TUPLE_COST</DT
><DD
><P
>        Sets the optimizer's estimate of the cost of processing each
	index tuple during an index scan.  This is measured as a fraction
	of the cost of a sequential page fetch.
	
	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>float8</I
></TT
></DT
><DD
><P
>	    Set the cost of per-index-tuple CPU processing
	    to the specified floating-point value.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>CPU_OPERATOR_COST</DT
><DD
><P
>        Sets the optimizer's estimate of the cost of processing each
	operator in a WHERE clause.  This is measured as a fraction
	of the cost of a sequential page fetch.
	
	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>float8</I
></TT
></DT
><DD
><P
>	    Set the cost of per-operator CPU processing
	    to the specified floating-point value.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>EFFECTIVE_CACHE_SIZE</DT
><DD
><P
>        Sets the optimizer's assumption about the effective size of the
	disk cache (that is, the portion of the kernel's disk cache that
	will be used for Postgres data files).  This is measured in disk
	pages, which are normally 8Kb apiece.
	
	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>float8</I
></TT
></DT
><DD
><P
>	    Set the assumed cache size
	    to the specified floating-point value.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>ENABLE_SEQSCAN</DT
><DD
><P
>        Enables or disables the planner's use of sequential scan plan types.
	(It's not possible to suppress sequential scans entirely, but turning
	this variable OFF discourages the planner from using one if there is
	any other method available.)

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ON</DT
><DD
><P
>	    enables use of sequential scans (default setting).
	   </P
></DD
><DT
>OFF</DT
><DD
><P
>	    disables use of sequential scans.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>ENABLE_INDEXSCAN</DT
><DD
><P
>        Enables or disables the planner's use of index scan plan types.

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ON</DT
><DD
><P
>	    enables use of index scans (default setting).
	   </P
></DD
><DT
>OFF</DT
><DD
><P
>	    disables use of index scans.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>ENABLE_TIDSCAN</DT
><DD
><P
>        Enables or disables the planner's use of TID scan plan types.

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ON</DT
><DD
><P
>	    enables use of TID scans (default setting).
	   </P
></DD
><DT
>OFF</DT
><DD
><P
>	    disables use of TID scans.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>ENABLE_SORT</DT
><DD
><P
>        Enables or disables the planner's use of explicit sort steps.
	(It's not possible to suppress explicit sorts entirely, but turning
	this variable OFF discourages the planner from using one if there is
	any other method available.)

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ON</DT
><DD
><P
>	    enables use of sorts (default setting).
	   </P
></DD
><DT
>OFF</DT
><DD
><P
>	    disables use of sorts.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>ENABLE_NESTLOOP</DT
><DD
><P
>        Enables or disables the planner's use of nested-loop join plans.
	(It's not possible to suppress nested-loop joins entirely, but turning
	this variable OFF discourages the planner from using one if there is
	any other method available.)

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ON</DT
><DD
><P
>	    enables use of nested-loop joins (default setting).
	   </P
></DD
><DT
>OFF</DT
><DD
><P
>	    disables use of nested-loop joins.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>ENABLE_MERGEJOIN</DT
><DD
><P
>        Enables or disables the planner's use of mergejoin plans.

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ON</DT
><DD
><P
>	    enables use of merge joins (default setting).
	   </P
></DD
><DT
>OFF</DT
><DD
><P
>	    disables use of merge joins.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>ENABLE_HASHJOIN</DT
><DD
><P
>        Enables or disables the planner's use of hashjoin plans.

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ON</DT
><DD
><P
>	    enables use of hash joins (default setting).
	   </P
></DD
><DT
>OFF</DT
><DD
><P
>	    disables use of hash joins.
	   </P
></DD
></DL
></DIV
>
       </P
></DD
><DT
>GEQO</DT
><DD
><P
>	Sets the threshold for using the genetic optimizer algorithm.

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ON</DT
><DD
><P
>	    enables the genetic optimizer algorithm
	    for statements with 11 or more tables.
	    (This is also the DEFAULT setting.)
	   </P
></DD
><DT
>ON=<TT
CLASS="REPLACEABLE"
><I
>#</I
></TT
></DT
><DD
><P
>	    Takes an integer argument to enable the genetic optimizer algorithm
	    for statements with <TT
CLASS="REPLACEABLE"
><I
>#</I
></TT
>
	    or more tables in the query.
	   </P
></DD
><DT
>OFF</DT
><DD
><P
>	    disables the genetic optimizer algorithm.
	   </P
></DD
></DL
></DIV
>
       </P
><P
>	See the chapter on GEQO in the Programmer's Guide
	for more information about query optimization.
       </P
><P
>        If the PGGEQO environment variable is set in the frontend
	environment of a client based on libpq, libpq will automatically
	set GEQO to the value of PGGEQO during connection startup.
       </P
></DD
><DT
>KSQO</DT
><DD
><P
>	<I
CLASS="FIRSTTERM"
>Key Set Query Optimizer</I
> causes the query
	planner to convert queries whose WHERE clause contains many
	OR'ed AND clauses (such as "WHERE (a=1 AND b=2) OR (a=2 AND b=3) ...")
	into a UNION query.  This method can be faster than the default
	implementation, but it doesn't necessarily give exactly the same
	results, since UNION implicitly adds a SELECT DISTINCT clause to
	eliminate identical output rows.  KSQO is commonly used when
	working with products like <SPAN
CLASS="PRODUCTNAME"
>MicroSoft
	Access</SPAN
>, which tend to generate queries of this form.

	<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ON</DT
><DD
><P
>	    enables this optimization.
	   </P
></DD
><DT
>OFF</DT
><DD
><P
>	    disables this optimization (default setting).
	   </P
></DD
><DT
>DEFAULT</DT
><DD
><P
>	    Equivalent to specifying <B
CLASS="COMMAND"
>SET KSQO='OFF'</B
>.
	   </P
></DD
></DL
></DIV
>
       </P
><P
>        The KSQO algorithm used to be absolutely essential for queries
	with many OR'ed AND clauses, but in Postgres 7.0 and later
	the standard planner handles these queries fairly successfully.
       </P
></DD
></DL
></DIV
>
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-SET-2"
></A
><H3
>    Outputs
   </H3
><P
>    
    <P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="COMPUTEROUTPUT"
>SET VARIABLE
       </TT
></DT
><DD
><P
>	Message returned if successfully.
       </P
></DD
><DT
><TT
CLASS="COMPUTEROUTPUT"
>WARN:  Bad value for <TT
CLASS="REPLACEABLE"
><I
>variable</I
></TT
> (<TT
CLASS="REPLACEABLE"
><I
>value</I
></TT
>)
       </TT
></DT
><DD
><P
>	If the command fails to set the specified variable.
       </P
></DD
></DL
></DIV
>
   </P
></DIV
></DIV
><DIV
CLASS="REFSECT1"
><A
NAME="R1-SQL-SET-1"
></A
><H2
>   Description
  </H2
><P
>   <B
CLASS="COMMAND"
>SET</B
> will modify configuration parameters for variable during
   a session.
  </P
><P
>   Current values can be obtained using <B
CLASS="COMMAND"
>SHOW</B
>, and values
   can be restored to the defaults using <B
CLASS="COMMAND"
>RESET</B
>.
   Parameters and values are case-insensitive. Note that the value
   field is always specified as a string, so is enclosed in
   single-quotes.
  </P
><P
>   <B
CLASS="COMMAND"
>SET TIME ZONE</B
> changes the session's
   default time zone offset.
   An SQL-session always begins with an initial default time zone
   offset.
   The <B
CLASS="COMMAND"
>SET TIME ZONE</B
> statement is used to change the default
   time zone offset for the current SQL session.
  </P
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-SET-3"
></A
><H3
>    Notes
   </H3
><P
>    The <B
CLASS="COMMAND"
>SET <TT
CLASS="REPLACEABLE"
><I
>variable</I
></TT
></B
>
    statement is a <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> language extension.
   </P
><P
>    Refer to <B
CLASS="COMMAND"
>SHOW</B
> and <B
CLASS="COMMAND"
>RESET</B
> to 
    display or reset the current values.
   </P
></DIV
></DIV
><DIV
CLASS="REFSECT1"
><A
NAME="R1-SQL-SET-2"
></A
><H2
>   Usage
  </H2
><P
>   Set the style of date to ISO:
   
   <PRE
CLASS="PROGRAMLISTING"
>SET DATESTYLE TO 'ISO';
   </PRE
>

   Enable GEQO for queries with 4 or more tables:

   <PRE
CLASS="PROGRAMLISTING"
> 
SET GEQO ON=4;
   </PRE
>

   Set GEQO to default:

   <PRE
CLASS="PROGRAMLISTING"
> 
SET GEQO = DEFAULT;
   </PRE
>

   Set the timezone for Berkeley, California:

   <PRE
CLASS="PROGRAMLISTING"
> 
SET TIME ZONE 'PST8PDT';
SELECT CURRENT_TIMESTAMP AS today;
   
   today
   ----------------------
   1998-03-31 07:41:21-08
   </PRE
>

   Set the timezone for Italy:

   <PRE
CLASS="PROGRAMLISTING"
> 
SET TIME ZONE 'Europe/Rome';
SELECT CURRENT_TIMESTAMP AS today;
   
   today
   ----------------------
   1998-03-31 17:41:31+02
   </PRE
>
  </P
></DIV
><DIV
CLASS="REFSECT1"
><A
NAME="R1-SQL-SET-3"
></A
><H2
>   Compatibility
  </H2
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-SET-4"
></A
><H3
>    SQL92
   </H3
><P
>    There is no general
    <B
CLASS="COMMAND"
>SET <TT
CLASS="REPLACEABLE"
><I
>variable</I
></TT
></B
>
    in <SPAN
CLASS="ACRONYM"
>SQL92</SPAN
> (with the exception of
    <B
CLASS="COMMAND"
>SET TRANSACTION ISOLATION LEVEL</B
>).

    The <SPAN
CLASS="ACRONYM"
>SQL92</SPAN
> syntax for <B
CLASS="COMMAND"
>SET TIME ZONE</B
>
    is slightly different,
    allowing only a single integer value for time zone specification:
    
    <PRE
CLASS="SYNOPSIS"
>SET TIME ZONE { interval_value_expression | LOCAL }
    </PRE
>
   </P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="sql-selectinto.htm"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="user.htm"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="sql-show.htm"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>SELECT INTO</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="sql-commands.htm"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>SHOW</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>