<HTML
><HEAD
><TITLE
>   CREATE SEQUENCE
  </TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.54"><LINK
REL="HOME"
TITLE="Manual del usuario de PostgreSQL"
HREF="user.htm"><LINK
REL="UP"
TITLE="Instrucciones SQL"
HREF="sql-commands.htm"><LINK
REL="PREVIOUS"
TITLE="   CREATE RULE
  "
HREF="sql-createrule.htm"><LINK
REL="NEXT"
TITLE="   CREATE TABLE
  "
HREF="sql-createtable.htm"></HEAD
><BODY
CLASS="REFENTRY"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>Manual del usuario de PostgreSQL</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="sql-createrule.htm"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="sql-createtable.htm"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><H1
><A
NAME="SQL-CREATESEQUENCE"
>CREATE SEQUENCE</A
></H1
><DIV
CLASS="REFNAMEDIV"
><A
NAME="AEN5939"
></A
><H2
>Name</H2
>   CREATE SEQUENCE
  &nbsp;--&nbsp;   Creates a new sequence number generator
  </DIV
><DIV
CLASS="REFSYNOPSISDIV"
><A
NAME="AEN5942"
></A
><H2
>Synopsis</H2
><PRE
CLASS="SYNOPSIS"
>CREATE SEQUENCE <TT
CLASS="REPLACEABLE"
><I
>seqname</I
></TT
> [ INCREMENT <TT
CLASS="REPLACEABLE"
><I
>increment</I
></TT
> ]
    [ MINVALUE <TT
CLASS="REPLACEABLE"
><I
>minvalue</I
></TT
> ] [ MAXVALUE <TT
CLASS="REPLACEABLE"
><I
>maxvalue</I
></TT
> ]
    [ START <TT
CLASS="REPLACEABLE"
><I
>start</I
></TT
> ] [ CACHE <TT
CLASS="REPLACEABLE"
><I
>cache</I
></TT
> ] [ CYCLE ]
  </PRE
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-CREATESEQUENCE-1"
></A
><H3
>    Inputs
   </H3
><P
>&#13;    <P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="REPLACEABLE"
><I
>seqname</I
></TT
></DT
><DD
><P
>	The name of a sequence to be created.
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>increment</I
></TT
></DT
><DD
><P
>	The
	<TT
CLASS="OPTION"
>INCREMENT <TT
CLASS="REPLACEABLE"
><I
>increment</I
></TT
></TT
>
	clause is optional. A positive value will make an
	ascending sequence, a negative one a descending sequence.
	The default value is one (1).
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>minvalue</I
></TT
></DT
><DD
><P
>	The optional clause <TT
CLASS="OPTION"
>MINVALUE
	 <TT
CLASS="REPLACEABLE"
><I
>minvalue</I
></TT
></TT
>
	determines the minimum value
	a sequence can generate. The defaults are 1 and -2147483647 for
	ascending and descending sequences, respectively.
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>maxvalue</I
></TT
></DT
><DD
><P
>	Use the optional clause <TT
CLASS="OPTION"
>MAXVALUE
	 <TT
CLASS="REPLACEABLE"
><I
>maxvalue</I
></TT
></TT
> to
	determine the maximum
	value for the sequence. The defaults are 2147483647 and -1 for
	ascending and descending sequences, respectively.
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>start</I
></TT
></DT
><DD
><P
>	The optional <TT
CLASS="OPTION"
>START
	 <TT
CLASS="REPLACEABLE"
><I
>start</I
></TT
>
	 clause</TT
> enables the sequence to begin anywhere.
	The default starting value is
	<TT
CLASS="REPLACEABLE"
><I
>minvalue</I
></TT
>
	for ascending sequences and
	<TT
CLASS="REPLACEABLE"
><I
>maxvalue</I
></TT
>
	for descending ones.
       </P
></DD
><DT
><TT
CLASS="REPLACEABLE"
><I
>cache</I
></TT
></DT
><DD
><P
>	The <TT
CLASS="OPTION"
>CACHE <TT
CLASS="REPLACEABLE"
><I
>cache</I
></TT
></TT
> option
	enables sequence numbers to be preallocated
	and stored in memory for faster access. The  minimum
	value is 1 (only one value can be generated at a time, i.e. no cache)
	and this is also the default.
       </P
></DD
><DT
>CYCLE</DT
><DD
><P
>	The optional CYCLE keyword may be used to enable the sequence
	to continue when the
	<TT
CLASS="REPLACEABLE"
><I
>maxvalue</I
></TT
> or
	<TT
CLASS="REPLACEABLE"
><I
>minvalue</I
></TT
> has been
	reached by
	an ascending or descending sequence respectively. If the limit is
	reached, the next number generated will be whatever the
	<TT
CLASS="REPLACEABLE"
><I
>minvalue</I
></TT
> or
	<TT
CLASS="REPLACEABLE"
><I
>maxvalue</I
></TT
> is,
	as appropriate.
       </P
></DD
></DL
></DIV
>
   </P
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-CREATESEQUENCE-2"
></A
><H3
>    Outputs
   </H3
><P
>&#13;    <P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><TT
CLASS="COMPUTEROUTPUT"
>CREATE
       </TT
></DT
><DD
><P
>	Message returned if the command is successful.
       </P
></DD
><DT
><TT
CLASS="COMPUTEROUTPUT"
>ERROR:  Relation '<TT
CLASS="REPLACEABLE"
><I
>seqname</I
></TT
>' already exists
       </TT
></DT
><DD
><P
>	If the sequence specified already exists.
       </P
></DD
><DT
><TT
CLASS="COMPUTEROUTPUT"
>ERROR:  DefineSequence: MINVALUE (<TT
CLASS="REPLACEABLE"
><I
>start</I
></TT
>) can't be &#62;= MAXVALUE (<TT
CLASS="REPLACEABLE"
><I
>max</I
></TT
>)
       </TT
></DT
><DD
><P
>	If the specified starting value is out of range.
       </P
></DD
><DT
><TT
CLASS="COMPUTEROUTPUT"
>ERROR:  DefineSequence: START value (<TT
CLASS="REPLACEABLE"
><I
>start</I
></TT
>) can't be &#60; MINVALUE (<TT
CLASS="REPLACEABLE"
><I
>min</I
></TT
>)
       </TT
></DT
><DD
><P
>	If the specified starting value is out of range.
       </P
></DD
><DT
><TT
CLASS="COMPUTEROUTPUT"
>ERROR:  DefineSequence: MINVALUE (<TT
CLASS="REPLACEABLE"
><I
>min</I
></TT
>) can't be &#62;= MAXVALUE (<TT
CLASS="REPLACEABLE"
><I
>max</I
></TT
>)
       </TT
></DT
><DD
><P
>	If the minimum and maximum values are inconsistant.
       </P
></DD
></DL
></DIV
>
   </P
></DIV
></DIV
><DIV
CLASS="REFSECT1"
><A
NAME="R1-SQL-CREATESEQUENCE-1"
></A
><H2
>   Description
  </H2
><P
>   <B
CLASS="COMMAND"
>CREATE SEQUENCE</B
> will enter a new sequence number generator
   into the current data base. This involves creating and initialising a
   new single-row
   table with the name <TT
CLASS="REPLACEABLE"
><I
>seqname</I
></TT
>.
   The generator will be "owned" by the user issuing the command.
  </P
><P
>   After a sequence is created, you may use the function
   <TT
CLASS="FUNCTION"
>nextval(<TT
CLASS="REPLACEABLE"
><I
>seqname</I
></TT
>)</TT
>
   to get a new number from the sequence.
   The function
   <TT
CLASS="FUNCTION"
>currval('<TT
CLASS="REPLACEABLE"
><I
>seqname</I
></TT
>')</TT
>
   may be used to determine the number returned by the last call to
   <TT
CLASS="FUNCTION"
>nextval(<TT
CLASS="REPLACEABLE"
><I
>seqname</I
></TT
>)</TT
>
   for the specified sequence in the current session.
   The function
   <TT
CLASS="FUNCTION"
>setval('<TT
CLASS="REPLACEABLE"
><I
>seqname</I
></TT
>',
    <TT
CLASS="REPLACEABLE"
><I
>newvalue</I
></TT
>)</TT
>
   may be used to set the current value of the specified sequence.
   The next call to 
   <TT
CLASS="FUNCTION"
>nextval(<TT
CLASS="REPLACEABLE"
><I
>seqname</I
></TT
>)</TT
>
   will return the given value plus the sequence increment.
  </P
><P
>   Use a query like

   <PRE
CLASS="PROGRAMLISTING"
>SELECT * FROM sequence_name;
   </PRE
>

   to get the parameters of a sequence.

   Aside from fetching the original
   parameters, you can use

   <PRE
CLASS="PROGRAMLISTING"
>SELECT last_value FROM sequence_name;
   </PRE
>

   to obtain the last value allocated by any backend.
   parameters, you can use
  </P
><P
>   Low-level locking is used to enable multiple simultaneous
   calls to a generator.
  </P
><DIV
CLASS="CAUTION"
><P
></P
><TABLE
CLASS="CAUTION"
BORDER="1"
WIDTH="100%"
><TR
><TD
ALIGN="CENTER"
><B
>Caution</B
></TD
></TR
><TR
><TD
ALIGN="LEFT"
><P
>    Unexpected results may be obtained if a cache setting greater than one
    is used for a sequence object that will be used concurrently by multiple
    backends.  Each backend will allocate "cache" successive sequence values
    during one access to the sequence object and increase the sequence
    object's last_value accordingly.  Then, the next cache-1 uses of nextval
    within that backend simply return the preallocated values without touching
    the shared object.  So, numbers allocated but not used in the current session
    will be lost.  Furthermore, although multiple backends are guaranteed to
    allocate distinct sequence values, the values may be generated out of
    sequence when all the backends are considered.  (For example, with a cache
    setting of 10, backend A might reserve values 1..10 and return nextval=1, 
    then
    backend B might reserve values 11..20 and return nextval=11 before backend
    A has generated nextval=2.)  Thus, with a cache setting of one it is safe
    to assume that nextval values are generated sequentially; with a cache
    setting greater than one you should only assume that the nextval values
    are all distinct, not that they are generated purely sequentially.
    Also, last_value will reflect the latest value reserved by any backend,
    whether or not it has yet been returned by nextval.
   </P
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-CREATESEQUENCE-3"
></A
><H3
>    Notes
   </H3
><P
>    Refer to the <B
CLASS="COMMAND"
>DROP SEQUENCE</B
> statement to remove a sequence.
   </P
><P
>    Each backend uses its own cache to store allocated numbers.
    Numbers that are cached but not used in the current session will be
    lost, resulting in "holes" in the sequence.
   </P
></DIV
></DIV
><DIV
CLASS="REFSECT1"
><A
NAME="R1-SQL-CREATESEQUENCE-2"
></A
><H2
>   Usage
  </H2
><P
>   Create an ascending sequence called <TT
CLASS="LITERAL"
>serial</TT
>, starting at 101:
  </P
><PRE
CLASS="PROGRAMLISTING"
>CREATE SEQUENCE serial START 101;
  </PRE
><P
>   Select the next number from this sequence
   <PRE
CLASS="PROGRAMLISTING"
>SELECT NEXTVAL ('serial');
    
nextval
-------
    114
   </PRE
>
  </P
><P
>   Use this sequence in an INSERT:
   <PRE
CLASS="PROGRAMLISTING"
>INSERT INTO distributors VALUES (NEXTVAL('serial'),'nothing');
   </PRE
>
  </P
><P
>   Set the sequence value after a COPY FROM:
   <PRE
CLASS="PROGRAMLISTING"
>CREATE FUNCTION distributors_id_max() RETURNS INT4
    AS 'SELECT max(id) FROM distributors' 
    LANGUAGE 'sql';
BEGIN;
    COPY distributors FROM 'input_file';
    SELECT setval('serial', distributors_id_max());
END;
   </PRE
>
  </P
></DIV
><DIV
CLASS="REFSECT1"
><A
NAME="R1-SQL-CREATESEQUENCE-3"
></A
><H2
>   Compatibility
  </H2
><DIV
CLASS="REFSECT2"
><A
NAME="R2-SQL-CREATESEQUENCE-4"
></A
><H3
>    SQL92
   </H3
><P
>    <B
CLASS="COMMAND"
>CREATE SEQUENCE</B
> is a <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
>
    language extension.
    There is no <B
CLASS="COMMAND"
>CREATE SEQUENCE</B
> statement
    in <SPAN
CLASS="ACRONYM"
>SQL92</SPAN
>.
   </P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="sql-createrule.htm"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="user.htm"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="sql-createtable.htm"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>CREATE RULE</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="sql-commands.htm"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>CREATE TABLE</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>