<HTML
><HEAD
><TITLE
>Arquitectura</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.54"><LINK
REL="HOME"
TITLE="PostgreSQL Tutorial"
HREF="tutorial.htm"><LINK
REL="PREVIOUS"
TITLE="El Lenguaje SQL "
HREF="sql-language.htm"><LINK
REL="NEXT"
TITLE="Empezando"
HREF="start.htm"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>PostgreSQL Tutorial</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="sql-language.htm"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="start.htm"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="ARCH"
>Chapter 3. Arquitectura</A
></H1
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
><A
NAME="AEN1071"
><SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> Conceptos de arquitectura</A
></H1
><P
>     Antes de comenzar, debería comprender las bases de la arquitectura del sistema 
     <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
>  .   Entendiendo como las partes de <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
>
interactuan le hará el siguiente capítulo mucho más sencillo.
     En la jerga de bases de datos,  <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> usa un modelo cliente/sevidor conocido 
como "proceso por usuario". Una sesión  <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> consiste en los siguientes procesos
 cooperativos de Unix (programas): </P
><P
></P
><UL
><LI
><P
>      	Un proceso demonio supervisor (<SPAN
CLASS="APPLICATION"
>postmaster</SPAN
>),</P
></LI
><LI
><P
>      	la aplicación sobre la que trabaja el usuario (frontend)  (e.g., el programa<SPAN
CLASS="APPLICATION"
>psql</SPAN
> 
), y</P
></LI
><LI
><P
>      	uno o más servidores de bases dedatos en segundo plano  (el mismo proceso  <SPAN
CLASS="APPLICATION"
>postgres</SPAN
>).</P
></LI
></UL
><P
>     Un único <SPAN
CLASS="APPLICATION"
>postmaster</SPAN
>  controla una colección de bases de datos dadas en un único host.   Such  a collection of
     Debido a esto una colección de bases de datos se suele llamar una instalación o un sitio.Las aplicaciones de frontend que quieren 
	acceder a una determinada base de datos dentro de una instalación hacen llamadas a la libreria
     La libreria envía peticiones de usuario a través de la red al
     <SPAN
CLASS="APPLICATION"
>postmaster</SPAN
> (<A
HREF="arch.htm#ARCH-CLIENTSERVER"
><I
><I
>Como se establece una conexión</I
><I
></I
></I
></A
>),
     el cual en respuesta inicia un nevo proceso en el servidor (backend) 
     
<DIV
CLASS="FIGURE"
><A
NAME="ARCH-CLIENTSERVER"
></A
><P
><B
>Figure 3-1. Como se establece una conexión </B
></P
><P
><IMG
SRC="clientserver.gif"
ALIGN="CENTER"></P
></DIV
>

     y conecta el proceso de frontend al nuevo servidor. A partir de este punto, el proceso de frontend y el
	 servidor en backend se comunican sin la intervención del   
     <SPAN
CLASS="APPLICATION"
>postmaster</SPAN
>. Aunque, el  <SPAN
CLASS="APPLICATION"
>postmaster</SPAN
> siempre se está
	 ejecutando, esperando peticiones, tanto los procesos de frontend como los de backend vienen y se van. </P
><P
>  La libreria  <TT
CLASS="FILENAME"
>libpq</TT
> permite a un único proceso en frontend realizar multiples 
	conexiones a procesos en backend. Aunque, la aplicación frontend todavía es un proceso en un único thread.
	 Conexiones multithread entre el frontend y el backend no están soportadas de momento en 
	<TT
CLASS="FILENAME"
>libpq</TT
>.
     Una implicación de esta arquitectura es que el   
     <SPAN
CLASS="APPLICATION"
>postmaster</SPAN
> y el proceso backend siempre se ejecutan en la misma máquina 
	(el servidor de base de datos), mientras que la aplicación en frontend puede ejecutarse desde cualquier sitio.
	 Debe tener esto en mente, porque los archivos que pueden ser accedidos en la máquina del cliente pueden no 
	ser accesibles (o sólo pueden ser accedidos usando un nombre de archivo diferente) el máquina del servidor de 
	base de datos. </P
><P
>     Debe notar que los servicios  <SPAN
CLASS="APPLICATION"
>postmaster</SPAN
> y postgres se ejecutan con el 
	identificador de usuario del "superusuario" <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
>
     Note que el superusuario  <SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
> no necesita ser un usuario especial 
	(ej. un usuario llamado "postgres"). De todas formas, el superusuario<SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
>
	definitivamente no tiene que ser el superusuario de Unix  ("root")! En cualquier caso, todos los archivos
	 relacionados con la base de datos deben pertenecer a este superusuario Postgres. 
<SPAN
CLASS="PRODUCTNAME"
>Postgres</SPAN
>.</P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="sql-language.htm"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="tutorial.htm"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="start.htm"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>El Lenguaje <SPAN
CLASS="ACRONYM"
>SQL</SPAN
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Empezando</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>