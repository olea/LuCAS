<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- <!DOCTYPE article
  PUBLIC "-//OASIS//DocBook XML DTD V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd">
-->
<article lang="es" id="imagen-y-color-en-el-www">
  <articleinfo>
    <title>Imágenes y color en el WWW</title>
    <date>6 de Febrero de 2002</date>
    <author>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </author>
    <author>
      <firstname>Rodrigo</firstname>
      <surname>García</surname>
    </author>
    <author>
      <firstname>Victor</firstname>
      <surname>García</surname>
    </author>
    <abstract>
      <para>
	En este artículo se presenta todo el potencial que ofrece el
	lenguaje HTML para dar color y usar imágenes en una página
	web. Aprenderemos cómo especificar un determinado color de
	entre 16 millones posibles y ponerlo como fondo de la página,
	o como color del texto. También veremos como manipular
	imágenes cambiando su tamaño o poniendo texto a su
	alrededor. Después se verá como controlar
	los bordes y tamaño de las imágenes. Veremos como poner un
	texto alternativo a la imagen, crear imágenes con varias zonas
	activas (imágenes mapa) y cómo emplear GIFs animados.
	Al terminar seremos unos expertos en el arte de las
	imágenes y el color en el WWW.
      </para>
    </abstract>
    <editor>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </editor>
    <releaseinfo>Versión 1.0</releaseinfo>
    <orgname>Conquista la Web</orgname>
    <legalnotice>
      <para>
	Copyright Jorge Ferrer, Víctor García y Rodrigo García. Se
	otorga permiso para copiar, 
	distribuir y/o modificar este documento bajo los términos de la
	Licencia de Documentación Libre GNU, Versión 1.1 o cualquier otra
	versión posterior publicada por la Free Software Foundation. Puede
	consultar una copia de la licencia en:
	http://www.gnu.org/copyleft/fdl.html
      </para>
    </legalnotice>
  </articleinfo>
  <para>
    Hasta ahora hemos aprendido a crear páginas WEB compuestas por
    texto, encabezados, 
    diferentes estilos, e incluso a enlazar varias páginas entre
    sí. También hemos aprendido 
    a insertar imágenes de una manera sencilla en una página. Sin
    embargo todavía podemos 
    aprender mucho más aprovechar todas las capacidades que nos
    ofrece el lenguaje HTML para 
    convertir nuestra página en una obra de arte gráfico.
  </para>
  <para>
    El éxito o fracaso de un Web depende en muchas ocasiones del aspecto gráfico que ofrezca
    a los visitantes. Un buen ejemplo de ello lo observamos en la página de Disney
    <figure label="5.1">
      <title>
	Aprovechando las capacidades del HTML para incluir colores e imágenes en un Web podemos conseguir 			resultados tan atractivos como el que observamos en el web de Disney.
      </title>
      <graphic fileref="img/fig5-01.png"/>
    </figure>
    , que es una de las más visitadas del WWW.
  </para>
  <para>
    El diseño con programas de creación de imágenes y de retoque fotográfico está fuertemente ligado
    a la creación de páginas Web. Más aún cuando nuestro objetivo será, no sólo crear una página
    atractiva, sino de calidad técnica y que cargue en poco tiempo
    para no provocar esperas excesivas a
    a los visitantes. La manera de conseguir este objetivo será un buen conocimiento del lenguaje HTML
    y de todas sus posibilidades, y por ello dedicaremos un buen número de páginas a este tema,
    empezando por los siguientes temas:
  </para>
  <itemizedlist>
    <listitem>
      <para>
	Imágenes y colores de fondo: Extensiones de la etiqueta <sgmltag>&lt;BODY&gt;</sgmltag>
      </para>
    </listitem>
    <listitem>
      <para>
	Imágenes inline: La etiqueta <sgmltag>&lt;IMG&gt;</sgmltag>
      </para>
    </listitem>
    <listitem>
      <para>
	Alineamiento de imágenes.
      </para>
    </listitem>
    <listitem>
      <para>
	Texto que envuelve a las imágenes
      </para>
    </listitem>
    <listitem>
      <para>
	Cómo controlar el tamaño de  las imágenes
      </para>
    </listitem>
  </itemizedlist>


  <sect1>
    <title>
      Usando color en el WWW.
    </title>
    <para>
      Existen diversas etiquetas y atributos en HTML que permiten cambiar el color de los elementos de una página o incluso 	el color del fondo de esta. Pero antes de ver estas etiquetas es necesario explicar algunas cosas sobre como usar el 	color en las páginas Web.		
    </para>
    <para>
      En el tercer capítulo ya adelantamos, cuando aprendimos a dar color al texto, que existían dos métodos para indicar 	el color, estos métodos son:
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  Usar un número hexadecimal que identifica a ese color, por ejemplo #FF0000 ser refiere al color rojo.
	</para>
      </listitem>
      <listitem>
	<para>
	  <emphasis>Usar uno de los nombres</emphasis> (en inglés) <emphasis>predeterminados</emphasis> por los 			navegadores para los colores más usados, por ejemplo para poner, al igual que antes, el color rojo usaríamos: 		<emphasis>'red'</emphasis>.
	</para>
      </listitem>
    </itemizedlist>
    <para>
      Por supuesto para el programador es mucho más sencillo aprenderse los nombres de los colores en inglés que no un 	código hexadecimal que nos resulta mucho más extraño. Sin embargo usar nombre de colores tiene algunas limitaciones. 	Por un lado sólo abarca unos pocos colores y por otro tiene el inconveniente de que no todos los navegadores son 	capaces de entenderlos, mientras que sí entienden el código hexadecimal. Aun así podemos encontrar 16 colores que son 	entendidos por gran parte de los navegadores y por supuesto también <productname class="trade">Netscape 	Navigator</productname> y <productname class="trade">Explorer</productname> que son los más usados.
    </para>
    <para>
      En la tabla 5.1 podemos encontrar estos dieciséis colores junto con su nombre en inglés y el código hexadecimal 	asociado.
    </para>
    <figure label="tabla 5.1">
      <title>Colores usados más frecuentemente</title>
      <graphic fileref="img/tabla1.png"/>
    </figure>
    <para>
      Aunque los nombres asignados a estos 16 colores son ampliamente
      aceptados en realidad existen muchos más,  pero su 	uso no es
      recomendado ya que sólo Netscape los soporta. Entre estos otros
      colores están <emphasis>indigo</emphasis>,
      <emphasis>ivory</emphasis>, <emphasis>khaki</emphasis> y muchos
      más.
      <!-- FIXME
      en el disquete podrá encontrar una tabla con 	todos
      los colores soportados por Netscape en el archivo
    <filename>color.htm</filename>. -->

    </para>
    <para>
      El segundo método, basado en usar el código hexadecimal asociado al color no es tan complicado como puede parecer en 	un principio. Y tiene dos grandes ventajas sobre usar nombres:
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  Lo entienden <emphasis>todos</emphasis> los navegadores.
	</para>
      </listitem>
      <listitem>
	<para>
	  Puedes indicar más de <emphasis>16 millones</emphasis> de colores.
	</para>
      </listitem>
    </itemizedlist>
    <para>
      Para construir el código de un color se usa un método que podemos comparar con el de un pintor con una paleta de tan 	sólo tiene 3 colores y los mezcla para conseguir el resto de los que necesita para pintar un cuadro. En el código 	usado por el lenguaje HTML estos tres colores son el rojo, el verde y el azul, es decir, se usa la paleta RGB (Red, 	Green, Blue). Para crear todos los colores se usan mezclas de estos en distintas cantidades. Estas cantidades se 	indican con un número del 0 al 255, correspondiendo el 255 a la máxima cantidad de color posible. Si ponemos cero de 	todos los colores obtendremos el color negro, si ponemos 255 de todos obtendremos el blanco. Para crear amarillo, por 	ejemplo, podemos mezclar 255 de rojo, 255 de verde y nada de azul; y si en vez de poner 255 de rojo y verde ponemos 	230 de cada obtendremos un amarillo más oscuro.
    </para>
    <para>
      Sin embargo todavía queda una complicación y es que el número tendremos que ponerlo en hexadecimal.
    </para>
    <note>
    <para>
	Un código hexadecimal está basada en una numeración que está
	compuesta por 16 símbolos en lugar de 10 como el sistema
	decimal. Estos 16 símbolos son 1, 2, 3, 4, 5, 6, 7, 8, 9,  A
	(10), B (11), C (12), D (13), E (14) y F (15). Por
	ejemplo, el siguiente número, el 16, se escribe en
	hexadecimal: '10', mientras que el número hexadecimal '1F'se
	corresponde con el 31 decimal. 
    </para>
    </note>
    <para>
      Usando el código hexadecimal podemos indicar la cantidad de
    color del 0 al 255 con sólo dos dígitos (del 0 al FF), y una vez
    que nos hemos acostumbrado no resulta tan complicado. 
    </para>
    <note>
    <para>
      Afortunadamente existen editores HTML que ponen automáticamente el número hexadecimal de los colores. También 	existen programas independientes como <productname class="trade">HTMLib Colour Wizard</productname> que permite 	indicar color en decimal o incluso seleccionarlo de una paleta y él te genera el código HTML.
    </para>
    </note>
    <para>
      Para proseguir vamos a fijarnos en los códigos que adelantábamos en la tabla 5.1, como vemos todos empiezan por el 	símbolo sostenido o almohadilla: '#'. Posteriormente siguen 6 números (siempre deben ser seis) en hexadecimal. Los 	dos primeros corresponden a la cantidad de rojo (RR), los siguientes a la cantidad de verde (GG) y los siguientes a 	la cantidad de azul (BB). Es decir la estructura general es:
    </para>
    <programlisting>
      #RRGGBB
    </programlisting>
    <para>
      De ahora en adelante usaremos la cadena <command>'#RRGGBB'</command> para indicar un código de color en hexadecimal y 	debemos tener en cuenta que puede ser sustituido también por un nombre de color.
    </para>
    <para>
      Examinemos alguno de los códigos anteriores, por ejemplo el usado para obtener verde azulado (Teal). Este código 	indica que el color no tiene nada (0) de rojo, 128 unidades (80 en hexadecimal) de verde y otras tantas de azul. Con 	lo que obtenemos el tono deseado.
    </para>
  </sect1>
  <sect1>
    <title>
      Cómo cambiar la apariencia de una página.
    </title>
    <para>
      Una vez conocemos a la perfección la manera de insertar colores ya podemos empezar a aprovechar las posibilidades que 	nos ofrece el lenguaje HTML para controlar la apariencia de una página Web. Como primera aplicación práctica 		aprenderemos a cambiar el color del fondo, luego cambiaremos el color del texto y por último crearemos el efecto más 	impactante de todos, pondremos un imagen de fondo.
    </para>
    <sect2>
      <title>
	Color de fondo.
      </title>
      <para>
	Para cambiar el color de fondo de nuestras páginas usaremos un
	nuevo atributo de la, ya conocida, etiqueta BODY. 
      </para>
      <para>
	El nuevo atributo se llama <emphasis>BGCOLOR</emphasis> y debe
	ser añadido a la etiqueta BODY existente:
      </para>
      <programlisting>
	<sgmltag>
	  &lt;body bgcolor="#RRGGBB"&gt;
	</sgmltag>
      </programlisting>
      <para>
	Por ejemplo para crear una página con el fondo de color azul podemos usar:
      </para>
      <programlisting>
	<sgmltag>
	  &lt;body bgcolor="#0000FF"&gt;
	</sgmltag>
      </programlisting>
      <para>
	O bien:
      </para>
      <programlisting>
	<sgmltag>
	  &lt;body bgcolor="Blue"&gt;
	</sgmltag>
      </programlisting>
      <para>
	El resultado es en ambos casos el que podemos apreciar en la figura 5.2
      </para>
      <figure label="5.2">
	<title>
	  El lenguaje HTML nos permite cambiar el color de fondo de nuestras páginas. Podemos indicar el color por su 		nombre en inglés o con su número RGB.
	</title>
	<graphic fileref="img/fig5-02.png"/>
      </figure>
      <para>
	NOTA: Algunos navegadores, como <productname class="trade">Explorer</productname>, permiten poner el código en 	decimal. Para ello hay que omitir el símbolo # y usar	3 dígitos decimales (números del 0 al 255) para especificar 	la cantidad de cada color en el mismo orden (rojo, verde y azul). Sin embargo no recomendamos el uso de esta 	característica porque de esta forma provocaremos que sólo los visitantes con ese navegador puedan apreciar el 	colorido de nuestras páginas y realmente el esfuerzo de poner el código en hexadecimal no es tan grande.
      </para>
      <para>
	Es importante resaltar que si no usamos el atributo BGCOLOR el color de fondo de nuestras páginas será el que cada 	usuario haya especificado en su navegador. En algunos navegadores el color por defecto es el blanco, mientras que en 	otros es el gris plateado habitual en <productname class="trade">Windows</productname>.
      </para>
    </sect2>
    <sect2>
      <title>
	Color del texto y Links.
      </title>
      <para>
	Igual que se puede cambiar el color del fondo de la página se puede cambiar el color de su texto. Para ello se usan cuatro nuevos atributos de la etiqueta <command>BODY</command>. Lo primero que deberemos hacer es pensar en el color y el código de este, y una vez lo tengamos cambiaremos el color del texto usando:
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    TEXT
	  </term>
	  <listitem>
	    <para>
	      Sirve para controlar el color que tendrá el texto normal de la página, es decir todo aquel que no sea un enlace hipertexto. Su valor por defecto es negro.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    LINK
	  </term>
	  <listitem>
	    <para>
	      Permite cambiar el color con el que son mostrados los enlaces hipertexto o links de la página. Su valor por defecto es azul.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    VLINK
	  </term>
	  <listitem>
	    <para>
	      Permite cambiar el color por defecto de los links visitados (Visited LINK). Los links visitados de una página son aquellos que ya hemos seleccionado alguna vez. El valor por defecto de estos enlaces es morado.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    ALINK
	  </term>
	  <listitem>
	    <para>
	      Sirve para controlar el color de los enlaces activos (Active LINK). El significado de enlace activo varía en función del navegador. Para <productname class="trade">Netscape</productname> un enlace activo es aquel sobre el que se ha pulsado con el ratón pero todavía no se ha soltado. El color por defecto de los links activos es el rojo.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para>
	Vistas todas las etiquetas pasemos a crear un ejemplo, para él seleccionaremos un color de pantalla negro, texto blanco, enlaces verdes, enlaces visitados verde azulado y enlaces activos rojos. El código usado es por tanto:
      </para>
      <programlisting>
	<sgmltag>&lt;body bgcolor="#000000" text="#FFFFFF"
	link="#00FF00" vlink="#008080" alink="#FF0000"&gt;</sgmltag> 
      </programlisting>
      <para>
	En la figura 5.3 podemos ver el resultado de este código.
      </para>
      <figure label="5.3">
	<title>
	  También podemos cambiar el color del texto, de los enlaces, de los enlaces visitados y de los enlaces activos a nuestro gusto, igual que hacíamos con el fondo.
	</title>
	<graphic fileref="img/fig5-03.png"/>
      </figure>
    </sect2>
    <sect2>
      <title>
	Imágenes de fondo:
      </title>
      <para>
	Las posibilidades que nos ofrece el lenguaje HTML para cambiar la apariencia de una página no se limitan a cambiar los colores, también se pueden poner imágenes ya sean dibujos o fotos como fondo de una página. Las imágenes deberán estar en formato GIF o JPEG al igual que las imágenes normales que aprendimos a insertar en el capítulo 2.
      </para>
      <para>
	Para incluir una imagen de fondo deberemos usar el atributo
	<sgmltag>BACKGROUND</sgmltag> de la etiqueta
	<sgmltag>BODY</sgmltag>. Como habrá podido comprobar el lector
	a estas alturas dentro de esta etiqueta se engloban todos los
	parámetros que cambian las características globales de la Web,
	es decir aquellas que afectan a toda la página. 
      </para>
      <para>
	El funcionamiento de <sgmltag>BACKGROUND</sgmltag> es idéntico al del atributo <sgmltag>SRC</sgmltag> de la etiqueta <sgmltag>IMG</sgmltag>, esto es, deberemos indicar como valor el nombre de la imagen, junto con su ruta de directorios (path) si es necesario o bien la dirección completa de Internet (URL) si no se encuentra en nuestro sitio Web. 
      </para>
      <para>
	Veamos un primer ejemplo de una página con una imagen de fondo, para ello usamos el siguiente código en el que hemos usado la imagen <filename>fondo1.jpg</filename> que se encuentra en el mismo directorio que la página donde está el código:
      </para>
      <programlisting>
	<sgmltag>&lt;body background="fondo1.jpg"&gt;</sgmltag>
      </programlisting>
      <para>
	En la figura 5.4 podemos ver el resultado en el que hemos incluido, además, un encabezado que contraste con el fondo.
      </para>
      <figure label="5.4">
	<title>
	  Para crear un mayor impacto visual podemos usar como fondo una imagen, esta imagen se replicará (es puesta en mosaico) por toda la página, luego los bordes deben coincidir.
	</title>
	<graphic fileref="img/fig5-04.png"/>
      </figure>
      <para>
	Las imágenes que insertemos como fondo de la página serán mostradas en mosaico, es decir, se replicará la imagen tanto horizontal como verticalmente hasta ocupar todo el área de la página. Por esta razón no todas las imágenes quedan bien como fondo de una página Web. De hecho se recomienda que sólo se usen dos tipos de imágenes:
      </para>
      <itemizedlist>
	<listitem>
	  <para>
	    Imágenes con pocos colores que muestran un logo sobre un relleno sólido y que interfiere poco con el contenido de la página. En la Web  de la figura 5.5 podemos ver un ejemplo de este tipo de imágenes en la que no se aprecian los bordes de la imagen al ser el fondo de esta de un solo color sólido (gris oscuro en este caso).
	  </para>
	  <figure label="5.5">
	    <title>
	      En esta ocasión la imagen de fondo es un logo sobre un fondo de color sólido (gris). Esta es una manera sencilla para que no se noten los bordes cuando el navegador la pone en mosaico.
	    </title>
	    <graphic fileref="img/fig5-05.png"/>
	  </figure>
	</listitem>
	<listitem>
	  <para>
	    Imágenes especiales cuyos bordes encajan perfectamente y parece que todo del fondo es una única imagen. La imagen de la figura 5.4 es un ejemplo de ello ya que su tamaño real es de 90x90 pixeles. En la figura 5.6 vemos esa imagen por sí sola. Es difícil apreciar que los bordes encajarán cuando se creen las réplicas, de hecho ese efecto debe ser hecho con programas especiales.
	  </para>
	  <figure label="5.6">
	    <title>
	      Esta es la imagen usada como fondo en la página de la figura 5.4. Como vemos, es de pequeño tamaño, pero al coincidir sus bordes simula una imagen que ocupa toda la pantalla.
	    </title>
	    <graphic fileref="img/fig5-06.png"/>
	  </figure>
	</listitem>
      </itemizedlist>
      <para>
	Por lo general la creación de fondos requiere además de programas especiales, bastante cuidado para asegurarnos que no sobrecarguen demasiado la página, por lo que un gran número de programadores de Webs optan por usar alguno de los fondos de los cliparts gratuitos que podemos encontrar en Internet, por ejemplo en las direcciones:
      </para>
      <itemizedlist>
	<listitem>
	  <para>
	    www.specialweb.com
	  </para>
	</listitem>
	<listitem>
	  <para>
	    www.dewa.com
	  </para>
	</listitem>
	<listitem>
	  <para>
	    www.teleportcom
	  </para>
	</listitem>
      </itemizedlist>
      <para>
	Si usamos una imagen normal como fondo de una página, los bordes no encajarán y se verán claramente los límites de la imagen. Podemos ver un ejemplo de este efecto en la figura 5.7. En esta misma figura vemos también que poner una foto de fondo suele provocar que la página esté demasiado sobrecargada, además sería difícil leer el texto que hubiese en esa imagen.
      </para>
      <figure label="5.7">
	<title>
	  También podemos poner fotos como fondo de la página, pero hay que tener cuidado porque los bordes no encajan y además la página queda demasiado sobrecargada.
	</title>
	<graphic fileref="img/fig5-07.png"/>
      </figure>
      <tip>
      <para>
	No use imágenes demasiado oscuras o con demasiados colores como fondo de la página. Si aún así debe usarla utilice los atributos <sgmltag>TEXT</sgmltag>, <sgmltag>LINK</sgmltag>, <sgmltag>VLINK</sgmltag> y <sgmltag>ALINK</sgmltag> de la etiquetas <sgmltag>BODY</sgmltag> para poner colores de texto que permitan que el texto sea legible.
      </para>
      </tip>
      <para>
	Por último, queremos terminar este apartado con un consejo. Como hemos repetido, la creación de imágenes de fondo es complicada y delicada. Si no las hemos hecho nosotros deberemos elegir bien, en general suelen ser mas apropiadas las imágenes con tonos claros sobre los que se puede leer sin problemas texto negro. Pero antes de incluir la imagen deberemos volver a hacernos unas preguntas ¿Es realmente necesaria? ¿Mejora realmente el aspecto gráfico? que con frecuencia nos hacen ver las cosas más claras. Una vez hemos probado la imagen debemos tener mucho cuidado y hacer pruebas con otras personas para comprobar que el texto de la página se lea bien. Piense que por muy espectacular que sea la página, si no conseguimos que lea lo que tenemos que decir el objetivo no estará cumplido.
      </para>
    </sect2>
  </sect1>
  <sect1>
    <title>
      Imágenes en las páginas Web.
    </title>
    <para>
      En el segundo capítulo: 'Nuestra primera página Web', aprendimos a insertar imágenes en una Web. Ahora empezaremos recordando brevemente aquel capítulo, para continuar con las distintas técnicas que nos ofrece el lenguaje HTML no sólo para incluir imágenes, sino para manejarlas, cambiar su apariencia o controlar su disposición respecto a los demás elementos de la página.
    </para>
    <sect2>
      <title>
	Insertando Imágenes.
      </title>
      <para>
	Recordemos que para insertar una imagen en una página Web era imprescindible guardarla en un archivo independiente del documento HTML. Dicho archivo podía contener la imagen en varios formatos, siendo los de mayor uso GIF y JPEG que pueden ser vistos con la práctica totalidad de navegadores. Cuando tenemos una imagen con estos formatos suelen tener la extensión <filename>.gif</filename> en el caso del formato GIF y <filename>.jpg</filename> o <filename>.jpeg</filename> en el caso de imágenes JPEG.
      </para>
      <caution>
      <para>
	Algunas aplicaciones de retoque de imágenes guardan las imágenes GIF y JPEG con la extensión en mayúsculas (.GIF, .JPEG). Esta terminación es válida, pero los nombres de los archivos que contienen imágenes, igual que los de los documentos HTML, son sensibles a mayúsculas/minúsculas y por tanto <filename>.gif</filename> no es lo mismo que <filename>.GIF</filename> con lo que al referirnos al archivo debemos escribir su nombre y terminación respetando las mayúsculas y minúsculas. Si las hemos confundido cuando probemos las páginas en el ordenador local probablemente funcionen, pero dejarán de hacerlo cuando las publiquemos, es decir, cuando las pongamos en el servidor Web.
      </para>
      </caution>
      <note>
      <para>
	El formato de una imagen es el código usado para almacenarla
	en un archivo. Los formatos simples simplemente guardan una
	tabla con el color de cada punto de pantalla (pixel) de la
	imagen. Sin embargo si guardamos una imagen grande con este
	formato ocupará demasiado. Por esta razón se crearon formatos
	más complicados basados en complejas fórmulas matemáticas, que
	consiguen reducir el tamaño de la imagen. GIF y JPEG son
	ejemplos de estos formatos. Los navegadores usan la extensión
	(los tres/cuatro últimos caracteres tras un punto) de los
	archivos para averiguar el formato en que están codificadas,
	si cambiamos manualmente esa extensión no tendrán esa
	información y la imagen no podrá ser visualizada. 
	</para>
      </note>
      <para>
	Es importante resaltar cambiando la extensión de una imagen no cambiamos el formato de dicha imagen, pero podemos dejarla inútil.
      </para>
      <para>
	Más adelante trataremos a fondo estos dos formatos y comentaremos cuando es conveniente usar uno u otro.
      </para>
      <para>
	Una vez tenemos la imagen en un archivo aparte (por ejemplo <filename>img.gif</filename>) con el formato adecuado insertamos la imagen usando la etiqueta <sgmltag>IMG</sgmltag> de la siguiente manera:
      </para>
      <programlisting>
	<sgmltag>&lt;img src="img.gif"&gt;</sgmltag>
      </programlisting>
      <para>
	Como ya comentamos, esta etiqueta consta de una única instrucción. Pero aunque sólo vimos uno de sus atributos, <sgmltag>SRC</sgmltag>, contiene muchos más que iremos estudiando a lo largo del capítulo.
      </para>
      <para>
	Pero antes de comenzar a ver nuevos conceptos...
      </para>
    </sect2>
    <sect2>
      <title>
	Imágenes y texto.
      </title>
      <para>
	Cuando insertamos una imagen ésta se sitúa justo en el lugar donde está la etiqueta <sgmltag>IMG</sgmltag> independientemente de si hay texto alrededor o no, por esta razón este tipo de imágenes reciben el nombre de imágenes en línea o imágenes <emphasis>inline</emphasis>. Usando esta característica podíamos insertar imágenes pequeñas como si fuesen parte de un párrafo.
      </para>
      <para>
	Si queremos insertar una imagen en el interior de un elemento de nivel de bloque, pongamos por ejemplo un encabezado, no tendremos más que poner la etiqueta en el interior de ese elemento (entre las instrucciones de inicio y fin). Si no lo hiciéramos así, después de la imagen se produciría un salto de línea antes del encabezado. Para entender esto mejor podemos fijarnos en la figura 5.8 y comparar entre los siguientes códigos:
      </para>
      <figure label="5.8">
	<title>
	  Podemos apreciar la diferencia entre insertar una imagen <emphasis>dentro</emphasis> del encabezado o insertarla <emphasis>fuera</emphasis>, en cuyo caso queda en la línea superior.
	</title>
	<graphic fileref="img/fig5-08.png"/>
      </figure>
      <programlisting>
	<sgmltag>&lt;img src="imagenes/chistera.gif"&gt;</sgmltag>
	<sgmltag>&lt;h2&gt;</sgmltag>LA CHISTERA-Humor y magia<sgmltag>&lt;/h2&gt;</sgmltag>
	<sgmltag>&lt;h2&gt;</sgmltag>
	<sgmltag>&lt;img src="imagenes/chistera.gif"&gt;</sgmltag>LA CHISTERA-Humor y magia<sgmltag>&lt;/h2&gt;</sgmltag>
      </programlisting>
      <para>
	que nos resultarán familiares de la primera práctica.
      </para>
      <para>
	Como vemos, en el primer caso la instrucción de inicio del encabezado, <sgmltag>&lt;h2&gt;</sgmltag>, provocará una salto de línea y el efecto no será el deseado. En el siguiente caso hemos incluido la etiqueta <sgmltag>IMG</sgmltag> dentro del encabezado, es decir, estamos diciendo al navegador algo así: <emphasis>'el encabezado consta de esta imagen y este texto'</emphasis>. En este caso, como resulta totalmente lógico, el resultado es el deseado.
      </para>
      <para>
	Aún así el ejemplo anterior no resuelve todos los problemas que podrían plantearse al insertar imágenes. Como ya vimos en un ejemplo del capítulo 2 (fig. 2.9), que ahora reproducimos en la figura 5.9 cuando las imágenes son pequeñas pueden incluirse junto con el texto sin problemas, pero ¿qué ocurre si queremos insertar una imagen de dimensiones mayores? Podemos usar el método anterior, pero entonces obtendríamos resultados como el de la figura  5.10, que sin duda no es el deseado y provoca que el texto sea difícilmente legible.
      </para>
      <figure label="5.9">
	<title>
	  Como veíamos en el fascículo 2 (fig. 2.9) cuando la imagen es pequeña puede entremezclarse con el texto sin problema.
	</title>
	<graphic fileref="img/fig5-09.png"/>
      </figure>
      <figure label="5.10">
	<title>
	  Cuando la imagen es grande, al insertarla en una línea de texto ésta queda muy separada de la línea anterior en lugar de envolver la imagen.
	</title>
	<graphic fileref="img/fig5-10.png"/>
      </figure>
      <para>
	Una opción para solucionar este problema es provocar un salto de línea antes y después de la imagen, tal y como hacíamos en la práctica 2 para las imágenes de la página de presentación. Podemos usar diversas etiquetas para conseguir los saltos de línea: <sgmltag>P</sgmltag>, <sgmltag>CENTER</sgmltag>, <sgmltag>BLOCKQUOTE</sgmltag>, <sgmltag>BR</sgmltag>, etc. por ejemplo:
      </para>
      <programlisting>
	<sgmltag>&lt;p&gt;</sgmltag>
	<sgmltag>&lt;img src="montanas.html"&gt;</sgmltag>
	<sgmltag>&lt;/p&gt;</sgmltag>
	<sgmltag>&lt;center&gt;</sgmltag>
	<sgmltag>&lt;img src="montanas.html"&gt;</sgmltag>
	<sgmltag>&lt;/center&gt;</sgmltag>
      </programlisting>
      <para>
	Sin embargo no siempre nos conformamos con esto. Habitualmente lo que queremos es que la imagen se inserte junto con el texto y que este se sitúe alrededor suyo, tal y como vemos en periódicos u otras publicaciones. De esta forma podríamos conseguir el efecto de la figura 5.11. Afortunadamente es posible conseguir ese efecto usando las capacidades de alineamiento de imágenes del HTML.
      </para>
      <figure label="5.11">
	<title>
	  Con las técnicas de alineamiento del lenguaje HTML que estudiamos en este capítulo podemos crear interesantes efectos como texto envolviendo a una imagen.
	</title>
	<graphic fileref="img/fig5-11.png"/>
      </figure>
    </sect2>
    <sect2>
      <title>
	Alineamiento de imágenes.
      </title>
      <para>
	En los ejemplos vistos al principio, en los que insertábamos imágenes junto con texto normal, la parte inferior de la imagen quedaba alineada con la parte inferior del texto. La etiqueta <sgmltag>IMG</sgmltag> tiene un atributo llamado <sgmltag>ALIGN</sgmltag> que nos permite controlar el alineamiento vertical de la imagen en función del texto que le rodee o de otras imágenes de la misma línea. El atributo <sgmltag>ALIGN</sgmltag> puede tomar cinco valores diferentes. En primer lugar veremos aquellos que nos permiten controlar la alineación vertical de la imagen. Para cada uno de ello mostraremos dos ejemplos, en ambos la imagen que será alineada es un cuadrado rojo con una línea que marca su centro. En el primero la imagen irá seguida de tres líneas de texto y en el segundo irá precedida de una imagen el doble de alto que marcará los límites verticales de la línea.
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    align=top:
	  </term>
	  <listitem>
	    <para>
	      Alinea la parte superior de la imagen con la parte superior de la línea. Para determinar cual es el límite superior de la línea se tendrán en cuenta todos los elementos de esta (ya sean texto, imágenes u otros), tanto los anteriores como los posteriores a la imagen que estamos insertando.  En la figura 5.12  podemos ver dos ejemplos de <sgmltag>align=top</sgmltag>. El primer caso es sencillo de entender, pero el segundo requiere alguna explicación. La primera imagen se alinea (por defecto) con su parte inferior a la misma altura que la base del texto, después nuestro cuadrado rojo, alinea su parte superior con la parte superior de dicha imagen.
	    </para>
	    <figure label="5.12">
	      <title>
		Ejemplos de <sgmltag>align=top</sgmltag>. En el primer caso la parte superior de la imagen coincide con la del texto y en el segundo con la parte superior de la imagen azul.
	      </title>
	      <graphic fileref="img/fig5-12.png"/>
	    </figure>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    align=middle:
	  </term>
	  <listitem>
	    <para>
	      Alinea el centro (vertical) de la imagen con el centro de la línea. Si la línea esta compuesta únicamente por texto el se tomará la base de éste como centro de la línea. Si hay más elementos el navegador calcula cual es el centro de la línea en función de todos ellos. En la figura 5.13 podemos ver unos ejemplos.
	    </para>
	    <figure label="5.13">
	      <title>
		Ejemplos de <sgmltag>align=middle</sgmltag>. En el primer caso el centro de la imagen coincide con la base del texto, en el segundo intenta centrarse con la imagen azul.
	      </title>
	      <graphic fileref="img/fig5-13.png"/>
	    </figure>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    align=bottom:
	  </term>
	  <listitem>
	    <para>
	      Alinea la parte inferior de la imagen con la parte inferior de la línea de texto. En este caso no se tendrán en cuenta otros elementos a parte del texto para realizar el alineamiento. De nuevo podemos ver ejemplos de este alineamiento en este caso en la figura 5.14.
	    </para>
	    <figure label="5.14">
	      <title>
		Ejemplos de <sgmltag>align=bottom</sgmltag>. En ambos casos la parte inferior de la imagen se alinea con la base del texto, aunque la imagen azul baje por debajo.
	      </title>
	      <graphic fileref="img/fig5-14.png"/>
	    </figure>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para>
	NOTA: Es posible que nos encontremos alguna página en la que haya una imagen con el atributo <sgmltag>align=center</sgmltag>. Este nuevo valor (<sgmltag>center</sgmltag>) sólo funciona con <productname class="trade">Internet Explorer</productname> y tiene el mismo significado que <sgmltag>align=middle</sgmltag> y además su nombre puede confundirnos y creer que la imagen se mostrará como si estuviese encerrada por la etiqueta <sgmltag>&lt;center&gt;</sgmltag>..<sgmltag>&lt;/denter&gt;</sgmltag>. Por estas dos razones recomendamos el uso de <sgmltag>align=middle</sgmltag> en su lugar.
      </para>
      <para>
	Estos tres son los únicos tipos de alineamiento que incluía el lenguaje HTML en sus orígenes. Sin embargo, aunque son útiles, no nos permiten controlar la disposición de las imágenes tanto como querríamos. Por ejemplo, todavía no podemos insertar una imagen y que el texto la bordee tal y como veíamos en la figura 5.11. De hecho en todos los valores anteriores sólo la primera línea de texto introducida después de la imagen se situaba a la derecha de esta, aunque esta línea estuviese en la parte superior de la imagen como ocurría en el primer caso de la figura 5.12. La segunda línea y las siguientes serían mostradas debajo de la imagen.
      </para>
    </sect2>
    <sect2>
      <title>
	Texto que envuelve a las imágenes o alineamiento horizontal.
      </title>
      <para>
	Vista la necesidad de nuevos métodos de alineamiento se crearon dos nuevos valores para el atributo <sgmltag>align</sgmltag>: <sgmltag>left</sgmltag> y <sgmltag>right</sgmltag>, que nos permitirán controlar el alineamiento horizontal de las imágenes (esto es, izquierda o derecha). Estos valores se han convertido en los más usados de las páginas Web por su enorme utilidad. En seguida veremos como funcionan.
      </para>
      <para>
	NOTA: Las imágenes pueden alinearse vertical y horizontalmente, pero nunca a la vez. Esto es así porque ambos tipos de alineamiento usan el atributo. <sgmltag>align</sgmltag>, y sólo puede incluirse uno de estos atributos dentro de la etiqueta <sgmltag>img</sgmltag>. Si ponemos más el navegador se quedará con el primer valor e ignorará el resto.
      </para>
      <para>
	Antes es necesario hacer una matización. Aunque en un capítulo próximo estudiaremos con más detenimiento las diferentes versiones del lenguaje HTML, adelantaremos que  los tres primeros valores estudiados: <sgmltag>top</sgmltag>, <sgmltag>middle</sgmltag> y <sgmltag>bottom</sgmltag>, pertenecen al estándar HTML 2.0. Sin embargo los dos nuevos valores que vamos a explicar fueron introducidos en la versión HTML 3.2. El lector se preguntará ¿y para que quiero saber yo eso? Pues bueno, todos los navegadores entienden HTML 2.0, pero alguno no entiende HTML 3.2 y por tanto no entenderán <sgmltag>align=left</sgmltag> ni <sgmltag>align=right</sgmltag>. Sin embargo no debemos preocuparnos en este caso, ya que es difícil a estas alturas encontrar un navegador que no soporte HTML 3.2 y por tanto podremos estar casi seguros que nuestros visitantes disfrutarán de nuestras imágenes alineadas.
      </para>
      <para>
	Por otro lado aquellos visitantes de la página que usen un navegador muy antiguo verán lo mismo que si no hubiésemos puesto el atributo <sgmltag>align</sgmltag>, pero no tendrán ningún otro problema, por tanto concluiremos  que podemos usar los nuevos valores sin demasiada preocupación.
      </para>
      <para>
	Y después de esta matización pasamos ya a explicar el significado de estos atributos.
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    align=left
	  </term>
	  <listitem>
	    <para>
	      La palabra <emphasis>left</emphasis> significa, en inglés, izquierda, por tanto al usar este valor la imagen se sitúa a la <emphasis>izquierda</emphasis> de la página. Pero su efecto es aún más importante, ya que si a continuación de la imagen introducimos texto o cualquier otro elemento del Web éste rodeará a la imagen, no pasará a la siguiente línea.
	    </para>
	    <para> 
	      Como es importante entender bien el significado de esta etiqueta para usarla adecuadamente vamos a explicar más detenidamente como reacciona un navegador cuando se encuentra una imagen alineada a la izquierda entre un párrafo de texto: en primer lugar se pasa a la siguiente línea y se inserta la imagen, alineada, como hemos dicho antes, a la izquierda. Después si el navegador se encuentra con más texto y queda sitio en la línea anterior a la imagen lo rellena con ese texto, cuando se acabe la línea seguirá mostrando el texto en las líneas sucesivas, rodeando la imagen. En la figura 5.15 podemos ver un ejemplo de su funcionamiento. Como vemos aunque insertamos la etiqueta <sgmltag>img</sgmltag> tras la palabra imagen tras insertar ésta el texto posterior a esta etiqueta sigue mostrándose como si la imagen no hubiera sido insertada.
	    </para>
	    <figure label="5.15">
	      <title>
		Alineando una imagen a la izquierda con <sgmltag>align=left</sgmltag> conseguiremos que el texto envuelva a la imagen.
	      </title>
	      <graphic fileref="img/fig5-15.png"/>
	    </figure>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    align=right
	  </term>
	  <listitem>
	    <para>
	      Probablemente el lector ya haya deducido que este otro valor sirve para indicar que la imagen estará <emphasis>alineada a la derecha</emphasis> (<emphasis>right</emphasis> significa precisamente <emphasis>derecha</emphasis> en inglés). El efecto provocado por <sgmltag>align=right</sgmltag> es idéntico al anterior, solo que ahora la imagen se situará a la derecha de la página y el texto la bordeará por la izquierda. En la figura 5.16 podemos apreciar el mismo código de la figura 5.15 pero cambiando el alineamiento de la imagen.
	    </para>
	    <figure label="5.16">
	      <title>
		Usando <sgmltag>align=right</sgmltag> conseguimos igualmente que el texto envuelva a la imagen pero ahora ésta se situará a la derecha de la página.
	      </title>
	      <graphic fileref="img/fig5-16.png"/>
	    </figure>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para>
	NOTA: Existen otros modos de alineamiento, pero no funcionan en todos los navegadores, ni forman parte del lenguaje HTML. Esos modos de alineamiento han sido creados por los fabricantes de un determinado navegador y por tanto no funcionan con el resto. En posteriores capítulos hablaremos de este tema y de otras <emphasis>extensiones de los navegadores</emphasis> y comentaremos los otros tipos de alineamiento existentes.
      </para>
    </sect2>
    <sect2>
      <title>
	Como terminar el texto envolvente.
      </title>
      <para>
	En la figura 5.11 adelantábamos un ejemplo de cómo quedaba una imagen con texto que envolviéndola. En ese caso usábamos una fotografía de tamaño considerable, y por tanto había numerosas líneas de texto a su izquierda. Después de la primera frase pusimos un punto y aparte, que como ya sabemos, se hace en HTML con la etiqueta <sgmltag>&lt;br&gt;</sgmltag>, y continuamos: "Desde las...".
      </para>
      <para>
	Pero podemos imaginar otro caso, como el de la figura 5.17 en el que lo único que queremos es escribir unas pocas líneas que comenten la imagen pero continuar el resto del texto después (debajo) de la imagen. Si ponemos <sgmltag>br</sgmltag> sin más pasaremos a la siguiente línea, pero no al final de la imagen. Un primer método que se nos podría ocurrir para conseguir este efecto sería poner la etiqueta <sgmltag>br</sgmltag> muchas veces, tantas como líneas quepan hasta el final de la imagen. Sin embargo este sistema a parte de ser molesto, no funciona como puede comprobar el lector si decide probarlo.
      </para>
      <figure label="5.17">
	<title>
	  Usando el atributo <sgmltag>clear</sgmltag> de la etiqueta <sgmltag>br</sgmltag> podemos terminar el texto envolvente y seguir escribiendo debajo de la imagen.
	</title>
	<graphic fileref="img/fig5-17.png"/>
      </figure>
      <para>
	Pero entonces ¿existe alguna otra forma de conseguirlo? La respuesta es SI. Cuando se añadieron los valores <sgmltag>right</sgmltag> y <sgmltag>left</sgmltag> a los modos de alineamiento se introdujo también un nuevo atributo en la etiqueta <sgmltag>br</sgmltag> que nos permitiera tratar con este tipo de alineamiento. Ese atributo se llama <sgmltag>clear</sgmltag>, puede tomar los siguientes valores.
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    left
	  </term>
	  <listitem>
	    <para>
	      Provoca un salto de línea hasta el primer margen libre a la izquierda. Esto quiere decir que provocará un salto hasta la primera línea en la que no hay una imagen a la izquierda y por tanto se usa, en general, cuando hay una imagen alineada a ese lado. Este valor es el que hemos usado en el ejemplo de la figura 5.17. Su modo de uso es el siguiente:
	    </para>
	    <programlisting>
	      <sgmltag>&lt;br clear=left&gt;</sgmltag>
	    </programlisting>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    right
	  </term>
	  <listitem>
	    <para>
	      Provoca un salto de línea hasta el primer margen libre a la derecha, por lo demás funciona idénticamente al valor anterior:
	    </para>
	    <programlisting>
	      <sgmltag>&lt;br clear=right&gt;</sgmltag>
	    </programlisting>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    all
	  </term>
	  <listitem>
	    <para>
	      Provoca un salto hasta la primera línea que tiene tanto el margen izquierdo como el margen derecho libres. Es decir provoca el efecto de los dos valores anteriores combinados.
	    </para>
	    <programlisting>
	      <sgmltag>br clear=all</sgmltag>
	    </programlisting>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para>
	Ya empezamos a sentir que tenemos una gran control sobre la disposición de las imágenes en nuestra página, pero aún podemos manejar un parámetro más en relación a estas y al texto que las envuelve: el espaciado que hay entre ellas.
      </para>
    </sect2>
    <sect2>
      <title>
	Márgenes alrededor de las imágenes.
      </title>
      <para>
	Para poder controlar los márgenes se crearon dos nuevos atributos más para la etiqueta <sgmltag>img</sgmltag>: <sgmltag>vspace</sgmltag> y <sgmltag>hspace</sgmltag> que controlan el tamaño de los márgenes vertical (<sgmltag>vspace</sgmltag> proviene de <emphasis>Vertical SPACE</emphasis> que significa espaciado vertical) y horizontal (<sgmltag>hspace</sgmltag> proviene de <emphasis>Horizontal SPACE</emphasis>, espaciado horizontal) respectivamente. Estos atributos suelen acompañar al uso de <sgmltag>align=left</sgmltag> y <sgmltag>align=right</sgmltag>. 
      </para>
      <para>
	El tamaño de los márgenes se indicará en pixeles (puntos de pantalla). Veamos ahora un ejemplo con amplios márgenes para que podamos apreciar bien el efecto de estos atributos. El código usado es:
      </para>
      <programlisting>
	<sgmltag>&lt;img align=left vspace=35 hspace=35&gt;</sgmltag>
      </programlisting>
      <para>
	Y podemos ver el resultado en la figura 5.18
      </para>
      <figure label="5.18">
	<title>
	  Usando los atributos <sgmltag>hspace</sgmltag> y <sgmltag>vspace</sgmltag> podemos controlar la separación entre la imágen y el texto que la envuelve.
	</title>
	<graphic fileref="img/fig5-18.png"/>
      </figure>
    </sect2>
    <sect2>
      <title>
	Imágenes enlace.
      </title>
      <para>
	A estas alturas del curso de HTML dominamos la creación de enlaces hipertexto y conocemos como insertar imágenes en nuestras Web. Uniendo ambos conocimientos vamos a crear imágenes que nos servirán como enlaces a otros lugares del World Wide Web.
      </para>
      <para>
	No será necesario aprender nada nuevo, lo único que necesitaremos es combinar los efectos de las etiquetas <sgmltag>a</sgmltag> y <sgmltag>img</sgmltag>. En primer lugar deberemos insertar la instrucción de inicio de <sgmltag>a</sgmltag>, después incluir la etiquequeta <sgmltag>img</sgmltag> y por último insertamos la etiqueta de fin de <sgmltag>a</sgmltag>. Un ejemplo muy típico del uso de imágenes enlace, como suelen ser denominadas, son las flechas para avanzar o volver atrás en una página. En nuestra práctica del capítulo pasado usamos estas flechas pero solo como indicación de el resultado de pulsar sobre el texto adjunto. Ahora convertiremos esas imágenes en enlace para que se pueda pulsar sobre ellas. El código a usar es:
      </para>
      <programlisting>
	<sgmltag>&lt;a href="index.htm"&gt;</sgmltag>
	<sgmltag>&lt;img src="img/izda.gif"&gt;</sgmltag>
	<sgmltag>&lt;/a&gt;</sgmltag>
      </programlisting>
      <para>
	Invitamos al lector a que haga el mismo cambio en el resto de imágenes usadas en aquella práctica.
      </para>
      <para>
	Invitamos al lector a que haga el mismo cambio en el resto de imágenes usadas en aquella práctica.
      </para>
      <figure label="5.19">
	<title>
	  Combinando las etiquetas <sgmltag>img</sgmltag> y <sgmltag>a</sgmltag> adecuadamente podemos crear <emphasis>imágenes enlace</emphasis>. Los navegadores indican esto mostrando un borde azul alrededor de estas imágenes.
	</title>
	<graphic fileref="img/fig5-19.png"/>
      </figure>
      <para>
	Nuestro siguiente objetivo será aprender a controlar este borde así como crear otros muchos efectos con las imágenes.
      </para>
    </sect2>
  </sect1>

  <sect1>
 
    <title>Cómo cambiar la apariencia de las imágenes</title>
    <sect2>

      <title>Borde de las imágenes</title>

      <para>
	El lenguaje HTML permite recuadrar a las
	imágenes que incluyamos en nuestras páginas con un borde de grosor
	variable. En general este borde es invisible, a nos ser que
	especifiquemos lo contrario. Sin embargo cuando vimos las imágenes
	enlace observamos que alrededor de estas imágenes aparecía un borde
	azul indicando que se podía pulsar sobre ellas. Como enseguida
	veremos que es posible conseguir que las imágenes normales SI
	tengan ese borde y que las imágenes enlace no lo tengan o que sea
	de otro grosor distinto al que aparece por defecto.
      </para>

      <para>
	La manera de controlar el borde es usar un nuevo atributo,
	<emphasis>BORDER</emphasis>, que debe ser usado dentro de la
	etiqueta IMG. Este atributo toma como valor el número de pixeles
	que debe tener el borde. Si nuestro objetivo no es añadir un borde
	sino quitarlo, o asegurarnos que no lo tendrá debemos usar
	BORDER=0. De esta forma podremos conseguir que desaparezca el borde
	en las imágenes enlace. En la figura 5.20 podemos ver tres ejemplos
	de imágenes enlace:
      </para>

      <figure label="5.20">

	<title>
	  Las imágenes enlace tienen un borde azul por defecto, pero podemos
	  quitarlo o variar su grosor usando el atributo BORDER de la
	  etiqueta IMG.
	</title>
	<graphic fileref="img/fig5-20.png"/>

      </figure>

      <para>
	En el primero de ellos no hemos usado el atributo BORDER:
      </para>

      <programlisting>

	<sgmltag>&lt;A HREF=&quot;otra.htm&quot;></sgmltag>
	  <sgmltag>&lt;IMG SRC=&quot;izda.gif&quot;&gt;</sgmltag>
	<sgmltag>&lt;/A&gt;</sgmltag>

      </programlisting>

      <para>
	En el segundo lo hemos usado dándole el valor cero para eliminar el
	borde:
      </para>

      <programlisting>

	<sgmltag>&lt;A HREF=&quot;otra.htm&quot;&gt;</sgmltag>
	<sgmltag>&lt;IMG SRC=&quot;izda.gif&quot; BORDER=0&gt;</sgmltag>
	<sgmltag>&lt;/A&gt;</sgmltag>

      </programlisting>

      <para>
	Y en el tercero le hemos dado el valor 10:
      </para>

      <programlisting>

	<sgmltag>&lt;A HREF=&quot;otra.htm&quot;&gt;</sgmltag>
	<sgmltag>&lt;IMG SRC=&quot;izda.gif&quot; BORDER=10&gt;</sgmltag>
	<sgmltag>&lt;/A&gt;</sgmltag>

      </programlisting>

      <para>
	El uso de BORDER=0 es especialmente útil en los llamados iconos de
	navegación. Estos iconos son imágenes enlace que incluimos en las
	páginas y que suelen tener la apariencia de botones, flechas y
	similares y cuya función es ayudar al visitante a navegar por
	nuestra página. En la figura 5.21 podemos ver varios de estos
	iconos. En todos estos casos la aparición de un borde alrededor de
	la imagen perjudicaría su apariencia.
      </para>

      <figure label="5.21">

	<title>
	  Las imágenes enlace se usan a menudo para crear iconos de
	  navegación como los que aquí vemos. En estos casos es conveniente
	  quitar el borde usando BORDER=0.
	</title>
	<graphic fileref="img/fig5-21.png"/>

      </figure>

      <para>
	Sin embargo no debe parecer que el atributo BORDER sólo tiene
	utilidad en las imágenes enlace, ya que podemos usarlo con todo
	tipo de imágenes y en ocasiones nos ayuda a crear interesantes
	efectos. En la figura 5.22 podemos ver ejemplos de imágenes
	normales sin borde o con borde de distinto grosor.
      </para>

      <figure label="5.22">

	<title>
	  Las imágenes normales también pueden tener un borde de grosor
	  variable, aunque en este caso el color no es azul, sino negro.
	</title>
	<graphic fileref="img/fig5-22.png"/>

      </figure>

      <para>
	En estos ejemplos observamos que si las imágenes no son links el
	borde es negro en vez de azul. No existe por ahora ningún medio de
	elegir el color del borde.
      </para>

      <para>
	Pero además de poder añadir un borde a las imágenes, el
	HTMLnos permite realizar alguna otra
	modificación en la apariencia de las imágenes más importante aún,
	como puede ser modificar su tamaño. De esta forma podremos usar una
	misma imagen varias veces y con diferentes tamaños en una página
	Web sin tener crear un archivo GIF o JPG diferente para cada una.
      </para>

    </sect2>
    
    <sect2>

      <title>Modificando el tamaño de  las imágenes</title>

      <para>
	Tanto las imágenes GIF como las JPEG son imágenes rectangulares,
	esto es, su tamaño está determinado únicamente por dos propiedades:
	su anchura y su altura. Tanto una como otra suelen tener valores
	dados en pixeles o puntos de pantalla.
      </para>

      <para>
	El lenguaje HTML nos permitirá modificar
	estas propiedades de las imágenes a incluir en una página de manera
	que podamos adaptarlas al tamaño que necesitemos. La  forma de hacer
	realidad esta <emphasis>transformación</emphasis> es usar dos nuevos
	atributos de la etiqueta IMG: <emphasis>WIDTH</emphasis> y
	<emphasis>HEIGHT</emphasis>, que significan en inglés anchura y
	altura respectivamente. A cada uno de estos atributos deberemos
	darle un tamaño en pixeles que suele oscilar entre 20 y 600 en los
	casos habituales.
      </para>

      <para>
	Existen dos formas de usar estos atributos. La primera de ellas
	consiste en dar valores tanto a WIDTH como a HEIGHT con lo cual
	estaremos determinando por completo el tamaño con el que el
	navegador debe mostrar la página. El otro método consiste en usar
	sólo uno de ellos, o bien WIDTH o bien HEIGHT. Al hacer esto la
	dimensión que no usemos se adaptará para mantener la proporción de
	la imagen. Por ejemplo, si tenemos una imagen de 500x250, es decir
	de anchura 500 y de altura 250, pero al insertarla en la página
	usamos el siguiente código:
      </para>

      <programlisting>

	<sgmltag>&lt;IMG SRC=&quot;imagen.gif&quot; WIDTH=250&gt;</sgmltag>

      </programlisting>

      <para>
	La imagen será mostrada por el navegador con una tamaño de
	250x125. Como vemos la relación entre la anchura y la altura sigue
	siendo la misma, y por tanto la imagen no aparecerá deformada. Si
	lo que queríamos era conseguir un tamaño de 250x250 debíamos haber
	escrito el siguiente código:
      </para>

      <programlisting>

	<sgmltag>
	  &lt;IMG SRC=&quot;imagen.gif&quot; WIDTH=250 HEIGHT=250&gt;
	</sgmltag>

      </programlisting>

      <para>
	En la figura 5.23 hemos usado una imagen de tamaño original 290x192
	y la hemos aplicado diferentes transformaciones.
      </para>

      <figure label="5.23">

        <title>
	  Usando los atributos WIDTH y HEIGHT podemos variar el tamaño de
	  las imágenes. Si sólo usamos uno la otra dimensión se ajusta para
	  mantener las proporciones.
	</title>
        <graphic fileref="img/fig5-23.png"/>

      </figure>

      <para>
	En la primera de ellas hemos fijado una anchura mitad de la
	original usando WIDTH=145, pero sin incluir el atributo HEIGHT. En
	este caso la altura se ajusta automáticamente a 96 pixels (la mitad
	del original) para que se mantengan las proporciones. En la	
	siguiente imagen hemos usando los dos atributos, tanto HEIGHT como
	WIDTH con lo cual obtenemos una imagen con las dimensiones
	deseadas, pero deformada, ya que no se mantienen las proporciones
	originales.
      </para>

      <para>
	En general no se usan los atributos WIDTH y HEIGHT para obtener
	imágenes de mayor tamaño que el original, ya que el resultado
	obtenido tendría muy poca calidad. El lector puede hacer la prueba.
      </para>

      <note>

	<para>
	  El método que usan la mayoría de los navegadores para reducir el
	  tamaño de las imágenes consiste en eliminar filas y columnas
	  completas de pixeles elegidas aleatoriamente. Para aumentar el
	  tamaño se duplican filas y columnas elegidas de manera igualmente
	  aleatoria. Este método es usado por su rapidez, pero en ocasiones
	  la calidad ofrecida no es la deseable, especialmente si en la
	  imagen hay texto. Por esta razón si es importante una buena
	  visualización de la imagen conviene usar un programa de retoque
	  fotográfico para modificar el tamaño de la imagen en vez de usar
	  los atributos WIDTH y HEIGHT.
	</para>

      </note>

      <para>
	Vamos a terminar esta sección dedicada a cambiar la apariencia de
	las imágenes de una página Web con un interesante <emphasis>
	  truco</emphasis>. Gracias a él conseguiremos una visualización más
	rápida de nuestras páginas. La idea es simple, y consiste en
	incluir SIEMPRE el tamaño de las imágenes con los atributos WIDTH
	y HEIGHT (es necesario incluir los dos) al insertar una imagen en
	la página. Este truquillo que parece inocente en un principio tiene
	dos importantes ventajas:
      </para>

      <orderedlist>

	<listitem>

	  <para>
	    Los navegadores cuando les llega una imagen <emphasis>calculan
	    </emphasis>sus dimensiones para saber como deben mostrarlas, al
	    dárselas directamente con el código ganaremos el tiempo que el
	    navegador perdería realizando este cálculo.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    La segunda, y quizá más importante ventaja, consiste en que el
	    navegador podrá colocar todos los elementos de la página desde
	    un principio sin esperar a que lleguen las imágenes. Para
	    entender porque ocurre esto es necesario aprender un poco más
	    sobre el funcionamiento del protocolo HTTP. Sin adentrarnos en detalles muy técnicos
	    diremos que los navegadores, cuando se les pide una página,
	    cargan (o bajan) del WWW el archivo HTML
	  con el código. Tras leerlo y mostrar el texto
	    empiezan a cargar los archivos con las imágenes. Cuando llega
	    una imagen el navegador la coloca en su sitio, pero como no
	    sabía cuanto iba a ocupar de antemano probablemente le había
	    dejado un espacio demasiado pequeño, con lo cual es necesario
	    recolocar todos los elementos de la página, ¡y esto ocurre con
	    cada imagen! Al incluir los tamaños de las imágenes en el
	    código el navegador reserva el espacio adecuado y evita tener
	    que recolocar todo sucesivas veces con el consiguiente ahorro
	    de tiempo. En la figura 5.24 podemos ver la página de la
	    práctica 2 antes tras leerse el código, pero antes de mostrar
	    las imágenes. Como vemos, el navegador (<productname>Explorer
	    </productname>en este caso) ya ha reservado el tamaño para las
	    imágenes que quedan por llegar.
	  </para>

	  <figure label="5.24">

	    <title>
	      Si incluimos junto con la imagen la información de sus
	      dimensiones el navegador podrá reservar espacio para ellas
	      con sólo leer el código.
	    </title>
	    <graphic fileref="img/fig5-24.png"/>

	  </figure>

	</listitem>

      </orderedlist>

      <para>
	En ocasiones este ahorro de tiempo es considerable, por lo que
	nuestra recomendación es que, sin duda, merece la pena usar este
	truco. Para averiguar el tamaño de las imágenes podemos recurrir a
	programas de retoque o visualización de imágenes como
	<productname>Paint Shop Pro</productname> (Shareware) o
	<productname>IrfanView</productname>(Freeware), aunque los más
	modernos editores de HTML como
	<productname>FrontPage</productname>o
	<productname>HomeSite</productname> realizan esta 
	labor por nosotros.
      </para>

    </sect2>

  </sect1>

  <sect1>

    <title>Alternativas a las imágenes inline</title>

    <sect2>

      <title>El atributo ALT</title>

      <para>
	Hasta ahora hemos hablado de la importancia de las imágenes y el
	diseño gráfico en general en el World Wide Web. Sin duda la
	abundancia de gráficos y otros contenidos multimedia han provocado
	su gran expansión. Sin embargo, como ya hemos comentado antes a lo
	largo de esta obra, existen algunos navegadores que sólo son
	capaces de mostrar texto. También hemos mencionado e incluso hemos
	mostrado imágenes del más conocido y usado:
	<productname>Lynx</productname>. Quizá el lector se haga aún
	la pregunta ¿porqué 
	querría alguien acceder al WWW para ver sólo texto? Las razones
	pueden ser de distinto tipo, pero podemos encontrar dos que tienen
	gran importancia. La primera consiste en que es posible que el
	<emphasis>navegante</emphasis> acceda a la red desde su trabajo o
	desde el laboratorio de una universidad donde los equipos son
	todavía antiguos o trabaja con terminales conectados a una estación
	de trabajo, que sólo son capaces de mostrar texto, en estos casos
	es obligatorio usar un navegador <emphasis>en modo texto
	</emphasis>. Otra razón puede ser que aún teniendo un magnífico
	ordenador (y monitor) último modelo, queramos acceder al WWW a toda
	velocidad para acceder a cierta información, en este caso los
	navegadores modo texto son enormemente útiles ya que alcanzan
	velocidades mucho mayores.
      </para>

      <para>
	Sea como fuere nuestra labor como programadores de páginas Web será
	conseguir que nuestras páginas puedan ser visitadas por todo el
	mundo. De esta manera tendrán más éxito. Por ello debemos ofrecer
	alternativas a las imágenes que incluimos en nuestras páginas.
      </para>

      <para>
	El atributo ALT, de la etiqueta IMG, permite especificar un texto
	alternativo que será mostrado por los navegadores en caso de que la
	imagen no pueda ser vista. Ese texto será introducido entrecomillado
	como valor del atributo ALT, de la siguiente forma:
      </para>

      <programlisting>

	<sgmltag>
	  &lt;IMG SRC=&quot;montanas.gif&quot;
	  ALT=&quot;Fotografía de unas montañas nevadas de
	  los Alpes&quot;&gt;
	</sgmltag>

      </programlisting>

      <para>
	Las razones por las que una imagen puede no ser mostrada son
	diversas pero las podemos agrupar en tres:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    El primer caso es el anteriormente comentado de navegadores en
	    modo texto. En este caso es necesario hacer un comentario
	    especial. Cada vez que el navegador se encuentra con una imagen
	    (es decir con una etiqueta IMG en el código HTML
	  ) en vez de mostrarla la sustituye por el
	    siguente texto: [IMAGE] (<emphasis>image</emphasis> significa
	    imagen en inglés). Sin duda esta palabra no es muy descriptiva,
	    y además es la misma para todas las imágenes. Para solucionarlo
	    el programador puede usar el atributo ALT, en ese caso el texto
	    [IMAGE] será sustituido por el que se indique como valor de
	    este atributo, que sin duda explicará mejor el contenido de la
	    imagen. En ocasiones es conveniente usar el atributo ALT sin
	    ningún texto (ALT=&quot;&quot;) para evitar la aparición de
	    [IMAGE], pero esto no debe hacerse muy a menudo.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Un segundo caso puede ser que el usuario haya decidido
	    desactivar la opción de ver las imágenes de las páginas. Tanto
	    <productname>Explorer</productname> (en Opciones de
	    Internet/Opciones avanzadas/Multimedia) como
	    <productname>Netscape</productname> (en
	    Preferences/Advanced) ofrecen esta 
	    opción. Si ponemos un texto alternativo suficientemente
	    descriptivo el visitante podrá decidir si merece la pena cargar
	    la imagen o no.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Un tercer caso ocurre cuando hay un problema en la transmisión
	    de la imagen o porque se ha indicado un nombre incorrecto. En
	    este caso los navegadores muestran un símbolo gráfico
	    acompañado del texto alternativo. En la figura 5.25 podemos ver
	    este caso con <productname>Explorer</productname> y
	    <productname>Netscape</productname>, donde hemos usado el
	    código anterior usando el atributo ALT para que sea mostrado un
	    texto alternativo.
	  </para>

	  <figure label="5.25">

	    <title>
	      Con el atributo ALT podemos especificar un texto alternativo
	      a las imágenes. En esta figura vemos como lo muestran
	      <productname>Explorer</productname> y
	      <productname>Netscape</productname>. 
	    </title>
	    <graphic fileref="img/fig5-25.png"/>

	  </figure>

	</listitem>

      </itemizedlist>

      <para>
	En previsión de todos estos casos el uso del atributo ALT en las
	páginas que programemos es más que recomendable. De esta forma
	estaremos dando calidad a nuestras páginas y estaremos mostrando
	que nos preocupamos por todo tipo de audiencia.
      </para>

      <para>
	Para terminar hemos de decir que los navegadores
	<productname>Internet Explorer</productname> y
	<productname>Netscape</productname> dan un segundo uso al
	atributo ALT. Éste consiste en 
	mostrar su contenido en forma de bocadillo cuando el usuario sitúa
	el puntero del ratón encima de la imagen tal y como podemos ver en
	la figura 5.26:
      </para>

      <figure label="5.26">

        <title>
	  Algunos navegadores como <productname>Explorer</productname>
	  muestran el texto de ALT como un bocadillo que aparece cuando
	  ponemos el cursor encima de la imagen.
	</title>
        <graphic fileref="img/fig5-26.png"/>

      </figure>

      <para>
	en la que hemos modificado el código usado en la práctica 2 para
	añadir el atributo ALT:
      </para>

      <programlisting>

	<sgmltag>
	  &lt;IMG SRC=&quot;img/logo.gif&quot;
	  ALT=&quot;Logotipo de la compañía&quot;&gt;
	</sgmltag>

      </programlisting>

      <para>
	Si bien el uso del atributo ALT ofrece un interesante método para
	ofrecer una alternativa a las imágenes con un texto existe otro con
	una utilidad mucho más amplia y que consiste en usar, en lugar de
	las imágenes <emphasis>inline</emphasis> vistas hasta ahora, las
	llamadas imágenes externas.
      </para>

    </sect2>

    <sect2>

      <title>Imágenes externas</title>

      <para>
	Estas imágenes no se visualizan junto con el resto de la página,    
	sino que se proporciona al visitante un enlace para que pueda
	acceder a ellas. Las razones por las que en ciertas ocasiones se
	usan la imágenes externas y por las que merece la pena mencionarlas  
	aquí son muchas, pero las podemos resumir en cuatro:  
      </para>

	<itemizedlist>

	  <listitem>

	    <para>
	      La gran mayoría de navegadores gráficos soportan los formatos
	      GIF y JPEG, y algunos de ellos soportan algún otro formato pero
	      no es lo habitual. Sin embargo gran parte de los navegadores,
	      gráficos o no, soportan un rango mucho más amplio de formatos
	      de imágenes con la ayuda de aplicaciones externas, por lo que
	      usando imágenes externas podremos usar otros formatos distintos
	      de GIF y JPEG y el navegador se encargará de <emphasis>llamar
	      </emphasis>a la aplicación que necesite para visualizarlo.
	    </para>

	  </listitem>

	  <listitem>

	    <para>
	      Como hemos comentado repetidas veces los navegadores en modo
	      texto no pueden mostrar imágenes <emphasis>inline</emphasis>,
	      sin embargo si pueden mostrar imágenes externas ayudándose de
	      algún programa de visualización o edición gráfica.
	    </para>

	  </listitem>

	  <listitem>

	    <para>
	      Mientras las imágenes <emphasis>inline</emphasis> deben tener
	      un tamaño reducido para no provocar grandes esperas al
	      navegante al visitar nuestra página, las imágenes externas
	      pueden ser de mayor tamaño ya que sólo las verán aquellos que
	      lo <emphasis>pidan</emphasis> y por tanto hemos de suponer que
	      les interesa lo suficiente como para esperar. En todo caso si
	      el tamaño supera los 100 Kbytes es conveniente indicar dicho
	      tamaño entre paréntesis junto con el texto identificativo de la
	      imagen.
	    </para>

	  </listitem>

	  <listitem>

	    <para>
	      Nos ofrece la posibilidad de combinar imágenes <emphasis>inline
	      </emphasis>con imágenes externas para que las páginas se carguen
	      más rápidamente. De esta forma crearemos los llamados
	      <emphasis>thumbnails</emphasis> que veremos con más detalle un
	      poco más adelante.
	    </para>

	  </listitem>

	</itemizedlist>

      <para>
	La creación de imágenes externas varía de las vistas hasta ahora en
	que ya no se usa la etiqueta IMG. A cambio haremos uso de la
	etiqueta de creación de links: <sgmltag>&lt;A ...&gt;</sgmltag>
	<sgmltag>&lt;/A&gt;</sgmltag>, pero en esta ocasión lo enlazado no
	será otra página HTML sino la propia
	imagen externa. El código que debemos usar es:
      </para>

      <programlisting>

	<sgmltag>&lt;A HREF=&quot;imagen.xxx&quot;&lt;</sgmltag>
	imagen externa
	<sgmltag>&lt;/A&gt;</sgmltag>

      </programlisting>

      <para>
	siendo xxx la extensión correspondiente al formato de la imagen. En
	la tabla 5.2 podemos ver algunos formatos y extensiones comúnmente
	usados.
      </para>

      <figure label="5.2">

        <title>
	  Extensiones y breve descripción de los principales formatos de
	  imágenes usados en el WWW.
	</title>
        <graphic fileref="img/tabla5-2.png"/>

      </figure>

      <para>
	Cuando el visitante pulse sobre el texto activo, en este caso
	&apos;<emphasis>imagen externa</emphasis>&apos; el navegador bajará
	la imagen de Internet y luego la mostrará o ejecutará otra
	aplicación que pueda mostrarla.
      </para>

      <para>
	Aunque hasta ahora hemos usado los links para enlazar otras páginas
	HTML y en este mismo apartado para
	insertar imágenes externas en realidad la utilidad de esta etiqueta
	va mucho más allá. De hecho podemos enlazar a nuestra página
	cualquier tipo de archivo, en la mayoría de los navegadores
	actuales cuando el usuario selecciona un enlace a un archivo que
	ellos mismos no pueden visualizar le ofrece dos opciones: guardar
	el archivo en el disco duro o llevar a cabo una acción en función
	del tipo de archivo. Esta última opción consiste en ejecutar el
	archivo si es ejecutable, usar un programa descompresor si es un
	archivo comprimido, visualizarlo con un programa adecuado si es un
	vídeo, etc.
      </para>

      <sect3>

	<title>Thumbnails</title>

	<para>
	  Como hemos adelantado antes, con este nombre se conoce al
	  resultado de la combinación de imágenes <emphasis>inline
	  </emphasis> con imágenes externas. El objetivo de los thumbnails
	  es proporcionar una previsualización, un aperitivo, de la imagen
	  completa (que será externa) usando una imagen <emphasis>inline
	  </emphasis>de menor tamaño. Esta imagen <emphasis>inline
	  </emphasis> es, de hecho, la que recibe el nombre de thumbnail, y
	  será o bien una versión de dimensiones reducidas de la imagen
	  final o una parte de ella. En general, o bien el propio thumbnail,
	  o bien un texto adjunto (o ambas cosas) servirán como enlace para
	  obtener la imagen completa tal y como podemos ver en la
	  figura 5.27.
	</para>

	<figure label="5.27">

	  <title>
	    Ejemplos de Thumnails. En el primer caso se muestra un trozo de
	    la imagen y en el segundo la imagen completa reducida, el efecto
	    es similar en ambos casos.
	  </title>
	  <graphic fileref="img/fig5-27.png"/>

	</figure>

	<para>
	  que muestra dos ejemplos de thumbnails de la imagen completa de la
	  figura 5.28.
	</para>

	<figure label="5.28">

	  <title>
	    Imagen completa que será mostrada cuando el visitante
	    seleccione los enlaces que acompañan a los thumbnails de la
	    figura 5.27
	  </title>
	  <graphic fileref="img/fig5-28.png"/>

	</figure>

	<para>
	  Como vemos, el uso de thumbnails permite al visitante si decide
	  cargar la imagen completa elegir entre el formato GIF, de mayor
	  tamaño y calidad, o en formato JPEG con calidad ligeramente peor
	  pero mucho menor tamaño. Sobre las imágenes <emphasis>de aperitivo
	  </emphasis>hay que decir que en el primer caso se ha usado un
	  trozo de la imagen mientras que en el segundo se ha usado la
	  imagen entera que ha sido reducida en tamaño con un programa de
	  edición de imágenes. En ambos casos el tamaño de la imagen a
	  quedado reducido a unos 15-20Kb que las hace más apropiadas para
	  incluirlas como imágenes <emphasis>inline</emphasis>.
	</para>

	<warning>

	  <para>
	    Es importante resaltar que para la creación de thumbnails no se
	    pueden usar los atributos WIDTH y HEIGHT ya que se perdería su
	    utilidad. El objetivo del thumbnail es tener una imagen en un
	    archivo aparte que sea de menor tamaño en bytes que la original
	    para que cargue más rápido. Al usar WIDTH y HEIGHT la imagen
	    sigue siendo la misma, y por tanto su tamaño también, luego no
	    conseguiremos reducir el tiempo de carga.
	  </para>

	</warning>

	<para>
	  El uso apropiado imágenes externas y de thumbnails nos permitirá
	  crear páginas de gran contenido gráfico y de pequeño tamaño.
	</para>

      </sect3>

    </sect2>

    <sect2>

      <title>Imágenes mapa</title>

      <para>
	Empezamos a adentrarnos ya en algunas de las características más
	avanzadas del lenguaje HTML. En este caso
	es el turno de las imágenes mapa.
      </para>

      <para>
	Con bastante probabilidad el lector habrá visitado alguna página en
	la que había alguna imagen en la que se podía pulsar en diferentes
	partes para acceder a diferentes destinos. Estas son las llamadas
	imágenes mapa y en la gran mayoría de páginas Web podemos encontrar
	una. En un principio para realizar las imágenes mapa era necesario
	usar determinados programas especiales que debían estar en el
	servidor Web, sin embargo con el estándar HTML 3.2
      se incluyeron algunas etiquetas HTML
      que nos permitirán realizar estas imágenes mapa con
	mayor facilidad.
      </para>

      <sect3>

	<title>Imágenes mapa en el servidor</title>

	<para>
	  Este era el único método usado inicialmente para crear las
	  imágenes mapa, para usarlo debemos instalar en el servidor Web
	  (si tenemos acceso a él) algún programa dedicado a este fin. Los
	  más usados son los del CERN y NCSA. Para usar este método debemos
	  llevar a cabo los siguientes pasos:	    
	</para>

	<orderedlist>

	  <listitem>

	    <para>
	      Crear un archivo de configuración del mapa con el código del
	      programa usado para indicar las zonas activas y donde nos
	      dirigirán el pulsar sobre ellas. Para averiguar como es el
	      código a usar tendremos que leer la documentación que
	      acompañe al programa, pero en general no será muy complicado.
	      El archivo con el código tiene en general la terminación
	      &apos;.map&apos;.		  
	    </para>

	  </listitem>

	  <listitem>

	    <para>
	      Escribir el código HTML de manera
	      que la imagen sea un enlace al archivo con su código. Además
	      debemos incluir el atributo <emphasis>ISMAP</emphasis>en la
	      etiqueta IMG:
	    </para>

	    <programlisting>

	      <sgmltag>&lt;A HREF=&quot;img.map&quot;&lt;</sgmltag>
	      <sgmltag>&lt;IMG SRC=&quot;img.gif&quot; ISMAP&gt;</sgmltag>
	      <sgmltag>&lt;/A&gt;</sgmltag>

	    </programlisting>

	  </listitem>

	</orderedlist>

	<para>
	  En la página de POST-IT, figura 5.29, podemos ver un ejemplo de
	  imagen mapa en el servidor.
	</para>

	<figure label="5.29">

	  <title>
	    En la página principal de POST-IT vemos un excelente ejemplo de
	    la utilidad de las imágenes mapa.
	  </title>
	  <graphic fileref="img/fig5-29.png"/>

	</figure>

	<para>
	  En este caso la imagen representa una mesa con diferentes objetos
	  encima cada uno de los cuales representa una sección del sitio
	  Web al que saltaremos si pulsamos sobre él.
	</para>

	<para>
	  La gran ventaja de este método consiste en que funcionará con
	  cualquier navegador, el único requisito es tener el programa en
	  el servidor Web. El principal inconveniente es que, por lo general
	  no todo el mundo tiene acceso al servidor Web y no puede instalar
	  los programas que necesita, por otro lado tener el código del
	  mapa en un archivo aparte complica su modificación.
	</para>

	<para>
	  Para resolver estos problemas apareció el segundo método en el
	  que el código de todas las imágenes mapa de una página podrán
	  estar en esa misma página y además se creará usando etiquetas del
	  lenguaje HTML.
	</para>

      </sect3>

      <sect3>

	<title>Imágenes mapa en el cliente</title>

	<para>
	  Este tipo de imágenes reciben el nombre de imágenes mapa en el
	  cliente porque será el navegador de cada usuario (cada cliente) el
	  que se encargará de leer el código cuando se pulsa sobre la
	  imagen mapa y averiguar la dirección de destino. No es necesario
	  ningún programa especial en el servidor Web.	    
	</para>

	<para>
	  En este caso nos bastará usar la etiqueta IMG para crear la
	  imagen, eso sí con un nuevo atributo: <emphasis>USEMAP
	  </emphasis>. Por otro lado ahora deberemos usar algunas otras
	  etiquetas nuevas para crear el mapa de la imagen. La creación de
	  este tipo de imágenes mapa consta por tanto de dos pasos:
	</para>

	<orderedlist>

	  <listitem>

	    <para>
	      Definición de la imagen como imagen mapa, así como informar
	      de dónde está el mapa a usar. La sintaxis es sencilla:
	    </para>

	    <programlisting>

	      <sgmltag>
		&lt;IMG SRC=&quot;imagen.gif&quot;
		USEMAP=&quot;#mapa1&quot;&gt;
	      </sgmltag>

	    </programlisting>

	    <para>La imagen es, en este caso, una con formato GIF de nombre
	      <emphasis><filename>imagen.gif</filename></emphasis>. En este
	      ejemplo usamos un mapa llamado <emphasis>mapa1</emphasis>,
	      como vemos la forma de referirnos a él es igual que con las
	      anclas: anteponiendo el símbolo &apos;#&apos;. En esta ocasión
	      el mapa estará en el mismo documento HTML, pero esto no
	      tiene porque ser así. Si, por 
	      ejemplo, usamos una imagen mapa en todas y cada una de las
	      imágenes de un sitio Web, podemos poner el mapa en la página
	      principal (<filename>index.htm</filename>) y después
	      referirnos a él como:
	    </para>

	    <programlisting>

	      <sgmltag>
		&lt;IMG SRC=&quot;imagen.gif&quot;
		USEMAP=&quot;index.htm#mapa1&quot;&gt;
	      </sgmltag>

	    </programlisting>

	    <para>
	      Más aún, no estamos limitados a que el mapa esté en nuestro
	      sitio Web, puede estar en cualquier lugar del WWW, para
	      referirnos a él tendremos que poner la dirección URL de la
	      página dónde esté seguido por un # y el nombre del mapa.
	    </para>

	  </listitem>

	  <listitem>

	    <para>
	      El segundo paso es la creación del mapa. Para ello usaremos
	      una nueva etiqueta: <emphasis>MAP</emphasis>. Esta etiqueta
	      tendrá una instrucción de inicio, <sgmltag>&lt;MAP ...&gt;
	      </sgmltag>, y otra de fin,<sgmltag>&lt;/MAP&gt;</sgmltag>
	      entre las cuales definiremos las diferentes <emphasis>zonas
		activas</emphasis> de la imagen mapa. El único atributo de
	      esta etiqueta es el necesario para darle un nombre: NAME, y
	      se usará de la siguiente manera:
	    </para>

	    <programlisting>

	      <sgmltag>&lt;MAP NAME=&quot;mapa1&quot;&gt;</sgmltag>
	      ...
	      <sgmltag>&lt;/MAP&gt;</sgmltag>

	    </programlisting>

	    <para>
	      A continuación debemos crear las formas a las que nos
	      referíamos antes. Para llevar a cabo esta labor usaremos otra
	      etiqueta más: <emphasis>AREA</emphasis> que deberá ser una
	      vez para cada zona de la imagen mapa y que consta de cuatro
	      atributos:
	    </para>

	    <itemizedlist>


	      <listitem>

		<para>
		  HREF: Este atributo es idéntico al del mismo nombre de la
		  etiqueta A. Con él debemos indicar la página o dirección
		  URL a la que <emphasis>saltaremos</emphasis> cuando
		  pulsemos sobre esta zona activa.
		</para>

	      </listitem>

	      <listitem>

		<para>
		  ALT: Sirve para incluir un texto alternativo.
		</para>

	      </listitem>

	      <listitem>

		<para>
		  SHAPE: Define la forma de la zona, puede tener tres
		  valores: <emphasis>rect</emphasis> (zona rectangular),
		  <emphasis>circle</emphasis> (zona circular) y <emphasis>
		    poly</emphasis> (zona poligonal).
		</para>

	      </listitem>

	      <listitem>

		<para>
		  COORDS: Coordenadas de la zona, su valor depende de la
		  forma de esta. En la figura 5.30:
		</para>

		<figure label="5.30">

		  <title>
		    En esta figura podemos ver los valores que puede tomar
		    el atributo COORDS en función de si la zona es
		    rectangular, circular o poligonal.
		  </title>
		  <graphic fileref="img/fig5-30.png"/>

		</figure>

		<para>
		  podemos ver como será en función de si el valor de SHAPE
		  es...
		</para>

		<itemizedlist>

		  <listitem>

		    <para>
		      <emphasis>rect</emphasis>: COORDS toma 4 valores
		      separados por comas que representan las coordenadas
		      de el vértice superior izquierdo y el inferior
		      derecho.
		    </para>

		  </listitem>

		  <listitem>

		    <para>
		      <emphasis>circle</emphasis>: COORDS toma 3 valores.
		      Los dos primeros son las coordenadas del centro y el
		      tercero es el radio.
		    </para>

		  </listitem>

		  <listitem>

		    <para>
		      <emphasis>poly</emphasis>: COORDS tiene un número
		      indefinido de valores que representan las coordenadas
		      de cada uno de sus vértices.
		    </para>

		  </listitem>

		</itemizedlist>

	      </listitem>

	    </itemizedlist>

	  </listitem>

	</orderedlist>

	<para>
	  Como ejemplo vamos a imaginar una imagen de 300x100 y vamos a
	  crear un mapa que la divida en dos:
	</para>

	<programlisting>

	  <sgmltag>&lt;MAP NAME=&quot;mapa2&quot;&gt;</sgmltag>
	  <sgmltag>
	    &lt;AREA SHAPE=&quot;rect&quot;
	    COORDS=&quot;0,0,150,100&quot;
	    HREF=&quot;izda.htm&quot;&gt;
	  </sgmltag>
	  <sgmltag>
	    &lt;AREA SHAPE=&quot;rect&quot;
	    COORDS=&quot;150,0,300,100&quot;
	    HREF=&quot;dcha.htm&quot;&gt;
	  </sgmltag>
	  <sgmltag>&lt;/MAP&gt;</sgmltag>

	</programlisting>

	<para>
	  No ha sido complicado, ¿no?
	</para>

	<note>

	  <para>
	    Las coordenadas vistas hasta ahora están dadas en pixeles.
	    También pueden darse en porcentajes, aunque esto sólo suele ser
	    útil para el caso de zonas rectangulares. La sintaxis a usar
	    sería por ejemplo: COORDS="0,0,50%,40%"
	  </para>

	</note>

	<para>
	  Existe un quinto atributo, NOHREF, que puede usarse en lugar de
	  HREF para indicar que una determinada zona no debe conducir a
	  ningún sitio al pulsar sobre ella. Este atributo no toma ningún
	  valor.
	</para>

	<para>
	  Si dos o más zonas se superponen se impone la que fuera definida
	  primero. Por esta razón si existe alguna zona con NOHREF suele
	  ponerse la primera de la lista.
	</para>

	<para>
	  El problema las imágenes mapa en cliente radica en que no todos
	  los navegadores están preparado para este tipo de imágenes mapa,
	  y por tanto no podemos estar seguros de que todos los vistantes
	  vayan a poder <emphasis>disfrutar</emphasis> de nuestra imagen
	  mapa.
	</para>

	<note>

	  <para>
	    Siempre que usemos una imagen enlace y especialmente si esta es
	    una imagen mapa es importante crear esos mismos enlaces con
	    textos para que se pueda acceder a ellos con navegadores de
	    sólo texto o por si existe algún problema con la visualización
	    de las imágenes.
	  </para>

	</note>

	<warning>

	  <para>
	    Hay que tener mucho cuidado con el uso de los atributos WIDTH y
	    HEIGHT con las imágenes mapa, ya que la imagen variará sus
	    dimensiones, pero el mapa no, por tanto las zonas que hayamos
	    definido no servirán.
	  </para>

	</warning>

	<para>
	  <emphasis>EJERCICIO 5.1</emphasis>: Llegados a este punto queremos
	  proponer un ejercicio sencillo a los lectores. Éste consistirá en
	  la creación de un mapa para la imagen de la figura 5.31:
	</para>

	<figure label="5.31">

	  <title>
	    Imagen mapa que puede sustituir el menu en forma de lista de la
	    página de la agencia de viajes Los Alpes.
	  </title>
	  <graphic fileref="img/fig5-31.png"/>

	</figure>

	<para>
	  incluida en el archivo <filename>ej5-1.zip</filename>, y usarla
	  para sustituir el menú creado con una lista en la página de la
	  agencia de viajes Los Alpes creada en la práctica 2. Además habrá
	  que proporcionar enlaces en modo texto alternativos a la imagen
	  (lo habitual es que estén en una sola línea. En el mismo archivo
	  (<filename>extra.zip</filename>) se ofrece una solución a este
	  ejercicio.
	</para>

      </sect3>

    </sect2>

  </sect1>

  <sect1>

    <title>Mejoras en las imágenes</title>

    <para>
      Tanto el formato GIF como el formato
      JPEG pueden ser vistos con casi la práctica
      totalidad de los navegadores. Sin embargo ¿Cuándo es conveniente usar
      uno y cuando es conveniente usar el otro?, ¿Puedo convertir las
      imágenes de un tipo a otro?, ¿Qué ventajas ofrece cada uno?. Conocer
      las respuestas a estas preguntas nos permitirá usar de una manera
      mucho más eficiente y profesional las imágenes en nuestras páginas. En
      este apartado nos dedicaremos a responderlas y veremos las últimas
      novedades del formato GIF que permite crear
      imágenes transparentes e imágenes con movimiento. Para terminar
      comentaremos algunos consejos para aprovechar al máximo y
      eficientemente las posibilidades del HTML
      en lo que a las imágenes se refiere.
    </para>

    <sect2>

      <title>Formatos GIF y JPEG</title>

      <para>
	El formato <emphasis>GIF</emphasis>
	(Graphics Interchange Format, Formato de intercambio de gráficos)
	fue creado por CompuServe con el objetivo de que fuese entendido
	por todo tipo de ordenadores. La primera versión de este formato es
	actualmente conocida como GIF87 y sus principales características
	son:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    Limitada a 256 colores, si usamos menos la imagen tendrá menor
	    tamaño.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Compresión sin pérdidas.
	  </para>

	</listitem>

      </itemizedlist>

      <para>
	Lo que le convierte en un formato idóneo para logos, iconos e todo
	tipo de dibujos con colores sólidos. Poco después apareció una
	segunda versión del formato conocido como GIF89a
	que añadía las siguientes características:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    Posibilidad de crear imágenes con entrelazado.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Transparencia.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Imágenes con movimiento.
	  </para>

	</listitem>

      </itemizedlist>

      <para>
	Actualmente los principales problemas del formato GIF
	es su limitación 256 colores, su mala compresión de
	fotografías y que está patentada por CompuServe, que quiere empezar
	a cobrar por su uso
      </para>

      <para>
	El formato <emphasis>JPEG</emphasis>
	(Joint Photographic Experts Group) fue creado por un grupo de
	expertos en fotografía por lo que está pensado especialmente para
	este tipo de imágenes. Sus principales características son:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    Puede almacenar 16 millones de colores. Además, al contrario de
	    lo que ocurría con el formato GIF, el
	    tamaño es independiente del número de colores usados.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Ofrece un algoritmo de compresión que reduce grandemente el
	    tamaño de las fotografías.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Esta compresión produce pérdidas, es decir, la imagen sufre
	    deterioro.
	  </para>

	</listitem>

      </itemizedlist>

      <para>
	Esta última característica es el gran contratiempo que tiene el
	formato JPEG pero en la mayoría de las
	ocasiones es inapreciable. Al comprimir una imagen en formato
	JPEG se puede elegir un nivel de
	compresión de 1 a 99. Cuanto mayor sea este nivel mayor será la
	compresión pero también habrá un mayor deterioro de la señal. En la
	figura 5.32:
      </para>

      <figure label="5.32">

	<title>
	  Mientras que el tamaño de la imagen JPEG
	  es mucho menor la pérdida de calidad apenas es
	  apreciable.
	</title>
	<graphic fileref="img/fig5-32.png"/>

      </figure>

      <para>
	podemos ver una comparación entre la imagen de la ballena en formato
	GIF y formato JPEG
	con un nivel de compresión 80 (lo habitual es
	20). Existe pérdida de calidad, pero no es muy apreciable, mientras
	que la disminución de tamaño es impresionante y para imágenes de
	mayor tamaño la diferencia es aún mayor.
      </para>

      <para>
	Una vez conocidas las características de los dos formatos ha llegado
	el momento de decidir cuando es conveniente usar uno y cuando es
	conveniente usar el otro. Por lo general:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    Conviene usar <emphasis>GIF
	    </emphasis> si la imagen es pequeña	y hay pocos colores, con
	    mayor motivo aún si hay bloques de la imagen con todos los
	    pixels del mismo color, como ocurre en los logos y dibujos
	    similares.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Es recomendable usar <emphasis>JPEG
	    </emphasis>siempre que la imagen sea muy grande y/o tenga muchos
	    colores como sucede en las fotografías.
	  </para>

	</listitem>

      </itemizedlist>

      <para>
	EJERCICIO 5.2: Llegados a este punto podemos darnos cuenta que en la
	práctica 2 usamos el formato GIF en
	algunas fotografías y que el resultado hubiese sido mucho mejor
	usando el formato JPEG. Este segundo ejercicio tendrá como objetivo
	usar un programa de retoque fotográfico para convertir de formato
	estas imágenes (<filename>montanas.gif</filename> y
	<filename>ski.gif</filename>).  Los programas que pueden
	usarse para llevar a 
	cabo este propósito son muchos: <productname>PhotoShop</productname>
	y <productname>Paint Shop Pro</productname> son una buena muestra de
	ellos. En el archivo <filename>ej5-2.zip</filename> se incluyen las
	dos imágenes ya convertidas con un nivel de compresión 60. De esta
	forma hemos conseguido reducir
	<emphasis><filename>montanas.gif</filename></emphasis> de 13
	Kb a 6'5 Kb y
	<emphasis><filename>ski.gif</filename></emphasis> de 10 Kb a
	4'6 Kb. Aunque en un 
	principio puede parecer poco cuando una página tiene bastantes
	imágenes escogiendo adecuadamente el formato de cada uno
	conseguiremos que cargue mucho más rápido.
      </para>

      <para>
	Además de GIF y JPEG
      existen otros formatos que no son usados habitualmente
	en el WWW, pero merece la pena comentar los formatos que <emphasis>
	  entienden</emphasis> los dos principales navegadores:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    <productname>Netscape</productname> soporta los formatos de
	    imágenes GIF, JPEG, XPM y XBM.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    <productname>Explorer</productname> soporta los formatos
	    GIF, JPEG,
	    PNG y BMP.
	  </para>

	</listitem>

      </itemizedlist>

      <para>
	Entre todos estos hay uno que destaca:
	<emphasis>PNG</emphasis> (Portable Network Graphics), porque 
	representa el futuro de los formatos de almacenamiento de imágenes y
	combina las ventajas de GIF y
	JPEG junto con otras nuevas:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    Buena compresión tanto para logos como para fotos.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Posibilidad de transparencia y entrelazado.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    16 Millones de colores.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Compresión sin pérdidas.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Capacidad de añadir comentarios e información extra junto con la
	    imagen.
	  </para>

	</listitem>

      </itemizedlist>

      <para>
	El formato PNG está pensado como un
	sustituto para el formato GIF, ya que
	JPEG seguirá siendo mejor con las
	fotografías. Por otro lado todavía habrá que esperar algún tiempo
	para que sea ampliamente aceptado. Aquellos lectores interesados en
	el tema pueden obtener más información al respecto en las siguientes
	direcciones:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    http://www.boutell.com/boutell/png
	  </para>

	</listitem>

	<listitem>

	  <para>
	    http://quest.jpl.nasa.gof/PNG/
	  </para>

	</listitem>

      </itemizedlist>

    </sect2>

    <sect2>

      <title>
	Transparencia, Entrelazado y GIFs
	animados
      </title>

      <para>
	Estas son las tres principales características que fueron añadidas
	al formato GIF en la revisión
	GIF89a. Vayamos una por una:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    Las imágenes transparentes consisten simplemente en elegir un
	    color de la imagen que no será <emphasis>pintado</emphasis> por
	    el visualizador (en nuestro caso será el navegador) al
	    mostrarla. El uso de imágenes transparentes es especialmente
	    útil cuando usamos una página con fondos. Por ejemplo, en la
	    figura 5.33:
	  </para>

	  <figure label="5.33">

	    <title>
	      En ocasiones, especialmente si usamos una imagen como fondo,
	      se consigue un efecto mucho mejor haciendo que nuestras
	      imágenes sean transparentes.
	    </title>
	    <graphic fileref="img/fig5-33.png"/>

	  </figure>

	  <para>
	    podemos ver la imagen de Los Alpes con transparencia y sin
	    transparencia en una página con una imagen de fondo. En
	    general las únicas imágenes que podemos considerar como
	    candidatas a convertirse  en imágenes transparentes son aquellas
	    con un color de fondo dominante. Si intentáramos hacer
	    transparente una fotografía los resultados no serían los
	    deseados.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Las imágenes entrelazadas son imágenes muy similares a las
	    normales. La única diferencia radica en la manera en que se va
	    mostrando la imagen en el navegador según llega. Cuando un
	    navegador carga una imagen normal va mostrándola desde el
	    principio y va avanzando hacia abajo. Las imágenes entrelazadas
	    por el contrario se muestran al principio como una imagen
	    borrosa que se va aclarando según la imagen termina de llegar,
	    esto ocurre por el método especial de almacenamiento que se usa
	    en este tipo de imágenes. El entrelazado es especialmente útil
	    cuando se aplica a las imágenes mapa, ya que en ocasiones no es
	    necesario ver la imagen a la perfección para elegir una opción.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    La tercera novedad del formato GIF89a
	    es probablemente la que más éxito ha tenido. Como el lector ya
	    ha adivinado estamos hablando de las imágenes animadas o
	    <emphasis>GIFs animados</emphasis>.
	    En los primeros años del WWW la única forma de tener una
	    animción en nuestras páginas consistía en usar un applet
	    (programilla) de <productname>Java</productname>o similar, con
	    los inconvenientes que esto representaba. Con la aparición de
	    los GIFs animados todo se simplificó,
	    estos en realidad	no son más que varias imágenes en formato
	    GIFalmacenadas en un único archivo y
	    que se van alternando ordenadamente para crear el efecto de la
	    animación. Cada una de estas imágenes deben ser creadas por
	    separado y despues juntadas con algun programa especial como
	    <productname>Microsoft Gif Animator</productname>,
	    <productname>GIF Movie Gear</productname>, etc. Otra
	    manera de obtener imágenes es acudir a las númerosas
	    páginas de internet con colecciones de estas imágenes a
	    nuestra disposición. En el directorio público DMOZ puede
	    encontrarse una gran cantidad de enlaces a estas páginas
	    en su sección de
	    <ulink
		   url="http://dmoz.org/Computers/Graphics/Web/Free/Animated_GIFs/">GIFs
	      animados</ulink>.
	  </para>	
	</listitem>

      </itemizedlist>

      <note>

	<para>
	  No es conveniente usar muchas imágenes animadas en una misma
	  página. Primero porque ocupan bastante tamaño, segundo porque
	  pueden ser mareantes para el visitante y tercero porque
	  provocarán que el navegador vaya muy lento si el ordenador no
	  tiene mucha memoria. Por estas razones nuestra recomendación es
	  usar un máximo de 2 imágenes animadas por página.
	</para>

      </note>

      <para>
	EJERCICIO 5.3: Este es el ejercicio final de este largo capítulo
	dedicado a las imágenes y al color en las páginas Web. En él
	pretendemos que el lector aplique los conocimientos que ha
	adquirido para mejorar el aspecto gráfico de las páginas que
	creamos en la práctica 2. En concreto proponemos los siguientes
	cambios:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    Poner un fondo en ambas páginas. El fondo debe ser
	    preferiblemente de tonos claros para que se pueda leer el texto
	    con facilidad. Si es necesario deberemos cambiar el color de
	    este para facilitar la legibilidad.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Hacer que tanto los enlaces normales y los visitados sean de
	    color verde y los activos morados.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Añadir los tamaños de las imágenes con los atributos WIDTH y
	    HEIGHT.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Incluir un texto alternativo (ALT) en todas y cada una de las
	    imágenes.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Añadir alguna imagen externa en los viajes con temas
	    relacionados con el destinos.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Mejorar el aspecto gráfico general con ideas propias del lector.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Usar adecuadamente los tipos de imágenes para conseguir una
	    página con gran contenido gráfico de un tamaño total (el
	    documento HTML y todas las imágenes)
	    de 40 Kb o menor.
	  </para>

	</listitem>

      </itemizedlist>

      <para>
	En el archivo <ulink url="extra/clip.zip"><filename>clip.zip</filename></ulink>
	se ofrecen algunas imágenes que pueden ayudar a realizar este
	ejercicio y en el archivo <ulink
	url="extra/pract2++.zip"><filename>pract2++.zip</filename></ulink> se 
	muestra una posible solución a este de la 
	que podemos ver un anticipo en la figura 5.34.
      </para>

      <figure label="5.34">

	<title>
	  Aspecto final de la página de Los Alpes después de aplicar los
	  conocimientos sobre imágenes que hemos adquirido en este capítulo.
	</title>
	<graphic fileref="img/fig5-34.png"/>

      </figure>

    </sect2>

  </sect1>
</article>
