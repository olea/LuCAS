<?xml version='1.0' encoding="ISO-8859-1"?>
<!-- <!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd">
  -->
<article lang="es">

  <articleinfo>
    <title>Formularios.</title>
    <date>13 de Marzo de 2002</date>
    <author>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </author>
    <author>
      <firstname>Rodrigo</firstname>
      <surname>García</surname>
    </author>
    <abstract>
      <para>La habilidad de interactuar con los usuarios es una de las principales características de los ordenadores y las redes informáticas. La posibilidad de realizar preguntas y recibir respuestas es una de las formas fundamentales de conseguir esta interactividad y el lenguaje HTML proporciona la habilidad de crear formularios e insertar cajas de texto, botones de opción y otros controles que nos permitirán aprovechar esa posibilidad de interactividad en nuestras páginas Web.</para>
    </abstract>
    <editor>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </editor>
    <releaseinfo>Versión 1.0</releaseinfo>
    <orgname>Conquista la Web</orgname>
    <legalnotice>
      <para>Copyright Jorge Ferrer y Rodrigo García. Se otorga permiso para copiar, distribuir y/o modificar este documento bajo los términos de la Licencia de Documentación Libre GNU, Versión 1.1 o cualquier otra versión posterior publicada por la Free Software Foundation. Puede consultar una copia de la licencia en: http://www.gnu.org/copyleft/fdl.html</para>
      <para>Para más detalles consultenos a través de la dirección jferrer@acm.org</para>
    </legalnotice>
  </articleinfo>

  <sect1>
    <title>Formularios en HTML.</title>
    <para>No es necesario navegar mucho tiempo por Internet para encontrar páginas Web en las que se piden datos a los navegantes. Quizá las primeras páginas que hicieron uso de esta posibilidad fueron las de los sistemas de búsqueda. Los formularios usados en estos sistemas son, en general, bastantes sencillos, únicamente es necesario un elemento, conocido como caja de texto, donde sea posible introducir la palabra o frase que deseamos buscar.</para>
    <para>En la figura 12.1 vemos un buen ejemplo de este tipo de uso. En ella vemos la página principal de Tower Communications se ofrece una caja de texto donde el usuario debe introducir una cadena de texto que desea buscar. Después debe pulsar sobre el botón ENVIAR, tras lo cual se mandará la información al servidor Web que la procesará y responderá enviando la información encontrada. Más adelante en la sección 'Como usar los datos de un formulario' veremos como es posible recoger y procesar esta información, pero por ahora nos centraremos en la creación y en el diseño de los formularios.</para>
    <figure label="12.1">
      <title>En la página principal de Tower Communications vemos un formulario que es usado para permitir a los visitantes introducir una cadena de texto que deseen buscar.</title>
      <graphic fileref="img/fig12-01.png"/>
    </figure>
    <para>Un caso más complejo de formularios es usado en las páginas en las que se ofrece a los navegantes la posibilidad de realizar sugerencias, ofrecer comentarios o mandar cualquier otro tipo de información. En general estos formularios ocupan una página entera, y están formados por diversos elementos. En la página de Tower podemos encontrar una página de sugerencias que ilustra la utilidad de esta forma de usar los formularios. En la figura 12.2 podemos apreciar esta página, que como vemos permite introducir datos en varios campos, tras rellenarlos deberemos pulsar sobre el botón 'Enviar formulario' para mandar la información.</para>
    <figure label="12.2">
      <title>En otra sección de la página de Tower Communications vemos un formulario más complicado formado por numerosas cajas de texto y otros elementos.</title>
      <graphic fileref="img/fig12-02.png"/>
    </figure>
    <para>Estos dos ejemplos son probablemente los más comunes entre las páginas del WWW, pero no los únicos. Los formularios son muy versátiles, como enseguida veremos, y la posibilidad de interactuar con los usuarios de las páginas será útil en multitud de ocasiones. El único límite será nuestra creatividad.</para>
    <para>Si queremos preguntar a los visitantes de nuestras páginas su nombre, su dirección de correo electrónico, crear un sistema de búsqueda, hacer un libro de visitas o simplemente pedir sugerencias necesitaremos crear formularios. Un formulario no es más que un conjunto de elementos que permiten introducir datos a los visitantes de nuestras páginas de una manera sencilla. Estos datos son en general texto o una serie de opciones entre las que se debe elegir una o varias. En este capítulo aprenderemos  todas las posibilidades que tenemos y como usarlas adecuadamente.</para>
    <para>El lenguaje HTML consta de una serie de etiquetas que permitirán crear de forma rápida y sencilla numerosos elementos de entrada de datos. Estos elementos, que reciben el nombre de controles, serán gráficos en la mayoría de navegadores, pero también existen métodos para que los navegadores que sólo pueden mostrar texto, como <productname>Lynx</productname>, puedan mostrarlos. Un formulario no es más que un conjunto de estos controles cuya información será enviada conjuntamente cuando el usuario pulse sobre el botón de envío.</para>
    <para>Para crear un formulario el lenguaje HTML proporciona la etiqueta <emphasis><sgmltag>FORM</sgmltag></emphasis>. Al contrario que la mayoría de etiquetas que hemos visto en los últimos capítulos ésta existe desde la especificación HTML 2.0 y por tanto es entendida prácticamente por cualquier navegador existente actualmente, por lo que puede ser usada con total libertad.</para>
    <para>Esta etiqueta consta de una instrucción de inicio, <sgmltag>&lt;FORM&gt;</sgmltag>, y una instrucción de fin, <sgmltag>&lt;/FORM&gt;</sgmltag>, entre las cuales podremos insertar todos los controles que deseemos. Dicho esto podemos crear nuestra primera página con un formulario. En ella adelantaremos uno de los controles más usados y sobre el que ya hemos hablado antes: la caja de texto. Un poco más adelante la trataremos más en detalle, pero la usaremos en este ejemplo para hacernos una idea de cómo se crea un formulario en una página Web. Para empezar, como siempre que creamos una página nueva, creamos un archivo nuevo en nuestro editor de texto o nuestro editor HTML. En él debemos insertar el siguiente código:</para>
    <programlisting>
      &lt;HTML&gt;
      &lt;HEAD&gt;
      &lt;TITLE&gt;Formulario de ejemplo&lt;/TITLE&gt;
      &lt;/HEAD&gt;
      &lt;BODY&gt;
      &lt;H1&gt;FORMULARIO DE EJEMPLO&lt;/H1&gt;
      &lt;FORM&gt;
      Introduzca su nombre: &lt;INPUT TYPE="Text"&gt;
      &lt;/FORM&gt;
      &lt;/BODY&gt;
      &lt;/HTML&gt;
    </programlisting>
    <para>Guardamos el archivo con un nombre de nuestra elección y lo abrimos con el navegador. El resultado será muy similar, si no igual, al que apreciamos en la figura 12.3. La caja de texto es el elemento que sigue al texto <emphasis>'Introduzca su nombre:'</emphasis>. En este caso estamos usando para visualizarla el navegador Internet <productname>Explorer</productname> para <productname>Windows</productname> 95, por lo que la caja de texto tiene el aspecto habitual en este sistema operativo. Si visualizamos este mismo código desde un navegador de <productname>UNIX</productname> o <productname>Macintosh</productname> la caja de texto sería mostrada con la apariencia habitual en estos entornos.</para>
    <figure label="12.3">
      <title>Nuestro primer formulario está compuesto por una caja de texto. Para introducirla hemos usado la etiqueta <sgmltag>INPUT</sgmltag> con <sgmltag>TYPE="text"</sgmltag>.</title>
      <graphic fileref="img/fig12-03.png"/>
    </figure>
    <para>La gran novedad de la caja de texto respecto a todos los elementos de las página Web que hemos visto hasta ahora es que permite a los usuarios introducir texto en ella. Para ello no tenemos más que pulsar con el ratón sobre ella (o seleccionarla en el caso de navegadores de texto) y escribir como si estuviésemos en un editor de texto. El texto aparecerá según lo vamos escribiendo. Una vez hemos escrito nuestro nombre (ver figura 12.4) enviaremos los datos pulsando la tecla ENTER.</para>
    <figure label="12.4">
      <title>Pulsando sobre la caja de texto nos aparecerá un cursor parpadeante que nos indica que podemos empezar a escribir texto.</title>
      <graphic fileref="img/fig12-04.png"/>
    </figure>
    <note>
      <para>En este ejemplo todavía no hemos indicado al navegador dónde debe enviar los datos. Esto se hace con el atributo <emphasis><sgmltag>ACTION</sgmltag></emphasis> de la etiqueta <sgmltag>FORM</sgmltag>, que será visto un poco más adelante. Al no indicar la dirección de destino el navegador no mandará los datos al pulsar la tecla ENTER (o pulsar el botón de envío), aunque por ahora nos olvidaremos de este detalle.</para>
    </note>
    <para>Pero ¿no existía un botón de envío? Si, en los ejemplos de la figura 12.1 y 12.2 veíamos que ambos formularios constaban de un botón de envío sobre el que había que pulsar para mandar los datos. En los casos en los que el formulario conste de más de un control, es decir, de más de un campo de entrada de datos, será necesario incluir el botón. Si el formulario simplemente tiene uno, como ocurre en este primer ejemplo que hemos realizado nosotros, el navegador es capaz de entender que al pulsar la tecla ENTER el usuario quiere mandar los datos de ese formulario, y por tanto el uso de botón de envío es opcional.</para>
    <note>
      <para>Los botones de envío son mostrados como enlaces normales en los navegadores de sólo texto, y por tanto sería más correcto usar también el termino 'enlace para enviar el formulario' . Sin embargo, por simplicidad, seguiremos usando únicamente el término botón.</para>
    </note>
    <para>Bien, pero ¿cómo se crea un botón de envío? El lenguaje HTML consta de una etiqueta, <emphasis><sgmltag>INPUT</sgmltag></emphasis>, que permite insertar varios tipos de controles, entre los que se encuentra el botón de envío. Para indicar el tipo de control que queremos insertar se usa el atributo <emphasis><sgmltag>TYPE</sgmltag></emphasis>. Para crear el botón de envío debemos usar <sgmltag>TYPE="submit"</sgmltag>. Por tanto si en el ejemplo anterior queremos insertar uno, debemos añadir esta etiqueta (de ahora en adelante omitiremos las etiquetas <sgmltag>HTML</sgmltag>, <sgmltag>HEAD</sgmltag> y <sgmltag>BODY</sgmltag>, pero por supuesto debe seguir usándose):</para>
    <programlisting>
      &lt;H1&gt;FORMULARIO DE EJEMPLO&lt;/H1&gt;
      &lt;FORM&gt;
      &lt;P&gt;Introduzca su nombre: &lt;INPUT TYPE="Text"&gt;
      &lt;P&gt;&lt;INPUT TYPE="Submit"&gt;
      &lt;/FORM&gt;
    </programlisting>
    <para>Si visualizamos este código con un navegador, veremos que la caja de texto está acompañada ahora de un botón con un texto que invita a pulsarlo para mandar los datos. En la figura 12.5 vemos que al visualizar este ejemplo con Internet <productname>Explorer</productname> 4.0 aparece el texto <emphasis>'Enviar consulta'</emphasis> en el botón, este texto ha sido puesto por defecto por este navegador, pero si visualizamos este código con otro puede cambiar. Si el navegador usado es una versión inglesa, el texto del botón estará en inglés. Esta situación es poco deseable en la mayoría de las ocasiones, por los que se creó un atributo, <emphasis><sgmltag>VALUE</sgmltag></emphasis>, que nos permitirá especificar nosotros mismos el texto que queremos que sea mostrado en el botón. Así en podemos reescribir el código para insertar el botón como:</para>
    <figure label="12.5">
      <title>Usando el código <sgmltag>&lt;INPUT TYPE="submit"&gt;</sgmltag> podemos insertar un botón de envío de manera que al pulsar sobre él se envían los datos del formulario.</title>
      <graphic fileref="img/fig12-05.png"/>
    </figure>
    <programlisting>
      &lt;P&gt;&lt;INPUT TYPE="Submit" VALUE="Envíeme"&gt;
    </programlisting>
    <para>Con lo que el resultado obtenido sería el que apreciamos en la figura 12.6. En este caso en el botón el mensaje es <emphasis>'Envíeme'</emphasis> y será éste siempre, independientemente del navegador que usemos para visualizar la página. En esta misma figura podemos apreciar que el tamaño del botón se adapta a la longitud del texto que pongamos en él.</para>
    <figure label="12.6">
      <title>Con el atributo <sgmltag>VALUE</sgmltag> podemos cambiar el texto por defecto del botón de envío por uno de nuestra elección. El ancho del botón se adaptará a la longitud del texto.</title>
      <graphic fileref="img/fig12-06.png"/>
    </figure>
    <para>Aunque lo habitual es incluir un único botón de envío el lenguaje HTML permite la posibilidad de incluir varios. En este caso debemos usar un nuevo atributo, <emphasis><sgmltag>NAME</sgmltag></emphasis>, para dar un nombre a cada uno que permita al servidor diferenciar cual se ha pulsado. Este nombre será enviado junto con los datos cuando se pulse sobre el botón. De esta forma es posible realizar acciones diferentes dependiendo de sí se pulsa uno u otro. Por ejemplo podían incluirse botones que simulasen distintas direcciones a las que acceder tras introducir los datos:</para>
    <programlisting>
      &lt;INPUT TYPE="Submit" VALUE="Arriba" NAME="arriba"&gt;
      &lt;INPUT TYPE="Submit" VALUE="Izquierda" NAME="izquierda"&gt;
      &lt;INPUT TYPE="Submit" VALUE="Derecha" NAME="derecha"&gt;
      &lt;INPUT TYPE="Submit" VALUE="Abajo" NAME="abajo"&gt;
    </programlisting>
    <para>Es importante indicar que el atributo <sgmltag>NAME</sgmltag> no debe usarse únicamente para el botón de envío. A continuación aprenderemos a insertar los distintos tipos de controles existentes y crearemos formularios más complejos que hasta ahora, por esta razón deberemos usar <sgmltag>NAME</sgmltag> en cada uno de los controles. Cuando se pulse el botón de envío se enviará los datos de cada control junto con el nombre especificado con este atributo. De esta forma el servidor podrá saber el control en que se ha insertado cada dato. Recordemos brevemente todos los atributos de la etiqueta <sgmltag>INPUT</sgmltag> cuando la usamos para insertar el botón de envío:</para>
    <programlisting>
      &lt;INPUT TYPE="Submit" NAME="Nombre" VALUE="Texto del botón"&gt;
    </programlisting>
    <para>Pasemos, sin esperar más tiempo, a estudiar cada uno de los controles existentes en el lenguaje HTML.</para>
  </sect1>

  <sect1>
    <title>Controles de Formularios.</title>
    <para>Todos los controles que pueden usarse a la hora de crear un formulario permitirán al navegante insertar información. Unas veces esta información consistirá en la inserción de un texto, que podrá ser de una sola línea o varias y que podrá estar oculto o no. En otras ocasiones se ofrecerá entre una serie de opciones entre las que simplemente hay que elegir una o varias. Todo ello se podrá realizar de diferentes formas que ahora mismo comenzamos a estudiar.</para>
    <para>Para empezar vamos a ver una serie de controles todos los cuales se crean con la etiqueta <emphasis><sgmltag>INPUT</sgmltag></emphasis>. Para diferenciar entre unos controles y otros se hará uso del atributo <emphasis><sgmltag>TYPE</sgmltag></emphasis> que puede tomar los siguientes valores: <sgmltag>text</sgmltag>, <sgmltag>password</sgmltag>, <sgmltag>radio</sgmltag>, <sgmltag>checkbox</sgmltag>, <sgmltag>submit</sgmltag>, <sgmltag>image</sgmltag>, <sgmltag>reset</sgmltag>, <sgmltag>file</sgmltag> y <sgmltag>hidden</sgmltag>. Además del atributo <sgmltag>TYPE</sgmltag>, esta etiqueta consta de algunos más cuya función variará del tipo de control estemos insertando, es decir, en función del valor del atributo <sgmltag>TYPE</sgmltag>. Uno común a todos es <emphasis><sgmltag>NAME</sgmltag></emphasis>, ya mencionado, con el que damos un nombre al control, y que es recomendable usarlo siempre. Otro también común a todos será <sgmltag>ALIGN</sgmltag>, que explicaremos con las cajas de texto.</para>
    <para>Una vez hecho este comentario, podemos empezar a estudiar cada uno de los tipos de control uno a uno.</para>
    <sect2>
      <title>Cajas de texto.</title>
      <para>Ya hemos introducido antes las cajas de texto. Como resumen recordaremos que para insertar este tipo de control en una página Web se usa la etiqueta <sgmltag>INPUT</sgmltag> (esta misma etiqueta será la utilizada para insertar la mayoría de controles), con <emphasis><sgmltag>TYPE</sgmltag></emphasis>="text". Es decir:</para>
      <programlisting>
	&lt;FORM&gt;
	&lt;INPUT TYPE="text"&gt;
	&lt;/FORM&gt;
      </programlisting>
      <para>Si nuestra intención es insertar más de un control será conveniente darle un nombre a la caja de texto. Para ello usaremos, tal y como hacíamos con el botón de envío, el atributo <sgmltag>NAME</sgmltag>:</para>
      <programlisting>
	&lt;FORM&gt;
	&lt;INPUT TYPE="text" NAME="mitexto"&gt;
	&lt;/FORM&gt;
      </programlisting>
      <para>Como podemos apreciar la etiqueta <sgmltag>INPUT</sgmltag> consta de una única instrucción. Ya hemos visto los atributos <sgmltag>TYPE</sgmltag> y <sgmltag>NAME</sgmltag> que existe siempre en la etiqueta <sgmltag>INPUT</sgmltag>. Cuando insertamos una caja de texto, es decir, cuando ponemos <sgmltag>TYPE="text"</sgmltag> existen otros dos:</para>
      <variablelist>
	<varlistentry>
	  <term><emphasis><sgmltag>SIZE</sgmltag>:</emphasis></term>
	  <listitem>
	    <para>Determina la anchura de la caja de texto. El valor por defecto de este atributo es 20 caracteres, esta es la longitud de los ejemplos que veíamos en las figuras 12.3 a 12.6. En ocasiones convendrá decrementar o incrementar este valor por defecto, pero en todo caso siempre será conveniente mantener un valor menor de 50 caracteres de manera que la caja de texto quepa en la mayoría de pantallas. Un problema adicional que dificulta una correcta elección del tamaño de la caja es que este tamaño será considerado de distinta forma por los distintos navegadores y más aún si estos son de distintos sistemas operativos. En la figura 12.7 podemos ver una serie de cajas de texto de diferentes tamaños y las diferencias entre Internet <productname>Explorer</productname> y <productname>Netscape</productname> <productname>Navigator</productname> al mostrar el mismo código.</para>
	    <figure label="12.7">
	      <title>El atributo <sgmltag>SIZE</sgmltag> nos permite variar la longitud de la caja de texto. Debemos tener en cuenta que en diferentes navegadores un mismo valor no se corresponde a una misma longitud.</title>
	      <graphic fileref="img/fig12-07.png"/>
	    </figure>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis><sgmltag>MAXLENGTH</sgmltag>:</emphasis></term>
	  <listitem>
	    <para>Con este atributo limitamos el número máximo de caracteres que pueden ser escritos en una caja de texto. El valor de este atributo puede ser mayor o menor que el especificado en <sgmltag>SIZE</sgmltag>, y que es totalmente independiente. Si es mayor cuando lleguemos al final de la caja de texto los nuevos caracteres que insertemos irán desplazando hacia la izquierda a los primeros, que dejarán de estar a la vista (OJO, esto no quiere decir que sean borrados). Para entender el funcionamiento es mejor comprobarlo <emphasis>in situ</emphasis> con unos ejemplos. Recomendamos al lector que pruebe a visualizar los siguientes códigos, y que intente escribir una frase algo larga en cada uno de ellos:</para>
	    <programlisting>
	      &lt;INPUT TYPE="text" SIZE="20" MAXLENGTH="20"&gt;
	      &lt;INPUT TYPE="text" SIZE="20" MAXLENGTH="5"&gt;
	      &lt;INPUT TYPE="text" SIZE="20" MAXLENGTH="40"&gt;
	    </programlisting>
	    <para>Por último queda decir que si no usamos el atributo <sgmltag>MAXLENGTH</sgmltag> el número de caracteres que pueden introducirse en la caja de texto no tendrá límite.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis><sgmltag>VALUE</sgmltag>:</emphasis></term>
	  <listitem>
	    <para>Sirve para especificar un texto que debe aparecer por defecto en la caja de texto, antes de que el usuario escriba nada. Este texto suele ser, en general, o bien instrucciones o bien la respuesta más probable. Veamos un ejemplo que ilustra estos dos casos:</para>
	    <programlisting>
	      &lt;FORM&gt;
	      &lt;P&gt;Nombre:&lt;INPUT TYPE="text" VALUE="Introduzca aquí su nombre"&gt;
	      &lt;P&gt;¿Le gusta nuestro Web? &lt;INPUT TYPE="text" VALUE="Si, muchísimo"&gt;
	      &lt;/FORM&gt;
	    </programlisting>
	    <para>Invitamos al lector a que pruebe este ejemplo en su navegador y compruebe los resultados.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para><emphasis>Alineamiento de controles.</emphasis></para>
      <para>Tal y como hemos indicado antes, todos los controles que insertamos con la etiqueta <sgmltag>INPUT</sgmltag> tienen un atributo, llamado <sgmltag>ALIGN</sgmltag>, que nos permitirá seleccionar entre varios tipos de alineamiento. Este atributo apareció en el estándar HTML 3.2, al contrario que el resto de etiquetas y atributos que hemos visto hasta ahora en este capítulo, que existen desde la versión anterior del estándar (HTML 2.0).</para>
      <para>El atributo <sgmltag>ALIGN</sgmltag> puede tomar los siguientes valores:</para>
      <variablelist>
	<varlistentry>
	  <term><emphasis><sgmltag>ALIGN="top"</sgmltag>:</emphasis></term>
	  <listitem>
	    <para>Alinea verticalmente el control con la parte superior de la línea en que es insertado.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis><sgmltag>ALIGN="bottom"</sgmltag>:</emphasis></term>
	  <listitem>
	    <para>Alinea verticalmente el control con la parte inferior de la línea.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis><sgmltag>ALIGN="middle"</sgmltag>:</emphasis></term>
	  <listitem>
	    <para>Sitúa el control a una altura media entre el resto de elementos de la línea.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis><sgmltag>ALIGN="left"</sgmltag>:</emphasis></term>
	  <listitem>
	    <para>En este caso estamos alineando el control horizontalmente a la izquierda. Al contrario de lo que ocurría con las imágenes y con las tablas, el texto no bordeará el control por su derecha, situándose éste en una línea propia. En la figura 12.8 podemos ver un ejemplo de este tipo de alineamiento y del siguiente:</para>
	    <figure label="12.8">
	      <title>El atributo <sgmltag>ALIGN</sgmltag> de la etiqueta <sgmltag>INPUT</sgmltag> nos permite alinear los controles. En este caso vemos una caja de texto alineada a la izquierda (<sgmltag>ALIGN="left"</sgmltag>).</title>
	      <graphic fileref="img/fig12-08.png"/>
	    </figure>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis><sgmltag>ALIGN="right"</sgmltag>:</emphasis></term>
	  <listitem>
	    <para>Este valor es idéntico al anterior en funcionamiento, sólo que ahora el control se situará a la derecha de la ventana del navegador.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para>Todos el atributo <sgmltag>ALIGN</sgmltag> y todos estos valores existen para todos los controles que veamos a partir de ahora y que usen la etiqueta <sgmltag>INPUT</sgmltag>.</para>
      <para>Para terminar con las cajas de texto veamos un resumen de todos sus atributos y sus funciones:</para>
      <programlisting>
	&lt;INPUT TYPE="text" NAME="nombre" VALUE="valor por defecto" SIZE="tamaño" MAXLENGTH="longitud_máxima" ALIGN="alineamiento"&gt;
      </programlisting>
    </sect2>
    <sect2>
      <title>Cajas de texto para claves.</title>
      <para>En ocasiones puede ser conveniente pedir al usuario algún tipo de información confidencial como puede ser una clave de acceso o <emphasis>password</emphasis>. Debemos tener en cuenta que algunos usuarios pueden estar en algún lugar público o, al menos, con gente alrededor que pueden leer lo que escriba en la pantalla y por tanto no le interesará que lo que escribe sea mostrado en ésta. El lenguaje HTML permite utilizar, en estos casos, una caja de texto modificada en la que al escribir se mostrarán únicamente asteriscos. Para ello debemos usar <emphasis><sgmltag>TYPE="password"</sgmltag></emphasis> en la etiqueta <sgmltag>INPUT</sgmltag>. Un ejemplo típico de uso de password es al pedir una identificación, por ejemplo para entrar en algunas secciones de una página. Para crear este formulario podemos usar el siguiente código:</para>
      <programlisting>
	&lt;H2&gt;&lt;FONT COLOR="#8080FF"&gt;Formulario de autenticación&lt;/FONT&gt;&lt;/H2&gt;
	&lt;FORM&gt;
	&lt;P&gt;Introduzca su nombre: &lt;INPUT TYPE="text" NAME="nombre"&gt;
	&lt;P&gt;Introduzca su clave: &lt;INPUT TYPE="password" NAME="clave"&gt;
	&lt;P&gt;&lt;INPUT TYPE="submit" VALUE="Enviar"&gt;
	&lt;/FORM&gt;
      </programlisting>
      <para>Visualizando este código con <productname>Explorer</productname> obtenemos el resultado de la figura 12.9. En ella vemos como el texto que hemos escrito en el segundo campo, el de la caja de texto para passwords, no ha sido mostrado siendo sustituido por asteriscos.</para>
      <figure label="12.9">
	<title>Las cajas de texto para claves muestran asteriscos en lugar del texto que escribimos para aumentar la confidencialidad.</title>
	<graphic fileref="img/fig12-09.png"/>
      </figure>
      <warning>
	<para>La caja de texto para claves o passwords simplemente impide que el texto que se escribe sea mostrado en pantalla, sin embargo este texto no es codificado al ser mandado al servidor Web, y por tanto no es seguro mandar datos confidenciales.</para>
      </warning>
      <para>Las cajas de texto para claves también tienen los atributos <sgmltag>SIZE</sgmltag>, <sgmltag>MAXLENGTH</sgmltag>, <sgmltag>VALUE</sgmltag> y <sgmltag>ALIGN</sgmltag> que vimos en las cajas de texto. Al igual que hicimos con estas, veamos un resumen de todos los atributos de las cajas de texto para claves:</para>
      <programlisting>
	&lt;INPUT TYPE="password" NAME="clave" SIZE="tamaño" MAXLENGTH="longitud_máxima" VALUE="clave por defecto" ALIGN="alineamiento"&gt;
      </programlisting>
    </sect2>
    <sect2>
      <title>Botones de elección.</title>
      <para>Estos controles reciben también el nombre de botones de radio, como traducción directa de su denominación inglesa <emphasis>radio buttons</emphasis> y porque en general los navegadores suelen darles una forma circular. Para insertar un botón de elección usaremos de nuevo la etiqueta <emphasis><sgmltag>INPUT</sgmltag></emphasis>, pero esta vez el valor del atributo <sgmltag>TYPE</sgmltag> será <emphasis><sgmltag>radio</sgmltag></emphasis>:</para>
      <programlisting>
	&lt;FORM&gt;
	&lt;INPUT TYPE="radio"&gt;
	&lt;/FORM&gt;
      </programlisting>
      <para>Este tipo de controles tiene dos estados o posiciones: seleccionado (ON) o no seleccionado (OFF), estando inicialmente todos en la posición OFF. También es posible especificar que un botón determinado esté seleccionado inicialmente insertando el atributo <sgmltag>CHECKED</sgmltag> en la etiqueta <sgmltag>INPUT</sgmltag> de la siguiente manera:</para>
      <programlisting>
	&lt;INPUT TYPE="radio" CHECKED&gt;
      </programlisting>
      <para>Los botones de elección suelen ser insertados en los formularios en grupos, dando al usuario la posibilidad de elegir entre una serie de opciones. Cuando pulsamos sobre un botón de radio le pasamos a la posición ON y permanecerá en ese estado hasta que pulsemos en otra opción del mismo grupo. Esto es así porque entre los botones de radio de un mismo grupo sólo uno de ellos puede estar seleccionado, por tanto cuando seleccionamos uno, aquel que estuviese seleccionado previamente dejará de estarlo.</para>
      <para>Para indicar que una serie de botones de elección pertenecen a un mismo grupo debemos incluir el mismo valor en el atributo <sgmltag>NAME</sgmltag> en todos ellos. Además debemos usar el atributo <sgmltag>VALUE</sgmltag> para dar un nombre distinto a cada uno de los botones. Veamos un ejemplo:</para>
      <programlisting>
	Indique el tipo de música que más le guste:
	&lt;FORM&gt;
	&lt;P&gt;&lt;INPUT TYPE="radio" NAME="musica" VALUE="Jazz"&gt;Jazz
	&lt;P&gt;&lt;INPUT TYPE="radio" NAME="musica" VALUE="Pop"&gt;Pop
	&lt;P&gt;&lt;INPUT TYPE="radio" NAME="musica" VALUE="Rock"&gt;Rock
	&lt;P&gt;&lt;INPUT TYPE="radio" NAME="musica" VALUE="Country"&gt;Country
	&lt;/FORM&gt;
      </programlisting>
      <para>Con este código obtenemos el resultado que apreciamos en la figura 12.10. En ella vemos que únicamente el botón de radio correspondiente a 'Pop' está seleccionado. Invitamos al lector a que pruebe este ejemplo y observe cómo al seleccionar otro de los botones de elección el anterior deja de estar seleccionado.</para>
      <figure label="12.10">
	<title>Los botones de elección permiten elegir entre un conjunto de opciones, de las cuales podemos elegir sólo una.</title>
	<graphic fileref="img/fig12-10.png"/>
      </figure>
      <para>Por supuesto, es posible incluir varios grupos de botones de selección dentro de un mismo formulario. Por ejemplo al código anterior podríamos añadirle (antes de <sgmltag>&lt;/FORM&gt;</sgmltag>) este otro:</para>
      <programlisting>
	&lt;P&gt;&lt;INPUT TYPE="radio" NAME="cine" VALUE="Accion"&gt;Acci&amp;oacute;n
	&lt;P&gt;&lt;INPUT TYPE="radio" NAME="cine" VALUE="Comedia"&gt;Comedia
	&lt;P&gt;&lt;INPUT TYPE="radio" NAME="cine" VALUE="CienciaFiccion"&gt;Ciencia-Ficci&amp;oacute;n
	&lt;P&gt;&lt;INPUT TYPE="radio" NAME="cine" VALUE="Drama"&gt;Drama
      </programlisting>
      <para>De esta manera tendríamos el formulario de la figura 12.11 en la que vemos que se ha podido seleccionar 'Pop' como tipo de música favorito y 'Ciencia-ficción' como género cinematográfico preferido, al pertenecer los botones a distintos grupos.</para>
      <figure label="12.11">
	<title>En un mismo formulario podemos incluir varios grupos de botones de elección. Los visitantes podrán seleccionar una opción en cada uno.</title>
	<graphic fileref="img/fig12-11.png"/>
      </figure>
      <para>Quizá el lector haya tenido ya la siguiente duda. Si en las cajas de texto se manda al servidor el texto que introduzca el usuario, ¿qué se envía cuando usamos botones de elección? La respuesta es simple. Por un lado es necesario enviar el nombre del grupo (el valor del atributo <sgmltag>NAME</sgmltag>) y por otro la opción elegida (el valor del atributo <sgmltag>VALUE</sgmltag>). En el ejemplo anterior en el que se han seleccionado 'Pop' y 'Ciencia- Ficción' se enviará el siguiente mensaje:</para>
      <programlisting>
	musica=Pop
	cine=CienciaFiccion
      </programlisting>
      <note>
	<para>En realidad, el mensaje que se envía no es exactamente el anterior, ya que éste es codificado. Aún así las diferencias no son muchas, y en este caso el mensaje, ya codificado, que se enviaría constaría de una única línea: <emphasis>musica=Pop&amp;cine=CienciaFiccion</emphasis>.</para>
      </note>
      <para>Veamos un resumen de los atributos de este control:</para>
      <programlisting>
	&lt;INPUT TYPE="radio" NAME="Nombre_del_grupo" VALUE="Nombre_de_esta_opción" ALIGN="alineamiento"&gt;
      </programlisting>
    </sect2>
    <sect2>
      <title>Cajas de selección.</title>
      <para>Las cajas de selección guardan ciertos parecidos con los botones de radio, pero además permitirán seleccionar varias opciones en una lista. Al igual que dichos botones tienen dos posiciones, seleccionados o no seleccionados, estando en esta última posición inicialmente, a no ser que hayamos usado el atributo <sgmltag>CHECKED</sgmltag>. Cada caja de selección es independiente del resto, y por tanto el valor del atributo <sgmltag>NAME</sgmltag> debe ser diferente en cada una.</para>
      <para>Para insertar una caja de selección debemos usar de nuevo la etiqueta <sgmltag>INPUT</sgmltag>, pero esta vez con <emphasis><sgmltag>TYPE="checkbox"</sgmltag></emphasis>. Veamos un ejemplo de uso de este tipo de controles:</para>
      <programlisting>
	Indique su profesión (escoja todas las que procedan):
	&lt;FORM&gt;
	&lt;P&gt;&lt;INPUT TYPE="checkbox" NAME="medico"&gt;Médico
	&lt;P&gt;&lt;INPUT TYPE="checkbox" NAME="programador" CHECKED&gt;Programador
	&lt;P&gt;&lt;INPUT TYPE="checkbox" NAME="abogado"&gt;Abogado
	&lt;P&gt;&lt;INPUT TYPE="checkbox" NAME="ingeniero"&gt;Ingeniero
	&lt;CENTER&gt;&lt;INPUT TYPE="submit" VALUE="Enviar"&gt;&lt;/CENTER&gt;
	&lt;/FORM&gt;
      </programlisting>
      <para>Pulsando sobre cada caja de selección se cambia de seleccionado a no seleccionado, independientemente de la posición del resto. En el código podemos apreciar que es posible indicar que una caja de selección esté seleccionada por defecto. En la figura 12.12 vemos este ejemplo, y podemos apreciar como es posible seleccionar varias opciones simultáneamente.</para>
      <figure label="12.12">
	<title>Las cajas de selección son independientes unas de otras, por los que es posible tener varias seleccionadas.</title>
	<graphic fileref="img/fig12-12.png"/>
      </figure>
      <para>Con las cajas de selección también podemos usar el atributo <sgmltag>VALUE</sgmltag>, en este caso no será imprescindible, ya que el nombre dado con <sgmltag>NAME</sgmltag> es diferente en cada caso, pero a veces puede ser conveniente. En el caso de la figura se mandaría al servidor el siguiente mensaje:</para>
      <programlisting>
	programador=ON&amp;ingeniero=ON
      </programlisting>
      <para>Si hubiésemos usado el atributo <sgmltag>VALUE</sgmltag> se sustituiría la palabra ON (que es la que se pone por defecto) por la que nosotros hubiésemos indicado en las cajas de selección con las opciones  'programador' e 'ingeniero'. Por ejemplo si en el código anterior hubiésemos escrito lo siguiente en el código de la caja del ingeniero, dejando el resto igual:</para>
      <programlisting>
	&lt;P&gt;&lt;INPUT TYPE="checkbox" NAME="ingeniero" VALUE="SI"&gt;Ingeniero
      </programlisting>
      <para>El navegador hubiera enviado el mensaje:</para>
      <programlisting>
	programador=SI&amp;ingeniero=ON
      </programlisting>
      <para>Todos los atributos de este control quedan resumidos en el siguiente código:</para>
      <programlisting>
	&lt;INPUT TYPE="checkbox" NAME="Nombre" ALIGN="alineamiento" VALUE="valor_que_debe_enviarse"&gt;
      </programlisting>
    </sect2>
    <sect2>
      <title>Imágenes.</title>
      <para>El lenguaje HTML permite una manera alternativa para insertar un botón de envío personalizado, al poder usar en lugar del botón normal que hemos visto anteriormente una imagen creada por nosotros mismos. Para insertar este tipo de control debemos usar <emphasis><sgmltag>TYPE="image"</sgmltag></emphasis>, mientras que la dirección de la imagen se indica con el atributo <emphasis><sgmltag>SRC</sgmltag></emphasis> al igual que hacíamos con la etiqueta <sgmltag>IMG</sgmltag>. Aprovecharemos el ejemplo de este tipo de control para realizar un formulario que englobe lo visto hasta ahora.</para>
      <para><emphasis>Ejemplo 12.1.</emphasis></para>
      <para>Hemos elegido como motivo del formulario un sistema de reserva de habitaciones de un hotel. El usuario deberá introducir ciertos datos y enviar posteriormente la reserva. Comenzamos el formulario creando un archivo nuevo y escribiendo la estructura básica de la página:</para>
      <programlisting>
	&lt;HTML&gt;
	&lt;HEAD&gt;
	&lt;TITLE&gt;Botón de envío personalizado&lt;/TITLE&gt;
	&lt;/HEAD&gt;
	&lt;BODY BGCOLOR="#B6D6B6"&gt;
	
	&lt;/BODY&gt;
	&lt;/HTML&gt;
      </programlisting>
      <para>A continuación insertamos un encabezado y la etiqueta <sgmltag>FORM</sgmltag>, donde iremos insertando los distintos controles de los que consta el formulario (todo el código que mostremos de ahora en adelante en este ejemplo debe introducirse entre las instrucciones <sgmltag>&lt;BODY ...&gt;</sgmltag> y <sgmltag>&lt;/BODY&gt;</sgmltag>):</para>
      <programlisting>
	&lt;CENTER&gt;&lt;H2&gt;&lt;FONT COLOR="#8080FF"&gt;Hoteles El Paraíso&lt;/FONT&gt;&lt;/H2&gt;&lt;/CENTER&gt;
	&lt;H3&gt;Sistema de reserva de habitaciones:&lt;/H3&gt;
	&lt;FORM&gt;
	
	&lt;/FORM&gt;
      </programlisting>
      <para>Los colores que hemos elegido ahora para el encabezado como antes para el color de fondo pueden ser cambiados por el lector a su gusto.</para>
      <para>Es hora de insertar los controles. En primer lugar debemos introducir un campo para preguntar el nombre. Para ello lo más indicado es usar una caja de texto, elegimos un tamaño de 30 caracteres con el atributo <sgmltag>SIZE</sgmltag> y no usamos <sgmltag>MAXLENGTH</sgmltag> para no limitar la longitud del nombre que se pueda insertar. Además introducimos un segundo campo donde debe insertar una clave secreta, que debe elegir el mismo usuario, y que le servirá para identificarse cuando llegue al hotel junto con su nombre. En este caso usaremos una caja de texto para claves. Dado que la clave sólo puede constar de 4 caracteres limitamos el tamaño de la caja (<sgmltag>SIZE</sgmltag>) y la longitud del texto que se puede escribir (<sgmltag>MAXLENGTH</sgmltag>) a este valor:</para>
      <programlisting>
	&lt;FORM&gt;
	&lt;P&gt;Introduzca su nombre: &lt;INPUT TYPE="text" NAME="nombre" SIZE="30"&gt;&lt;/P&gt;
	&lt;P&gt;Introduzca una clave para su identificación (4 letras): &lt;INPUT TYPE="password" NAME="clave" SIZE="4" MAXLENGTH="4"&gt;&lt;/P&gt;
	&lt;!-- aquí iremos insertando el resto del código --&gt;
	&lt;/FORM&gt;
      </programlisting>
      <para>Veamos lo que llevamos. Visualizando el código que hemos escrito hasta ahora obtenemos el resultado de la figura 12.13.</para>
      <figure label="12.13">
	<title>Este es el aspecto que tiene el código que hemos escrito hasta ahora. En el formulario de la clave sólo se podrán insertar 4 caracteres.</title>
	<graphic fileref="img/fig12-13.png"/>
      </figure>
      <para>El siguiente paso será preguntar al usuario qué tipo de habitación desea reservar. Existen dos opciones, una habitación individual o una habitación doble. Para ofrecer estas dos respuestas posibles resultan idóneos los botones de radio, ya que sólo una de las dos pueden ser seleccionadas simultáneamente. Los dos botones que necesitamos deben estar en el mismo grupo, para lo cual usamos <sgmltag>NAME="habitación"</sgmltag>, para diferenciarlas ponemos diferentes valores en el atributo <sgmltag>VALUE</sgmltag>:</para>
      <programlisting>
	&lt;FORM&gt;
	&lt;!-- ... --&gt;
	&lt;P&gt;Tipo de habitación&lt;/P&gt;
	&lt;INPUT TYPE="radio" NAME="tipoHabitacion" VALUE="individual"&gt;Individual &amp;nbsp;&amp;nbsp;
	&lt;INPUT TYPE="radio" NAME="tipoHabitacion" VALUE="doble" CHECKED&gt;Doble
	
	&lt;/FORM&gt;
      </programlisting>
      <para>Los espacios &amp;nbsp han sido usados para separar ambas opciones, ya que están en la misma línea. La cadena "<sgmltag>&lt;!-- ... --&gt;</sgmltag>" simplemente hace referencia a que en ese lugar va el código que hemos escrito antes para preguntar el nombre y la clave, aunque no lo repitamos de nuevo. De ahora en adelante lo usaremos para indicar <emphasis>'aquí va el código escrito anteriormente'</emphasis>.</para>
      <para>A continuación los dueños del hotel desean ofertar una serie de extras especiales junto con la habitación, de las cuales pueden elegirse (de manera independiente) las que se deseen. Las cajas de selección serán los controles que debemos usar en este caso.</para>
      <programlisting>
	&lt;FORM&gt;
	&lt;!-- ... --&gt;
	&lt;P&gt;Opciones extra:&lt;/P&gt;
	&lt;INPUT TYPE="checkbox" NAME="desayuno" CHECKED&gt;Desayuno en cama &amp;nbsp;&amp;nbsp;
	&lt;INPUT TYPE="checkbox" NAME="jakuzzi"&gt;Jakuzzi &amp;nbsp;&amp;nbsp;
	&lt;INPUT TYPE="checkbox" NAME="climatizador"&gt;Climatizador

	&lt;/FORM&gt;
      </programlisting>
      <para>Por petición de los dueños, que quieren promocionar este servicio, hemos preseleccionado el desayuno en cama inicialmente usando el atributo <sgmltag>CHECKED</sgmltag>.</para>
      <para>El último paso será insertar el botón de envío. Podríamos simplemente usar:</para>
      <programlisting>
	&lt;INPUT TYPE="submit" VALUE="Envíeme"&gt;
      </programlisting>
      <para>Pero en este caso seremos algo más originales y nos crearemos nuestro propio botón. Para ello únicamente necesitaremos un programa de dibujo y algo de creatividad. Una vez dibujado el botón debemos guardarlo en formato GIF o JPG, y lo ponemos en el mismo directorio donde está la página que estamos creando. En nuestro caso hemos llamado a la imagen <filename>envio.gif</filename>. El código para insertar esta imagen de manera que sirva como botón de envío será:</para>
      <programlisting>
	&lt;FORM&gt;
	&lt;!-- ... --&gt;
	&lt;CENTER&gt; &lt;INPUT TYPE="image" NAME="envio" SRC="envio.gif"&gt;
	&lt;/CENTER&gt;
	
	&lt;/FORM&gt;
      </programlisting>
      <para>Con esto que podemos dar por concluido el formulario. En la figura 12.14 podemos apreciar el resultado de visualizar este formulario con el navegador Internet <productname>Explorer</productname> 4.0. Este es el aspecto inicial, con las opciones 'Doble' y 'Desayuno en cama' preseleccionados al usar el atributo <sgmltag>CHECKED</sgmltag>.</para>
      <figure label="12.14">
	<title>Este es el resultado final del formulario del ejercicio 12.1 en el que destaca el uso de una imagen personalizada como botón de envío.</title>
	<graphic fileref="img/fig12-14.png"/>
      </figure>
      <note>
	<para>El navegador <productname>Explorer</productname> permite el uso de los atributos <sgmltag>WIDTH</sgmltag> y <sgmltag>HEIGHT</sgmltag> para indicar el tamaño de las imágenes de formularios. También permite usar otros atributos de la etiqueta <sgmltag>IMG</sgmltag> como <sgmltag>VSPACE</sgmltag> y <sgmltag>HSPACE</sgmltag> para controlar los márgenes verticales y horizontales alrededor de la imagen y <sgmltag>BORDER</sgmltag> para controlar el grosor del borde.</para>
      </note>
      <para>En este ejemplo hemos usado una imagen creada por nosotros mismos como sustituto del botón de envío estándar. Sin embargo las imágenes de formulario tienen una función extra, ya que el navegador envía, cuando el usuario pulsa una imagen, las coordenadas 'x' e 'y' sobre las que se ha pulsado, en relación a la esquina superior izquierda, como si fueran parte de la información del formulario. De esta forma el servidor Web puede realizar diferentes acciones en función del lugar de la imagen donde se ha pulsado. De hecho este es un método alternativo para crear una imagen mapa. Para ello no tenemos más que usar el código:</para>
      <programlisting>
	&lt;FORM&gt;
	&lt;INPUT TYPE="image" SRC="imagenmapa.gif"&gt;
	&lt;/FORM&gt;
      </programlisting>
      <para>Posteriormente debemos crear un programa en el servidor que sea capaz de leer los datos (es decir, las coordenadas donde se ha pulsado) de este formulario y devolver la respuesta oportuna. Más sobre esto en la sección 'Como usar los datos de un formulario' que veremos más adelante.</para>
      <para>En el capítulo 6 vimos la diferencia entre las imágenes mapa en el servidor y las imágenes mapa en el cliente (las que podíamos crear con el lenguaje HTML). Este nuevo tipo se corresponde con las procesadas con el servidor, y por tanto tiene el inconveniente de necesitar un programa externo que se ejecute en el servidor, por lo que no nos basta con el lenguaje HTML.</para>
      <para>Para terminar con las imágenes de formulario veremos, como hemos venido haciendo hasta ahora, un resumen con sus atributos:</para>
      <programlisting>
	&lt;INPUT TYPE="image" SRC="URL" NAME="Nombre"&gt;
      </programlisting>
    </sect2>
    <sect2>

      <title>Botón de borrado</title>

      <para>
	La mayoría de los controles anteriores permitían al usuario
	introducir una serie de datos o elegir entre una serie de
	opciones. Inicialmente las cajas de texto aparecían vacías, a no
	ser que hubiésemos usado el atributo VALUE para asignarles por
	defecto. Igualmente los botones de elección y cajas de selección
	aparecían en posición de no seleccionados a no ser que hubiésemos
	indicado lo contrario usando el atributo CHECKED. Una vez a cargado
	la página con el formulario en blanco o con unas opciones por
	defecto el navegante puede actuar sobre los controles y modificar
	sus valores (en esto se basa la interactividad). Pero quizás en
	algún momento decida que quiere dar marcha atrás y recuperar los
	datos que aparecieron al principio. Con este fin existe en el
	lenguaje HTML un control que permite borrar los datos actuales de
	todos los campos del formulario y restablecer los valores por
	defecto, si es que los había. Este control recibe el nombre de
	botón de borrado o botón de reseteado (<emphasis>reset button
	</emphasis>). La creación de este control es muy sencilla. De nuevo
	usaremos la etiqueta <emphasis>INPUT</emphasis>, esta vez con
	<emphasis>TYPE=&quot;reset&quot;</emphasis>:
      </para>

      <programlisting>

	<sgmltag>&lt;INPUT TYPE=&quot;reset&quot;&gt;</sgmltag>

      </programlisting>

      <para>
	Este código provocará la aparición de un botón como el botón de
	envío con un texto por defecto que indica su función. Por ejemplo
	<productname>Internet Explorer 4.0</productname> muestra el mensaje
	<emphasis>&apos;Restablecer&apos;</emphasis>. Este texto
	dependerá del navegador que usen los visitantes de nuestra página,
	y dado que esto no siempre es deseable podemos usar el atributo
	<emphasis>VALUE</emphasis>, al igual que hacíamos con el botón de
	envío, para especificar el texto que prefiramos. Veamos un ejemplo
	algo más completo:
      </para>

      <programlisting>

	<sgmltag>&lt;H2&gt;</sgmltag>
	<sgmltag>&lt;FONT COLOR=&quot;#8080FF&quot;&gt;</sgmltag>
      	Formulario de identificación
	<sgmltag>&lt;/FONT&gt;</sgmltag>
	<sgmltag>&lt;/H2&gt;</sgmltag>

	<sgmltag>&lt;FORM&gt;</sgmltag>

	<sgmltag>&lt;P&gt;</sgmltag>Introduzca su nombre:
	<sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	  NAME=&quot;nombre&quot;
	  VALUE=&quot;Introduzca su Nombre&quot;
	  SIZE=&quot;30&quot;&gt;</sgmltag>
	<sgmltag>&lt;P&gt;</sgmltag>Sexo:
	<sgmltag>&lt;INPUT TYPE=&quot;RADIO&quot;
	  NAME=&quot;sexo&quot;
	  VALUE=&quot;hombre&quot;
	  CHECKED&gt;</sgmltag>Hombre &nbsp; 
	<sgmltag>&lt;INPUT TYPE=&quot;RADIO&quot;
	  NAME=&quot;sexo&quot;
	  VALUE=&quot;mujer&quot;&gt;</sgmltag>Mujer
	<sgmltag>&lt;P&gt;</sgmltag>Comentarios:
	<sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	  NAME=&quot;comentarios&quot;
	  SIZE=&quot;40&quot;&gt;</sgmltag>
	<sgmltag>&lt;P&gt;</sgmltag>
	<sgmltag>&lt;INPUT TYPE=&quot;submit&quot;
	  VALUE=&quot;Enviar&quot;&gt;</sgmltag>
	<sgmltag>&lt;INPUT TYPE=&quot;reset&quot;
	  VALUE=&quot;Restablecer&quot;&gt;</sgmltag>
	<sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	En la figura 12.15 podemos ver este formulario con unos datos
	introducidos por un usuario (arriba) y tras pulsar el botón de
	borrado (abajo). Si no hubiésemos puesto unos valores por defecto
	en nuestro código HTML los datos campos simplemente se hubieran
	quedado vacíos.
      </para>

      <figure label="12.15">

	<title>
	  El botón de borrado (<sgmltag>&lt;INPUT TYPE=&quot;reset&quot;
	    &gt;</sgmltag>) permite al usuario borrar los datos introducidos
	  y recuperar los iniciales.
	</title>
	<graphic fileref="img/fig12-15.png"/>

      </figure>

      <para>
	Al igual que hemos hecho con los controles anteriores concluiremos
	con un resumen del código del botón de borrado. En éste hemos
	incluido el atributo NAME, que, como comentamos al principio, está
	presente en todos los controles:
      </para>

      <programlisting>

	<sgmltag>
	  &lt;INPUT TYPE=&quot;reset&quot;
	  NAME=&quot;nombre&quot;
	  VALUE=&quot;Texto del botón&quot;&gt;
	</sgmltag>

      </programlisting>

    </sect2>

    <sect2>

      <title>Botón genérico</title>

      <para>
	Para completar la colección de botones de los formularios, nos
	encontramos con la posibilidad de insertar un botón genérico, es
	decir, que no tiene ninguna función definida, sino la que nosotros
	queramos darle. Para insertar un botón genérico usaremos la
	etiqueta INPUT con <emphasis>TYPE=&quot;button&quot;</emphasis>:
      </para>

      <programlisting>

	<sgmltag>&lt;INPUT TYPE=&quot;button&quot;
	  VALUE=&quot;Pulseme&quot;&gt;</sgmltag>

      </programlisting>

      <para>
	Las acciones que debe llevar a cabo este botón al ser pulsado sólo
	pueden indicarse con lenguajes de script como JavaScript o VBScript
	y no con HTML estándar. Para insertar el código de estos lenguajes
	se usa el atributo ONCLICK:
      </para>

      <programlisting>

	<sgmltag>
	  &lt;INPUT TYPE=&quot;button&quot;
	  VALUE=&quot;Texto del botón&quot;
	  ONCLICK=&quot;código de script&quot;&gt;
	</sgmltag>

      </programlisting>

      <para>
	No todos los navegadores soportan los lenguajes de script, y por
	tanto el botón genérico debe ser considerado como una extensión. Si
	lo usamos debemos ser conscientes que únicamente los navegadores
	que soporten el script usado podrán hacer uso suyo.
      </para>

      <para>
	Por ahora no nos adentraremos en ningún lenguaje de script, ya que
	más adelante en esta obra, éstos serán tratados más en detalle,
	pero mostraremos dos ejemplos sencillos que ilustran el
	funcionamiento de este tipo de botones. Estos ejemplos han sido
	probados con los navegadores <productname>Internet Explorer
	</productname> y <productname>Netscape Navigator</productname> en
	sus versiones 3.0 y posteriores, pero pueden no funcionar con otros
	navegadores.
      </para>

      <para>
	El primero consistirá en un botón cuya función será <emphasis>
	  cerrar una ventana del navegador</emphasis>. El código necesario
	será:
      </para>

      <programlisting>

	<sgmltag>&lt;FORM&gt;</sgmltag>

	<sgmltag>
	  &lt;INPUT TYPE=&quot;button&quot;
	  VALUE=&quot;Cerrar ventana&quot;
	  onClick=&quot;window.close();&quot;&gt;
	</sgmltag>

	<sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	Es probable que al pulsar el botón nos aparezca un mensaje de aviso
	del navegador pidiéndonos confirmación para cerrar la ventana
	(ver figura 12.16).
      </para>

      <figure label="12.16">

	<title>
	  Los botones genéricos tienen multitud de usos, entre los más
	  usados nos encontramos con el botón enlace y el botón para cerrar
	  una ventana, que, como todos, requieren hacer uso de un lenguaje
	  de script.
	</title>
	<graphic fileref="img/fig12-16.png"/>

      </figure>

      <para>
	El segundo ejemplo es más usado aún y consiste en usar el botón con
	la misma función que un <emphasis>enlace hipertexto</emphasis>. El
	resultado es más atractivo, pero debemos usarlo con moderación, ya
	que no todos los visitantes tendrán navegadores que entiendan este
	código:
      </para>

      <programlisting>

	<sgmltag>&lt;FORM&gt;</sgmltag>

	<sgmltag>
	  &lt;INPUT TYPE=&quot;button&quot;
	  VALUE=&quot;Cargar otra ventana&quot;
	  onClick=&quot;window.location.replace
	  (&apos;button2.html&apos;);&quot;&gt;
	</sgmltag>

	<sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	En el directorio <emphasis>botones</emphasis> podemos encontrar un
	archivo con ambos códigos para que el lector pueda probarlos. En la
	figura 12.16 vemos una muestra de este documento junto con el
	cuadro de diálogo con el que <productname>Internet Explorer 4.0
	</productname> pide confirmación para cerrar la ventana tras pulsar
	el botón del primer ejemplo.
      </para>

      <note>

	<para>
	  El nuevo estándar HTML 4.0 introduce una nueva etiqueta para
	  insertar botones en nuestra página: <emphasis>BUTTON</emphasis>.
	  Esta etiqueta tiene un atributo, llamado TYPE, que nos permitirá
	  elegir entre los tres tipos de botones disponibles: envío
	  (TYPE=submit), borrado (TYPE=reset) o genérico (TYPE=button). La
	  gran innovación de esta etiqueta es que podemos insertar en el
	  botón imágenes o texto formateado con código HTML. Veamos un
	  ejemplo de cómo funcionará BUTTON:
	</para>

	<programlisting>

	  <sgmltag>&lt;BUTTON name=&quot;reset&quot;
	    type=&quot;restablecer&quot;&gt;</sgmltag>
	  Restablecer<sgmltag>&lt;IMG src=&quot;pics/imagen.gif&quot;
	    alt=&quot;&quot;&gt;</sgmltag>
	  <sgmltag>&lt;/BUTTON&gt;</sgmltag>

	</programlisting>

	<para>
	  El texto e imagen entre la instrucción de inicio y la de fin se
	  insertarán en el botón.
	</para>

      </note>

    </sect2>

    <sect2>

      <title>Campos ocultos</title>

      <para>
	Los campos ocultos son un tipo de control que únicamente sirve para
	incluir información adicional entre los datos del formulario. Este
	tipo de control es invisible, y por tanto el navegador no muestra
	ningún tipo de gráfico para advertir de su existencia.
      </para>

      <para>
	¿Para qué sirve entonces un control oculto?. Si no aparece en la
	página y el navegante no puede hacer nada con él ¿Cuál es su
	función?. En general, los campos ocultos se usan para enviar
	información específica al programa del servidor Web que procesará
	los datos enviados, por ejemplo si este programa es capaz de
	realizar varias funciones distintas con estos datos, podemos usar
	un campo oculto para pasarle la información de que debe hacer con
	los datos de este formulario concreto (debemos tener en cuenta que
	este mismo programa puede procesar la información de otros
	formularios también). Aún así esta problemática queda fuerae de lo
	que pretendemos abarcar en esta sección dedicada al lenguaje HTML.
      </para>

      <para>
	Los campos ocultos se crean usando la etiqueta INPUT con
	<emphasis>TYPE=&quot;hidden&quot;</emphasis>. Además debemos usar
	los atributos VALUE y NAME, para indicar los datos y su nombre:
      </para>

      <programlisting>

	<sgmltag>&lt;INPUT TYPE=&quot;hidden&quot;
	  NAME=&quot;nombre&quot;
	  VALUE=&quot;datos&quot;&gt;</sgmltag>

      </programlisting>

      <para>
	Por ejemplo:
      </para>

      <programlisting>

	<sgmltag>&lt;INPUT TYPE=&quot;hidden&quot;
	  NAME=&quot;funcion&quot;
	  VALUE=&quot;enviar_mail&quot;&gt;</sgmltag>

      </programlisting>

    </sect2>

    <sect2>

      <title>Los formularios vistos desde Lynx</title>

      <para>
	Hasta ahora nos hemos limitado a mostrar como se veían los
	controles con navegadores gráficos, usando como ejemplo a
	<productname>Microsoft Internet Explorer 4.0</productname>. Pero
	los formularios pertenecen al estándar HTML 2.0 y por tanto
	funcionan con todo tipo de navegadores, incluidos los que trabajan
	en modo texto como Lynx. Es interesante para los programadores de
	páginas Web conocer como son mostrados cada uno de los controles
	que hemos visto desde este navegador, para hacerse una idea de cómo
	se verán los formularios que de sus páginas. Dado que no siempre es
	fácil encontrar un ordenador donde comprobar los resultados con
	Lynx, mostraremos una serie de capturas en las que hemos usado este
	navegador y las comentaremos brevemente.
      </para>

      <para>
	Lo primero que debemos tener en cuenta es que el botón de envío no
	será gráfico, sino que será similar a un enlace hipertexto, como ya
	comentamos en su momento. Las cajas de texto y las cajas de texto
	para claves se muestran con una línea horizontal, y en estas
	últimas lo escrito es sustituido por asteriscos. En la figura 12.17
	vemos un ejemplo, un cursor parpadeante (que no puede apreciarse en
	una imagen) indica el lugar donde podemos empezar a escribir:
      </para>

      <figure label="12.17">

	<title>
	  Los navegadores en modo texto como Lynx también son capaces de
	  mostrar formularios, que aunque no sean gráficos tienen la misma
	  funcionalidad.
	</title>
	<graphic fileref="img/fig12-17.png"/>

      </figure>

      <para>
	El código usado es el mismo que el de la figura 12.9, en aquel caso
	el navegador usado para mostrar el resultado fue <productname>
	  Internet Explorer</productname>, las diferencias son apreciables.
      </para>

      <para>
	Pero más interesante aún puede ser ver con este navegador nuestro
	ejemplo 1 de este capítulo (figura 12.14) con Lynx. El resultado
	que obtenemos puede ser apreciado en la figura 12.18 donde vemos
	que este navegador también puede mostrar botones de radio y cajas
	de selección.
      </para>

      <figure label="12.18">

	<title>
	  En esta figura podemos apreciar cajas de texto y de clave,
	  botones de elección y cajas de selección tal y como son mostradas
	  por Lynx.
	</title>
	<graphic fileref="img/fig12-18.png"/>

      </figure>

      <para>
	En este caso es también interesante ver que la imagen que usábamos
	como botón de envío ha sido sustituido por el texto &apos;
	[IMAGE]-Submit&apos;, pero sigue funcionando.
      </para>

    </sect2>

    <sect2>

      <title>Innovaciones de Microsoft</title>

      <para>
	La compañía <productname>Microsoft</productname> en sus navegadores
	<productname>Internet Explorer 3.0</productname> y posteriores ha
	incorporado una serie de extensiones a la etiqueta INPUT para
	incrementar las posibilidades de los programadores de HTML. Estas
	extensiones afectan a todos los controles que hemos visto que hacen
	uso de esta etiqueta.
      </para>

      <para>
	La primera extensión resultará conocida a los lectores, se trata
	del atributo <emphasis>TITLE</emphasis>, y su función será mostrar
	un bocadillo explicativo cuando el usuario pase el cursor por
	encima del control. Veamos un ejemplo:
      </para>

      <programlisting>

	<sgmltag>&lt;FORM&gt;</sgmltag>

	<sgmltag>&lt;P&gt;</sgmltag>Introduzca su nombre:
	<sgmltag>
	  &lt;INPUT TYPE=&quot;text&quot;
	  NAME=&quot;nombre&quot;
	  TITLE=&quot;Introduzca aquí su Nombre&quot;
	  SIZE=&quot;30&quot;&gt;
	</sgmltag>

        <sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	Como podemos ver en la figura 12.19, cuando se mantiene el cursor
	un tiempo aparece un bocadillo con fondo amarillo (estándar de
	Windows) con el texto <emphasis>&apos;Introduzca aquí su nombre
	  &apos;</emphasis>:
      </para>

      <figure label="12.19">

	<title>
	  El atributo TITLE es una extensión de Microsoft que permite dar
	  una descripción a los controles que será mostrada en un
	  bocadillo.
	</title>
	<graphic fileref="img/fig12-19.png"/>

      </figure>

      <para>
	Este atributo puede usarse con entera libertad, a pesar de tratarse
	de una extensión, porque los usuarios de <productname>Internet
	  Explorer</productname> podrán beneficiarse de ella y los usuarios
	de navegadores que no lo entiendan no saldrán perjudicados,
	simplemente se quedarán igual que si no lo hubiésemos usado.
      </para>

      <para>
	La segunda extensión está formada por dos atributos: <emphasis>
	  TABINDEX</emphasis> y <emphasis>NOTAB</emphasis>. Cuando nos
	encontramos ante un formulario formado por varios controles, como
	el del ejemplo 1 (figura 12.14), se puede usar la tecla tabulador o
	TAB para pasar de uno a otro. Por defecto al pulsar esta tecla se
	pasa al siguiente control en el orden en que fueron insertados en
	el código HTML. El atributo TABINDEX nos permitirá cambiar el
	orden. La forma de usarlo consiste en incluirlo en <emphasis>todos
	</emphasis> y cada uno de los controles asignándole un número, este
	número representará la posición de ese control. El atributo NOTAB,
	por su parte indicará que este control está fuera de la lista, y
	por lo general será situado el último de todos. Para entender ambos
	atributos mejor es necesario verlo con un ejemplo, para ello
	usaremos parte del código del ejemplo 1:
      </para>

      <programlisting>

	<sgmltag>&lt;FORM&gt;</sgmltag>

	<sgmltag>&lt;P&gt;</sgmltag>1) Introduzca su nombre:
	<sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	  NAME=&quot;nombre&quot;
	  TABINDEX=&quot;1&quot;&gt;</sgmltag>
	<sgmltag>&lt;P&gt;</sgmltag>3) Introduzca una clave para su
	identificación (4 letras):
	<sgmltag>&lt;INPUT TYPE=&quot;password&quot;
	  NAME=&quot;clave&quot;
	  TABINDEX=&quot;3&quot;&gt;</sgmltag>
	<sgmltag>&lt;P&gt;</sgmltag>4) Dirección
	<sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	  NAME=&quot;direccion&quot;
	  NOTAB&gt;</sgmltag>
	<sgmltag>&lt;P&gt;</sgmltag>
	2) Tipo de habitación
	<sgmltag>&lt;/P&gt;</sgmltag>
	<sgmltag>&lt;INPUT TYPE=&quot;Radio&quot;
	  NAME=&quot;tipoHabitacion&quot;
	  VALUE=&quot;individual&quot;
	  TABINDEX=&quot;2&quot;&gt;</sgmltag>
	Individual&nbsp;&nbsp;
	<sgmltag>&lt;INPUT TYPE=&quot;Radio&quot;
	  NAME=&quot;tipoHabitacion&quot;
	  VALUE=&quot;doble&quot;
	  CHECKED
	  TABINDEX=&quot;2&quot;&gt;</sgmltag>
	Doble

	<sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	Tras introducir el nombre, cuando el usuario pulse el tabulador
	pasará a elegir el tipo de habitación, después introducirá la clave
	y por último la dirección. En el directorio <emphasis>ejem2
	</emphasis>hemos incluido este ejemplo para que el lector pueda
	probarlo y compruebe el funcionamiento de los atributos TABINDEX y
	NOTAB. Debemos recordar que únicamente funcionarán con
	<productname>Internet Explorer 3.0</productname> o posterior.
      </para>

      <para>
	La última innovación que ha introducido <productname>Microsoft
	</productname> son los atributos <emphasis>READONLY</emphasis> y
	<emphasis>DISABLED</emphasis>. Estos atributos funcionan
	exclusivamente con <productname>Internet Explorer 4.0</productname>
	(y posteriores), por lo que debemos tener cuidado al usarlos.
      </para>

      <para> 
	Cuando usamos el atributo DISABLED en un control lo deshabitamos.
	En general este atributo únicamente es usado con cajas de texto.
	Cuando una caja de texto usa este atributo podrá seguir mostrando
	texto (si usamos el atributo VALUE para poner un texto inicial),
	pero el usuario no podrá cambiarlo. Este control tampoco podrá ser
	seleccionado, prácticamente actúa como si no estuviera. La función
	del atributo READONLY es muy similar, con la única diferencia de
	que el control actúa como tal, por ejemplo en una caja de texto
	podemos seleccionar con el ratón el texto que hay en ella, pero
	tampoco podrá modificarse el contenido.
      </para>

      <note>

	<para>
	  Aunque en la documentación ofrecida por <productname>Microsoft
	  </productname> no aparece así, el atributo READONLY sólo funciona
	  correctamente en las cajas de texto, pero no en los botones de
	  elección o en las cajas de selección. Quizá sea un fallo que se
	  solucione en próximas versiones, pero hoy por hoy, para
	  deshabilitar estos dos últimos controles, debemos usar el
	  atributo DISABLED.
	</para>

      </note>

      <para>
	Veamos unos ejemplos con cajas de texto y botones de selección:
      </para>

      <programlisting>

	<sgmltag>&lt;H2&gt;</sgmltag>
	Cajas de texto
	<sgmltag>&lt;/H2&gt;</sgmltag>
	Normal:
	<sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	  NAME=&quot;texto1&quot;
	  VALUE=&quot;Texto inicial&quot;&gt;</sgmltag>
	<sgmltag>&lt;BR&gt;</sgmltag>
	DISABLED:
	<sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	  NAME=&quot;texto2&quot;
	  VALUE=&quot;Texto inicial&quot;
	  DISABLED&gt;</sgmltag>
	<sgmltag>&lt;BR&gt;</sgmltag>
	READONLY:
	<sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	  NAME=&quot;texto2&quot;
	  VALUE=&quot;Texto inicial&quot;
	  READONLY&gt;</sgmltag>
	<sgmltag>&lt;BR&gt;</sgmltag>
	<sgmltag>&lt;H2&gt;</sgmltag>
	Botones de elección
	<sgmltag>&lt;/H2&gt;</sgmltag>
	Normal:
	<sgmltag>&lt;INPUT TYPE=&quot;radio&quot;
	  NAME=&quot;boton&quot;
	  CHECKED&gt;</sgmltag>
	<sgmltag>&lt;BR&gt;</sgmltag>
	DISABLED:
	<sgmltag>&lt;INPUT TYPE=&quot;radio&quot;
	  NAME=&quot;boton&quot;
	  DISABLED&gt;</sgmltag>
	<sgmltag>&lt;BR&gt;</sgmltag>
	READONLY:
	<sgmltag>&lt;INPUT TYPE=&quot;radio&quot;
	  NAME=&quot;boton&quot;
	  READONLY&gt;</sgmltag>
	<sgmltag>&lt;BR&gt;</sgmltag>

      </programlisting>

      <para>
	En la figura 12.20 podemos ver el resultado de visualizar este
	código con <productname>Internet Explorer 4.0</productname>.
      </para>

      <figure label="12.20">

	<title>
	  Los atributos DISABLED y READONLY permiten deshabilitar un
	  control de manera que sólo sirva para mostrar datos.
	</title>
	<graphic fileref="img/fig12-20.png"/>

      </figure>

      <para>
	En los casos de la caja de texto y el botón de elección se observa
	claramente que el navegador le da una apariencia distinta para
	resaltar que está deshabilitado. En el directorio disabled se ha
	incluido este ejemplo añadiendo también las cajas de selección para
	que el lector pueda probarlos.
      </para>

    </sect2>

  </sect1>

  <sect1>

    <title>OTROS CONTROLES</title>

    <para>
      En esta sección hemos incluido dos controles ligeramente diferentes a
      los que hemos visto hasta ahora, las cajas de texto multilínea y los
      cuadros de selección. Ambos tienen sus propias etiquetas de HTML, y
      por tanto no usarán INPUT.
    </para>

    <sect2>

      <title>Cajas de texto multilínea: TEXTAREA</title>

      <para>
	Las cajas de texto multilínea o áreas de texto son unos campos que
	funcionan de manera similar a un editor de texto muy sencillo en el
	que el usuario puede escribir. Al contrario de lo que sucedía con
	las cajas de texto convencionales (<sgmltag>&lt;INPUT
	  TYPE=&quot;text&quot;&gt;</sgmltag>), en esta ocasión será posible
	escribir varias líneas de texto, lo que es muy útil para campos en
	los que se requiere una respuesta extensa. Por ejemplo, si deseamos
	que el usuario pueda escribir el texto de un <emphasis>mail
	</emphasis>, o escribir una serie de comentarios largos, las áreas
	de texto serán tremendamente útiles.
      </para>

      <para>
	La etiqueta usada para insertar este nuevo control es <emphasis>
	  TEXTAREA</emphasis>, que consta de cuatro atributos:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    <emphasis>NAME</emphasis>: El nombre que queremos asignarle al
	    control. Como siempre, este nombre será enviado junto con los
	    datos del área de texto al mandar el formulario.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    <emphasis>ROWS</emphasis>: El número de líneas de la caja de
	    texto.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    <emphasis>COLS</emphasis>: El número de caracteres visibles de
	    cada línea. Este atributo es similar al atributo SIZE que vimos
	    en las cajas de texto convencionales.
	  </para>

	</listitem>

      </itemizedlist>

      <para>
	La etiqueta TEXTAREA está compuesta por una instrucción de inicio y
	una instrucción de fin, siendo obligatorio el uso de ambas. Entre
	ellas únicamente podrá insertarse texto llano (sin ninguna etiqueta
	HTML) y éste será mostrado como contenido inicial del área de
	texto. Veamos un ejemplo:
      </para>

      <programlisting>

	Por favor haga sus comentarios sobre esta página.

	<sgmltag>&lt;FORM&gt;</sgmltag>

	<sgmltag>&lt;TEXTAREA NAME=&quot;texto&quot;
	  ROWS=&quot;10&quot;
	  COLS=&quot;50&quot;&gt;</sgmltag>
	Es la mejor que he visto nunca.
	<sgmltag>&lt;/TEXTAREA&gt;</sgmltag>

	<sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	En la figura 12.21 podemos ver este código tal y como es mostrado
	por <productname>Internet Explorer 4.0</productname>:
      </para>

      <figure label="12.21">

	<title>
	  Las áreas de texto (<sgmltag>&lt;TEXTAREA&gt;</sgmltag>
	  <sgmltag>&lt;/TEXTAREA&gt;</sgmltag>) permiten al usuario
	  introducir texto de varias líneas como si de un sencillo editor
	  de texto se tratara.
	</title>
	<graphic fileref="img/fig12-21.png"/>

      </figure>

      <para>
	Y en la figura 12.22 el mismo visto con Lynx:
      </para>

      <figure label="12.22">

	<title>
	  Lynx muestra las áreas de texto como un conjunto de líneas
	  (tantas como hemos indicado con el atributo COLS) sobre las que
	  el usuario podrá escribir.
	</title>
	<graphic fileref="img/fig12-22.png"/>

      </figure>

      <para>
	Pulsando sobre el área de texto podremos empezar a escribir, al
	igual que hacíamos en las cajas de texto, pero con la diferencia de
	que ahora podremos pulsar ENTER cuando queramos para cambiar de
	línea.
      </para>

      <para>
	Si no pulsamos ENTER y llegamos al final de la línea el navegador
	debe decidir que hacer. Esta decisión variará, por lo general, del
	navegador que estemos usando. Algunos, como <productname>Internet
	  Explorer 4.0</productname>, cambian automáticamente a la siguiente
	línea (<emphasis>text wrapping</emphasis>), otros simplemente
	desplazarán el texto como ocurría con las cajas de texto y no
	cambiará de línea hasta que pulsemos ENTER y una minoría
	simplemente ignorará lo que pulsemos hasta que cambiemos de línea
	pulsando esta misma tecla.
      </para>

      <para>
	El navegador <emphasis><productname>Netscape</productname>
	</emphasis> introdujo una extensión al lenguaje HTML estándar, que
	actualmente es soportada también por <productname>Internet Explorer
	</productname>, y que nos permitirá tener un mayor control sobre la
	forma de actuar del navegador cuando se llegue al final de la
	línea. Esta extensión se basa en un nuevo atributo, <emphasis>WRAP
	</emphasis>, que puede tomar los siguientes valores:
      </para>

      <itemizedlist>

	<listitem>

	  <para>
	    <emphasis>WRAP=OFF:</emphasis> Es el valor por defecto en
	    <productname>Netscape Navigator</productname> y provocará que
	    el texto sea mostrado en una sola línea, desplazándose hacia la
	    izquierda si es necesario, hasta que el usuario pulse ENTER.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    <emphasis>WRAP=SOFT:</emphasis> Este es el valor por defecto en
	    <productname>Internet Explorer</productname> y provoca que el
	    navegador pase automáticamente a la siguiente línea cuando se
	    llega al final del área reservada. Sin embargo cuando se pulsa
	    el botón de envío, antes de mandar el contenido, el propio
	    navegador vuelve a juntar todo el texto que fue escrito seguido
	    en una sola línea.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    <emphasis>WRAP=HARD:</emphasis> Al igual que el valor anterior,
	    éste provoca que el navegador pase automáticamente a la
	    siguiente línea, pero ahora la información se mandará al
	    servidor Web con los saltos de línea, de la misma manera que si
	    hubiésemos pulsado ENTER nosotros mismos al llegar al final de
	    cada línea.
	  </para>

	</listitem>

      </itemizedlist>

      <para>
	En la figura 12.23 vemos una página con los tres tipos de área de
	texto que hemos incluido en el directorio <emphasis>textarea
	</emphasis> para que el lector pueda probarlos. La diferencia entre
	los dos últimos tipos no es apreciable por el usuario, pero si
	existen diferencias en el mensaje que se envía al servidor.
      </para>

      <note>

	<para>
	  La etiqueta TEXTAREA también admite el atributo ALIGN y las
	  extensiones introducidas por <productname>Microsoft</productname>
	  que hemos visto anteriormente. Nos referimos a los atributos
	  DISABLED, READONLY, TABINDEX, NOTAB y TITLE.
	</para>

      </note>

      <para>
	Concluiremos las áreas de texto con un resumen de la etiqueta
	TEXTAREA y sus atributos:
      </para>

      <programlisting>

	<sgmltag>
	  &lt;TEXTAREA NAME=&quot;nombre&quot;
	  ROWS=&quot;filas&quot;
	  COLS=&quot;columnas&quot;
	  ALIGN=&quot;alineamiento&quot;
	  WRAP=&quot;off | soft | hard&quot;&gt;
	</sgmltag>
	Texto inicial
	<sgmltag>&lt;/TEXTAREA&gt;</sgmltag>

      </programlisting>

    </sect2>

    <sect2>

      <title>Cuadros de selección</title>

      <para>
	Éste es el último control para crear formularios que nos ofrece el
	lenguaje HTML. Su función será dar a elegir entre una serie de
	opciones de manera que el usuario pueda elegir una o varias de
	ellas. Existen dos formas de mostrar estas opciones, como una
	<emphasis>lista con desplazamiento</emphasis>, o mediante una
	<emphasis>persiana desplegable</emphasis>. Enseguida veremos cómo
	es cada una y cómo crearlas.
      </para>

      <para>
	Para insertar un cuadro de selección usaremos la etiqueta
	<emphasis>SELECT</emphasis>, que consta de una instrucción de
	inicio y de una instrucción de fin, entre las cuales introduciremos
	las diferentes opciones para el usuario. Para insertar estas
	opciones usaremos una nueva etiqueta, <emphasis>OPTION</emphasis>,
	que consta de una única instrucción. Veamos un ejemplo que ilustra
	el uso de uso de este tipo de control:
      </para>

      <programlisting>

	<sgmltag>&lt;FORM&gt;</sgmltag>

	Elija un color:<sgmltag>&lt;BR&gt;</sgmltag>
	<sgmltag>&lt;CENTER&gt;</sgmltag>
	<sgmltag>&lt;SELECT NAME=&quot;color&quot;&gt;</sgmltag>
        <sgmltag>&lt;OPTION&gt;</sgmltag>Verde
	<sgmltag>&lt;OPTION&gt;</sgmltag>Negro
	<sgmltag>&lt;OPTION&gt;</sgmltag>Rojo
	<sgmltag>&lt;OPTION&gt;</sgmltag>Azul
	<sgmltag>&lt;/SELECT&gt;</sgmltag>
	<sgmltag>&lt;/CENTER&gt;</sgmltag>
	<sgmltag>
	  &lt;INPUT TYPE=&quot;submit&quot;
	  VALUE=&quot;Enviar elección&quot;&gt;
	</sgmltag>

	<sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	Cuando se pulse el botón &apos;Enviar elección&apos; se mandará al
	servidor el texto que sigue a la etiqueta OPTION, que se haya
	escogido (Por ejemplo &apos;<emphasis>color=Rojo</emphasis>&apos;).
      </para>

      <para>
	Como podemos ver en la figura 12.24, este control suele ser
	mostrado, en los navegadores gráficos, como una persiana
	desplegable, es decir, únicamente la opción actualmente
	seleccionada es visible, y pulsando sobre una flecha se muestran el
	resto de opciones.
      </para>

      <figure label="12.24">

	<title>
	  Los cuadros de selección permiten mostrar varias opciones para
	  que el usuario pueda elegir. En esta ocasión vemos su forma de
	  persiana desplegable.
	</title>
	<graphic fileref="img/fig12-24.png"/>

      </figure>

      <para>
	Existe un atributo, <emphasis>SELECTED</emphasis>, que nos
	permitirá elegir la opción que debe estar seleccionada por
	defecto. Por ejemplo, si en el código anterior queremos que el
	color negro aparezca seleccionado inicialmente tendremos que
	escribir:
      </para>

      <programlisting>

	<sgmltag>&lt;SELECT NAME=&quot;color&quot;&gt;</sgmltag>
	<sgmltag>&lt;OPTION&gt;</sgmltag>Verde
	<sgmltag>&lt;OPTION SELECTED&gt;</sgmltag>Negro
	<sgmltag>&lt;OPTION&gt;</sgmltag>Rojo
	<sgmltag>&lt;OPTION&gt;</sgmltag>Azul
	<sgmltag>&lt;/SELECT&gt;</sgmltag>

      </programlisting>

      <para>
	Al principio hemos comentado que los cuadros de selección pueden
	mostrarse como persianas desplegables, o bien como listas con
	desplazamiento. Hasta ahora sólo hemos visto el primer caso en el
	que únicamente la opción seleccionada es visible. En ocasiones
	puede ser conveniente que todas, o al menos algunas de las
	posibilidades sean mostradas directamente, sin tener que pulsar un
	botón. Para conseguir esto el lenguaje HTML ofrece el atributo
	<emphasis>SIZE</emphasis>, que determina el número de opciones que
	pueden ser vistas simultáneamente. Si este valor es 1 (o no se usa
	el atributo SIZE), se mostrará una persiana desplegable, como hemos
	visto hasta ahora. Si es mayor, se mostrará una lista, que podrá
	tener barras de desplazamiento si no caben todas las opciones
	disponibles. Veamos un ejemplo:
      </para>

      <programlisting>

	<sgmltag>&lt;FORM&gt;</sgmltag>

	Lista de la compra:<sgmltag>&lt;BR&gt;</sgmltag>
	<sgmltag>&lt;CENTER&gt;</sgmltag>
	<sgmltag>&lt;SELECT NAME=&quot;compra&quot;
	  SIZE=&quot;6&quot;&gt;</sgmltag>
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Fruta&quot;&gt;
	</sgmltag>Fruta
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Verdura&quot;&gt;
	</sgmltag>Verdura
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Ternera&quot;&gt;
	</sgmltag>Ternera
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Mantequilla&quot;&gt;
	</sgmltag>Mantequilla
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Salchichas&quot;&gt;
	</sgmltag>Salchichas
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Pasta&quot;&gt;
	</sgmltag>Pasta
	<sgmltag>&lt;/SELECT&gt;</sgmltag>
	<sgmltag>&lt;/CENTER&gt;</sgmltag>
	<sgmltag>&lt;P&gt;</sgmltag>
	<sgmltag>
	  &lt;INPUT TYPE=&quot;submit&quot;
	  VALUE=&quot;Enviar lista de la compra&quot;&gt;
	</sgmltag>

	<sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	En la figura 12.25 vemos este ejemplo:
      </para>

      <figure label="12.25">

	<title>
	  Usando el atributo SIZE con un valor mayor que uno conseguimos
	  que el cuadro de selección se muestre como una lista.
	</title>
	<graphic fileref="img/fig12-25.png"/>

      </figure>

      <para>
	En este caso el número de opciones es igual al tamaño que le hemos
	dado al control, por lo que no han sido necesarias barras de
	desplazamiento.
      </para>

      <para>
	Si no indicamos lo contrario, los cuadros de selección actúan como
	los botones de radio, es decir, sola una opción puede ser elegida
	simultáneamente. Afortunadamente, es posible cambiar este
	comportamiento, y permitir la selección de varias opciones, usando
	el atributo <emphasis>MULTIPLE</emphasis> en el interior de la
	etiqueta SELECT. En el ejemplo de la lista de la compra esta
	posibilidad es de gran utilidad, añadiendo este atributo al código
	anterior queda:
      </para>

      <programlisting>

	<sgmltag>&lt;FORM&gt;</sgmltag>

	Lista de la compra:<sgmltag>&lt;BR&gt;</sgmltag>
	<sgmltag>&lt;CENTER&gt;</sgmltag>
	<sgmltag>&lt;SELECT NAME=&quot;compra&quot;
	  SIZE=&quot;6&quot;
	  MULTIPLE&gt;</sgmltag>
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Fruta&quot;&gt;
	</sgmltag>Fruta
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Verdura&quot;&gt;
	</sgmltag>Verdura
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Ternera&quot;&gt;
	</sgmltag>Ternera
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Mantequilla&quot;&gt;
	</sgmltag>Mantequilla
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Salchichas&quot;&gt;
	</sgmltag>Salchichas
	<sgmltag>
	  &lt;OPTION VALUE=&quot;Pasta&quot;&gt;
	</sgmltag>Pasta
	<sgmltag>&lt;/SELECT&gt;</sgmltag>
	<sgmltag>&lt;/CENTER&gt;</sgmltag>
	NOTA (usuarios de Windows): Para seleccionar varias opciones
	mantengan pulsada la tecla <sgmltag>&lt;CODE&gt;</sgmltag>Control
	<sgmltag>&lt;/CODE&gt;</sgmltag> y selecciónenlas con el ratón.
	<sgmltag>&lt;P&gt;</sgmltag>
	<sgmltag>
	  &lt;INPUT TYPE=&quot;submit&quot;
	  VALUE=&quot;Enviar lista de la compra&quot;&gt;
	</sgmltag>

	<sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	La forma de seleccionar varias opciones simultáneamente dependerá
	del navegador que usemos. En general consistirá en mantener
	apretada una tecla mientras se seleccionan las diferentes opciones
	con el ratón. Para facilitar la tarea de los navegantes puede ser
	conveniente añadir a la página una nota explicativa sobre la manera
	de elegir varias opciones, tal y como hemos hecho en este ejemplo.
	En la figura 12.26 podemos ver como es mostrado <productname>
	  Internet Explorer 4.0</productname>:
      </para>

      <figure label="12.26">

	<title>
	  Usando el atributo MULTIPLE el usuario podrá seleccionar varias
	  de las opciones que se ofrecen en la lista.
	</title>
	<graphic fileref="img/fig12-26.png"/>

      </figure>

      <para>
	Y en la figura 12.27 el mismo código, esta vez visto desde Lynx:
      </para>

      <figure label="12.27">

	<title>
	  El navegador Lynx también es capaz de mostrar cuadros de
	  selección, por lo que podremos usarlo con libertad.
	</title>
	<graphic fileref="img/fig12-27.png"/>

      </figure>

      <note>

	<para>
	  La etiqueta SELECT también consta del atributo ALIGN para elegir
	  su alineamiento. En lo que a extensiones se refiere, también
	  podemos usar el atributo DISABLED en la etiqueta SELECT para
	  desabilitarla, aunque solo funcionará con <productname>Internet
	    Explorer 4.0</productname>. Igualmente podemos usar el atributo
	  TITLE tanto en SELECT como en OPTION para incluir una descripción
	  que será mostrada en un bocadillo cuando el usuario sitúe el
	  ratón sobre el control, en el primer caso, o sobre la opción
	  específica, en el segundo.
	</para>

      </note>

      <para>
	Para concluir con los cuadros de selección sólo nos resta hacer un
	breve resumen de las etiquetas SELECT y OPTION, y de sus atributos:
      </para>

      <programlisting>

	<sgmltag>&lt;SELECT NAME=&quot;nombre&quot;
	  SIZE=&quot;nº_elementos_visibles&quot;
	  MULTIPLE
	  ALIGN=&quot;alineamiento&quot;
	  TITLE=&quot;texto_bocadillo&quot;
	  TABINDEX=&quot;n&quot;
	  DISABLED&gt;</sgmltag>
	<sgmltag>
	  &lt;OPTION SELECTED
	  VALUE=&quot;nombre de esta opción&quot;
	  TITLE=&quot;texto_bocadillo&quot;&gt;
	</sgmltag>
	...
	<sgmltag>&lt;/SELECT&gt;</sgmltag>

      </programlisting>

    </sect2>

  </sect1>

  <sect1>

    <title>PRÁCTICA 6-FORMULARIO PARA &quot;Los Alpes&quot;</title>

    <para>
      Ahora que ya conocemos todos los controles existentes para crear
      formularios es hora de hacer uno con apariencia profesional. Esto no
      quiere decir que use todos los controles existentes, sino que los use
      de una manera adecuada, cuidando la presentación y facilitando al
      usuario la introducción de datos. Como motivo hemos elegido crear
      una página más del sitio Web de la agencia de viajes Los Alpes, que
      permita a los visitantes pedir que les envíen por correo un catálogo
      con todos los viajes disponibles.
    </para>

    <para>
      En primer lugar procederemos a escribir el código HTML necesario para
      crear los formularios y posteriormente nos dedicaremos a darle una
      apariencia profesional, tarea en la que podremos demostrar nuestra
      capacidad para usar tablas para controlar la disposición de los
      elementos en una página Web.
    </para>

    <itemizedlist>

      <listitem>

	<para>
	  <emphasis>PASO 1</emphasis>: Para comenzar partiremos de las
	  páginas que creamos en la práctica 5. Podemos realizar los
	  cambios sobre estas mismas páginas o crear una copia en otro
	  directorio (en el directorio <emphasis>pract5</emphasis> se
	  encuentran de nuevo las páginas de esta práctica). Usando nuestro
	  editor de texto/HTMLhabitual abrimos el archivo <emphasis>
	    <filename>plantilla.htm</filename></emphasis> donde creamos la
	  plantilla de la página
	  Web de Los Alpes. El aspecto de esta página es muy simple, como
	  podemos ver en la figura 12.28:
	</para>

	<figure label="12.28">

	  <title>
	    Este es el aspecto inicial de la plantilla del sitio Web de Los
	    Alpes.
	  </title>
	  <graphic fileref="img/fig12-28.png"/>

	</figure>

	<para>
	  En primer lugar, antes de realizar ningún cambio, guardamos este
	  documento con el nombre <emphasis><filename>form.htm</filename>
	  </emphasis>. Sobre este nuevo archivo realizaremos los cambios.
	  Lo primero que haremos será adaptar el código de la plantilla a
	  nuestros objetivos, cambiando la fecha y el título de la página,
	  y escribiendo un texto introductorio del formulario (ver figura
	  12.29):
	</para>

	<figure label="12.29">

	  <title>
	    El primer paso será modificar la plantilla, cambiando el título
	    y la fecha y  escribiendo un texto introductorio.
	  </title>
	  <graphic fileref="img/fig12-29.png"/>

	</figure>

      </listitem>

      <listitem>

	<para>
	  <emphasis>PASO 2</emphasis>: El siguiente paso consistirá en
	  insertar los controles del formulario. Dado que nuestro objetivo
	  será  recoger el nombre, dirección, teléfono, etc. del usuario,
	  usaremos en su mayoría cajas de texto, con la única excepción de
	  un cuadro de selección para elegir el tipo de catálogo. El código
	  necesario para insertar estos controles es:
	</para>

	<programlisting>

	  <sgmltag>&lt;FORM&gt;</sgmltag>

	  <sgmltag>&lt;P&gt;</sgmltag>Nombre completo:
	  <sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	    NAME=&quot;nombre&quot;
	    SIZE=&quot;30&quot;&gt;</sgmltag>
	  <sgmltag>&lt;P&gt;</sgmltag>Dirección:
	  <sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	    NAME=&quot;direccion&quot;
	    SIZE=&quot;50&quot;&gt;</sgmltag>
	  <sgmltag>&lt;P&gt;</sgmltag>Ciudad:
	  <sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	    NAME=&quot;ciudad&quot;
	    SIZE=&quot;20&quot;&gt;</sgmltag>
	  &nbsp;&nbsp; Código Postal:
	  <sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	    NAME=&quot;c.p.&quot;
	    SIZE=&quot;6&quot;
	    MAXLENGTH=&quot;5&quot;&gt;</sgmltag>
	  <sgmltag>&lt;P&gt;</sgmltag>Teléfono:
	  <sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	    NAME=&quot;telefono&quot;
	    SIZE=&quot;10&quot;
	    MAXLENGTH=&quot;9&quot;&gt;</sgmltag>
	  <sgmltag>&lt;P&gt;</sgmltag>Fax:
	  <sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	    NAME=&quot;FAX&quot;
	    SIZE=&quot;10&quot;
	    MAXLENGTH=&quot;9&quot;&gt;</sgmltag>
	  <sgmltag>&lt;P&gt;</sgmltag>Email:
	  <sgmltag>&lt;INPUT TYPE=&quot;text&quot;
	    NAME=&quot;email&quot;
	    SIZE=&quot;30&quot;&gt;</sgmltag>
	  <sgmltag>&lt;P&gt;</sgmltag>Catálogo:

	  <sgmltag>&lt;SELECT&gt;</sgmltag>
	  <sgmltag>
	    &lt;OPTION VALUE=&quot;nacional&quot;&gt;
	  </sgmltag> Nacional 
	  <sgmltag>
	    &lt;OPTION VALUE=&quot;internacional&quot; SELECTED&gt;
	  </sgmltag> Internacional 
	  <sgmltag>
	    &lt;OPTION VALUE=&quot;completo&quot;&gt;
	  </sgmltag> Completo 
	  <sgmltag>&lt;/SELECT&gt;</sgmltag>

	  <sgmltag>&lt;P&gt;</sgmltag>
	  <sgmltag>&lt;INPUT TYPE=&quot;image&quot;
	    BORDER=&quot;0&quot;
	    SRC=&quot;img/enviar.jpg&quot;
	    VALUE=&quot;Enviar&quot;&gt;</sgmltag>

	  <sgmltag>&lt;/FORM&gt;</sgmltag>

	</programlisting>

	<para>
	  Y deberemos insertarlo a continuación del texto introductorio.
	  Este código no tiene demasiada complejidad, pudiendo destacarse
	  la limitación a cinco caracteres para el código postal y a nueve
	  el del número de teléfono y fax, con lo que evitamos posibles
	  equivocaciones de los usuarios. En ambos casos hemos usado el
	  atributo MAXLENGTH para imponer esta limitación. En esta página
	  hemos decidido, además, usar un botón de envío personalizado,
	  acorde con la apariencia del Web. Este y otro material necesario
	  para la práctica puede encontrarse en el directorio
	  <emphasis>pract6/material</emphasis>.
	</para>

	<para>
	  Una vez realizados estos cambios y escrito el código anterior
	  obtenemos el resultado que vemos en la figura 12.30.
	</para>

	<figure label="12.30">

	  <title>
	    Usando los conocimientos adquiridos en este capítulo utilizamos
	    las etiquetas INPUT y SELECT para crear los controles del
	    formulario.
	  </title>
	  <graphic fileref="img/fig12-30.png"/>

	</figure>

      </listitem>

      <listitem>

	<para>
	  <emphasis>PASO 3</emphasis>: Podríamos dejar el formulario así, y
	  publicarlo en Internet; de hecho gran parte de los formularios
	  que encontramos tienen una apariencia similar a esta. Sin embargo
	  en capítulos anteriores hemos aprendido a usar tablas para
	  controlar la disposición de los elementos y es hora de usar estos
	  conocimientos para dar a nuestro formulario una apariencia mucho
	  más profesional. En un Web real un buen diseño incita a un mayor
	  número de navegantes a rellenar el formulario.
	</para>

	<para>
	  Para empezar cambiamos el titular por una imagen (<emphasis>
	    pract6/material/<filename>catalogo.gif</filename></emphasis>) en
	  la que hemos escrito el mismo texto con un tipo de letra que
	  simula escritura manual. El resto de cambios hacen uso de
	  tablas. Para realizar el diseño suele ser conveniente hacer un
	  boceto sobre el papel o con un programa de dibujo, donde no
	  existen las limitaciones del lenguaje HTML. Una vez hecho el
	  boceto es hora de usar este lenguaje para plasmarlo sobre una
	  página Web. Tras hacer esto en nuestro formulario concluimos que
	  sería adecuado usar una tabla de nueve filas y tres columnas. De
	  las filas la primera es para el título y para el texto
	  introductorio, mientras que el resto son para cada campo del
	  formulario. La primera columna contendrá el texto indicativo del
	  formulario alineado a la derecha (<sgmltag>&lt;TD ALIGN=&quot;
	    right&quot;&gt;</sgmltag>), la segunda contendrá el control en sí
	  y la tercera servirá únicamente como margen derecho. En la figura
	  12.31 mostramos el formulario con su nueva apariencia mostrando
	  los bordes de la tabla, para que el lector pueda apreciar la
	  estructura de la tabla:
	</para>

	<figure label="12.31">

	  <title>
	    Usando una tabla de nueve filas y tres columnas controlamos la
	    disposición de todos los elementos de la tabla para conseguir
	    un diseño profesional.
	  </title>
	  <graphic fileref="img/fig12-31.png"/>

	</figure>

	<para>
	  Otro aspecto que podemos comentar es que el ancho total de la
	  tabla será de 600 pixeles, con lo que conseguimos que se
	  visualice correctamente en todo tipo de monitores. Para que
	  también quede bien en monitores grandes la centramos usando la
	  etiqueta CENTER. Por otro lado, para crear cierta separación
	  entre los diferentes campos podemos usar el atributo CELLSPACING,
	  con el que controlamos la distancia en pixeles entre las
	  diferentes celdas.
	</para>

	<para>
	  La realización de este código es un ejercicio muy importante, ya
	  que este tipo de retoques es muy común en las páginas Web reales.
	  Por esta razón dejamos al lector que intente mejorar el diseño de
	  la página usando las pistas que le hemos dado. En cualquier caso,
	  en el directorio <emphasis>pract6</emphasis> se ofrece una
	  posible solución. En la figura 12.32 podemos ver la página
	  completa una vez introducida en la estructura de frames:
	</para>

	<figure label="12.32">

	  <title>
	    Este es el aspecto final del formulario una vez introducido en
	    la estructura con frames del sitio Web creado en la práctica 5.
	  </title>
	  <graphic fileref="img/fig12-32.png"/>

	</figure>

	<para>
	  La mejora en apariencia respecto a la que veíamos en la figura
	  12.30 es apreciable.
	</para>

      </listitem>

    </itemizedlist>

  </sect1>

  <sect1>

    <title>COMO USAR LOS DATOS DE UN FORMULARIO</title>

    <para>
      Una vez dominamos la creación, y diseño, de formularios en las
      páginas Web probablemente nos estamos preguntando ¿cómo puedo hacer
      que me lleguen los datos?. La respuesta a esta pregunta va mas allá
      del lenguaje HTML. Requiere la puesta en acción de unos programillas
      llamados <emphasis>CGIs</emphasis>, que se ejecutan en el servidor y
      que pueden estar escritos en prácticamente cualquier lenguaje de
      programación.
    </para>

    <para>
      Estos programas deben encontrarse en algún lugar del servidor Web. Al
      enviar un formulario a uno, éste procesará la información y
      contestará con la respuesta oportuna. Esta respuesta será en general
      o bien la dirección de una página o bien una página creada por el
      propio CGI. ¿Cómo se envía información a un CGI?. Hasta ahora
      habíamos omitido este detalle, pero la etiqueta FORM consta de un
      atributo llamado <emphasis>ACTION</emphasis> donde debemos
      especificar la dirección URL del programa CGI donde deben enviarse
      los datos. Además debe usarse otro atributo, <emphasis>METHOD
      </emphasis>, para indicarle cómo se mandarán estos datos. Este
      atributo puede tomar dos valores <emphasis>GET</emphasis> y
      <emphasis>POST</emphasis>, omitiendo todos los detalles, podemos
      decir que el primero se usa con formularios pequeños, mientras que el
      segundo será el escogido para formularios donde la cantidad de
      información es grande. Una vez hemos visto estos atributos hemos de
      decir que para que los ejemplos que hemos visto funcionen cuando los
      publicamos en Internet habrá que añadírselos a la etiqueta
      <sgmltag>&lt;FORM&gt;</sgmltag>. Veamos un ejemplo:
    </para>

    <programlisting>

      <sgmltag>&lt;FORM METHOD=&quot;post&quot;
	ACTION=&quot;http://www.miservidor.es/cgi-bin/
	programaCGI&quot;&gt;</sgmltag>
      <sgmltag>
	&lt;!-- Código para insertar los distintos controles --&gt;
      </sgmltag>
      <sgmltag>&lt;/FORM&gt;</sgmltag>

    </programlisting>

    <para>
      En este caso hemos supuesto la existencia de un CGI llamado
      <emphasis>programa CGI</emphasis> situado en el directorio <emphasis>
	cgi-bin</emphasis> (este es el nombre habitual del directorio donde
      suelen estar los CGIs) de nuestro servidor. El navegador mandará a
      este programa los datos del formulario codificado con un código
      especial, cuyo tipo MIME es <emphasis>application/x-www-form-
	urlencoded</emphasis>. En algunos de los ejemplos de este capítulo
      hemos visto ejemplos de como funciona esta codificación. La etiqueta
      FORM, tiene un atributo, <emphasis>ENCTYPE</emphasis>, que nos
      permitirá cambiar el tipo de codificación. Si no queremos usar
      ninguna podemos escribir:
    </para>

    <programlisting>

      <sgmltag>&lt;FORM ENCTYPE=&quot;text/plain&quot;
	METHOD=&quot;post&quot;...&gt;</sgmltag>
      <sgmltag>&lt;/FORM&gt;</sgmltag>

    </programlisting>

    <para>
      No usar codificación podrá ocasionar problemas al enviar caracteres
      especiales como son las letras acentuadas, pero puede ser útil en
      ocasiones, al no ser necesario decodificar el mensaje.
    </para>

    <para>
      La creación de los programas CGI excede los límites de esta sección
      dedicada al lenguaje HTML, pero será cubierta en detalle más adelante
      debido a la gran importancia que tienen estos programas en la
      programación de Internet y en concreto de páginas Web. Hasta entonces
      veremos algunos métodos alternativos que nos permitirán hacer uso de
      los formularios que hemos creado sin necesidad de CGIs.
    </para>

    <sect2>

      <title>Formularios sin CGIs</title>

      <para>
	Sin duda los programas CGIs permiten realizar muchas más cosas que
	cualquier otro método, pero la necesidad de conocer un lenguaje de
	programación nos lleva a buscar métodos alternativos que serán
	suficientemente buenos si no tenemos demasiados requerimientos.
      </para>

      <para>
	Una alternativa a los CGIs son los lenguajes de script, que nos
	permitirán interactuar con el navegante sin hacer uso del servidor.
	Pero la alternativa en la que nos centraremos aquí será otra, que
	se basa en la posibilidad de <emphasis>mandar todos los datos de un
	  formulario a una dirección de correo electrónico</emphasis>. Esto
	es suficiente para el ejemplo de la práctica 6, ya que simplemente
	necesitamos conocer los datos del usuario para mandar el catálogo,
	no necesitamos interactuar con él en manera alguna. Para conseguir
	que los datos de un formulario sean enviados por e-mail debemos
	usar las etiquetas ACTION, METHOD y ENCTYPE de la siguiente manera:
      </para>

      <programlisting>

	<sgmltag>&lt;FORM ACTION=&quot;mailto:milogin@midireccion.es&quot;
	  ENCTYPE=&quot;text/plain&quot;
	  METHOD=&quot;post&quot;&gt;</sgmltag>
	<sgmltag>&lt;!-- ... --&gt;</sgmltag>
	<sgmltag>&lt;/FORM&gt;</sgmltag>

      </programlisting>

      <para>
	Donde hemos usado como ejemplo la dirección de correo electrónico
	<emphasis>milogin@midireccion.es</emphasis>, que debe ser
	sustituida por aquella a la que queramos enviar los datos, que en
	general será la nuestra como creadores del Web.
      </para>

      <note>

	<para>
	  La función del atributo ENCTYPE=&quot;text/plain&quot; es enviar
	  los datos sin ninguna codificación. Esto es conveniente para
	  facilitar la lectura de los mismos, pero no necesaria. De hecho,
	  en algunos casos aislados puede ser preferible no usar este
	  atributo y usar la codificación por defecto.
	</para>

      </note>

      <para>
	Al pulsar sobre el botón de envío el navegador advertirá al usuario
	(ver figura 12.33) que la página quiere enviar un <emphasis>e-mail
	</emphasis>, si el usuario acepta enviará los datos del formulario.
      </para>

      <figure label="12.33">

	<title>
	  Como método alternativo a los CGIs pueden mandarse los datos del
	  formulario por correo electrónico. En ese caso el navegador
	  pedirá al usuario confirmación de la acción.
	</title>
	<graphic fileref="img/fig12-33.png"/>

      </figure>

      <note>

	<para>
	  Al contrarió que los CGIs, el método alternativo que envía por
	  correo electrónico los datos del formulario puede no funcionar
	  con algunos navegadores. Sin embargo actualmente un gran número
	  de ellos, incluyendo <productname>Netscape Navigator
	  </productname>, <productname>Internet Explorer</productname> y
	  <productname>Opera</productname>, soporta esta característica,
	  por lo que podemos usarlo con suficientes garantías.
	</para>

      </note>

      <para>
	Con este método alternativo podemos empezar a usar todos los
	formularios que hemos visto hasta ahora, y practicar con ellos.
	Cuando, más adelante, estudiemos a fondo los CGIs veremos como
	nuestras posibilidades se incrementan enormemente.
      </para>

    </sect2>

  </sect1>

  <sect1>

    <title>ENVÍO DE FICHEROS USANDO FORMULARIOS</title>

    <para>
      Como apéndice a los formularios incluimos un método introducido por
      <productname>Netscape</productname> y aceptado por el estándar
      HTML 3.2 que permite a los visitantes de una página mandar un archivo
      presente en su ordenador a la página Web.
    </para>

    <para>
      Con los controles que hemos visto hasta ahora se podía enviar un
      archivo de texto copiándolo a un área de texto, pero no existía
      ninguna manera de mandar, por ejemplo, una imagen o un programa. Con
      este nuevo sistema será posible enviar ficheros de todo tipo.
    </para>

    <para>
      Los cambios respecto a los controles anteriores no son muchos. En
      primer lugar debemos hacer uso del atributo ENCTYPE especificando
      que los datos que se van a enviar desde este formulario al servidor
      serán de tipo <emphasis>multipart/form-data</emphasis>, después
      debemos usar ACTION para especificar la dirección de un programa del
      servidor Web que sea capaz de recoger este archivo y realizar las
      acciones oportunas con él, por ejemplo:
    </para>

    <programlisting>

      <sgmltag>&lt;FORM ENCTYPE=&quot;multipart/form-data&quot;
	ACTION=&quot;http://www.miservidor.es/cgi-bin/
	cogefichero&quot;&lt;</sgmltag>
      <sgmltag>&lt;!-- ... --&lt;</sgmltag>
      <sgmltag>&lt;/FORM&lt;</sgmltag>

    </programlisting>

    <para>
      En lo que al control en sí se refiere usaremos de nuevo la etiqueta
      INPUT, esta vez con <emphasis>TYPE=&quot;file&quot;</emphasis>. El
      navegador lo mostrará como una caja de texto junto con un botón que
      permitirá al usuario buscar entre sus archivos el que quiere enviar.
      Un ejemplo con el código completo sería:
    </para>

    <programlisting>

      <sgmltag>&lt;FORM ENCTYPE=&quot;multipart/form-data&quot;
	ACTION=&quot;http://www.miservidor.es/cgi-bin/
	cogefichero&quot;&gt;</sgmltag>
      Enviar el fichero:
      <sgmltag>&lt;INPUT NAME=&quot;fichero_usuario&quot;
	TYPE=&quot;file&quot;&gt;</sgmltag>
      <sgmltag>&lt;INPUT TYPE=&quot;submit&quot;
	VALUE=&quot;Enviar fichero&quot;&gt;</sgmltag>
      <sgmltag>&lt;/FORM&gt;</sgmltag>

    </programlisting>

    <para>
      Usando este código se obtiene el resultado que observamos en la
      figura 12.33 en la que se muestra también el cuadro de diálogo que
      ofrece <productname>Internet Explorer 4</productname> cuando se pulsa
      sobre el botón &apos;Examinar...&apos;.
    </para>

    <figure label="12.33">

      <title>
	Como método alternativo a los CGIs pueden mandarse los datos del
	formulario por correo electrónico. En ese caso el navegador pedirá
	al usuario confirmación de la acción.
      </title>
      <graphic fileref="img/fig12-33.png"/>

    </figure>

    <para>
      Hasta aquí es sencillo. La parte más difícil en el envío de ficheros
      desde páginas Web consistirá en crear un programa para el servidor
      que sea capaz de recibirlo. Por lo general puede ser conveniente
      obtener alguno hecho por profesionales que realice, o al menos nos
      ayude, a realizar esta labor. Para ello recomendamos al lector que se
      dirija a la dirección:
    </para>

    <itemizedlist>

      <listitem>

	<para>

	  <ulink url="http://www.bio.cam.ac.uk/cgi-lib/">
	    http://www.bio.cam.ac.uk/cgi-lib/
	  </ulink>

	</para>

      </listitem>

    </itemizedlist>

    <para>
      Si está interesado en adquirir información para crear el programa
      usted mismo puede obtener toda la información necesaria en el
      servidor FTP:
    </para>

    <itemizedlist>

      <listitem>

	<para>

	  <ulink url="ftp://ds.internic.net/rfc/rfc1867.txt">
	    ftp://ds.internic.net/rfc/rfc1867.txt
	  </ulink>

	</para>

      </listitem>

    </itemizedlist>

  </sect1>


</article>
