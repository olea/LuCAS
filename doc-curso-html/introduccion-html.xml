<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- <!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd">
-->
<article lang="es" id="introduccion-html">
  <articleinfo>
    <title>Introducción al lenguaje HTML</title>
    <date>5 de Noviembre de 2001</date>
    <author>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </author>
    <author>
      <firstname>Victor</firstname>
      <surname>García</surname>
    </author>
    <abstract>
      <para>
        En esta primera entrega de este Curso completo de HTML
	haremos un primer estudio del lenguaje HTML y analizaremos las 
	herramientas que son necesarias o al menos recomendables para 
	realizar una página web. Además aprenderemos qué es y qué no es
	el lenguaje HTML; cual es la estructura de una página web;
	como dar un título a nuestra página y como crear encabezados y
	texto en ella.
      </para>
    </abstract>
    <editor>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </editor>
    <releaseinfo>Versión 1.0</releaseinfo>
    <orgname>Conquista la web</orgname>
    <legalnotice>
      <para>
	Copyright Jorge Ferrer y Victor García. Se otorga permiso para copiar,
	distribuir y/o modificar este documento bajo los términos de la
	Licencia de Documentación Libre GNU, Versión 1.1 o cualquier otra
	versión posterior publicada por la Free Software Foundation. Puede
	consultar una copia de la licencia en:
	http://www.gnu.org/copyleft/fdl.html
      </para>
    </legalnotice>

  </articleinfo>

  <sect1>

    <title>Introducción</title>

    <para>
      El World Wide Web (WWW) es un sistema que contiene una cantidad 
      de información casi infinita. Pero esta información debe estar 
      ordenada de alguna forma de manera que sea posible encontrar lo 
      que se busca. La unidad básica donde está almacenada esta 
      información son las páginas Web. Estas páginas se caracterizan por 
      contener texto, imágenes, animaciones... e incluso sonido y 
      video.
    </para>
    
    <para>
      Una de las características más importantes de las páginas Web
      es que son hipertexto. Esto quiere 
      decir que las páginas no son elementos aislados, sino que están 
      unidas a otras mediante los <emphasis>links</emphasis> o enlaces 
      hipertexto. Gracias a estos enlaces el navegante de internet puede 
      pulsar sobre un texto (texto al que llamaremos de ahora en adelante
      <emphasis>activo</emphasis>) de una página para
      <emphasis>navegar</emphasis> hasta otra página. Será cuestión
      del programador de la  página inicial decidir que palabras o
      frases serán <emphasis>activas</emphasis> y a donde nos
      conducirá pulsar sobre ellas. 
    </para>

    <para>
      En algunos ambientes se discute que el World Wide Web ya no es un 
      sistema hipertexto sino hipermedia. Los que defienden el cambio se 
      apoyan en que aunque en sus orígenes el WWW constaba únicamente de 
      texto en la actualidad es un sistema principalmente gráfico y se 
      puede hacer que las zonas <emphasis>activas</emphasis> sean, no 
      sólo texto, sino imágenes, videos, botones,... en definitiva 
      cualquier elemento de una página. Aún así, el término original 
      no ha sido reemplazado todavía y por tanto será el empleado a lo 
      largo de esta obra.
    </para>

    <figure label="1.1">
      <title>
	Aunque al principio el texto predominaba en el WWW, en la 
	actualidad las imágenes son mayoría como podemos observar en una 
	de las principales webs del proyecto KDE.
      </title>
      <graphic fileref="img/fig1-1.png"/>
    </figure>

    <sect2>
      <title>Características del lenguaje HTML</title>
      <para>
	Pero empecemos ya con lo que nos interesa. ¿Cómo se hace una página 
	Web? Cuando los diseñadores del WWW se hicieron esta pregunta 
	decidieron que se debían cumplir, entre otras, las siguientes 
	características:
      </para>

      <itemizedlist>

	<listitem>
	  <para>
	    El Web tenía que ser distribuido: La información repartida en 
	    páginas no muy grandes enlazadas entre sí.
	  </para>
	</listitem>

	<listitem>
	  <para>
	    El Web tenía que ser hipertexto y debía ser fácil navegar por él.
	  </para>
	</listitem>

	<listitem>
	  <para>
	    Tenía que ser compatible con todo tipo de ordenadores (PCs, 
	    Macintosh, estaciones de trabajo...) y con todo tipo de 
	    sistemas operativos (Windows, MS-DOS, UNIX, MAC-OS,...).
	  </para>
	</listitem>

	<listitem>
	  <para>
	    Debía ser dinámico: el proceso de cambiar y actualizar la 
	    información debía ser ágil y rápido.
	  </para>
	</listitem>

      </itemizedlist>

      <para>
	Estas características son las que marcaron el diseño de todos los 
	elementos del WWW incluida la programación de páginas Web. Como 
	respuesta a todos estos requisitos se creo el lenguaje HTML
	(HiperText Markup Language), cuyas siglas significan "lenguaje
	hipertexto de marcas".
      </para>

      <para>
	Este lenguaje será el encargado de convertir un inocente archivo 
	de texto inicial en una página web con diferentes tipos y tamaños 
	de letra, con imágenes impactantes, animaciones sorprendentes, 
	formularios interactivos, etc.
      </para>
    </sect2>

    <sect2>
      <title>Qué se necesita para crear una página web</title>
      <para>
	Una de las características de este lenguaje más importantes para 
	el programador es que no es necesario ningún programa especial para 
	crear una página Web. Gracias a ello se ha conseguido que se
	puedan crear páginas con cualquier ordenador y  
	sistema operativo. El código HTML, como hemos adelantado en el 
	párrafo anterior, no es más que texto y por tanto lo único 
	necesario para escribirlo es un editor de texto como el que 
	acompañan a todos los sistemas operativos:
	<productname>edit</productname> en MS-DOS, block de notas en
	Windows,<productname>vi</productname>en 
	UNIX, etc. Por supuesto estos no son los únicos editores de texto 
	que pueden ser usados, sino cualquier otro. También se puede usar 
	procesadores de texto, que son editores con capacidades añadidas, 
	compo pueden ser <productname>Microsoft Word</productname> o 
	<productname>WordPerfect</productname> pero hay que tener 
	cuidado porque en ocasiones hacen traducciones automáticas del 
	código HTML que no siempre son deseadas. En estos dos últimos
	casos, también hay que tener en 
	cuenta que deberemos guardar el archivo en modo texto.
      </para>

      <figure label="1.2">
	<title>
	  Un editor de texto simple, como el block de notas de Windows, es 
	  todo lo necesario para crear una página Web
	</title>
	<graphic fileref="img/fig1-2.png"/>
      </figure>

      <para>
	Una vez hemos escrito el código deberemos guardar el archivo (con 
	formato de texto) con la extensión <filename>.html</filename> (
	o <filename>.htm</filename> en MS-DOS,  
	Windows 3.1 o cualquier otro sistema que sólo acepte tres letras 
	en la extensión. Los siguientes son nombres válidos de archivos que 
	contengan código HTML: <filename>index.html</filename>,<filename>
	  index.htm</filename>,<filename>principal.html</filename>, 
	<filename>PRINCIPAL.htm</filename>, etc...
      </para>

      <para>
	NOTA: Si el editor o procesador de textos usado para crear la 
	página obliga a usar la extensión <filename>.txt</filename> al
	guardar el archivo en  
	modo texto, deberemos guardarlo con esta extensión, por ejemplo 
	como <filename>index.txt</filename>, y posteriormente cambiar el 
	nombre del archivo desde fuera del programa a <filename>index.html
	</filename> o <filename>index.htm</filename> . Para ello usaremos 
	el comando <command>rename</command> en MS-DOS; en Windows 3.1 lo 
	haremos mediante el administrador de archivos y en Windows 95 con 
	el explorador. En otros entornos, como Linux, es mas raro que se
	de esta situación.
      </para>

      <para>
	ATENCIÓN: El World Wide Web es un sistema que diferencia las 
	mayúsculas de las minúsculas. Es un error común llamar a un archivo 
	<filename>index.html</filename> y luego referirse a él como 
	<filename>Index.html</filename>. Aunque en nuestro ordenador puede 
	funcionar al publicarlo seguramente no lo hará. Por esta razón es 
	una norma general usar siempre minúsculas para los nombres de los 
	archivos html.
      </para>

      <para>
	Últimamente han aparecido nuevas alternativas que facilitan la 
	programación de páginas Web. Son los editores HTML. Podemos 
	dividir estos editores en dos grupos:
      </para>

      <itemizedlist>

	<listitem>
	  <para>
	    Asistentes: ayudan a crear el código HTML e incluyen 
	    plantillas de código <emphasis>prefabricadas</emphasis>, 
	    por ejemplo <productname> HotDog</productname> (Win),
	    <productname>HomeSite</productname>(Win),<productname>HTML 
	      Editor</productname> (Mac),
	    <productname class="trade">Quanta</productname> (Linux,
	    KDE) o <productname class="trade">Bluefish</productname>,
	    (Linux, GNOME).
	    
	  </para>
	</listitem>

	<listitem>
	  <para>
	    Conversores: son programas con otra función que la de la 
	    programación Web pero que permiten convertir a HTML. Son 
	    ejemplos de conversores <productname>Microsoft Word
	    </productname>,<productname>Quark XPress</productname> y 
	    <productname>PageMaker</productname>.
	  </para>
	</listitem>

	<listitem>
	  <para>
	    Editores WYSIWYG (What You See Is What You Get, lo que ves es 
	    lo que obtienes): estos editores permiten crear páginas web 
	    sin escribir código HTML como si se tratase de un programa de 
	    dibujo por ordenador. Algunos ejemplos de este tipo de 
	    editores son
	    <productname>Macromedia Dreamweaver</productname>,
	    <productname class="trade">HotMetal</productname> o
	    <productname class="trade">Microsoft Frontpage</productname>. 
	  </para>
	</listitem>

      </itemizedlist>

      <figure label="1.3">

	<title>
	  Algunos editores WYSIWYG permiten, además, modificar el 
	  código HTML directamente.
	</title>
	<graphic fileref="img/fig1-3.png"/>

      </figure>
    </sect2>

    <sect2>
      <title>Algunas razones para usar HTML</title>
      <para>
	Todos estos editores HTML tipos pueden ser de gran ayuda y tienen 
	sus ventajas e inconvenientes, pero la experiencia demuestra que 
	conocer el lenguaje HTML ofrece bastantes ventajas:
      </para>

      <itemizedlist>

	<listitem>
	  <para>
	    Seremos capaces de aprovechar todas las características de 
	    este lenguaje, incluso las más nuevas. 
	  </para>
	</listitem>

	<listitem>
	  <para>
	    Aunque se use inicialmente un editor WYSWYG tendremos los
	    conocimientos suficientes para modificar posteriormente el
	    código que éste ha creado. Así se pueden corregir errores o
	    incluir etiquetas no soportadas por el editor.
	  </para>
	</listitem>

	<listitem>
	  <para>
	    No dependeremos de la disponibilidad de una herramienta
	    concreta para poder crear páginas web. Con un simple
	    editor de textos será suficiente.
	  </para>
	</listitem>

      </itemizedlist>

      <para>
	El principal problema de usar editores conversores y WYSIWYG es la 
	necesidad de trabajar con dos archivos-fuentes por separado, por 
	un lado el archivo del editor y por otro el archivo del código HTML 
	una vez generado, lo que nos complica la vida a la hora de realizar 
	cambios en nuestro Web. Sin embargo su utilidad es innegable y su 
	combinación con un buen conocimiento del lenguaje HTML nos
	convertirá en  
	unos grandes programadores de páginas Web capaces de realizar 
	creaciones impactantes visualmente y de gran calidad técnica.
      </para>
    </sect2>
    
    <sect2>

      <title>HTML es un lenguaje descriptivo</title>

      <para>
	Probablemente el lector ha usado alguna vez un procesador de texto 
	(<productname>Abiword</productname>, <productname>Microsoft Word
	</productname> o <productname
				      class="trade">KWord</productname>) o un programa de descripción
	de páginas  
	(<productname>QuarkXPress</productname>). Con este tipo de 
	aplicaciones el usuario tiene un control total sobre los elementos 
	del documento: se le puede decir al programa "pon este texto con 
        este tamaño", "sitúalo a 1 cm. del borde", "usa este sangrado para 
	los párrafos", etc... Con HTML el programador no tiene este tipo  
	de control sobre los elementos que incluirá en su página. El 
	objetivo de este lenguaje será simplemente describir cómo es una 
	página de manera que examinando esa descripción el navegador del 
	usuario final sea capaz de mostrarlo de la mejor manera posible. 
	Con HTML podremos indicarle al navegador que este es un 
        titular, aquí comienza un párrafo, estos son elementos de una 
        lista, etc. posteriormente el navegador decidirá como mostrar 
        esos elementos.
      </para>

      <figure label="1.4">

        <title>
	  Los navegadores en modo texto como Lynx también pueden mostrar 
	  páginas Web gracias al carácter descriptivo de HTML.
	</title>
        <graphic fileref="img/fig1-4.png"/>

      </figure>

      <para>
	¿Por qué funciona así? En un principio esta característica del 
	HTML puede resultar molesta para el creador de la página, que
	no puede  
	saber como será vista su página más que de una forma aproximada. 
	Sin embargo es fundamental para conseguir que el World Wide Web 
        pueda ser navegado con cualquier tipo de ordenador 
	(dicho con otras palabras, que el WWW sea multiplataforma).
	Debemos tener en cuenta que no todos los sistemas operativos son 
	gráficos, que incluso usando un mismo sistema operativo existen 
	diferentes resoluciones de pantalla, ... Por esta razón el lenguaje 
	necesario para crear páginas debe ser descriptivo y como 
	consecuencia tras crear una página el programador debe ver como es 
	mostrada con varios navegadores distintos como <productname>
	  Netscape Navigator</productname> o <productname>Microsoft Internet 
	  Explorer</productname> incluyendo algún navegador de texto como 
	<productname>Lynx</productname>.
      </para>
      
      <para>
	Pero una consecuencia más importante aún de esta
	característica, es que ha permitido que aparezcan navegadores
	vocales, que leen las páginas en vez de mostrarlas. Gracias a
	ello personas ciegas también han podido disfrutar del WWW. Es
	más, esta misma tecnología esta siendo usada para los nuevos
	navegadores embarcados en coches que leen la página al
	conductor para que no se distraiga.
      </para>

      <para>
	NOTA: Una vez creada una página es recomendable probar 
	nuestra página, no sólo con varios navegadores, sino también con 
	varias resoluciones de pantalla distintas como por ejemplo: 
	640x480, 800x600 y 1024x768. Si existe la posibilidad de
	probarlo además con un navegador vocal, mucho mejor aún.
      </para>

      <para>
	Un buen ejemplo de este carácter descriptivo es la definición de 
	titulares, también llamados encabezados, en HTML. Vamos a
	adelantarnos un poco en esta introducción para mostrar
	este ejemplo, en él se muestra como poner el titular de una página:
      </para>

      <programlisting>
	&lt;h1&gt;Bienvenido a la página de La Super Editorial&lt;/h1&gt;
      </programlisting>

      <para>
	Con este código estamos describiendo el texto <emphasis>Bienvenido 
	  a la página de La Super Editorial</emphasis> como el texto de máxima 
	importancia en nuestra página, es el titular. En los navegadores 
	más usados como el <productname>Netscape Navigator</productname> o 
	el <productname>Microsoft Internet Explorer</productname> este 
	titular será mostrado como un texto en negrita y de tamaño grande 
	(el tamaño más grande posible). Sin embargo repetimos una vez más 
	que existen navegadores como pueden ser <productname>Lynx
	</productname> o <productname>Emacs-W3</productname> que son 
	bastante usados por la comunidad académica y universitaria que 
	sólo pueden mostrar texto y no pueden variar el tamaño de la letra. 
	Por esta razón la etiqueta <sgmltag>&lt;h1&gt;</sgmltag>
	no dice que el texto que encierra debe ser de 
	tal tamaño o si debe ser negrita o no. Esta etiqueta sólo le dice 
	que este texto es el más importante de la página, el titular. 
	Sabiendo esto el navegador que funcione en modo texto puede 
	resaltar dicho titular con los medios de que dispone, como por 
	ejemplo poniéndolo en mayúsculas o usando distintos sangrados.
      </para>

      <para>
	También podemos encontrar ventajas de la descripción mirando al 
	futuro. Imaginemos que la informática evoluciona hasta tal punto 
	que los monitores de dentro de unos años pueden mostrar objetos 
	en tres dimensiones. Sería muy interesante que el titular de 
	nuestra página fuese en 3-D de manera que resaltase lo máximo 
	posible. Pues bien, si lo hemos definido como cabecera principal 
	(y no como letra de tamaño 20 puntos y en negrita, por ejemplo) 
	el navegador sabe que queremos que ese texto sea el más importante 
	y puede actuar de manera inteligente poniéndolo automáticamente en 
	tres dimensiones, ¡sin que nosotros hayamos cambiado una sola línea 
	de nuestro código! Parece interesante ¿no?
      </para>

      <para>
	Una vez a quedado claro cual es el espíritu de HTML, hay que decir 
	que últimamente se han introducido métodos para conseguir un mayor 
	control sobre las páginas. Estos métodos permiten controlar 
	aspectos como el tamaño de la letra la disposición (aproximada) de 
	imágenes y texto de manera que se facilita la labor del 
	programador. Pero hay que tener siempre en mente que siempre habrá 
	ligeras diferencias entre como verán las páginas unos usuarios u 
	otros y no debemos pretender poder controlar la presentación y 
	diseño de nuestra página hasta el mínimo detalle.
      </para>

    </sect2>

    <sect2>

      <title>Las bases de HTML</title>

      <para>
	Una vez repasadas unas nociones básicas de HTML y de la 
	programación de páginas Web en general entraremos de lleno en la 
	programación con este lenguaje. Pronto nos daremos cuenta de la 
	sencillez de este lenguaje lo que le convierte en un lenguaje muy 
	fácil de aprender y que nos permitirá crear páginas con mayor 
	facilidad aún.
      </para>

      <para>
	Las órdenes de este lenguaje estarán formadas por unos comandos 
	llamados etiquetas que pueden tener o bien la siguiente estructura:
      </para>

      <programlisting>&lt;NOMBRE_ETIQUETA&gt;</programlisting>

      <para>O bien esta otra:</para>

      <programlisting>
	&lt;NOMBRE_ETIQUETA&gt; TEXTO &lt;/NOMBRE ETIQUETA&gt;
      </programlisting>

      <para>
	Como vemos, la primera estructura está formada por una única 
	instrucción y la segunda por dos: una que marca el inicio de la 
	etiqueta y otra que marca el final, con texto entre ambas.
      </para>

      <para>
	Por ejemplo, para indicarle al navegador que queremos que pinte 
	una línea horizontal debemos escribir:
      </para>

      <programlisting>&lt;hr&gt;</programlisting>

      <para>
	Así de sencillo. Como vemos, el nombre de la etiqueta va delimitado 
	por los símbolos <emphasis>menor que</emphasis> (&lt;) y <emphasis>
	  mayor que</emphasis> (&gt;), todas las instrucciones de HTML 
	deben ir encerradas entre estos dos símbolos.
      </para>

      <para>
	Pero las etiquetas no se limitan a indicar ordenes tan sencillas, 
	estas órdenes tienen en ocasiones parámetros. Por ejemplo la 
	etiqueta <sgmltag>&lt;hr&gt;</sgmltag> tal y como lo 
	hemos hecho anteriormente daría lugar a la línea que vemos en la 
	figura 1.5, es decir le dice al navegador que dibuje una línea 
	horizontal en la pantalla. Esta línea tiene un grosor 
	predeterminado y un ancho variable en función del tamaño de la 
	ventana del navegador.
      </para>

      <figure label="1.5">

        <title>
	  Uso básico de una etiqueta HTML sin ningún tipo de parámetros. 
	  Ejemplo usando la etiqueta
	  <sgmltag>&lt;hr&gt;</sgmltag> para crear una línea
	  horizontal. 
	</title>
	<graphic fileref="img/fig1-5.png"/>

      </figure>

      <para>
	Sin embargo hay muchas formas de pintar una línea y sería deseable 
	poder elegir detalles tales como la anchura y el grosor que va a 
	tener dicha línea. Para especificar este tipo de detalles se 
	crearon los atributos de las etiquetas. Este nuevo elemento se 
	introduce en una etiqueta de la siguiente manera:
      </para>

      <programlisting>
	&lt;etiqueta atributo="valor"&gt;
      </programlisting>

      <para>
	Es decir, en primer lugar ponemos el nombre de la etiqueta, 
	después el nombre del atributo seguido por un signo igual y 
	posteriormente el valor que queramos darle a ese atributo encerrado 
	entre comillas una etiqueta puede tener tantos atributos como se 
	deseen y en ocasiones son necesarios para que la etiqueta tenga 
	algún significado.
      </para>

      <para>
	En nuestro ejemplo de la línea horizontal existe un atributo 
	llamado SIZE, que significa <emphasis>tamaño</emphasis> en inglés, 
	que permite controlar el grosor de la línea que será dibujada en 
	pantalla. Veamos un ejemplo, en la figura 1.6 podemos ver la línea 
	horizontal con diferentes grosores.
      </para>

      <figure label="1.6">

        <title>
	  Las etiquetas tienen atributos para cambiar aspectos del efecto 
	  que producen. En este ejemplo vemos como se puede cambiar el 
	  grosor de una línea con el atributo SIZE.
	</title>
        <graphic fileref="img/fig1-6.png"/>

      </figure>

      <para>
	El valor que toma el atributo size determina el número de puntos 
	de pantalla o pixeles que debe ocupar, en grosor, la línea. En 
	posteriores capítulos estudiaremos en detalle la etiqueta 
	<sgmltag>&lt;hr&gt;</sgmltag> y todos sus atributos.
      </para>

      <para>
	En la figura 1.6 vemos que el valor numérico que le damos al atributo 
	<command>size</command> no va entrecomillado, por ejemplo en
	<sgmltag>&lt;hr size=5&gt;</sgmltag>. En HTML no es necesario
	entrecomillar los valores de los atributos cuando están
	formados únicamente por  números [0-9], letras [a-z, A-Z],
	guiones y puntos. En todo caso es <emphasis>muy
	  recomendable</emphasis> incluir las comillas siempre. De esta
	forma no tenemos que preocuparnos de cuando ponerlas y cuando
	no y a la vez cumplimos el nuevo estándar XHTML. Para los
	curiosos adelantaremos que XHTML es idéntico a HTML pero con
	algunas restricciones adicionales del mundo de XML.
      </para>

      <para>
	Antes de empezar con el código HTML básico conviene hacer saber al 
	lector que aunque en todos los ejemplos usados hasta ahora las 
	etiquetas usadas estaban escritas en mayúsculas en realidad es 
	indiferente el uso de estas o de minúsculas. Sin embargo las 
	mayúsculas son de uso común para que sea más fácil distinguirlas 
	del texto y por tanto seguiremos usando este convenio a lo largo 
	del curso.
      </para>

      <para>
	En los ejemplos también usaremos distinto sangrado (alineación de 
	los párrafos) para los diferentes elementos del código para 
	mostrar los niveles de anidamiento. Este sangrado no es necesario 
	y el lector puede optar por ignorarlo si decide copiar los ejemplos 
	para verlos en su navegador, sin embargo facilita la lectura del 
	código y no afecta al modo en que los objetos de nuestra página 
	serán mostrados.
      </para>

    </sect2>

  </sect1>

  <sect1>

    <title>Primeros pasos con HTML</title>

    <para>
      Conocidas ya las principales características de HTML estamos listos 
      para aprender sus principales etiquetas y para crear nuestra 
      primera página.    
    </para>

    <sect2>
      <title>Estructura de una página</title>
      <para>
	Todo documento HTML está formado por los bloques que podemos 
	apreciar en la figura 2.1. Pasemos a explicar cada uno de ellos.
      </para>

      <figure label="2.1">

        <title>Estructura de bloques de un documento HTML.</title>
        <graphic fileref="img/fig2-1.png"/>

      </figure>

      <para>
	En primer lugar deberemos especificar que el archivo de texto que 
	estamos escribiendo es un documento HTML, para ello usamos las 
	instrucciones de inicio y fin de la etiqueta
	<sgmltag>&lt;html&gt;</sgmltag> al principio y al final de la
	página  
	respectivamente:
      </para>

      <programlisting>
	&lt;html&gt;
	Código de la página
	&lt;/html&gt;
      </programlisting>

      <para>
	El código de la página esta formado a su vez por dos grandes 
	bloques, la cabecera y el cuerpo.	
      </para>

      <para>
	La cabecera de la página está delimitada por las instrucciones de 
	inicio y fin de la etiqueta <sgmltag>head</sgmltag>. Estas
	instrucciones deben estar dentro de la  
	etiqueta HTML de la siguiente manera:
      </para>

      <programlisting>
	&lt;html&gt;
	  &lt;head&gt;
	  Elementos de  la cabecera
	  &lt;/head&gt;
	  ... Resto de código de la página ...
	&lt;/html&gt;
      </programlisting>

      <para>
	En la cabecera de la página se introduce toda aquella información 
	que afectará a toda la página. En un principio esta información se 
	limitará al título. Este título se indicará con la etiqueta 
	<sgmltag>title</sgmltag> usando la siguiente 
	sintaxis:
      </para>

      <programlisting>
	&lt;html&gt;
	  &lt;head&gt;
	    &lt;title&gt;Mi primera página WEB&lt;/title&gt;
	  &lt;/head&gt;		
	&lt;/html&gt;
      </programlisting>

      <para>
	El resultado de ver esta página con nuestro navegador es el que se 
	observa en la figura 2.2. Como vemos, el área de la pantalla donde 
	suele estar la página está todavía vacía, pero si nos fijamos en 
	la cabecera de la ventana del navegador vemos que el título a 
	pasado de ser <productname>Microsoft Internet Explorer
	</productname> a "Mi primera página WEB - <productname>Microsoft 
	  Internet Explorer</productname>". Es decir el título que le demos 
	a nuestra página con la etiqueta <sgmltag>&lt;TITLE&gt;
	</sgmltag> pasará a ser el título de la ventana del 
	navegador.
      </para>

      <figure label="2.2">

        <title>
	  El título de la página es mostrado en la parte superior de la 
	  ventana del navegador.
	</title>
        <graphic fileref="img/fig2-2.png"/>

      </figure>

      <para>
	Además cuando un usuario vea nuestra página y decida incluirla en 
	su lista de webs preferidos con la opción agregar a favoritos del 
	menú Favoritos del navegador (en este caso el explorer) añadirá el 
	nombre que le hemos dado a nuestra página en dicho menú, tal y como 
	podemos apreciar en la figura 2.3. Aunque el nombre con el que se 
	almacena un Favorito puede ser cambiado por el usuario, si hemos 
	puesto un buen título, lo suficientemente descriptivo a cada una 
	de nuestras páginas le evitaremos esa molestia. 
      </para>

      <figure label="2.3">

        <title>
	  Cuando los navegantes incluyan nuestra página a su menú de 
	  favoritos en su menú aparecerá el título que le hayamos dado a 
	  nuestra página con la etiqueta <sgmltag>&lt;TITLE&gt;
	  </sgmltag>.
	</title>
	<graphic fileref="img/fig2-3.png"/>

      </figure>

      <para>
	Es importante resaltar que nada de lo que se ponga en la cabecera 
	de la página será mostrado en la zona del navegador dedicada a 
	mostrar el contenido, es decir, en la zona que vemos en blanco en 
	la figura 2.2.
      </para>

      <para>
	Esto nos induce a pensar que existe otra forma de indicar como 
	será el contenido de la página, pues así es: el cuerpo es el 
	siguiente gran bloque de nuestro documento HTML, éste quedará 
	delimitado por la etiqueta
	<sgmltag>body</sgmltag>. En su interior introduciremos todos
	aquellos  
	elementos de los que queremos que conste nuestra página como
	pueden ser testo, imágenes, tablas, etc. Conociendo la
	etiqueta <sgmltag>body</sgmltag> podemos ampliar el ejemplo
	anterior para que incluya texto.
      </para>

      <programlisting>
	&lt;html&gt;
	  &lt;head&gt;
	    &lt;title&gt;Mi primera página WEB&lt;/title&gt;
	  &lt;/head&gt;
	  &lt;body&gt;
	    Hola a todos, como han deducido por el titulo esta es la 
	    primera pagina web que hago, espero que les
	    guste. Fdo. Jorge 
	  &lt;/body&gt;
	&lt;/html&gt;
      </programlisting>

      <para>
	En la figura 2.4 podemos apreciar como muestra el <productname>
	  Internet Explorer</productname> este código. Como vemos todo el 
	texto que hemos escrito entre las instrucciones de inicio y fin 
	forman ahora el cuerpo de nuestra página. 
      </para>

      <figure label="2.4">

        <title>
	  En esta figura observamos la zona de la ventana en la que los 
	  navegadores mostrarán el texto que pongamos en el cuerpo de la 
	  página.
	</title>
        <graphic fileref="img/fig2-4.png"/>

      </figure>

      <para>
	NOTA: Es posible que aunque no incluyamos las etiquetas 
	<sgmltag>html</sgmltag> o <sgmltag>body</sgmltag> nuestras
	páginas sean visualizadas  
	con algunos navegadores. Sin embargo no debemos confiarnos ya que 
	lo más seguro es que con el resto de navegadores no se vean bien. 
	Por esta razón es muy recomendable usar ambas etiquetas tal y
	como se ha descrito.
      </para>

      <para>
	Una vez que ya sabemos insertar contenido en una página pasaremos 
	a estudiar las diferentes etiquetas que sirven para darle formato 
	a ese contenido.
      </para>

    </sect2>

    <sect2>

      <title>Los encabezados</title>

      <para>
	Usualmente un documento tiene, además de texto llano, una serie de 
	encabezados o titulares. Para ello el lenguaje HTML posee una 
	serie de etiquetas que permiten disponer de titulares de hasta 6 
	niveles de importancia.
      </para>

      <para>
	Estas etiquetas son: <sgmltag>&lt;h1&gt;</sgmltag>,
	<sgmltag>&lt;h2&gt;</sgmltag>, <sgmltag>&lt;h3&gt;</sgmltag>,
	<sgmltag>&lt;h4&gt;</sgmltag>,  
	<sgmltag>&lt;h5&gt;</sgmltag> y
	<sgmltag>&lt;H6&gt;</sgmltag>. La letra "h" al principio del
	nombre de estas etiquetas provien de la	abreviatura de la  
	palabra inglesa <foreignphrase>heading</foreignphrase> que
	significa encabezado. Siguiendo a la  
	hache hay un número del uno al seis que indica la importancia del 
	titular siendo el más importante el uno y el menos importante el 
	seis. En la figura 2.5 se puede ver un ejemplo de cómo muestra las 
	cabeceras <productname>Internet Explorer</productname>.
      </para>

      <figure label="2.5">
        <title>
	  Distintos tipos de encabezados vistos con <productname>Microsoft 
	    Internet Explorer</productname>.
	</title>
        <graphic fileref="img/fig2-5.png"/>
      </figure>

      <para>
	El código usado en este ejemplo es el siguiente:
      </para>

      <programlisting>
	&lt;h1&gt;Encabezado 1&lt;/h1&gt;
	&lt;h2&gt;Encabezado 2&lt;/h2&gt;
	&lt;h3&gt;Encabezado 3&lt;/h3&gt;
	&lt;h4&gt;Encabezado 4&lt;/h4&gt;
	&lt;h5&gt;Encabezado 5&lt;/h5&gt;
	&lt;h6&gt;Encabezado 6&lt;/h6&gt;
      </programlisting>

      <para>
	NOTA: Los encabezados empiezan siempre en una línea nueva y el 
	texto que les sigue comenzará en la línea siguiente. Además el 
	navegador podrá mostrar un espacio vertical adicional entre el 
	encabezado y el texto anterior y posterior.
      </para>

      <para>
	En él observamos que todos los titulares están en negrita y el 
	tamaño de la fuente usada para cada encabezado va decreciendo 
	conforme decrece la importancia del titular. Pero hay que tener en 
	cuenta, tal y como comentábamos en la introducción, que este es 
	sólo un ejemplo y que otros navegadores pueden mostrar estos 
	encabezados de manera diferente.
      </para>

      <para>
	Por otro lado los navegadores más usados hoy en día son el 
	<productname>Internet Explorer</productname> y el <productname>
	  Netscape Navigator</productname> y es normal prestarles una
	atención especial (aunque no exclusiva). Y en la figura 2.6 podemos 
	apreciar cómo con este último se muestra los encabezados de una 
	manera prácticamente idéntica. Por esta razón podemos estar casi 
	seguros de que los usuarios verán los encabezados de la forma 
	mostrada en ambas figuras.
      </para>

      <figure label="2.6">

        <title>
	  Distintos tipos de encabezados vistos con Netscape Navigator
	</title>
        <graphic fileref="img/fig2-6.png"/>

      </figure>

      <para>
	Hay que destacar que los encabezados de <sgmltag>h1</sgmltag>
	a <sgmltag>h4</sgmltag> pueden ser usados 
	como títulos ya que los navegadores suelen usar un tamaño de letra 
	mayor que el habitual para mostrarlos. Sin embargo los encabezados 
	<sgmltag>h5</sgmltag> y <sgmltag>h6</sgmltag> suelen ser
	mostrados con letra más pequeña aún que el texto y por esta razón  
	se usan como notas a pie de página o comentarios de poca 
	importancia.
      </para>

    </sect2>
    <sect2>
      <title>El ejemplo mejorado</title>
      <para>
	Ahora que sabemos usar encabezados los utilizaremos para mejorar 
	ligeramente nuestra página. En la figura 2.7 podemos ver cómo se 
	muestran las modificaciones.
      </para>

      <figure label="2.7">

        <title>
	  Ejemplo de página Web con dos tipos de encabezados y dos párrafos.
	</title>
        <graphic fileref="img/fig2-7.png"/>

      </figure>

      <para>
	Esta página ha sido creada con el siguiente código:
      </para>

      <programlisting>
	&lt;html&gt;
	  &lt;head&gt;
  	    &lt;title&gt;Mi primera página WEB&lt;/title&gt;
	  &lt;/head&gt;
	  &lt;body&gt;
 	    &lt;h1&gt;Mi primera página WEB&lt;/h1&gt;
	    &lt;h2&gt;Bienvenida&lt;/h2&gt;
	      Hola a todos, como han deducido por el titulo esta es la 
	      primera pagina web que hago, espero que les guste. Fdo. Jorge
	    &lt;h2&gt;Proposito&lt;/h2&gt;
	      En esta página iré practicando con los conocimientos que 
	      adquiera en el curso de HTML
	  &lt;/body&gt;
	&lt;/html&gt;
      </programlisting>

    </sect2>

  </sect1>

  <sect1>

    <title>Conclusión</title>

    <para>
      Ya sabemos mucho sobre la programación de páginas. Conocemos las 
      principales características del lenguaje HTML y qué es necesario 
      para crear un Web. Hemos aprendido además las bases del lenguaje y 
      hemos creado nuestra primera página de ejemplo, con texto y en 
      cabezados, y la hemos puesto un título.
    </para>
    <para>
      En la siguiente entrega realizaremos la primera página web
      completa, con párrafos, imágenes e hiperenlaces. Aprenderemos
      también a alinear el texto a los dos lados de la página y a
      combinar esta alineación con la inclusión de
      imagenes. Igualmente veremos cómo es posible crear enlaces a
      distintos puntos de una página así como a otras páginas o puntos
      concretos de estas.
    </para>

  </sect1>
</article>
