<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V3.1//EN">
<book lang="es">
<bookinfo>
	<date>Lunes 19 de Agosto de 2002</date>
	<title>Tutorial de <application>LaTeX</application></title>
	<subtitle>Introducción básica</subtitle>
	<releaseinfo>Versión 0.0</releaseinfo>
	<authorgroup>
		<author>
			<firstname>Gastón</firstname>
			<surname>Simone</surname>
		</author>
	</authorgroup>
	<address>gsimone@linuxmail.org, ccouto@adinet.com.uy</address>
	<legalnotice>
	<para>Este documento es libre, Ud. puede redistribuirlo y/o modificarlo
	bajo los términos de la FDL (GNU Free Documentation Licence) publicada por
	la Fundación de Software Libre; ya sea la versión 1 de la licencia o
	(a su consideración) cualquier versión posterior.</para>
	<para>Este documento es distribuído con el deseo de que sea de utilidad, pero
	SIN NINGUNA GARANTíA (vea la FDL por más detalles).</para>
	</legalnotice>
	<revhistory>
		<revision>
			<revnumber>0.0</revnumber>
			<date>19-06-2002</date>
			<authorinitials>gs</authorinitials>
			<revremark>Documento inicial</revremark>
		</revision>
	</revhistory>
</bookinfo>
	<chapter>
	<title>Introducción</title>
	<para><application>LaTex</application> es un procesador de documentos muy conveniente 
	para la producción de documentos científicos y matemáticos de gran calidad 
	tipográfica.
	El sistema <application>LaTeX</application> también es conveniente para producir una gran
	cantidad de tipos distintos de documentación, desde simples cartas hasta libros completos. 
	<application>LaTex</application> utiliza Tex como su motor a la hora de darle formato a los 
	documentos.</para>
	<para>Este documento busca impulsar al lector de la forma mas rápida posible a
	la utilización de <application>LaTex</application> como su procesador de documentos.
	Si el lector desea profundizar sus conocimientos sobre <application>LaTex</application>,
	le recomiendo visite la página oficial del proyecto <application>LaTex</application>
	(<ulink url="http://www.latex-project.org">www.latex-project.org</ulink>), donde podrá
	encontrar una gran variedad de documentación sobre este sistema. Por cualquier otro tipo
	de material relacionado con <application>LaTex</application>, diríjase a la CTAN
	(Comprhensive <application>TeX</application> Archive Network, 
	<ulink url="http://www.ctan.org">www.ctan.org</ulink>). Es recomendable que visite también
	el proyecto <emphasis>CervanTeX</emphasis> ("LaTeX en español", 
	<ulink url="http://apolo.us.es/CervanTeX/CervanTeX.html">http://apolo.us.es/CervanTeX/CervanTeX.html</ulink>).</para>
	<para><application>LaTex</application> está disponible para la mayoría de las 
	plataformas
	actuales, desde PC's Intel, Mac hasta varios sistemas UNIX. El objetivo de este documento no es 
	ilustrar al lector de cómo instalar <application>LaTex</application> en su computador, 
	sino el como escribir documentos
	para que puedan ser procesados con <application>LaTex</application>.</para>
	</chapter>
	<chapter>
	<title>Conocimientos básicos</title>
		<sect1>
		<title>Introducción</title>
		<para>Los documentos en LaTex se crean en un archivo de texto plano ASCII.
		LaTex no hace diferencias entre espacios y tabulaciones en el texto.
		Varios caracteres-espacio consecutivos son tratados como un único
		espacio. Espacios al principio de una línea son generalmente ignorados.
		Un solo retorno de carro es interpretado como un espacio.
		Una línea vacia entre dos lineas define el final de un parrafo.
		Varias líneas vacías consecutivas son interpretadas como una 
		única línea vací.</para>
		</sect1>
		<sect1>
                <title>Caracteres especiales</title>
		<para>Los caracteres especiales son los siguientes:</para>
		<para># $ % ^ & _ { } ~ \</para>
		<para>Con la excepcion del propio backslah, estos pueden ser imprimibles
		agregandoles antes un carácter backslash \ de la siguiente forma:</para>
		<para>\# \$ \% \^ \& \_ \{ \} \~</para>
		<para>Dos backslashes seguidos (\\) son interpretados como un retorno de
		carro. Para imprimir un backslah se debe ingresar:</para>
		<para>$\backslash$</para>
		<para>Los comandos de LaTex son <emphasis>Case sensitive</emphasis>
		y comienzan con un backslash.
		LaTex ignora espacios en blanco después de un comando. Para generar un
		espacio después de un comando se debe escribir {} exactamente luego del
		comando y a continuación un espacio. La secuencia {} le dice a LaTex que
		pare de "comerse" los espacios luego del comando.</para>
                </sect1>
		<sect1>
                <title>Comentarios</title>
		<para>Todo lo que esté después de un % en una misma linea es un comentario
		(comentario en una línea). Para crear comentarios largos se debe ingresar:</para>
		<programlisting>
		\begin{comment}
		...comentario...
		\end{comment}
		</programlisting>
                </sect1>
		<sect1>
                <title>Estructura de un archivo <application>LaTex</application></title>
		<para>Todo archivo debe comenzar con el comando:
		<programlisting>
		\documentclass{...}
		</programlisting>
		Este comando especifica que tipo de documento se va a escribir.
		Luego se pueden incluir comandos que influenciarán el estilo de todo el
		documento o cargar paquetes que agregarán nuevas utilidades al sistema
		LaTex. El comando para cargar paquetes es:
		<programlisting>
		\usepackage{...}
		</programlisting>
		Cuando todo el trabajo de seteo está hecho, se comienza el cuerpo del
		documento con el comando:
		<programlisting>
		\begin{document}
		</programlisting>
		Luego se ingresa el texto del documento junto con comandos LaTex y se
		termina el mismo con el comando:
		<programlisting>
		\end{document}
		</programlisting>
		Todo lo que esté después de este comando será ignorado.
		Ejemplo de documento LaTeX:
		<programlisting>
		\documentclass[a4paper,11pt]{article}
		% define el titulo
		\author{H.~Partl}
		\title{Minimalismo}
		\begin{document}
		% genera el titulo
		\maketitle
		% inserta la table de contenidos
		\tableofcontents
		\section{Start}
		Bien, aqui comienza mi articulo.
		\section{End}
		\ldots{} y aqui termina.
		\end{document} 
		</programlisting></para>
                </sect1>
		<sect1>
                <title>Sesión de comandos típica</title>
		<orderedlist>
			<listitem><para>Se crea el documento en formato LaTeX con cualquier editor de
				texto plano.</para>
			</listitem>
			<listitem><para>Se ejecuta el comando:
				<programlisting>
				$ latex archivo.tex
				</programlisting>
				Este genera el documento en formato DVI (archivo.dvi).</para>
			</listitem>
			<listitem><para>Se puede visualizar el documento en formato DVI:
				<programlisting>
				$ xdvi archivo.dvi
				</programlisting></para>
			</listitem>
			<listitem><para>o pasarlo a formato PostScript:
				<programlisting>
				$ dvips -Pcmz archivo.dvi -o archivo.ps
				</programlisting></para>
			</listitem>
		</orderedlist>
                </sect1>
		<sect1>
                <title>La disposición del documento</title>
			<sect2>
       			<title>Clases de documentos</title>
			<para>Para indicar la clase de documento que se va a procesar se utiliza el
			comando "\documentclass" que tiene la siguiente sintaxis:
			<programlisting>
			\documentclass[opciones]{clase}
			</programlisting>
			El parámetro <emphasis>"clase"</emphasis> indica la clase del documento 
			a procesar.
			Las clases de documentos posibles en LaTeX2e son los siguientes:
			<itemizedlist>
				<listitem><para><emphasis>"article"</emphasis> 
					para artículos, presentaciones, reportes cortos,
					documentación de programas, invitaciones, etc.
				</para></listitem>
				<listitem><para><emphasis>"report"</emphasis>
					para reportes más largos conteniendo varios
					capítulos, libros cortos, etc.
				</para></listitem>
				<listitem><para><emphasis>"book"</emphasis>
					para libros reales.
				</para></listitem>
				<listitem><para><emphasis>"slides"</emphasis>
					para volantes, avisos de una página, etc. Esta clase
					utiliza fuentes de gran tamaño.
				</para></listitem>
			</itemizedlist>
			El parámetro <emphasis>"opciones"</emphasis> personaliza el 
			comportamiento de la clase del
			documento. Las opciones deben ser separadas por comas. Las opciones más
			comunes son las siguientes:
			<itemizedlist>
				<listitem><para><emphasis>"10pt,11pt,12pt"</emphasis>
				indica el tamaño de la fuente principal del
				documento. <emphasis>"10pt"</emphasis> es el valor por omisión.
				</para></listitem>
				<listitem><para><emphasis>"a4paper,letterpaper,..."</emphasis>
				define el tamaño del papel. Otros
				tipos de papel son <emphasis>a5paper,b5paper,legalpaper,
				executivepaper</emphasis>. <emphasis>letterpaper</emphasis> es el valor por
				omisión.
                                </para></listitem>
				<listitem><para><emphasis>"fleqn"</emphasis>
				indica que las fórmulas matemáticas estén
				alineadas a la izquierda en vez de centradas. 
                                </para></listitem>
				<listitem><para><emphasis>"leqno"</emphasis>
				posiciona la numeración de las fórmulas a la
				izquierda de cada una y no a la derecha.
				</para></listitem>
				<listitem><para><emphasis>"titlepage,notitlepage"</emphasis>
				especifica si se debe comenzar una
				nueva página luego de imprimir el título del
				documento. Las clases <emphasis>report</emphasis> y <emphasis>book</emphasis> 
				lo hacen
				automáticamente, mientras que la clase <emphasis>article</emphasis>
				no.
				</para></listitem>
				<listitem><para><emphasis>"onecolumn,twocolumn"</emphasis>
				indica si el documento debe ser generado
				en una o dos columnas.
				</para></listitem>
				<listitem><para><emphasis>"twoside,oneside"</emphasis>
				indica si el documento debe ser arreglado
				para una impresión de doble faz (de los dos
				lados de cada página). La clase <emphasis>book</emphasis> usa
				<emphasis>"twoside"</emphasis> por omisión, mientras que las clases
				<emphasis>report</emphasis> y <emphasis>article</emphasis> no. 
				El usar la opción <emphasis>twoside</emphasis>
				NO le indica a la impresora que realice una
				impresión de doble faz, esto corre por cuenta
				del usuario, esto se utiliza por un tema de
				formato del documento.
				</para></listitem>
				<listitem><para><emphasis>"openright,openany"</emphasis>
				indica si los capítulos del documento deben
				comenzar solo en páginas ubicadas a la derecha
				o en cualquiera. Esto no funciona con la clase
				<emphasis>article</emphasis> (esta no utiliza capítulos). La clase
				<emphasis>report</emphasis> comienza los capítulos en la siguiente
				página disponible (por omisión), mientras que
				la clase <emphasis>book</emphasis> lo hace en páginas a la derecha.
				</para></listitem>
			</itemizedlist>
			Ejemplo del comando <emphasis>"\documentclass"</emphasis>:
			<programlisting>
			\documentclass[11pt,twoside,a4paper]{article}
			</programlisting>
			</para>
			</sect2> 
			<sect2>
                        <title>Paquetes</title>
			<para>Para resolver problemas que el <application>LaTex</application> 
			básico no resuelve, se agregan
			paquetes para aumentar las capacidades de <application>LaTex</application>. 
			Por ejemplo, para
			incluir gráficos, texto coloreado o codigo fuente proviniente de otro
			archivo. El comando para agregar paquetes tiene la siguiente sintaxis:
			<programlisting>
			\usepackage[opciones]{paquete}
			</programlisting>
			donde <emphasis>"paquete"</emphasis> es el nombre del paquete a incluir y 
			<emphasis>"opciones"</emphasis> es una
			lista de argumentos que personalizan el comportamiento del paquete.
			Paquetes que vienen con la distribucion basica de <application>LaTeX2e</application>:
			<itemizedlist>
				<listitem><para><emphasis>"doc"</emphasis>
				permite la documentación de programas <application>LaTex</application>.
				Descrito en <emphasis>"doc.dtx"</emphasis>.
				</para></listitem>
				<listitem><para><emphasis>"exscale"</emphasis>
				provee versiones de la fuente extendida de
				matemáticas. Descrito en <emphasis>"ltexscale.dtx"</emphasis>.
				</para></listitem>
				<listitem><para><emphasis>"fontenc"</emphasis>
				especifica que codificación de fuente se debe
				utilizar. Descrito en <emphasis>"ltoutenc.dtx"</emphasis>.
				</para></listitem>
				<listitem><para><emphasis>"ifthen"</emphasis>
 				provee comandos de la forma:
				<programlisting>
				if...then..do...otherwise...do...
				</programlisting>
				Descrito en <emphasis>"ifthen.dtx"</emphasis>.
                                </para></listitem>
				<listitem><para><emphasis>"latexsym"</emphasis>
				para acceder a la fuente de símbolos de 
				<application>LaTex</application>.
				Este paquete es muy útil. Descrito en 
				<emphasis>"latexsym.dtx"</emphasis>.
                                </para></listitem>
				<listitem><para><emphasis>"makeidx"</emphasis>
				provee comandos para generar índices.
                                </para></listitem>
				<listitem><para><emphasis>"syntonly"</emphasis>
				procesa un documento solo revisando su sintaxis.
                                </para></listitem>
				<listitem><para><emphasis>"inputenc"</emphasis>
				permite la especificación de la codificación de
				entrada del documento, como ser ASCII, ISO Latin-1,
				ISO Latin-2, páginas de código 437/850 de IBM, Apple
				Macintosh, Next, ANSI-Windows o una definida por el
				usuario. Descrito en <emphasis>"inputenc.dtx"</emphasis>.
                                </para></listitem>
			</itemizedlist>
			Para ver la descripción de cada uno de estos paquetes,
			ejecutar <application>LaTex</application> sobre su archivo correspondiente.
			</para>
                        </sect2>
                </sect1>
		<sect1>
                <title>Archivos que se pueden encontrar</title>
		<para>Trabajando con <application>LaTex</application> se utilizan varios formatos 
		para los distintos
		archivos con los que se trabaja. ésta es una lista de las extensiones
		utilizadas para cada tipo de archivo:
		<itemizedlist>
			<listitem><para><emphasis>".tex"</emphasis>
			Archivo de entrada <application>LaTex</application>. 
			Compilado con <application>LaTex</application>.
			</para></listitem>
			<listitem><para><emphasis>".sty"</emphasis>
			<emphasis>LaTex Macro Package</emphasis>. Este es un archivo que se puede
			cargar en el documento usando el comando <emphasis>"\usepackage"</emphasis>.
			</para></listitem>
			<listitem><para><emphasis>".dtx"</emphasis>
			<application>TeX</application> documentado. Formato de 
			distribución principal para
			archivos de estilo de <application>LaTex</application>. Si se procesa un archivo de
			este tipo, se obtiene un código documentado del paquete
			contenido en este archivo.
			</para></listitem>
			<listitem><para><emphasis>".ins"</emphasis>
			Instalador de los archivos contenidos en el archivo
			<emphasis>".dtx"</emphasis> correspondiente. Si se baja un paquete de la red,
			se obtendrán un archivo <emphasis>".ins"</emphasis> y uno 
			<emphasis>".idx"</emphasis>. Se debe
			ejecutar <application>LaTex</application> sobre el archivo 
			<emphasis>".ins"</emphasis> para instalar el
			archivo <emphasis>".idx"</emphasis> y con él, el paquete deseado.
			</para></listitem>
			<listitem><para><emphasis>".cls"</emphasis>
			Archivo de clase. Define como el documento debe lucir.
			Este archivo es cargado con el comando <emphasis>"\documentclass"</emphasis>.
			</para></listitem>
		</itemizedlist>
		Los siguientes tipos de archivo son generados cuando
		se ejecuta <application>LaTex</application> en el archivo de entrada
		<itemizedlist>
			<listitem><para><emphasis>".dvi"</emphasis>
			<emphasis>Device Independent File</emphasis>. El resultado principal de la
			compilación de un archivo de entrada <application>LaTex</application>.
			</para></listitem>
			<listitem><para><emphasis>".log"</emphasis>
			Brinda información detallada de lo que sucedió en la
			última compilación generada con <application>LaTex</application>.
			</para></listitem>
			<listitem><para><emphasis>".toc"</emphasis>
			Contiene todas las secciones de cabezales. Es leído
			para la siguiente compilación y se utiliza para generar
			la tabla de contenidos.
			</para></listitem>
			<listitem><para><emphasis>".lof"</emphasis>
			Como <emphasis>".toc"</emphasis> pero para la lista de imágenes.
			</para></listitem>
			<listitem><para><emphasis>".lot"</emphasis>
			Como <emphasis>".toc"</emphasis> pero para la lista de tablas.
			</para></listitem>
			<listitem><para><emphasis>".aux"</emphasis>
			Otro archivo que transporta información desde una
			compilación hacia la siguiente. Entre otras cosas,
			contiene información sobre las referencias cruzadas.
			</para></listitem>
			<listitem><para><emphasis>".idx"</emphasis>
			Si el documento contiene un índice, <application>LaTex</application> 
			guarda todas
			las palabras que van dentro del mismo en este archivo.
			Se debe procesar este archivo con el comando <emphasis>"makeindex"</emphasis>.
			</para></listitem>
			<listitem><para><emphasis>".ind"</emphasis>
			Es el archivo <emphasis>".idx"</emphasis> luego de procesado, listo para ser
			incluído en el siguiente ciclo de compilación.
			</para></listitem>
			<listitem><para><emphasis>".ilg"</emphasis>
			Como <emphasis>".log"</emphasis> pero para el comando 
			<emphasis>"makeindex"</emphasis>.
			</para></listitem>
		</itemizedlist>
		</para>
                </sect1>
		<sect1>
                <title>Estilos de páginas</title>
		<para><application>LaTex</application> soporta tres combinaciones de 
		cabezales y pies de páginas
		predeterminadas llamadas <emphasis>estilos</emphasis>. El comando para especificar el estilo
		de página es: 
		<programlisting>
		\pagestyle{estilo}
		</programlisting>
		donde el parámetro <emphasis>"estilo"</emphasis> define el estilo a utilizar. 
		Los posibles
		estilos son los siguientes:
		<itemizedlist>
			<listitem><para><emphasis>"plain"</emphasis>
			imprime los números de páginas al final de cada página 
			en el medio del pie de página. Estilo de página por
			omisión.
			</para></listitem>
			<listitem><para><emphasis>"headings"</emphasis>
			imprime el nombre del capítulo actual y el número de
			página en el cabezal de cada página, mientras en pie
			de pagina queda vacio.
			</para></listitem>
			<listitem><para><emphasis>"empty"</emphasis>
			deja tanto el cabezal como el pie de página vacíos.
			</para></listitem>
		</itemizedlist>
		Es posible cambiar el estilo de la página actual con el comando:
		<programlisting>
		\thispagestyle{estilo}
		</programlisting>
		Más adelante veremos como crear cabezales y pies de páginas personalizados.
		</para>
		</sect1>
		<sect1>
                <title>Proyectos y documentación de gran tamaño</title>
		<para>Cuando se trabaja con documentos grandes, se podría desear dividir el
		archivo de entrada en varias partes. <application>LaTex</application> posee dos comandos 
		para solucionar dicho problema. Con el comando:
		<programlisting>
		\include{nombre_archivo}
		</programlisting>
		ubicado en el cuerpo del documento podemos insertar el contenido de
		otro archivo llamado <emphasis>"nombre_archivo.tex"</emphasis>.
		<application>LaTex</application> comenzará una nueva
		página antes de procesar el contenido del archivo externo.
		Con el comando:
		<programlisting>
		\includeonly{archivo1,archivo2,...}
		</programlisting>
		ubicado al comienzo del documento se puede especificar cuales de los
		archivos incluidos en el correr del documento deben realmente ser
		incluidos y cuales no.
		El comando <emphasis>"\include"</emphasis> comienza a procesar el texto 
		incluído en una nueva
		página. Esto es útil cuando se utiliza 
		<emphasis>"\includeonly"</emphasis>, ya que los saltos
		de página no se moverán, incluso si se omiten algunos archivos a
		incluir. Pero a veces este efecto puede no ser deseado; en este caso se
		utiliza el comando:
		<programlisting>
		\input{archivo}
		</programlisting>
		Este comando incluye el archivo especificado y nada más. Sin
		complicaciones.</para>
		<para>Para decirle a <application>latex</application> que revise la 
		sintaxis de nuestro documento se
		puede utilizar el paquete <emphasis>"syntonly"</emphasis>. Este paquete 
		hace que <application>LaTex</application>
		recorra todo el documento revisando la sintaxis y la utilización de
		comandos, pero sin generar ninguna salida en formato DVI. 
		<application>LaTex</application> corre
		mas rápido en este modo y puede ahorrar tiempo para cuando se procesan
		grandes documentos. Su utilización es muy simple:
		<programlisting>
		\usepackage{syntonly}
		\syntaxonly
		</programlisting>
		Cuando se desee producir la salida en formato DVI, coméntese el segundo
		renglón agregando un signo de porcentage al comienzo de la línea.
		</para>
                </sect1>
	</chapter>
	<chapter>
	<title>Formato del texto</title>
		<sect1>
                <title>Idioma y estructura del texto</title>
		<para>El objetivo principal de escribir un texto es el transmitir ideas,
		información y conocimiento al lector. El mismo comprenderá mejor el
		texto si éste tiene sus ideas bien estructuradas, y verá mejor esta
		estructura si la forma tipográfica refleja la estructura lógica
		y semántica del contenido del documento.
		Con <application>LaTex</application> debe ser especificada la 
		estructura lógica y semántica del
		texto, asi como también la forma tipográfica del texto 
		(esto último a
		través de la reglas dadas en la clase del documento y en varios
		archivos de estilo).</para>
		<para>La más importante unidad de texto en <application>LaTex</application> 
		(y en tipografía) es el
		párrafo. A éste se le llama justamente 
		<emphasis>"unidad de texto"</emphasis>, porque un
		párrafo es la forma tipográfica que debe expresar un pensamiento
		coherente, o una idea. Se mostrará a continuación como forzar saltos de
		línea (por ejemplo con <emphasis>"\\"</emphasis>) y saltos de párrafo 
		(por ejemplo dejando
		una línea vacía en el documento fuente). Por lo tanto, si un nuevo
		pensamiento comienza, un nuevo párrafo debe comenzar, y si no, sólo
		saltos de línea deben ser utilizados. Errores con este tipo de sintaxis
		son muy comunes de cometerse cuando se utilizan ecuaciones en el texto.
		En los siguientes ejemplos se muestra como a veces líneas en blanco
		(saltos de párrafo) son utilizadas antes y después de una 
		ecuación y a
		veces no. Si hay comandos en los ejemplos que no entiende todavía, no
		se preocupe, los mismos serán vistos más adelante en el documento.
		<programlisting>
		% Ejemplo 1
		\ldots cuando Einstein introdujo su formula 
		\begin{equation} 
		e = m \cdot c^2 \; , 
		\end{equation} 
		la cual es al mismo tiempo la mas conocida y la
		menos bien entendida de la formulas fisicas.

		% Ejemplo 2 
		\ldots from which follows Kirchoff s current law: 
		\begin{equation} \sum_{k=1}^{n} I_k = 0 \; . 
		\end{equation} 
		Kirchhoff s voltage law can be derived 
		\ldots 

		% Ejemplo 3 
		\ldots which has several advantages. 
		\begin{equation} I_D = I_F - I_R 
		\end{equation} is the core of a very different transistor model. \ldots
		</programlisting>
		La siguiente unidad de texto mas pequeña es la oración.
		Finalmente los párrafos de un texto deben ser estructurados lógicamente
		en un nivel superior, agrupándolos en capítulos, secciones,
		subsecciones, etc. Sin embargo, el efecto tipográfico de escribir
		<programlisting>
		\section{La estructura del idioma y texto}
		</programlisting>
		es tan obvio que es casi auto-evidente cómo estas estructuras de alto
		nivel deben ser utilizadas.
		</para>
                </sect1>
		<sect1>
                <title>Saltos de línea y saltos de página</title>
			<sect2>
                        <title>Párrafos justificados</title>
			<para><application>LaTex</application> realiza la justificación 
			de los textos automáticamente (cuando
			hablamos de justificación de textos hablamos de que todas la líneas del
			texto tengan el mismo largo). El tipo de alineación de un párrafo
			depende de la clase del documento.
			En algún caso especial puede ser necesario indicarle a 
			<application>LaTex</application> que divida
			una línea. Para hacer esto se puede escribir una de las siguientes
			opciones:
			<itemizedlist>
				<listitem><para><emphasis>"\\", "\newline"</emphasis>
				Comienzan una nueva línea sin comenzar un nuevo párrafo.
				</para></listitem>
				<listitem><para><emphasis>"\\*"</emphasis>
				Adicionalmente prohibe un salto de página luego del
				salto de línea forzado.
				</para></listitem>
				<listitem><para><emphasis>"\newpage"</emphasis>
				Comienza una nueva página.
				</para></listitem>
				<listitem><para><emphasis>"\linebreak[n]"</emphasis>
				Salto de línea.
				</para></listitem>
				<listitem><para><emphasis>"nolinebreak[n]"</emphasis>
				No hacer salto de lnínea.
				</para></listitem>
				<listitem><para><emphasis>"pagebreak[n]"</emphasis>
				Salto de página.
				</para></listitem>
				<listitem><para><emphasis>"nopagebreak[n]"</emphasis>
				No hacer salto de página.
				</para></listitem>
			</itemizedlist>
			Los últimos cuatro comandos de esta lista habilitan al autor a
			influenciar sus acciones con el parámetro opcional 
			<emphasis>"n"</emphasis>. Este parámetro
			puede ser un número entre cero y cuatro. Si 
			<emphasis>"n"</emphasis> es un valor menor a
			cuatro, se le está permitiendo a <application>LaTex</application> 
			el ignorar el comando si el
			resultado de aplicar el mismo se verá muy mal. No confundir los
			comandos que utilizan la palabra <emphasis>"break"</emphasis> en vez 
			de la palabra <emphasis>"new"</emphasis>, no
			son lo mismo. Si realmente se desea comenzar una nueva linea, utilícese
			el comando <emphasis>"\newline"</emphasis>.
			</para>
                        </sect2>
                        <sect2>
                        <title>Separación de palabras por sílaba</title>
			<para><application>LaTex</application> permite separar palabras según 
			sus sílabas para mejorar el
			justificado (por ejemplo). <application>LaTex</application> 
			no separa palabras que tengan
			caracteres con acentuación u otro tipo de carácter no tradicional para
			la lengua inglesa. Para definir alguna palabra fuera de las comunes
			para que sea dividida se utiliza el comando:
			<programlisting>
			\hyphenation{lista}
			</programlisting>
			donde <emphasis>"lista"</emphasis> es una lista de palabras 
			separadas por un espacio que
			tienen un guión ("-") en cada lugar donde pueden ser separadas. Veamos
			un ejemplo. El comando:
			<programlisting>
			\hyphenate{FORTRAN su-per-mer-ca-do}
			</programlisting>
			permite que la palabra <emphasis>"supermercado"</emphasis> (o tambien la palabra
			<emphasis>"Supermercado"</emphasis>) sea separada en cualquiera de 
			sus sílabas, mientras que
			le prohibe a la palabra <emphasis>"FORTRAN"</emphasis> 
			(o <emphasis>"Fortran"</emphasis>, o también <emphasis>"fortran"</emphasis>)
			ser dividida en cualquiera de sus sílabas.
			Este comando debe ser ubicado al comienzo del texto. Por otra parte,
			existe una definición en sílabas en el correr mismo del documento. El
			comando para esto es:
			<programlisting>
			"\-"
			</programlisting>
			Por ejemplo, se podría escribir en el medio de un párrafo el texto
			<programlisting>
			"su\-per\-mer\-ca\-do"
			</programlisting>
			produciendo el mismo efecto que en el ejemplo
			antes mencionado. Este comando es útil cuando se tienen palabras
			acentuadas.</para>
			<para>Se puede mantener un grupo de palabras siempre junto con el comando:
			<programlisting>
			\mbox{texto}
			</programlisting>
			éste causa que toda palabra contenida en 
			<emphasis>"texto"</emphasis> permanezca junto a las
			otras bajo cualquier circunstacia. El comando:
			<programlisting>
			\fbox{texto}
			</programlisting>
			es similar a <emphasis>"\mbox"</emphasis> con la diferencia 
			que se dibujará un recuadro
			alrededor del texto en cuestión.
			</para>
                        </sect2> 
                </sect1>
		<sect1>
                <title>Texto prefabricado</title>
		<para>
		<table>
			<title>Algunos ejemplos de texto prefabricado</title>
			<tgroup cols="3">
				<tbody>
					<row>
						<entry>COMANDO</entry>
						<entry>EJEMPLO</entry>
						<entry>DESCRIPCION</entry>
					</row>
					<row>
						<entry>\today</entry>
						<entry>9 Agosto 2001</entry>
						<entry>Fecha actual en el idioma actual</entry>
					</row>
					<row>
						<entry>\TeX</entry>
						<entry>--</entry>
						<entry>La palabra <emphasis>TeX</emphasis> 
							escrita según su logo</entry>
					</row>
					<row>
						<entry>\LaTeX</entry>
						<entry>--</entry>
						<entry>La palabra <emphasis>LaTeX</emphasis>
                                                        escrita según su logo</entry>
					</row>
					<row>
						<entry>\LaTeX2e</entry>
						<entry>--</entry>
						<entry>La palabra <emphasis>LaTeX2e</emphasis>
                                                        escrita según su logo</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		</para>
                </sect1>
		<sect1>
                <title>Símbolos y caracteres especiales</title>
			<sect2>
                        <title>Comillas y comillas simples</title>
			<para>No se deberían utilzar las <emphasis>"comillas"</emphasis> 
			como en un procesador de texto.
			Para representar comillas en el texto, enciérrece la porción de texto
			entre los caracteres `` y '' como en el ejemplo:
			<programlisting>
			``El veloz murcielago volaba entre los arboles sin golpearse, ciego.''
			</programlisting>
			Si se desean expresar comillas simples, se utiliza el mismo criterio,
			pero encerrando el texto entre un solo ` y un solo ', de la siguiente forma:
			<programlisting>
			`El veloz murcielago volaba entre los arboles sin golpearse, ciego.'
			</programlisting>
			</para>
                        </sect2>
                        <sect2>
                        <title>Guiones</title>
			<para><application>LaTex</application> conoce cuatro tipos de guiones. 
			Los mismos son los siguientes:
			<table>
				<title>Tipos de guiones en LaTex</title>
				<tgroup cols="3">
					<tbody>
						<row>
							<entry>NOMBRE</entry>
							<entry>REPRESENTACION</entry>
							<entry>EJEMPLO</entry>
						</row>
						<row>
							<entry>hyphen</entry>
							<entry>"-"</entry>
							<entry>"fisico-mental"</entry>
						</row>
						<row>
							<entry>en-dash</entry>
							<entry>"--"</entry>
							<entry>--</entry>
						</row>
						<row>
							<entry>em-dash</entry>
							<entry>"---"</entry>
							<entry>--</entry>
						</row>
						<row>
							<entry>Signo de menos</entry>
							<entry>"-"</entry>
							<entry>"$-1$" (matemática)</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			</para>
                        </sect2> 
			<sect2>
                        <title>El carácter ~</title>
			<para>Hay dos maneras de representar este carácter, y producen resultados
			distintos, aquí se brindan dos ejemplos que se sugiere se prueben para
			ver la diferencia:
			<programlisting>
			http://www.rich.edu/\~{}bush
			http://www.clever.edu/$\sim$demo
			</programlisting>
			</para>
                        </sect2>
                        <sect2>
                        <title>El símbolo de grado</title>
			<para>Este es un ejemplo de como imprimir el símbolo de grado en 
			<application>LaTex</application>:
			<programlisting>
			Hay $-30\,^{\circ}\mathrm{C}$, hace mucho frio.
			</programlisting>
			</para>
                        </sect2>
			<sect2>
                        <title>Elipsis (...)</title>
			<para>La forma correcta de representar una elipsis (tres puntos seguindos) es
			poniendo el comando:
			<programlisting>
			\ldots
			</programlisting>
			inmediatamente después de la palabra que debe preceder a la elipsis.
			</para>
                        </sect2>
                        <sect2>
                        <title>Acentos y caracteres especiales</title>
			<para><application>LaTex</application> soporta el uso de acentos y 
			caracteres especiales de varios
			idiomas. Se representaran todos los acentos posibles para la letra 
			<emphasis>"o"</emphasis> 
			(y se da por entendido que funciona para cualquier otra vocal), así
			como también un gran número de caracteres especiales. Se sugiere
			probar los mismos para ver su resultado gráfico.
			<programlisting>
			\`o	\'o	\^o	\~o
			\=o	\.o	\""o	\c c 
			\u o	\v o	\H o	\c o
			\d o	\b o	\t oo
			\oe	\OE	\ae	\AE
			\aa	\AA
			\o	\O	\l	\L
			\i	\j	!`	?`
			</programlisting>
			</para>
                        </sect2>
                </sect1>
		<sect1>
                <title>Soporte para lenguaje internacional</title>
		<para>El idioma por omisión utilizado por <application>LaTex</application> 
		es el inglés, por lo tanto
		se deben tener algunas consideraciones antes de comenzar a escribir un
		documento en castellano utilizando <application>LaTex</application>:
		<orderedlist>
			<listitem><para>
			Todas las cadenas de texto automáticamente generadas deben
			ser adaptadas al nuevo idioma. Esto se logra utilizando el
			paquete <emphasis>"babel"</emphasis>.
			</para></listitem>
			<listitem><para>
			<application>LaTex</application> necesita saber las reglas de 
			separado de sílabas del
			nuevo lenguaje. Esto
			se logra cambiando el archivo de formato con nuevas reglas
			de separado de sílabas.
			</para></listitem>
		</orderedlist>
		Para utilizar el paquete agréguese el comando:
		<programlisting>
		\usepackage[lenguaje]{babel}
		</programlisting>
		después del comando <emphasis>"\documentclass"</emphasis> y 
		sustituyendo la palabra
		<emphasis>"lenguaje"</emphasis> por el idioma de su elección. 
		Los idiomas soportados por su
		distribución deben estar listados en la Guía Local. 
		El paquete <emphasis>Babel</emphasis>
		activará automaticámente las reglas apropiadas de 
		separado de sílabas.
		Si el idioma de su elección no es soportado por 
		<application>LaTex</application>, <emphasis>Babel</emphasis> seguirá
		funcionando de todos modos, pero deshabilitará las reglas de separado
		de sílabas, lo que trae un efecto contraproducente.
		Para algunos lenguajes, <emphasis>Babel</emphasis> especifica nuevos 
		comandos que facilitan
		la entrada de caracteres especiales.
		Algunos sistemas permiten ingresar caracteres especiales directamente
		desde el teclado, <application>LaTex</application> puede manejar dichos caracteres.
		</para>
                </sect1>
		<sect1>
                <title>El espacio entre palabras</title>
		<para>Para conseguir un margen derecho recto, <application>LaTex</application> 
		inserta una cantidad
		variable de espacios entre cada palabra. También inserta una leve mayor
		cantidad de espacios al final de una oración para hacer el texto más
		legible. <application>LaTex</application> asume que las oraciones terminan 
		con puntos, signos de
		interrogación o de exclamación. Si un punto es precedido por una letra
		mayúscula, éste no es interpretado como el final de una oración, sino
		como el final de una abreviación. Cualquier excepción de estos
		criterios debe ser especificada por el autor. Una contrabarra ("\")
		frente a un espacio generará un espacio que no será alargado. Un
		carácter <emphasis>"~"</emphasis> generará un espacio que no podrá 
		ser alargado y que
		también prohibirá un salto de línea. El comando:
		<programlisting>
		\@
		</programlisting>
		frente a un punto especifica que este punto termina una oración, aun
		si éste es precedido por una letra mayúscula. Un ejemplo podría 
		ser el siguiente:
		<programlisting>
		Me gusta BASIC\@. A ti?
		</programlisting>
		El espacio adicional después de puntos puede ser deshabilitado con el comando:
		<programlisting>
		\frenchspacing
		</programlisting>
		que le dice a <application>LaTex</application> que no ingrese más espacio 
		después de un
		punto que el carácter ordinario. Si se utiliza el comando
		<emphasis>"\frenchspacing"</emphasis>, no es necesario utilizar el comando 
		<emphasis>"\@"</emphasis>.
		</para>
                </sect1>
		<sect1>
                <title>Títulos, capítulos y secciones</title>
		<para>Para ayudar al lector a encontrar su camino a través del texto lo
		aconsejable es dividir el mismo en capítulos, secciones y subsecciones.
		<application>LaTex</application> soporta este tipo de divisiones con 
		comandos que toman el título
		de la sección como su parámetro. Corre por cuenta del autor el uso de
		los mismos en el orden indicado. Los siguientes comandos de seccionado
		están disponibles para la clase <emphasis>"article"</emphasis>.
		<programlisting>
		\section{...}
		\paragraph{...}
		\subsection{...}
		\subparagraph{...}
		\subsubsection{...}
		</programlisting>
		Pueden ser utilizados dos comandos de seccionado adicionales para las
		clases <emphasis>"book"</emphasis> y <emphasis>"report"</emphasis>:
		<programlisting>
		\part{...}
		\chapter{...}
		</programlisting>
		Como la clase <emphasis>"article"</emphasis> no conoce capítulos 
		(<emphasis>"chapters"</emphasis>), es muy fácil
		agregar artículos en forma de capítulo a un libro. El espacio entre
		secciones, el numerado y el tamaño de fuente de los títulos será
		designado automáticamente por <application>LaTex</application>.
		Dos de los comandos de seccionado son un poco especiales:
		<itemizedlist>
			<listitem><para>
			El comando <emphasis>"\part"</emphasis> no influye en el numerado 
			de los capítulos.
			</para></listitem>
			<listitem><para>
			El comando <emphasis>"\appendix"</emphasis> no toma parámetros, 
			sólo cambia el numerado de los capítulos a letras.
			</para></listitem>
		</itemizedlist>
		<application>LaTex</application> crea una tabla de contenidos tomando 
		los cabezales de las
		secciones y los números de página desde el último ciclo 
		de compilación
		del documento. El comando:
		<programlisting>
		\tableofcontents
		</programlisting>
		crea una tabla de contenidos en el lugar donde es escrito el mismo. Un
		nuevo documento debe ser compilado dos veces para conseguir una tabla
		de contenidos correcta. Existen oportunidades donde será necesario
		compilar el documento por una tercera vez. <application>LaTex</application> 
		avisará cuando esto
		sea necesario.</para>
		<para>Todos los comandos de seccionado anteriormente nombrados también
		existen en su versión <emphasis>"estrellada"</emphasis>. 
		La versión estrellada de un comando
		es creada agregando un carácter <emphasis>"*"</emphasis> luego del nombre 
		del comando. Estos
		generan cabezales de secciones que no aparecen en la tabla de
		contenidos y que no son numerados. Por ejemplo, el comando:
		<programlisting>
		\section{Ayuda}
		</programlisting>
		se podría escribir como:
		<programlisting>
		\section*{Ayuda}
		</programlisting>
		Normalmente los cabezales de sección aparecen en la tabla de contenidos
		exactamente en el lugar que fueron ingresados en el texto. A veces esto
		no es posible, porque el cabezal es muy largo como para caber en la
		tabla de contenidos. El texto para la tabla de contenidos puede ser
		especificado como un argumento opcional frente al cabezal actual. Por
		ejemplo:
		<programlisting>
		\chapter[Titulo para la tabla de contenidos]{Un titulo largo y aburrido mostrado en el texto}
		</programlisting>
		El título general del documento es generado ingresando el comando:
		<programlisting>
		\maketitle
		</programlisting>
		El contenido del titulo debe ser definido por los comandos:
		<programlisting>
		\title{...}
		\author{...}
		\date{...}	% ESTE ULTIMO ES OPCIONAL
		</programlisting>
		En el parámetro del comando <emphasis>"\author"</emphasis> es 
		posible ingresar varios nombres
		separados por comandos del tipo:
		<programlisting>
		\and
		</programlisting>
		Aparte de los comandos de seccionado nombrados anteriormente, 
		<application>LaTeX2e</application>
		introduce tres comandos adicionales para ser utilizados con la clase
		<emphasis>"book"</emphasis>. éstos son útiles para dividir 
		una publicación. Estos comandos
		alteran los cabezales de los capítulos y el numerado de páginas para
		trabajar como es de esperarse en un libro:
		<itemizedlist>
			<listitem><para><emphasis>"\frontmatter"</emphasis>
			debería ser el primer comando a ingresar luego
			de <emphasis>"\begin{document}"</emphasis>. éste generará 
			el numerado de
			páginas con números romanos.
			</para></listitem>
			<listitem><para><emphasis>"\mainmatter"</emphasis>
			debe situarse justo antes del primer capítulo del
			documento. éste cambia a numerado de página Arábico y
			reinicia el contador de páginas.
			</para></listitem>
			<listitem><para><emphasis>"\appendix"</emphasis>
			indica el comienzo de material adicional en el
			documento. Luego de este comando los capítulos serán
			numerados con letras.
			</para></listitem>
			<listitem><para><emphasis>"\backmatter"</emphasis>
			debería ser ingresado antes de los últimos ítems
			del documento, como ser la bibliografía y el índice. En
			las clases de documentos estándar, este comando no
			tiene efectos visuales.
			</para></listitem>
		</itemizedlist>
		</para>
                </sect1>
		<sect1>
                <title>Referencias cruzadas</title>
		<para>En libros, reportes y artículos, existen referencias cruzadas a figuras,
		tablas y segmentos de texto especiales. <application>LaTex</application> 
		provee los siguientes
		comandos para crear referencias cruzadas:
		<programlisting>
		\label{marcador}
		\ref{marcador}
		\pageref{marcador}
		</programlisting>
		donde el parámtero <emphasis>"marcador"</emphasis> es un identificador elegido por el
		usuario. En el texto final, el comando <emphasis>"\ref"</emphasis> aparecerá como el
		número de sección, subsección, figura, tabla o teorema que
		representa su comando <emphasis>"\label"</emphasis> correpondiente; mientras que el comando
		<emphasis>"\pageref"</emphasis> aparecerá como el número de página 
		en el que se encuentra
		su comando <emphasis>"\label"</emphasis> correspondiente. 
		Un ejemplo podría ser el siguiente:
		<programlisting>
		Una referencia a esta subseccion \label{sec:this} luce como:
		``vea la seccion~\ref{sec:this} en la pagina~\pageref{sec:this}.''
		</programlisting>
		</para>
                </sect1>
		<sect1>
                <title>Notas al pie</title>
		<para>Con al comando:
		<programlisting>
		\footnote{texto}
		</programlisting>
		una nota al pie es impresa al final de la página actual. Las notas al
		pie deberían ser ubicadas siempre luego de la palabra a la que se refieren.
		Las notas al pie que refieren a una oración o parte de ella deberían
		ser ubicadas luego de una coma o el punto. Un ejemplo podría ser el
		siguiente:
		<programlisting>
		Las notas al pie\footnote{Esto es una nota al pie.} son muy utiles.
		</programlisting>
		</para>
                </sect1>
		<sect1>
                <title>Palabras destacadas (subrayado, itálica y fuentes)</title>
		<para>Si un texto es escrito con una máquina de escribir, las palabras que se
		desean destacar son subrayadas. Esto se logra con el comando:
		<programlisting>
		\underline{texto}
		</programlisting>
		En libros impresos, sin embargo, las palabras son destacadas
		imprimiéndolas con una fuente itálica. Esto se logra con el comando:
		<programlisting>
		\emph{texto}
		</programlisting>
		Lo que realmente hace este comando con el texto de su parametro depende
		del contexto. Por ejemplo:
		<programlisting>
		\emph{Si se utiliza el comando de destaque dentro de un texto que ya
		esta destacado, \LaTeX{} utiliza la fuente \emph{normal} para
		destacar el texto en cuestion.}
		</programlisting>
		También se le puede pedir a <application>LaTex</application> que cambie la 
		fuente del documento,
		los comandos son los siguientes:
		<itemizedlist>
			<listitem><para><emphasis>"\textit{texto}"</emphasis>
			produce el efecto itálica (al igual que <emphasis>"\emph"</emphasis>).
			</para></listitem>
			<listitem><para><emphasis>"\textsf{texto}"</emphasis>
			escribe el texto con la fuente <emphasis>"Sans Serif"</emphasis>.
			</para></listitem>
			<listitem><para><emphasis>"\texttt{texto}"</emphasis>
			escribe el texto como si fuera una máquina de escribir.
			</para></listitem>
		</itemizedlist>
		</para>
                </sect1>
		<sect1>
                <title>Ambientes</title>
		<para>Un ambiente se define de la siguiente forma:
		<programlisting>
		\begin{ambiente} ...texto... \end{ambiente{ambiente}
		</programlisting>
		siendo el parámetro <emphasis>"ambiente"</emphasis> el nombre 
		del ambiente. Los ambientes
		pueden ser declarados varias veces a lo largo del documento sin
		importar su orden, siempre y cuando se respete el orden de apertura
		y cerrado de los mismos. Por ejemplo:
		<programlisting>
		\begin{aaa}
		...
		\begin{bbb}
		...
		\end{bbb}
		...
		\end{aaa}
		</programlisting>
		A continuación se explicarán los ambientes más importantes.
		</para>
			<sect2>
                        <title>Itemize, Enumerate y description</title>
			<para>El ambiente <emphasis>"itemize"</emphasis> es útil 
			para crear listas simples, el ambiente
			<emphasis>"enumerate"</emphasis> para listas numeradas, y el 
			ambiente <emphasis>"description"</emphasis> para
			descripciones. A continuación se presenta un ejemplo para probar:
			<programlisting>
			\flushleft
			\begin{enumerate}
			\item Puedes mezclar los ambientes de lista a tu gusto:
			\begin{itemize}
			\item Pero podrian llegar a verse mal.
			\item[-] Con un guion.
			\end{itemize}
			\item Por lo cual debes recordar:
			\begin{description}
			\item[Stupid] Las no se veran bien por el hecho de que esten en una
			lista.
			\item[Smart] Sin embargo, las cosas se pueden mostrar bellas en una
			lista.
			\end{description}
			\end{enumerate}
			</programlisting>
			</para>
                        </sect2> 
			<sect2>
                        <title>Flushleft, Flushright y Center</title>
			<para>Los ambientes <emphasis>"flushleft"</emphasis> y 
			<emphasis>"flushright"</emphasis> generan párrafos alineados a
			la izquierda y derecha respectivamente. El ambiente 
			<emphasis>"center"</emphasis> genera
			texto centrado. Si no se especifican saltos de línea con el comando
			"\\", <application>LaTex</application> los determinará 
			automáticamente. A continuación se
			presentan algunos ejemplos descriptivos:
			<programlisting>
			\begin{flushleft}
			Este texto esta\\ alineado a la izquierda.
			\LaTeX{} no esta tratando de dejar cada linea del mismo largo.
			\end{flushleft}

			\begin{flushright}
			Este texto esta \\alineado a la derecha.
			\LaTeX{} no esta tratando de dejar cada linea del mismo largo.
			\end{flushright}

			\begin{center}
			En el centro\\de la tierra
			\end{center}
			</programlisting>
			</para>
                        </sect2>
			<sect2>
                        <title>Quote, Quotation y Verse</title>
			<para>El ambiente <emphasis>"quote"</emphasis> es útil para 
			agregar citas, frases importantes y
			ejemplos en el texto. Por ejemplo:
			<programlisting>
			Una regla tipografica para el largo de una linea es:
			\begin{quote}
			En promedio, ninguna linea deberia superar los 66 caracteres.
			\end{quote}
			Es por esta razon que las paginas de LaTeX{} tienen bordes tan largos
			por defecto y tambien es por esta razon que se usa la impresion en
			varias columnas en los periodicos.
			</programlisting>
			Existen dos ambientes similares al <emphasis>"quote"</emphasis>: 
			<emphasis>"quotation"</emphasis> y <emphasis>"verse"</emphasis>. El
			ambiente <emphasis>"quotation"</emphasis> es útil para citas 
			largas que llevarán varios
			párrafos, porque realiza párrafos <emphasis>"dentados"</emphasis>. 
			El ambiente <emphasis>"verse"</emphasis> es
			útil para poemas, donde los saltos de línea son importantes.
			Las líneas son separadas ingresando un <emphasis>"\\"</emphasis> 
			al final de cada línea y una línea
			vacía al final de cada verso. Por ejemplo:
			<programlisting>
			Solo se un poema en ingles de memoria. Habla de Humpty Dumpty.
			\begin{flushleft}
			\begin{verse}
			Humpty Dumpty sat on a wall:\\
			Humpty Dumpty hay a great fall.\\
			All the King's horses and all the King's men\\
			Couldn't put Humpty together again.
			\end{verse}
			\end{flushleft}
			</programlisting>
			</para>
                        </sect2>
			<sect2>
                        <title>Verbatim (<emphasis>al pie de la letra</emphasis>)</title>
			<para>Todo texto que se encuentre dentro del ambiente 
			<emphasis>"verbatim"</emphasis> será
			directamente impreso, como si fuera escrito en una máquina de escribir,
			con todos los saltos de líneas y espacios, sin ser ejecutado ningún
			comando <application>LaTex</application>. Para obtener el mismo 
			efecto dentro de un párrafo se
			puede utilizar el comando:
			<programlisting>
			\verb+texto+
			</programlisting>
			sustituyendo <emphasis>"texto"</emphasis> con lo que se desea 
			imprimir sin ser procesado. El
			carácter <emphasis>"+"</emphasis> es solo un ejemplo de carácter 
			delimitador, este podría
			ser cualquier carácter con la excepción de letras, el 
			asterisco (<emphasis>"*"</emphasis>) y el espacio.</para>
			<para>El ambiente <emphasis>"verbatim"</emphasis> y el comando 
			<emphasis>"verb"</emphasis> no deben ser utilizados
			dentro de parámetros de otros comandos.
			</para>
                        </sect2>
			<sect2>
                        <title>Tabular</title>
			<para>El ambiente <emphasis>"tabular"</emphasis> puede ser utilizado 
			para crear tablas con líneas
			verticales y horizontales opcionales. <application>LaTex</application> 
			determina el ancho de las
			columnas automáticamente.
			El parámetro <emphasis>"formato"</emphasis> del comando:
			<programlisting>
			\begin{tabular}{formato}
			</programlisting>
			define el formato de la tabla. Se pueden utilizar los siguientes
			parámetros:
			<itemizedlist>
				<listitem><para><emphasis>"l"</emphasis>
				Columna con texto alineado a la izquierda.
				</para></listitem>
				<listitem><para><emphasis>"r"</emphasis>
				Columna con texto alineado a la derecha.
				</para></listitem>
				<listitem><para><emphasis>"c"</emphasis>
				Columna con texto centrado.
				</para></listitem>
				<listitem><para><emphasis>"p{ancho}"</emphasis>
				Columna con texto justificado y saltos de línea.
				</para></listitem>
				<listitem><para><emphasis>"|"</emphasis>
				Línea vertical.
				</para></listitem>
			</itemizedlist>
			En el ambiente <emphasis>"tabular"</emphasis>:
			<itemizedlist>
				<listitem><para><emphasis>"&"</emphasis>
				salta a la siguiente columna.
				</para></listitem>
				<listitem><para><emphasis>"\\"</emphasis>
				comienza una nueva línea.
				</para></listitem>
				<listitem><para><emphasis>"\hline"</emphasis>
				inserta una línea horizontal.
				</para></listitem>
				<listitem><para><emphasis>"\cline{j-i}"</emphasis>
				agrega una línea parcial, donde <emphasis>"j"</emphasis> y 
				<emphasis>"i"</emphasis> son los
				números de columna en los cuales la nueva línea se
				debe extender.
				</para></listitem>
			</itemizedlist>
			Por ejemplo:
			<programlisting>
			\begin{tabular}{|r|l|}
			\hline
			7C0 & hexagecimal \\
			3700 & Octal \\ \cline{2-2}
			11111000000 & binario \\
			\hline \hline
			1984 & decimal \\
			\hline
			\end{tabular}

			\begin{tabular}{|p{4.7cm}|}
			\hline
			Bienvenido al parrafo de Boxy.
			Esperamos que todos disfruten del show. \\
			\hline
			\end{tabular}
			</programlisting>
			El separador de columnas puede ser especificado con la construcción:
			<programlisting>
			@{...}
			</programlisting>
			Este comando inhibe el espacio entre columnas y los sustituye con lo
			que se haya puesto entre llaves. Un uso comun de este comando es
			explicado a continuación. Trata el problema del alineado de cifras
			decimales. También se utiliza comunmente para eliminar espacios no
			deseados en la tabla. Pruébense los siguientes códigos 
			y compárense:
			<programlisting>
			\begin{tabular}{@{} l @{}}
			\hline
			sin espacios\\
			\hline
			\end{tabular}

			\begin{tabular}{l}
			\hline
			con espacios a la derecha y a la izquierda\\
			\hline
			\end{tabular}
			</programlisting>
			No existe manera manera de alinear columnas decimales a un punto
			decimal en una instalación estándar. Pero se puede realizar un pequeño
			truco: un entero alineado a la derecha y una fraccion alineada a la
			izquierda. El comando:
			<programlisting>
			@{.}
			</programlisting>
			en la linea <emphasis>"\begin{tabular}"</emphasis> reemplaza el 
			espacio entre columnas con
			un punto (<emphasis>"."</emphasis>), dando la apariencia de una 
			sola columna justificada al
			nivel del punto decimal. No se debe olvidar de reemplazar los puntos
			decimales de los numeros por un separador de columnas (<emphasis>"&"</emphasis>).
			Una etiqueta de columna puede ser ubicada sobre nuestra "columna" numérica
			(que en realidad son dos columnas) utilizando el comando 
			<emphasis>"\multicolumn"</emphasis>.
			Véanse los siguientes ejemplos:
			<programlisting>
			\begin{tabular}{c r @{.} l}
			Expresion Pi &
			\multicolumn{2}{c}{Valor} \\
			\hline
			$\pi$ & 3&1416 \\
			$\pi^{\pi}$ & 36&46 \\
			$(\pi^{\pi})^{\pi}$ & 80662&7 \\
			\end{tabular}

			\begin{tabular}{|c|c|}
			\hline
			\multicolumn{2}{|c|}{Ene} \\
			\hline
			Mene & Muh! \\
			\hline
			\end{tabular}
			</programlisting>
			Todo material contenido en un ambiente tabular siempre se mantiene
			dentro de una misma página. Si se desea crear tablas muy extensas,
			véanse los ambientes <emphasis>"supertabular"</emphasis> y 
			<emphasis>"longtabular"</emphasis>.
			</para>
                        </sect2>
                </sect1>
		<sect1>
                <title>Cuerpos flotantes (imágenes y tablas)</title>
		<para>La mayoría de la publicaciones contienen figuras y tablas. Las mismas
		necesitan un trato especial dentro del documento, porque no pueden
		quedar partidas a lo largo de las distintas páginas. Un método podría
		ser comenzar una nueva página cada vez que una figura o tabla es muy
		grande como para ubicarla en la página actual que se está procesando.
		Este metodo dejaría páginas parcialmente vacías, lo que luce muy mal.
		La solución a este problema es hacer <emphasis>"flotar"</emphasis> 
		la figura o tabla que no
		cabe en la página actual a la siguiente página, mientras que se sigue
		llenando la página actual con texto. <application>LaTex</application> 
		ofrece dos ambientes para
		cuerpos flotantes, uno para tablas y otro para figuras. Para obtener el
		mayor provecho de estos dos ambientes, es importante entender como
		<application>LaTex</application> maneja el <emphasis>"flote"</emphasis> 
		internamente. De otro modo, los flotes se
		podrían convertir en una fuente de frustración, ya que 
		<application>LaTex</application> nunca los
		pone en el lugar que uno desean que estén.</para>
		<para>Primero veremos los comandos que <application>LaTex</application> 
		provee para los flotes:
		Todo material contenido dentro de un ambiente <emphasis>"figure"</emphasis> o 
		<emphasis>"table"</emphasis> será
		tratado como un cuerpo flotante. Ambos ambientes mencionados soportan
		un parámetro opcional llamado <emphasis>"especificador de lugar"</emphasis>:
		<programlisting>
		\begin{figure}[especificador de lugar]

		\begin{table}[especificador de lugar]
		</programlisting>
		Este parámetro es utilizado para decirle a <application>LaTex</application> 
		las ubicaciones a
		donde el cuerpo flotante puede ser desplazado. Un especificador de
		lugar es creado construyendo una cadena de permisos de lugares para
		flote. Las posibles opciones para esta cadena son las siguientes:
		<itemizedlist>
			<listitem><para><emphasis>"h"</emphasis>:
			"here", en el mismo lugar del texto en donde se realizó
			la declaración del objeto.
			</para></listitem>
			<listitem><para><emphasis>"t"</emphasis>:
			"top", al comienzo de una página.
			</para></listitem>
			<listitem><para><emphasis>"b"</emphasis>:
			"bottom", al final de una página.
			</para></listitem>
			<listitem><para><emphasis>"p"</emphasis>:
			"page", en una página especial en donde se
			encuentran sólo objetos flotantes.
			</para></listitem>
			<listitem><para><emphasis>"!"</emphasis>:
			Sin tener en cuenta parámetros internos que podrían detener
			la inserción del objeto (como ser el mayor número de objetos
			flotantes permitidos por página).
			</para></listitem>
		</itemizedlist>
		Por ejemplo, una tabla podría ser declarada de la siguiente forma:
		<programlisting>
		\begin{table}[!hbp]
		</programlisting>
		El especificador de lugar <emphasis>"[!hbp]"</emphasis> le permite a 
		<application>LaTex</application> ubicar la tabla
		en el mismo lugar de la declaración (h) o al final de alguna página (b)
		o en una página especial de objetos flotantes (p), todo esto aún si no
		luce bien en el documento (!). Si no se ingresa un especificador de
		lugar, los valores por omisión para el mismo son <emphasis>"[tbp]"</emphasis>.
		<application>LaTex</application> ubicará cada objeto flotante que encuentre, 
		de acuerdo con el
		especificador de lugar ingresado por el autor. Si un objeto flotante no
		puede ser ubicado en la página actual, este es diferido a la cola de
		figuras o de tablas. Estas colas son del estilo FIFO ("First In First
		Out"), lo que quiere decir que el primer objeto en entrar en la cola,
		es el primero en salir, manteniendo este orden a lo largo de toda la
		lista. Cuando una nueva página es iniciada, primero 
		<application>LaTex</application> revisa si es
		posible crear una página especial para cuerpos flotantes con cuerpos de
		las colas. Si esto no es posible, el primer objeto de cada cola es
		tratado como si recién hubiese aparecido en el texto: 
		<application>LaTex</application> trata de
		ubicarlo de acuerdo con su especificador de lugar (con la excepción de
		<emphasis>'h'</emphasis> que ya no es mas útil). Cualquier nuevo objeto flotante que
		aparezca en el texto es enviado a su respectiva cola. 
		<application>LaTex</application> mantiene
		estrictamente el orden en el que fueron apareciendo los objetos
		flotantes a lo largo del documento. Esta es la explicación de por qué
		una figura que no puede ser ubicada desplaza todas las figuras
		siguientes al final del documento. Por lo tanto, si 
		<application>LaTex</application> no está
		ubicando los objetos flotantes donde se espera, comunmente es solo un
		objeto el que da problemas obstruyendo una o las dos colas FIFO.
		El brindar una sola ubicación posible en los especificadores de lugar
		causa problemas. Si el objeto no puede ser ubicado en dicha posición,
		este se queda atascado, bloqueando los objetos flotantes subsequentes.
		En particular no se debería utilizar nunca la opcion 
		<emphasis>'h'</emphasis>, es tan mala
		que en las ultimas versiones de <application>LaTex</application> 
		es sustituída por <emphasis>'ht'</emphasis>.
		Existen algunas cosas más a mencionar acerca de los ambientes 
		<emphasis>"table"</emphasis> y
		<emphasis>"figure"</emphasis>. Con el comando:
		<programlisting>
		\caption{texto}
		</programlisting>
		se puede definir un texto explicativo para el objeto flotante. Un
		número secuencial y el texto <emphasis>"Figure"</emphasis> o 
		<emphasis>"Table"</emphasis> (dependiendo del
		idioma) serán agregados por <application>LaTex</application>.
		Los comandos:
		<programlisting>
		\listoffigures

		\listoftables
		</programlisting>
		operan de forma análoga al comando <emphasis>"\tableofcontents"</emphasis>, 
		imprimendo una
		lista de figuras o tablas respectivamente. En estas listas el texto
		completo creado por el comando <emphasis>"\caption"</emphasis> es repetido. Si se utilizan
		textos largos, se deben especificar versiones mas cortas de los mismos
		para ser utilizados en las listas. Esto es logrado ingresando la versión
		corta entre paréntesis rectos dentro del comando <emphasis>"\caption"</emphasis>:
		<programlisting>
		\caption[texto corto]{texto largo}
		</programlisting>
		Con los comandos <emphasis>"\label"</emphasis> y <emphasis>"\ref"</emphasis> 
		se pueden crear referencias a
		cuerpos flotantes a lo largo del texto.
		El siguiente ejemplo dibuja un cuadrado y lo inserta en el documento.
		Se puede utilizar esto si se desea reservar espacio para imágenes que
		serán pegadas en el documento finalizado.
		<programlisting>
		La figura~\ref{white} es un ejemplo de Arte Pop.
		\begin{figure}[!hbp]
		\makebox[\textwidth]{\framebox[5cm]{\rule{0pt}{5cm}}}
		\caption{Cinco por cinco centimetros.} \label{white}
		\end{figure}
		</programlisting>
		En este ejemplo <application>LaTex</application> intentará 
		con mucho esfuerzo (!) ubicar la figura
		justo en <emphasis>"este lugar"</emphasis> (h) (simepre y cuando la cola esté 
		vacía). Si no
		es posible, intentará ubicarla al final de la página (b). Si falla al
		intentar ubicar la imágen en la página actual, determinará cuando es
		posible crear una página especial para objetos flotantes conteniendo
		esta imágen y posiblemente tablas contenidas en la cola de tablas. Si
		no hay suficiente material como para crear una página de esta índole, 
		<application>LaTex</application>
		comenzará una nueva página, y nuevamente tratará a esta 
		imágen como
		recién ingresada en el texto.
		Bajo ciertas circunstancias puede ser necesario utilizar el comando
		<programlisting>
		\clearpage
		</programlisting>
		o aún el comando
		<programlisting>
		\cleardoublepage
		</programlisting>
		El comando <emphasis>"\clearpage"</emphasis> obliga a 
		<application>LaTex</application> a ubicar inmediatamente todos
		los objetos flotantes que están en las colas y comenzar una nueva
		página. El comando <emphasis>"\cleardoublepage"</emphasis> comienza 
		una página de mano
		derecha (en el caso de que el texto se esté creando para imprimirse
		de los dos lados de las hojas).
		Se mencionará más adelante como incluir dibujos en formato 
		<emphasis>PostScript</emphasis> en documentos <application>LaTeX2e</application>.
		</para>
                </sect1>
		<sect1>
                <title>Protegiendo comandos débiles</title>
		<para>Texto brindado como argumento de comandos del estilo de 
		<emphasis>"\caption"</emphasis> o
		<emphasis>"\section"</emphasis> pueden aparecer más de una vez a lo 
		largo del documento (Por
		ejemplo en la tabla de contenidos como en el cuerpo del documento).
		Algunos comandos suelen fallar cuando son utilizados como parte del
		parámetro de comandos como <emphasis>"\section"</emphasis>. 
		Estos son llamados <emphasis>"comandos débiles"</emphasis>.
		Comandos débiles son, por ejemplo,
		<programlisting>
		\footnote

		\phantom
		</programlisting>
		Lo que necesitan estos comandos para trabajar es protección. Se pueden
		proteger introduciendo el comando:
		<programlisting>
		\protect
		</programlisting>
		antes de ellos. El comando <emphasis>"\protect"</emphasis> solo protege al 
		comando que está
		en seguida a continuación de él, ni siquiera a sus argumentos. En la
		mayoría de los casos un <emphasis>"\protect"</emphasis> 
		supérfluo no hará daño. Por ejemplo:
		<programlisting>
		\section{Soy considerado \protect\footnote{y protejo mis notas al pie}}
		</programlisting>
		</para>
                </sect1>
	</chapter>
	<chapter>
	<title>Especialidades</title>
		<sect1>
                <title>Incluyendo gráficos PostScript</title>
		<para><application>LaTex</application> provee facilidades básicas 
		para trabajar con cuerpos flotantes
		(como imágenes o gráficas) con los ambientes 
		<emphasis>"figure"</emphasis> y <emphasis>"table"</emphasis>.
		Existen también varias posibilidades para generar gráficos 
		con el <application>LaTex</application>
		básico o con un paquete de extensián de 
		<application>LaTex</application>. Desafortunadamente la
		mayoría de los usuarios encuentran estos paquetes difíciles de usar.
		Por lo cual no se abordarán en este documento.
		Una manera mucho mas fácil de incluir gráficos en un documento es
		generarlos con un software especial (como <application>CorelDraw</application>, 
		<application>Gimp</application>, <application>XFig</application>, etc.)
		y luego incluir los gráficos finalizados en el documento. Aquí
		nuevamente, <application>LaTex</application> ofrece muchas maneras para 
		realizar este trabajo.
		En esta introducción se discutirá únicamente el 
		uso de gráficos
		<emphasis>PostScript</emphasis> Encapsulados (EPS del inglés 
		<emphasis>Encapsulated PostScript</emphasis>), ya
		que es fácil de hacer y muy utilizado. Para utilizar imágenes en
		formato EPS, se debe tener una impresora PostScript disponible como
		salida. Un buen conjunto de comandos para la inclusión de paquetes se
		encuentra en el paquete <emphasis>"graphicx"</emphasis> creado por D. P. Carlisle. Se
		asumirá que se posee una impresora PostScript y 
		<application>LaTex</application> instalado con el
		paquete <emphasis>"graphicx"</emphasis>. A continuación se ofrece una 
		lista de pasos para
		incluir una imágen en un documento:
		<orderedlist>
			<listitem><para>
			Exportar la imágen desde el software de gráficos en formato EPS.
			</para></listitem>
			<listitem><para>
			Cargar el paquete <emphasis>"graphicx"</emphasis> en el preámbulo 
			del archivo de entrada
			con el comando:
			<programlisting>
			\usepackage[driver]{graphicx}
			</programlisting>
			donde <emphasis>"driver"</emphasis> es el
			nombre del programa que convierte el formato DVI a 
			<emphasis>PostScript</emphasis> que se
			posee (por ejemplo <application>"dvi2ps"</application>).
			</para></listitem>
			<listitem><para>
			Usar el comando:
			<programlisting>
			\includegraphics[key=valor,...]{archivo}
			</programlisting>
			para incluir al archivo <emphasis>"archivo.eps"</emphasis> en el 
			documento. El parámetro
			opcional acepta una lista de parámetros 
			(<emphasis>"keys"</emphasis>) separados por comas
			con sus respectivos valores. Las <emphasis>"keys"</emphasis> mas 
			importantes son los siguientes:
			<itemizedlist>
				<listitem><para><emphasis>"width"</emphasis>:
				Ancho de la imágen.
				</para></listitem>
				<listitem><para><emphasis>"height"</emphasis>:
				Altura de la imágen.
				</para></listitem>
				<listitem><para><emphasis>"angle"</emphasis>:
				ángulo de rotación
				</para></listitem>
				<listitem><para><emphasis>"scale"</emphasis>:
				Escala.
				</para></listitem>
			</itemizedlist>
			El siguiente ejemplo incluye el gráfico contenido en el 
			archivo <emphasis>"test.eps"</emphasis>. Primero, el
			gráfico es rotado 90 grados y luego es escalado hasta lograr un
			ancho de 0.5 veces el ancho de un párrafo común:
			<programlisting>
			\begin{figure}
			\begin{center}
			\includegraphics[angle=90, width=0.5\textwidth]{test}
			\end{center}
			\end{figure}
			</programlisting>
                        </para></listitem>
		</orderedlist>
		</para>
                </sect1>
		<sect1>
                <title>Bibliografía</title>
		<para>Se puede producir una bibliografía con el ambiente 
		<emphasis>"thebibliography"</emphasis>.
		Cada ítem comienza con el comando:
		<programlisting>
		\bibitem{marcador}
		</programlisting>
		El <emphasis>"marcador"</emphasis> es utilizado luego para citar el libro, 
		artículo o papel
		a lo largo del documento con el comando:
		<programlisting>
		\cite{marcador}
		</programlisting>
		El numerado de las entradas se genera automáticamente. El parámetro
		que sigue al comando:
		<programlisting>
		\begin{thebibliography}
		</programlisting>
		indica el máximo de estos números. En el siguiente ejemplo,
		<emphasis>"{99}"</emphasis> le indica a <application>LaTex</application> 
		que espere que ninguno de los números de los
		ítems en la biliografía supere al 99:
		<programlisting>
		H. Partl~\cite{pa} ha propuesto que \ldots

		\begin{thebibliography}{99}
		\bibitem{pa} H.~Partl: \emph{German \TeX}, TUGboat Volume~9, Issue~1 (1988)
		\end{thebibliography}
		</programlisting>
		Se recomienda la exploración del programa 
		<application>BibTeX</application> para realizar la
		bibliografía de proyectos grandes.
		</para>
                </sect1>
		<sect1>
                <title>Indexado</title>
		<para>Una de las mayores utilidades que tiene un libro es su índice. Con
		<application>LaTex</application> y el programa de soporte 
		<emphasis>"makeindex"</emphasis>, se puede generar un índice
		fácilmente. En este documento sólo se explicarán los 
		comandos básicos
		para la creación de índices.
		Para habilitar la creación de un índice se debe cargar el paquete
		<emphasis>"makeidx"</emphasis> en el preámbulo del archivo de entrada 
		con el comando:
		<programlisting>
		\usepackage{makeidx}
		</programlisting>
		y los comandos para realizar el indexado se deben habilitar con el comando:
		<programlisting>
		\makeindex
		</programlisting>
		también en el preámbulo del archivo de entrada.
		El contenido del índice es especificado con el comando:
		<programlisting>
		\index{key}
		</programlisting>
		donde <emphasis>"key</emphasis>" es la entrada del índice, 
		el identificador. Se deben
		ingresar los comandos <emphasis>"\index"</emphasis> en los lugares a los cuales se
		desea que las entradas finales del índice apunten. A continuación se
		brindan una lista de ejemplos que explican la sintaxis del parámetro
		<emphasis>"key"</emphasis> del comando <emphasis>"\index"</emphasis>:
		<table>
			<title>Ejemplos del comando <emphasis>"\index"</emphasis></title>
			<tgroup cols="3">
				<tbody>
					<row>
						<entry>EJEMPLO</entry>
						<entry>ENTRADA DEL íNDICE</entry>
						<entry>COMENTARIO</entry>
					</row>
					<row>
						<entry>\index{hello}</entry>
						<entry>hello, 1</entry>
						<entry>Entrada simple</entry>
					</row>
					<row>
						<entry>\index{hello!Peter}</entry>
						<entry>Peter, 3</entry>
						<entry>Subentrada bajo 'hello'</entry>
					</row>
					<row>
						<entry>\index{Sam@\textsl{Sam}}</entry>
						<entry>Sam, 2</entry>
						<entry>Entrada formateada</entry>
					</row>
					<row>
						<entry>\index{Lin@\textbf{Lin}}</entry>
						<entry>Lin, 7</entry>
						<entry>Entrada formateada</entry>
					</row>
					<row>
						<entry>\index{Jenny|textbf}</entry>
						<entry>Jenny, 3</entry>
						<entry>Número de página formateado</entry>
					</row>
					<row>
						<entry>\index{Joe|textit}</entry>
						<entry>Joe, 5</entry>
						<entry>Número de página formateado</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		El archivo es procesado nuevamente, este índice ordenado es incluído en
		el documento en el lugar donde <application>LaTex</application> encuentra el comando:
		<programlisting>
		\printindex
		</programlisting>
		</para>
                </sect1>
		<sect1>
                <title>Fuentes y tamaños</title>
			<sect2>
                        <title>Comandos para cambiar de fuente</title>
			<para><application>LaTex</application> escoge la fuente apropiada y 
			el tamaño de fuente apropiado
			basándose en la estructura lógica del documento (secciones, notas al
			pie, etc.). En algunos casos se puede desear cambiar la fuente y el
			tamaño de la misma a mano. Para hacer esto se pueden utilizar los
			siguientes comandos:
			<table>
				<title>Comandos para fuentes</title>
				<tgroup cols="2">
					<tbody>
						<row>
							<entry>COMANDO</entry>
							<entry>FUENTE</entry>
						</row>
						<row>
							<entry>\textrm{...}</entry>
							<entry>Roman</entry>
						</row>
						<row>
							<entry>\texttt{...}</entry>
							<entry>Typewriter</entry>
						</row>
						<row>
							<entry>\textmd{...}</entry>
							<entry>Medium</entry>
						</row>
						<row>
							<entry>\textup{...}</entry>
							<entry>Upright</entry>
						</row>
						<row>
							<entry>\textsl{...}</entry>
							<entry>Slanted</entry>
						</row>
						<row>
							<entry>\emph{...}</entry>
							<entry>Emphasized</entry>
						</row>
						<row>
							<entry>\textsf{..}</entry>
							<entry>Sans Serif</entry>
						</row>
						<row>
							<entry>\textbf{...}</entry>
							<entry>Bold Face (Negrita)</entry>
						</row>
						<row>
							<entry>\textit{...}</entry>
							<entry>Italica</entry>
						</row>
						<row>
							<entry>\textsc{...}</entry>
							<entry>Small caps</entry>
						</row>
						<row>
							<entry>\textnormal{...}</entry>
							<entry>Fuente normal</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<table>
				<title>Comandos para tamaños</title>
				<tgroup cols="2">
					<tbody>
						<row>
							<entry>COMANDO</entry>
							<entry>TAMAñO</entry>
						</row>
						<row>
							<entry>\tiny</entry>
							<entry>Diminuta</entry>
						</row>
						<row>
							<entry>\scriptsize</entry>
							<entry>Muy diminuta</entry>
						</row>
						<row>
							<entry>\footnotesize</entry>
							<entry>No tan pequeña</entry>
						</row>
						<row>
							<entry>\small</entry>
							<entry>Pequeña</entry>
						</row>
						<row>
							<entry>\normalsize</entry>
							<entry>Normal</entry>
						</row>
						<row>
							<entry>\large</entry>
							<entry>Grande</entry>
						</row>
						<row>
							<entry>\Large</entry>
							<entry>Mas Grande</entry>
						</row>
						<row>
							<entry>\LARGE</entry>
							<entry>Muy Grande</entry>
						</row>
						<row>
							<entry>\huge</entry>
							<entry>Enorme</entry>
						</row>
						<row>
							<entry>\Huge</entry>
							<entry>Mas Enorme</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			El tamaño por omisión de cada fuente depende de la clase del documento
			y de sus opciones. Los tamaños por omisión para las clases 
			más comunes son los siguientes:
			<table>
			<title>Tamaños de las distintas fuentes para las distintas clases</title>
				<tgroup cols="4">
					<tbody>
						<row>
							<entry>COMANDO</entry>
							<entry>10pt option (default)</entry>
							<entry>11pt option</entry>
							<entry>12pt option</entry>
						</row>
						<row>
							<entry>\tiny</entry>
							<entry>5pt</entry>
							<entry>6pt</entry>
							<entry>6pt</entry>
						</row>
						<row>
							<entry>\scrptsize</entry>
							<entry>7pt</entry>
							<entry>8pt</entry>
							<entry>8pt</entry>
						</row>
						<row>
							<entry>\footnotesize</entry>
							<entry>8pt</entry>
							<entry>9pt</entry>
							<entry>10pt</entry>
						</row>
						<row>
							<entry>\small</entry>
							<entry>9pt</entry>
							<entry>10pt</entry>
							<entry>11pt</entry>
						</row>
						<row>
							<entry>\normalsize</entry>
							<entry>10pt</entry>
							<entry>11pt</entry>
							<entry>12pt</entry>
						</row>
						<row>
							<entry>\large</entry>
							<entry>12pt</entry>
							<entry>12pt</entry>
							<entry>14pt</entry>
						</row>
						<row>
							<entry>\Large</entry>
							<entry>14pt</entry>
							<entry>14pt</entry>
							<entry>17pt</entry>
						</row>
						<row>
							<entry>\LARGE</entry>
							<entry>17pt</entry>
							<entry>17pt</entry>
							<entry>20pt</entry>
						</row>
						<row>
							<entry>\huge</entry>
							<entry>20pt</entry>
							<entry>20pt</entry>
							<entry>25pt</entry>
						</row>
						<row>
							<entry>\Huge</entry>
							<entry>25pt</entry>
							<entry>25pt</entry>
							<entry>25pt</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			A continuación se muestra un ejemplo de como utilizar los comandos:
			<programlisting>
			{\small The small and \textbf{bold} Romans ruled}
			{\Large all of great big \textit{Italy}.}
			</programlisting>
			En <application>LaTeX2e</application> los atributos de las fuentes 
			son independientes. Esto quiere
			decir que, por ejemplo, se puede cambiar el tipo de fuente y seguir
			manteniendo el seteo de negrita indicado anteriormente.
			En la utilización de los comandos de tamaño de fuente, las llaves son
			muy importantes, ya que indican el área de texto a la que afecta el
			comando. Por ejemplo:
			<programlisting>
			A el le gustan las palabras {\LARGE grandes y {\small small} pequeñas}.
			</programlisting>
			Los comandos para cambiar el tamaño de la fuente también cambian el
			espaciado entre líneas, pero sólo si el párrafo 
			termina dentro del
			comando de tamaño de fuente.
			Si se desea activar un comando de cambio de tamaño de fuente para un
			párrafo entero o incluso para algún área mayor 
			de texto, conviene
			utilizar el comando como si fuese un ambiente. Por ejemplo:
			<programlisting>
			\begin{Large}
			Esto no es verdad. Pero, que lo es en estos dias \ldots
			\end{Large}
			</programlisting>
			Esto ahorrará muchas llaves "{}" incómodas.
			</para>
                        </sect2> 
                </sect1>
		<sect1>
                <title>Espaciado</title>
			<sect2>
                        <title>Espaciado entre líneas</title>
			<para>Si se desea utilizar un espaciado mayor entre líneas en un documento,
			se puede cambiar su valor introduciendo el comando:
			<programlisting>
			\linspread{factor}
			</programlisting>
			en el preámbulo del documento. Utilice 
			<emphasis>"\linespread{1.3}"</emphasis> para un
			espaciado de <emphasis>"Uno y medio"</emphasis>, y 
			<emphasis>"\linespread{1.6}"</emphasis> para un espaciado
			<emphasis>"Doble"</emphasis>. El valor por omisión es 1.
			</para>
                        </sect2>
			<sect2>
                        <title>Formato de párrafos</title>
			<para>En <application>LaTex</application> existen dos parámetros 
			que influyen en la disposición de un
			párrafo. Incluyendo una definición como la siguiente:
			<programlisting>
			\setlength{\parindent}{0pt}
			\setlength{\parskip}{1ex plus 0.5ex minus 0.2ex}
			</programlisting>
			en el preámbulo del documento, se puede cambiar el formato de los
			párrafos. Estos dos comandos aumentan el espacio entre dos párrafos,
			mientras que especifican el <emphasis>"dentado"</emphasis> 
			(<emphasis>indent</emphasis>) de los párrafos a cero.
			Las partes <emphasis>"plus"</emphasis> y <emphasis>"minus"</emphasis> 
			de la segunda linea le dicen a <application>TeX</application>, que
			puede comprimir y expander el salto entre párrafos por el monto
			especificado si es necesario para mantener los párrafos en una misma
			página (siempre que sea posible).
			Para <emphasis>"dentar"</emphasis> un párrafo que no está 
			dentado se puede utilizar el comando:
			<programlisting>
			\indent
			</programlisting>
			al principio del párrafo. Para crear un párrafo no dentado, se puede
			utilizar el comando:
			<programlisting>
			\noindent
			</programlisting>
			como el primer comando del párrafo. Esto puede ser útil cuando se
			comienza un documento con texto y sin un comando de seccionado.
			</para>
                        </sect2>
			<sect2>
                        <title>Espacio horizontal</title>
			<para><application>LaTex</application> determina los espacios 
			entre palabras y oraciones automáticamente.
			Para agregar un espacio horizontal, se debe utilizar el comando:
			<programlisting>
			\hspace{largo}
			</programlisting>
			Si el espacio deseado debe ser mantenido aún si este cae al final o al
			principio de una línea, se debe utilizar el comando 
			<emphasis>"\hspace*"</emphasis> en lugar
			de <emphasis>"\hspace"</emphasis>. El parametro <emphasis>"largo"</emphasis>, 
			en el caso mas simple, es solo un
			número seguido de una unidad. Las unidades más importantes son las
			siguientes:
			<table>
			<title>Unidades de medida manejadas en <application>LaTex</application></title>
				<tgroup cols="3">
					<tbody>
						<row>
							<entry>UNIDAD</entry>
							<entry>MEDIDA</entry>
							<entry>EQUIVALENCIA</entry>
						</row>
						<row>
							<entry>mm</entry>
							<entry>milímetro</entry>
							<entry>1/25 pulgadas</entry>
						</row>
						<row>
							<entry>cm</entry>
							<entry>centímetro</entry>
							<entry>10mm</entry>
						</row>
						<row>
							<entry>in</entry>
							<entry>pulgada</entry>
							<entry>25.4mm</entry>
						</row>
						<row>
							<entry>pt</entry>
							<entry>punto</entry>
							<entry>1/72in ~ 1/3mm</entry>
						</row>
						<row>
							<entry>em</entry>
							<entry>El ancho del carácter 
								<emphasis>'M'</emphasis> en la 
								fuente actual</entry>
							<entry></entry>
						</row>
						<row>
							<entry>ex</entry>
							<entry>El ancho del carácter 
								<emphasis>'X'</emphasis> en la 
								fuente actual</entry>
							<entry></entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			Un ejemplo de la utilización del comando 
			<emphasis>"\hspace"</emphasis> puede ser el siguiente:
			<programlisting>
			Esto\hspace{1.5cm}es un espacio de 1.5 cm.
			</programlisting>
			El comando:
			<programlisting>
			\stretch{n}
			</programlisting>
			genera un espacio <emphasis>"goma"</emphasis> especial. El comando 
			se alarga hasta que todos
			los espacios faltantes en una línea son llenados. Si dos comandos del
			estilo <emphasis>"\hspace{\stretch{n}}"</emphasis> son implementados 
			en la misma línea, los
			mismos crecerán de acuerdo al factor del comando 
			<emphasis>"\stretch"</emphasis>.
			</para>
                        </sect2>
			<sect2>
                        <title>Espacio vertical</title>
			<para>El espacio entre espacios, secciones, subsecciones, etc. es determinado
			automáticamente por <application>LaTex</application>. 
			Si es necesario, se puede agregar espacio
			vertical adicional entre dos párrafos con el comando:
			<programlisting>
			\vspace{largo}
			</programlisting>
			Este comando debería ser utilizado normalmente entre dos líneas 
			vacías.
			Si el espacio debe ser preservado al principio o al final de una
			página, se debe utilizar el comando 
			<emphasis>"\vspace*"</emphasis> en lugar de <emphasis>"\vspace"</emphasis>.
			El comando <emphasis>"\stretch"</emphasis> en conexión con 
			<emphasis>"\pagebreak"</emphasis> puede ser utilizado
			para escribir texto en la última línea de una página o 
			para centrar un
			texto verticalmente en la página. Por ejemplo:
			<programlisting>
			Algun texto \ldots
  
			\vspace{\stretch{1}}
			Esto va en la ultima linea de la pagina.\pagebreak
			</programlisting>
			Con el comando:
			<programlisting>
			\\[largo]
			</programlisting>
			se puede especificar espacio adicional entre dos líneas de un mismo
			párrafo o dentro de una tabla.
			Con los comandos:
			<programlisting>
			\bigskip

			\smallskip
			</programlisting>
			se pueden saltear una cantidad predefinida de espacio vertical sin
			necesidad de preocuparse por números exactos.
			</para>
                        </sect2>
                </sect1>
		<sect1>
                <title>Disposición de la página</title>
		<para><application>LaTeX2e</application> permite especificar el tamaño de la 
		página en el comando
		<emphasis>"\documentclass"</emphasis>. Luego de este comando, automáticamente 
		se eligen los
		márgenes correctos. Pero a veces se puede no estar conforme con los
		valores por omisión. Naturalmente, estos pueden ser cambiados. Las
		opciones para modificar los márgenes son las siguientes:
		<table>
		<title>Comandos para establecer los márgenes en 
			<application>LaTex</application></title>
			<tgroup cols="2">
				<tbody>
					<row>
						<entry>COMANDO</entry>
						<entry>DESCRIPCION</entry>
					</row>
					<row>
						<entry>\hoffset</entry>
						<entry><emphasis>Horizontal offset</emphasis></entry>
					</row>
					<row>
						<entry>\voffset</entry>
						<entry><emphasis>Vertical offset</emphasis></entry>
					</row>
					<row>
						<entry>\evensidemargin</entry>
						<entry>Margen del lado par</entry>
					</row>
					<row>
						<entry>\topmargin</entry>
						<entry>Margen superior</entry>
					</row>
					<row>
						<entry>\headheight</entry>
						<entry>Alto del cabezal</entry>
					</row>
					<row>
						<entry>\headsep</entry>
						<entry>Separación del cabezal</entry>
					</row>
					<row>
						<entry>\textheight</entry>
						<entry>Alto del campo para texto</entry>
					</row>
					<row>
						<entry>\textwidth</entry>
						<entry>Ancho del campo para texto</entry>
					</row>
					<row>
						<entry>\marginparsep</entry>
						<entry></entry>
					</row>
					<row>
						<entry>\marginparwidth</entry>
						<entry></entry>
					</row>
					<row>
						<entry>\footskip</entry>
						<entry></entry>
					</row>
					<row>
						<entry>\marginparpush</entry>
						<entry></entry>
					</row>
					<row>
						<entry>\paperwidth</entry>
						<entry>Ancho del papel</entry>
					</row>
					<row>
						<entry>\paperheight</entry>
						<entry>Alto del papel</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		</para>
                </sect1>
		<sect1>
                <title>Cajas</title>
		<para><application>LaTex</application> crea sus páginas a través de 
		cajas. Primero, cada letra es una
		caja pequeña, que luego es <emphasis>"pegada"</emphasis> a otras letras para formar las
		palabras. Estas son nuevamente pegadas a otras palabras, pero con un
		pegamento especial, que es elástico, así las series de palabras pueden
		ser estiradas o comprimidas para llenar exactamente una línea en la
		página.</para>
		<para>Esta es una versión muy simplificada de lo que realmente ocurre, pero
		el punto es que <application>TeX</application> trabaja con pegamento y cajas. 
		No solo una letra
		puede ser una caja. Se puede introducir virtualmente cualquier cosa en
		una caja, inclusive otras cajas. Cada caja luego será tratada por 
		<application>LaTex</application>
		como si fuese una letra. El ambiente <emphasis>"tabular"</emphasis> y el comando
		<emphasis>"\includegraphics"</emphasis> por ejemplo, crean ambos una caja. 
		Por lo tanto, se
		pueden alinear fácilmente tablas o imágenes una al lado de la otra.
		Sólo se debe tener la precaución de que el ancho combinado de estos
		objetos no supere el ancho de una línea (<emphasis>"textwidth"</emphasis>).
		Se puede también empaquetar un párrafo con el comando:
		<programlisting>
		\parbox[posicion]{ancho}{texto}
		</programlisting>
		o con el ambiente:
		<programlisting>
		\begin{minipage}[posicion]{ancho}
		...texto...
		\end{minipage}
		</programlisting>
		El parámetro <emphasis>"posicion"</emphasis> puede tomar uno de los 
		siguientes valores:
		<itemizedlist>
			<listitem><para><emphasis>"c"</emphasis>:
			center.
			</para></listitem>
			<listitem><para><emphasis>"t"</emphasis>:
			top.
			</para></listitem>
			<listitem><para><emphasis>"b"</emphasis>:
			bottom.
			</para></listitem>
		</itemizedlist>
		Todos estos valores son relativos a la línea base del texto que rodea
		la caja. El parámetro <emphasis>"ancho"</emphasis> especifica el ancho 
		de la página.
		La mayor diferencia entre el comando <emphasis>"\parbox"</emphasis> y 
		<emphasis>"\minipage"</emphasis> es que no
		se pueden utilizar todos los comandos dentro de <emphasis>"\parbox"</emphasis>, 
		mientras que
		casi cualquier cosa puede ser utilizada dentro de <emphasis>"\minipage"</emphasis>.
		Mientras que <emphasis>"\parbox"</emphasis> empaqueta un párrafo 
		completo realizando saltos
		de línea y todo lo realcionado a un párrafo, existe también una clase
		de comandos para cajas que trabajan sólo con material horizontalmente
		alineado. <emphasis>"\mbox"</emphasis> es uno de ellos, simplemente empaqueta una serie de
		cajas dentro de otra, y puede ser utilizado para prohibirle a 
		<application>LaTex</application> que
		divida dos palabras. Ya que se pueden poner cajas dentro de otras cajas,
		estos empaquetadores de cajas horizontales brindan la última
		flexibilidad.
		<programlisting>
		\makebox[ancho][posicion]{texto}
		</programlisting>
		El parámetro <emphasis>"ancho"</emphasis> define el ancho de la 
		caja resultante (mas allá de
		su contenido). Además de las expresiones para especificar medidas, se
		pueden utilizar también los comandos:
		<programlisting>
		\width
		\height
		\depth
		\totalheight
		</programlisting>
		en el parametro <emphasis>"width"</emphasis>. Los valores de estos comandos son obtenidos
		según las medidas del parámetro <emphasis>"texto"</emphasis>. 
		El parámetro <emphasis>"posicion"</emphasis> puede
		obtener uno de los siguientes parámetros:
		<itemizedlist>
			<listitem><para><emphasis>"C"</emphasis>:
			centrado.
			</para></listitem>
			<listitem><para><emphasis>"L"</emphasis>:
			alineado a la izquierda.
			</para></listitem>
			<listitem><para><emphasis>"R"</emphasis>:
			alineado a la derecha.
			</para></listitem>
			<listitem><para><emphasis>"S"</emphasis>:
			exparse el texto dentro de la caja hasta llenarla.
			</para></listitem>
		</itemizedlist>
		El comando <emphasis>"\framebox"</emphasis> trabaja exáctamente de 
		la misma forma que
		<emphasis>"\makebox"</emphasis>, con la diferencia que 
		<emphasis>"\framebox"</emphasis> dibuja una caja alrededor
		del texto, y <emphasis>"\makebox"</emphasis> no.
		El comando:
		<programlisting>
		\raisebox{elevacion}[ancho][altura]{texto}
		</programlisting>
		permite definir propiedades verticales en una caja. Se pueden utilizar los comandos:
		<programlisting>
		\width
		\height
		\depth
		\totalheight
		</programlisting>
		en sus primeros tres parámetros para trabajar sobre el tamaño de la
		caja dentro del parámetro <emphasis>"texto"</emphasis>.
		</para>
                </sect1>
		<sect1>
                <title>Reglas y contoneos</title>
		<para>El comando:
		<programlisting>
		\rule[elevacion]{ancho}{altura}
		</programlisting>
		produce una caja negra. Aquí se muestran algunos ejemplos:
		<programlisting>
		\rule{3mm}{.1pt}%
		\rule[-1mm]{5mm}{1cm}%
		\rule{3mm}{.1pt}%
		\rule[1mm]{1cm}{5mm}%
		\rule{3mm}{.1pt}
		</programlisting>
		Este comando es útil para dibujar líneas verticales y horizontales. Un
		caso especial es un comando <emphasis>"\rule"</emphasis> sin ancho, pero con un cierto alto
		mínimo. Esto se puede utilizar en un ambiente tabular para asegurarse
		que un registro tiene un alto mínimo deseado. Por ejemplo:
		<programlisting>
		\begin{tabular}{|c|}
		\hline
		\rule{1pt}{4ex}Pitprop \ldots\\
		\hline
		\rule{0pt}{4ex}Strut\\
		\hline
		\end{tabular}
		</programlisting>
		</para>
                </sect1>
	</chapter>
</book>

