  LaTeX
  Por Gaston Simone (gsimone@linuxmail.org)
  Montevideo, Febrero 2002
  v0.1
  Revisado for Francisco Javier Fernández (serrador@arrakis.es)
  Madrid, Julio 2002

  NARRATIVA
  
  Este documento busca llevar al lector al uso de LaTeX como su
  procesador de documentos de forma rápida y contundente.
  
  BIBLIOGRAFIA
  
  "The Not So Short Introduction to LaTeX2e or LaTeX in 95 mintues"
   Por Tobias Oetiker, Hubert Partl, Irene Hyna y Elisabeth Schlegl
   Version 3.20, 09 Agosto, 2001.
  
  ---------------------------------------------------------------------
   ÍNDICE
  
   1. CONOCIMIENTOS BÁSICOS
  
     1.1. INTRODUCCIÓN
  
     1.2. CARÁCTERES ESPECIALES
  
     1.3. COMENTARIOS
  
     1.4. ESTRUCTURA DE UN ARCHIVO LaTeX
  
     1.5. SESION DE COMANDO TIPICA
  
     1.6. LA DISPOSICION DEL DOCUMENTO (DOCUMENT LAYOUT)
  
         1.6.1. CLASES DE DOCUMENTOS
  
         1.6.2. PAQUETES
  
     1.7. FICHEROS QUE SE PUEDEN ENCONTRAR
  
     1.8. ESTILOS DE PÁGINAS
  
     1.9. PROYECTOS Y DOCUMENTACIÓN DE GRAN TAMAÑO
  
   2. FORMATO DEL TEXTO
  
     2.1. IDIOMA Y ESTRUCTURA DEL TEXTO
  
     2.2. SALTOS DE LÍNEA Y SALTOS DE PÁGINA
  
          2.2.1. PÁRRAFOS JUSTIFICADOS
  
          2.2.2. SEPARACIÓN DE PALABRAS POR SÍLABA
  
     2.3. TEXTO PREFABRICADO
  
     2.4. SÍMBOLOS Y CARACTERES ESPECIALES
  
          2.4.1. COMILLAS Y COMILLAS SIMPLES
  
          2.4.2. GUIONES
  
          2.4.3. EL CARÁCTER ~
  
          2.4.4. EL SÍMBOLO DE GRADO
  
          2.4.5. ELIPSIS (...)
  
          2.4.6. ACENTOS Y CARÁCTERES ESPECIALES
  
     2.5. SOPORTE PARA LENGUAJE INTERNACIONAL
  
     2.6. EL ESPACIO ENTRE PALABRAS
  
     2.7. TÍTULOS, CAPÍTULOS Y SECCIONES
  
     2.8. REFERENCIAS CRUZADAS
  
     2.9. NOTAS AL PIE
  
     2.10. PALABRAS DESTACADAS (subrayado, itálica y tipos)
  
     2.11. AMBIENTES
  
          2.11.1. ITEMIZE, ENUMERATE Y DESCRIPTION
  
          2.11.2. FLUSHLEFT, FLUSHRIGHT Y CENTER
  
          2.11.3. QUOTE, QUOTATION Y VERSE
  
          2.11.4. VERBATIM (AL PIE DE LA LETRA)
  
          2.11.5. TABULAR
  
     2.12. CUERPOS FLOTANTES (IMÁAGENES Y TABLAS)
  
     2.13. PROTEGIENDO COMANDOS DÉBILES
  
   3. ESPECIALIDADES
  
     3.1. INCLUYENDO GRÁFICOS POSTSCRIPT
  
     3.2. BIBLIOGRAFÍA
  
     3.3. INDEXADO
  
     3.4. FUENTES Y TAMAÑOS
  
          3.4.1. COMANDOS PARA CAMBIAR DE FUENTE
  
     3.5. ESPACIADO
  
          3.5.1. ESPACIO ENTRE LÍNEAS
  
          3.5.2. FORMATO DE PÁRRAFOS
  
          3.5.3. ESPACIO HORIZONTAL
  
          3.5.4. ESPACIO VERTICAL
  
     3.6. DISPOSICIÓON DE LA PAGINA
  
     3.7. CAJAS
  
     3.8. REGLAS Y CONTONEOS
  
  ----------------------------------------------------------------------
  
  1. CONOCIMIENTOS BÁSICOS
  
  1.1. INTRODUCCIÓN
  
  Los documentos en LaTeX se crean en un fichero de texto plano ASCII.
  LaTeX no hace diferencias entre espacios y tabulaciones en el texto.
  Varios caracteres-espacio consecutivos son tratados como un único
  espacio. Espacios al principio de una línea son generalmente ignorados.
  Un sólo retorno de carro es interpretado como un espacio.
  Una línea vacia entre dos líneas define el final de un párrafo.
  Varias líneas vacias consecutivas son interpretadas como una única línea
  vacia.
  
  1.2. CARÁCTERES ESPECIALES
  
  # $ % ^ & _ { } ~ \
  
  Con la excepción del propio backslah, éstos pueden ser imprimibles
  agregándoles antes un carácter backslash \ de la siguiente forma:
  
  \# \$ \% \^ \& \_ \{ \} \~
  
  Dos backslashes seguidos (\\) son interpretados como un retorno de
  carro. Para imprimir un backslah se debe escribir:
  
  $\backslash$
  
  Los comandos de LaTeX sensibles a las mayúsculas y comienzan con un "backslash".
  LaTeX ignora espacios en blanco después de un comando. Para generar un
  espacio después de un comando se debe escribir {} exactamente después del
  comando y a continuación un espacio. La secuencia {} le dice a LaTeX que
  pare de "comerse" los espacios después de la orden.
  
  1.3. COMENTARIOS
  
  Todo lo que esté después de un % en una misma línea es un comentario
  (comentario en una línea). Para crear comentarios largos se debe
  escribir:
  
  \begin{comment}
  ...comentario...
  \end{comment}
  
  1.4. ESTRUCTURA DE UN FICHERO LaTeX
  
  Todo fichero debe comenzar con la orden:
  
  \documentclass{...}
  
  Esta orden especifica qué tipo de documento se va a escribir.
  Después se pueden incluir órdenes que influenciarán el estilo de todo el
  documento o cargar paquetes que agregarán nuevas utilidades al sistema
  LaTex. La orden para cargar paquetes es:
  
  \usepackage{...}
  
  Cuando todo el trabajo de configuración está hecho, se comienza el cuerpo del
  documento con la orden:
  
  \begin{document}
  
  Luego se introduce el texto del documento junto con órdenes LaTeX y se
  termina el mismo con la orden:
  
  \end{document}
  
  Todo lo que esté después de ésta orden será ignorado.
  Ejemplo de documento LaTeX:
  
  \documentclass[a4paper,11pt]{article}
  % define el título
  \author{H.~Partl}
  \title{Minimalismo}
  \begin{document}
  % genera el título
  \maketitle
  % inserta la tabla de contenidos
  \tableofcontents
  \section{Start}
  Bien, aquí comienza mi artículo.
  \section{End}
  \ldots{} y aquí termina.
  \end{document}
  
  1.5. SESIÓN DE ÓRDENES TIPICA
  
  	1. Se crea el documento en formato LaTeX con cualquier editor de
  	   texto plano.
  	2. Se ejecuta la orden:
  
  		$ latex fichero.tex
  
  	   Ésta genera el documento en formato DVI (fichero.dvi).
  	3. Se puede visualizar el documento en formato DVI:
  
  		$ xdvi fichero.dvi
  
  	4. o pasarlo a formato Postcript
  
  		$ dvips -Pcmz fichero.dvi -o fichero.ps
  
  
  1.6. LA DISPOSICIÓN DEL DOCUMENTO (DOCUMENT LAYOUT)
  
  1.6.1. CLASES DE DOCUMENTOS
  
  Para indicar la clase de documento que se va a procesar se utiliza la
  orden "\documentclass" que tiene la siguiente sintaxis:
  
  \documentclass[opciones]{clase}
  
  El parametro "clase" indica la clase del documento a procesar.
  Las clases de documentos posibles en LaTeX2e son las siguientes:
  
  	"article" para articulos, presentaciones, informes cortos,
  	          documentacion de programas, invitaciones, etc.
  	"report"  para informes más largos conteniendo varios
  	          capítulos, libros cortos, etc.
  	"book"    para libros reales.
  	"slides"  para volantes, avisos de una página, etc. Esta clase
  	          utiliza fuentes de gran tamaño.
  
  El parámetro "opciones" personaliza el comportamiento de la clase del
  documento. Las opciones deben ser separadas por comas. Las opciones más
  comunes son las siguientes:
  
  	"10pt,11pt,12pt" indica el tamaño de la fuente principal del
  	                 documento. "10pt" es el valor por omisión.
  	"a4paper,letterpaper,..." define el tamaño del papel. Otros
  	                 tipos de papel son a5paper,b5paper,legalpaper,
  	                 executivepaper. letterpaper es el valor por
  	                 omision.
  	"fleqn"          indica que las fórmulas matemáticas estén
  	                 alineadas a la izquierda en vez de centradas.
  	"leqno"          Posiciona la numeración de las fórmulas a la
  	                 izquierda de cada una y no a la derecha.
  	"titlepage,notitlepage" especifica si se debe comenzar una
  	                 nueva página después de imprimir el título del
  	                 documento. Las clases report y book lo hacen
  	                 automáticamente, mientras que la clase article
  	                 no.
  	"onecolumn,twocolumn" indica si el documento debe ser generado
  	                 en una o dos columnas.
  	"twoside,oneside" indica si el documento debe ser arreglado
  	                 para una impresion de doble cara (de los dos
  	                 lados de cada página). La clase book usa
  	                 "twoside" por omisión, mientras que las clases
  	                 report y article no. El usar la opción twoside
  	                 NO le indica a la impresora que realice una
  	                 impresion de doble cara, esto corre por cuenta
  	                 del usuario, esto se utiliza por un tema de
  	                 formato del documento.
  	"openright,openany" indica si los capítulos del documento deben
  	                 comenzar sólo en páginas ubicadas a la derecha
  	                 o en cualquiera. Esto no funciona con la clase
  	                 article (esta no utiliza capítulos). La clase
  	                 report comienza los capítulos en la siguiente
  	                 página disponible (por omisión), mientras que
  	                 la clase book lo hace en páginas a la derecha.
  
  Ejemplo del orden "\documentclass":
  
  \documentclass[11pt,twoside,a4paper]{article}
  
  1.6.2. PAQUETES
  
  Para resolver problemas que LaTeX básico no resuelve, se agregan
  paquetes para aumentar las capacidades de LaTeX. Por ejemplo, para
  incluir gráficos, texto coloreado o código fuente proviniente de otro
  fichero. La orden para agregar paquetes tiene la siguiente sintaxis:
  
  \usepackage[opciones]{paquete}
  
  donde "paquete" es el nombre del paquete a incluir y "opciones" es una
  lista de argumentos que personalizan el comportamiento del paquete.
  Paquetes que vienen con la distribución basica de LaTeX2e:
  
  	"doc"      permite la documentación de programas LaTeX.
  	           Descrito en "doc.dtx".
  	"exscale"  provee versiones del tipo  extendido de
  	           matemáticas. Descrito en "ltexscale.dtx".
  	"fontenc"  especifica qué codificación de fuente se debe
  	           utilizar. Descrito en "ltoutenc.dtx".
  	"ifthen"   provee órdenes de la forma:
  	           "if...then..do...otherwise...do..."
  	           Descrito en "ifthen.dtx".
  	"latexsym" para acceder a la fuente de simbolos de LaTeX.
  	           Este paquete es muy útil. Descrito en "latexsym.dtx".
  	"makeidx"  provee órdenes para generar índices.
  	"syntonly" procesa un documento sólo revisando su sintaxis.
  	"inputenc" permite la especificación de la codificacion de
  	           entrada del documento, como ser ASCII, ISO Latin-1,
  	           ISO Latin-2, páginas de codigo 437/850 de IBM, Apple
  	           Macintosh, Next, ANSI-Windows o una definida por el
  	           usuario. Descrito en "inputenc.dtx".
  
  	Para ver la descripción de cada uno de estos paquetes,
  	ejecutar LaTeX sobre su fichero correspondiente.
  		(Ejemplo: "$ latex ifthen.dtx")
  
  1.7. FICHEROS QUE SE PUEDEN ENCONTRAR
  
  Trabajando con LaTeX se utilizan varios formatos para los distintos
  ficheros con los que se trabaja. Esta es una lista de las extensiones
  utilizadas para cada tipo de fichero:
  
  	".tex" Fichero de entrada LaTeX. Compilado con LaTeX.
  	".sty" LaTeX Macro Package. Este es un fichero que se puede
  	       cargar en el documento usando el orden "\usepackage".
  	".dtx" TeX documentado. Formato de distribucion principal para
  	       ficheros de estilo de LaTeX. Si se procesa un fichero de
  	       este tipo se obtiene un código documentado del paquete
  	       contenido en este fichero.
  	".ins" Instalador de los ficheros contenidos en el fichero
  	       ".dtx" correspondiente. Si se baja un paquete de la red,
  	       se obtendrán un fichero ".ins" y uno ".idx". Se debe
  	       ejecutar LaTeX sobre el fichero ".ins" para instalar el
  	       fichero ".idx" y con él, el paquete deseado.
  	".cls" Fichero de clase. Define cómo va a ser la apariencia.
  	       Este fichero es cargado con la orden "\documentclass".
  	
  		Los siguientes tipos de fichero son generados cuando
  	             se ejecuta LaTeX en el fichero de entrada
  
  	".dvi" Device Independent File. El resultado principal de la
  	       compilacion de un fichero de entrada LaTeX.
  	".log" Brinda informacion detallada de lo que sucedió en la
  	       última compilación generada con LaTeX.
  	".toc" Contiene todas las secciones de cabeceras. Es leído
  	       para la siguiente compilación y se utiliza para generar
  	       la tabla de contenidos.
  	".lof" Como ".toc" pero para la lista de imágenes.
  	".lot" Como ".toc" pero para la lista de tablas.
  	".aux" Otro fichero que transporta información desde una
  	       compilación hacia la siguiente. Entre otras cosas,
  	       contiene información sobre las referencias cruzadas.
  	".idx" Si el documento contiene un índice, LaTeX guarda todas
  	       las palabras que van dentro del mismo en este fichero.
  	       Se debe procesar este fichero con la orden "makeindex".
  	".ind" Es el fichero ".idx" después de ser procesado, listo para ser
  	       incluído en el siguiente ciclo de compilación.
  	".ilg" Como ".log" pero para la orden "makeindex".
  
  1.8. ESTILOS DE PÁGINAS
  
  LaTeX soporta tres combinaciones de cabeceras y pies de páginas
  predeterminadas llamadas estilos. La orden para especificar el estilo
  de página es:
  
  \pagestyle{estilo}
  
  donde el parámetro "estilo" define el estilo a utilizar. Los posibles
  estilos son los siguientes:
  
  	"plain"    imprime los números de páginas al final de cada página,
  	           en el medio del pie de página. Estilo de página por
  	           omisión.
  	"headings" imprime el nombre del capítulo actual y el número de
  	           página en la cabecera de cada página, mientras el pie
  	           de página queda vacio.
  	"empty"    deja tanto la cabecera como el pie de página vacios.
  
  Es posible cambiar el estilo de la página actual con la orden:
  
  \thispagestyle{estilo}
  
  Más adelante veremos como crear cabeceras y pies de páginas personales.
  
  1.9. PROYECTOS Y DOCUMENTACIÓN DE GRAN TAMAÑO
  
  Cuando se trabaja con documentos grandes, se podría desear dividir el
  fichero de entrada en varias partes. LaTeX posee dos órdenes para
  solucionar dicho problema. Con la orden
  
  \include{nombre_fichero}
  
  ubicado en el cuerpo del documento podemos insertar el contenido de
  otro fichero llamado "nombre_fichero.tex". LaTeX comenzará una nueva
  página antes de procesar el contenido del fichero externo.
  Con la orden
  
  \includeonly{fichero1,fichero2,...}
  
  ubicado al comienzo del documento se puede especificar cuáles de los
  ficheros incluidos a lo largo del documento deben realmente ser
  incluidos y cuáles no.
  La orden \include comienza a procesar el texto incluido en una nueva
  página. Esto es útil cuando se utiliza \includeonly, ya que los saltos
  de página no se moverán, incluso si se omiten algunos ficheros a
  incluir. Pero a veces este efecto puede no ser deseado. En este caso se
  utiliza la orden
  
  \input{fichero}
  
  Esta orden incluye el fichero especificado y nada más. Sin
  complicaciones.
  
  Para decirle a LaTeX que revise la sintaxis de nuestro documento se
  puede utilizar el paquete "syntonly". Este paquete hace que LaTeX
  recorra todo el documento revisando la sintaxis y la utilizacion de
  órdenes, pero sin generar ninguna salida en formato DVI. LaTeX corre
  más rapido en este modo y puede ahorrar tiempo para cuando se procesan
  grandes documentos. Su utilizacion es muy simple:
  
  \usepackage{syntonly}
  \syntaxonly
  
  Cuando se desee producir la salida en formato DVI, coméntese el segundo
  renglón agregando un signo de porcentaje al comienzo de la línea.
  
  2. FORMATO DEL TEXTO
  
  2.1. IDIOMA Y ESTRUCTURA DEL TEXTO
  
  El objetivo principal de escribir un texto es el transmitir ideas,
  información y conocimiento al lector. El mismo comprenderá mejor el
  texto si éste tiene sus ideas bien estructuradas, y verá mejor esta
  estructura si la forma tipográfica refleja la estructura lógica
  y semántica del contenido del documento.
  Con LaTeX debe ser especificada la estructura lógica y semántica del
  texto, así como también la forma tipográfica del texto (esto último a
  través de las reglas dadas en la clase del documento y en varios
  ficheros de estilo.
  La más importante unidad de texto en LaTeX (y en tipografía) es el
  párrafo. A éste se le llama justamente "unidad de texto", porque un
  párrafo es la forma tipográfica que debe expresar un pensamiento
  coherente, o una idea. Se mostrará a continuación como forzar saltos de
  línea (por ejemplo con "\\") y saltos de párrafo (por ejemplo dejando
  una línea vacia en el documento fuente). Por lo tanto, si un nuevo
  pensamiento comienza, un nuevo párrafo debe comenzar, y si no, sólo
  saltos de línea deben ser utilizados. Errores con este tipo de sintaxis
  son muy comunes de  cometerse cuando se utilizan ecuaciones en el texto.
  En los siguientes ejemplos se muestra cómo a veces líneas en blanco
  (saltos de párrafo) son utilizadas antes y después de una ecuación y a
  veces no. Si hay órdenes en los ejemplos que no entiende todavía, no
  se preocupe, los mismos serán vistos más adelante en el documento.
  
  % Ejemplo 1
  \ldots cuando Einstein introdujo su fórmula 
  \begin{equation} 
     e = m \cdot c^2 \; , 
  \end{equation} 
  la cuál es al mismo tiempo la más conocida y la
  menos bien entendida de la fórmulas físicas.
  
  
  % Ejemplo 2 
  \ldots de la cual se deduce la fórmula de la corriente de Kirchoff: 
  \begin{equation} \sum_{k=1}^{n} I_k = 0 \; . 
  \end{equation} 
  la ley de la tensión de Kirchoff puede derivarse
  \ldots 
  
  
  % Ejemplo 3 
  \ldots lo que tiene varias ventajas. 
  \begin{equation} I_D = I_F - I_R 
  \end{equation} es el corazón de muchos modelos distintos de transistores. \ldots
  
  
  La siguiente unidad de texto más pequeña es la oración.
  Finalmente los párrafos de un texto deben ser estructurados lógicamente
  en un nivel superior, agrupándolos en capítulos, secciones,
  subsecciones, etc. Sin embargo, el efecto tipográfico de escribir
  
  \section{La estructura del idioma y texto}
  
  es tan obvio que es casi auto-evidente cómo estas estructuras de alto
  nivel deben ser utilizadas.
  
  2.2. SALTOS DE LÍNEA Y SALTOS DE PÁGINA
  
  2.2.1. PÁRRAFOS JUSTIFICADOS
  
  LaTeX realiza la justificación de los textos automáticamente (cuando
  hablamos de justificación de textos hablamos de que todas la líneas del
  texto tengan una longitud semejante). El tipo de alineación de un párrafo
  depende de la clase del documento.
  En algún caso especial puede ser necesario indicarle a LaTeX que divida
  una línea. Para hacer esto se puede escribir una de las siguientes
  opciones:
  
   "\\"
   "\newline"        Commienzan una nueva línea sin comenzar un nuevo
                     párrafo.
   "\\*"             Adicionalmente prohibe un salto de página luego del
                     salto de línea forzado.
   "\newpage"        Comienza una nueva página.
   "\linebreak[n]"   Salto de línea.
   "\nolinebreak[n]" No Salto de línea.
   "\pagebreak[n]"   Salto de página.
   "\nopagebreak[n]" No salto de página.
  
  Las últimas cuatro órdenes de esta lista habilitan al autor a
  influenciar sus acciones con el parámetro opcional "n". Este parámetro
  puede ser un número entre cero y cuatro. Si "n" es un valor menor a
  cuatro, se le está permitiendo a LaTeX el ignorar la orden si el
  resultado de aplicar el mismo se verá muy mal. No confundir las
  órdenes que utilizan la palabra "break" en vez de la palabra "new", no
  son lo mismo. Si realmente se desea comenzar una nueva línea, utilícese
  la orden "\newline".
  
  2.2.2. SEPARACIÓN DE PALABRAS POR SÍLABA
  
  LaTeX permite separar palabras según sus sílabas para mejorar el
  justificado (por ejemplo). LaTeX no separa palabras que tengan
  carácteres con acentuación u otro tipo de carácter no tradicional para
  la lengua inglesa. Para definir alguna palabra fuera de las comunes
  para que sea dividida se utiliza la orden
  
  \hyphenation{lista}
  
  donde "lista" es una lista de palabras separadas por un espacio que
  tienen un guion ("-") en cada lugar donde pueden ser separadas. Veamos
  un ejemplo: la orden
  
  \hyphenate{FORTRAN su-per-mer-ca-do}
  
  permite que la palabra "supermercado" (o también la palabra
  "Supermercado") sea separada en cualquiera de sus silabas, mientras que
  le prohibe a la palabra "FORTRAN" (o "Fortran", o también "fortran")
  ser dividida en cualquiera de sus silabas.
  Esta orden debe ser ubicada al comienzo del texto. Por otra parte,
  existe una definicion en sílabas a lo largo del documento. La
  orden para ésto es
  
  "\-"
  
  Por ejemplo, se podría escribir en el medio de un párrafo el texto
  "su\-per\-mer\-ca\-do" produciendo el mismo efecto que en el ejemplo
  antes mencionado. Esta orden es útil cuando se tiene palabras
  acentuadas.
  
  Se puede mantener un grupo de palabras siempre junto con la orden
  
  \mbox{texto}
  
  Esta causa que toda palabra contenida en "texto" permanezca junto a las
  otras bajo cualquier circunstacia.
  La orden
  
  \fbox{texto}
  
  es similar a "\mbox" con la diferencia que se dibujará un recuadro
  alrededor del texto en cuestión.
  
  2.3. TEXTO PREFABRICADO
  
  ORDEN		EJEMPLO		DESCRIPCION
  ------------------------------------------------------------------------
  \today		9 Agosto 2001	Fecha actual en idioma actual
  \TeX			--		TeX escrito según su logo
  \LaTeX		--		LaTeX escrito según su logo
  \LaTeXe		--		LaTeX2e escrito según su logo
  
  2.4. SÍMBOLOS Y CARACTERES ESPECIALES
  
  2.4.1. COMILLAS Y COMILLAS SIMPLES
  
  No se deberían utilizar las "comillas" como en un procesador de texto.
  Para representar comillas en el texto, enciérrese la porción de texto
  entre los carácteres `` y '' como en el ejemplo:
  
  ``El veloz murciélago volaba entre los árboles sin golpearse, ciego.''
  
  Si se desean expresar comillas simples, se utiliza el mismo criterio,
  pero encerrando el texto entre un solo ` y un solo ', de la siguiente
  forma:
  
  `El veloz murciélago volaba entre los árboles sin golpearse, ciego.'
  
  2.4.2. GUIONES
  
  LaTeX conoce cuatro tipos de guiones. Los mismos son los siguientes:
  
  NOMBRE		REPRESENTACION		EJEMPLO
  ------------------------------------------------------------------------
  hyphen		"-"			"fisico-mental"
  en-dash		"--"			--
  em-dash		"---"			--
  signo de menos	"-"			"$-1$"              (matematica)
  
  2.4.3. EL CARÁCTER ~
  
  Hay dos maneras de representar este carácter, y producen resultados
  distintos, aquí se brinda dos ejemplos que se sugiere se prueben para
  ver la diferencia:
  
  "http://www.rich.edu/\~{}bush"
  "http://www.clever.edu/$\sim$demo"
  
  2.4.4. EL SÍMBOLO DE GRADO
  
  Este es un ejemplo de como imprimir el símbolo de grado en LaTeX:
  
  "Hay $-30\,^{\circ}\mathrm{C}$, hace mucho frio."
  
  2.4.5. ELIPSIS (...)
  
  La forma correcta de representar una elipsis (tres puntos seguidos) es
  poniendo la orden
  
  \ldots
  
  inmediatamente después de la palabra que debe preceder a la elipsis.
  
  2.4.6. ACENTOS Y CARÁCTERES ESPECIALES
  
  LaTeX soporta el uso de acentos y carácteres especiales de varios
  idiomas. Se representarán todos los acentos posibles para la letra "o"
  (y se da por entendido que funciona para cualquier otra vocal), así
  como también un gran número de carácteres especiales. Se sugiere
  probar los mismos para ver su resultado gráfico.
  
  \`o	\'o	\^o	\~o
  \=o	\.o	\"o	\c c
  \u o	\v o	\H o	\c o
  \d o	\b o	\t oo
  \oe	\OE	\ae	\AE
  \aa	\AA
  \o	\O	\l	\L
  \i	\j	!`	?`
  
  2.5. SOPORTE PARA LENGUAJE INTERNACIONAL
  
  El idioma por omisión utilizado por LaTeX es el inglés, por lo tanto
  se deben tener algunas considereciones antes de comenzar a escribir un
  documento en castellano utilizando LaTeX:
  
  	1. Todas las cadenas de texto automáticamente generadas deben
  	   ser adaptadas al nuevo idioma. Esto se logra utilizando el
  	   paquete "babel".
  	2. LaTeX necesita saber las reglas de separado de silabas del
  	   nuevo lenguaje (vea el punto 2.2.2 de este documento). Esto
  	   se logra cambiando el fichero de formato con nuevas reglas
  	   de separado de silabas.
  
  Para utilizar el paquete agrégese la orden
  
  \usepackage[lenguaje]{babel}
  
  después de la orden "\documentclass" y sustituyendo la palabra
  "lenguaje" por el idioma de su eleccion. Los idiomas soportados por su
  distribucion deben estar listados en la Guía Local. El paquete Babel
  activará automáticamente las reglas apropiadas de separado de sílabas.
  Si el idioma de su eleccióon no es soportado por LaTeX, Babel seguirá
  funcionando de todos modos, pero deshabilitará las reglas de separado
  de sílabas, lo que trae un efecto contraproducente.
  Para algunos lenguajes, Babel especifica nuevas órdenes que facilitan
  la entrada de carácteres especiales.
  Algunos sistemas permiten escribir carácteres especiales directamente
  desde el teclado, LaTeX puede manejar dichos carácteres.
  
  2.6. EL ESPACIO ENTRE PALABRAS
  
  Para conseguir un margen derecho recto, LaTeX inserta una cantidad
  variable de espacios entre cada palabra. También inserta una leve mayor
  cantidad de espacios al final de una oracion para hacer el texto más
  legible. LaTeX asume que las oraciones terminan con puntos, signos de
  interrogació o de exclamación. Si un punto es precedido por una letra
  mayúscula, éste no es interpretado como el final de una oración, sino
  como el final de una abreviación. Cualquier excepcion de estos
  criterios debe ser especificada por el autor. Una contrabarra ("\")
  frente a un espacio generará un espacio que no será alargado. Un
  carácter "~" generará un espacio que no podrá ser alargado y que
  también prohibirá un salto de línea. La orden
  
  \@
  
  frente a un punto especifica que este punto termina una oración, aún
  si éste es precedido por una letra mayúscula. Un ejemplo podría ser el
  siguiente:
  
  "Me gusta BASIC\@. A ti?"
  
  El espacio adicional después de puntos puede ser deshabilitado con la
  orden
  
  \frenchspacing
  
  que le dice a LaTeX que no introduzca más espacio después de un
  punto que el carácter ordinario. Si se utiliza la orden
  "\frenchspacing", no es necesario utilizar la orden "\@".
  
  2.7. TÍTULOS, CAPÍTULOS Y SECCIONES
  
  Para ayudar al lector a encontrar su camino a través del texto lo
  aconsejable es dividir el mismo en capítulos, secciones y subsecciones.
  LaTeX soporta este tipo de divisiones con órdenes que toman el titulo
  de la sección como su parámetro. Corre por cuenta del autor el uso de
  los mismos en el orden indicado. Las siguientes órdenes de seccionado
  están disponibles para la clase "article".
  
  \section{...}		\paragraph{...}
  \subsection{...}	\subparagraph{...}
  \subsubsection{...}
  
  Pueden ser utilizadas dos órdenes de seccionado adicionales para las
  clases "book" y "report":
  
  \part{...}	\chapter{...}
  
  Como la clase "article" no tiene ("chapters"), es muy fácil
  agregar artículos en forma de capítulo a un libro. El espacio entre
  secciones, el numerado y el tamaño de fuente de los títulos será
  designado automáticamente por LaTeX.
  Dos de las órdenes de seccionado son un poco especiales:
  
  	- la orden "\part" no influye en el numerado de los capítulos.
  	- la orden "\appendix" no toma parámetros. Solo cambia la
  	  numeración de los capítulos a letras.
  
  LaTeX crea una tabla de contenidos tomando los cabeceras de las
  secciones y los números de página desde el último ciclo de compilación
  del documento. La orden
  
  \tableofcontents
  
  crea una tabla de contenidos en el lugar donde es escrito el mismo. Un
  nuevo documento debe ser compilado dos veces para conseguir una tabla
  de contenidos correcta. Existen oportunidades donde será necesario
  compilar el documento por una tercera vez. LaTeX avisará cuando ésto
  sea necesario.
  
  Todas las órdenes de seccionado anteriormente nombradas también
  existen en su versión "estrellada". La version estrellada de una orden
  es creada agregando un carácter "*" tras  del nombre de la orden. Estos
  generan cabeceras de secciones que no aparecen en la tabla de
  contenidos y que no son numeradas. Por ejemplo, la orden
  
  \section{Ayuda}
  
  se podria escribir como
  
  \section*{Ayuda}
  
  Normalmente las cabeceras de sección aparecen en la tabla de contenidos
  exactamente en el lugar que fueron introducidas en el texto. A veces esto
  no es posible, porque la cabecera es muy larga como para caber en la
  tabla de contenidos. El texto para la tabla de contenidos puede ser
  especificado como un argumento opcional frente a la  cabecera actual. Por
  ejemplo:
  
  \chapter[Título para la tabla de contenidos]{Un título largo y aburrido
  mostrado en el texto}
  
  El titulo general del documento es generado introduciendo la orden
  
  \maketitle
  
  El contenido del título debe ser definido por las órdenes
  
  \title{...}
  \author{...}
  \date{...}	% ESTE ÚLTIMO ES OPCIONAL
  
  En el parámetro de la orden "\author" es posible escribir varios nombres
  separados por órdenes del tipo
  
  \and
  
  Aparte de las órdenes de seccionado nombrados anteriormente, LaTeX2e
  introduce tres órdenes adicionales para ser utilizadas con la clase
  "book". Estos son útiles para dividir una publicación. Estas órdenes
  alteran las cabeceras de los capítulos y el numerado de páginas para
  trabajar como es de esperarse en un libro:
  
  	"\frontmatter" deberia ser la primera orden a escribir luego
  		de "\begin{document}". Este generará el numerado de
  		páginas con números romanos.
  	"\mainmatter" debe situarse justo antes del primer capítulo del
  		documento. Este cambia a numerado de página Arábico y
  		reinicia el contador de páginas.
  	"\appendix" indica el comienzo de material adicional en el
  		documento. Luego de esta orden los capítulos serán
  		numerados con letras.
  	"\backmatter" deberia ser ingresado antes de los últimos items
  		del documento, como ser la bibliografia y el índice. En
  		las clases de documentos estándar, esta orden no
  		tiene efectos visuales.
  
  2.8. REFERENCIAS CRUZADAS
  
  En libros, reportes y artículos, existen referencias cruzadas a figuras,
  tablas y segmentos de texto especiales. LaTeX provee los siguientes
  órdenes para crear referencias cruzadas:
  
  \label{marcador}
  \ref{marcador}
  \pageref{marcador}
  
  donde el parámetro "marcador" es un identificador elegido por el
  usuario. En el texto final, la orden "\ref" aparecerá como el
  número de sección, subsección, figura, tabla o teorema que
  representa su orden "\label" correpondiente; mientras que la orden
  "\pageref" aparecerá como el número de página en el que se encuentra
  su orden "\label" correspondiente. Un ejemplo podría ser el siguiente:
  
  Una referencia a esta subsección \label{sec:this} aparecerá como:
  ``vea la sección~\ref{sec:this} en la página~\pageref{sec:this}.''
  
  2.9. NOTAS AL PIE
  
  Con la orden
  
  \footnote{texto}
  
  una nota al pie es impresa al final de la página actual. Las notas al
  pie deberían ser ubicadas siempre tras la palabra a la que se refieren.
  Las notas al pie que se refieren a una oración o parte de ella deberían
  ser ubicadas tras una coma o un punto. Un ejemplo podria ser el
  siguiente:
  
  Las notas al pie\footnote{Esto es una nota al pie.} son muy útiles.
  
  2.10. PALABRAS DESTACADAS (subrayado, itálica y fuentes)
  
  Si un texto es escrito con una máquina de escribir, las palabras que se
  desean destacar son subrayadas. Esto se logra con la orden
  
  \underline{texto}
  
  En libros impresos, sin embargo, las palabras son destacadas
  imprimiéndolas con una fuente itálica. Esto se logra con la orden
  
  \emph{texto}
  
  Lo que realmente hace esta orden con el texto de su parámetro depende
  del contexto. Por ejemplo:
  
  \emph{Si se utiliza la orden de destaque dentro de un texto que ya
        esta destacado, \LaTeX{} utiliza la fuente \emph{normal} para
        destacar el texto en cuestion.}
  
  También se le puede pedir a LaTeX que cambie la fuente del documento,
  las órdenes son los siguientes:
  
  	\textit{texto} produce el efecto itálica (al igual que "\emph").
  	\textsf{texto} escribe el texto con la fuente "Sans Serif".
  	\texttt{texto} escribe el texto como si fuera una máquina de
  	               escribir.
  
  2.11. AMBIENTES
  
  Un ambiente se define de la siguiente forma:
  
  \begin{ambiente} ...texto... \end{ambiente{ambiente}
  
  siendo el parámetro "ambiente" el nombre del ambiente. Los ambientes
  pueden ser declarados varias veces a lo largo del documento sin
  sin importar su orden, siempre y cuando se respete la orden de apertura
  y cerrado de los mismos. Por ejemplo:
  
  \begin{aaa}
  ...
  \begin{bbb}
  ...
  \end{bbb}
  ...
  \end{aaa}
  
  A continuación se explicarán los ambientes más importantes.
  
  2.11.1. ITEMIZE, ENUMERATE Y DESCRIPTION
  
  El ambiente "itemize" es útil para crear listas simples, el ambiente
  "enumerate" para listas numeradas, y el ambiente "description" para
  descripciones. A continuacion se presenta un ejemplo para probar:
  
  \flushleft
  \begin{enumerate}
  \item Puedes mezclar los ambientes de lista a tu gusto:
  \begin{itemize}
  \item Pero podrian llegar a verse mal.
  \item[-] Con un guión.
  \end{itemize}
  \item Por lo cual debes recordar:
  \begin{description}
  \item[Stupid] Las no se verán bien por el hecho de que estén en una
  lista.
  \item[Smart] Sin embargo, las cosas se pueden mostrar bellas en una
  lista.
  \end{description}
  \end{enumerate}
  
  2.11.2. FLUSHLEFT, FLUSHRIGHT Y CENTER
  
  Los ambientes "flushleft" y "flushright" generan párrafos alineados a
  la izquierda y derecha respectivamente. El ambiente "center" genera
  texto centrado. Si no se especifican saltos de línea con la orden
  "\\", LaTeX los determinará automáticamente. A continuacion se
  presentan algunos ejemplos descriptivos:
  
  \begin{flushleft}
  Este texto esta\\ alineado a la izquierda.
  \LaTeX{} no esta tratando de dejar cada línea del mismo largo.
  \end{flushleft}
  
  \begin{flushright}
  Este texto esta \\alineado a la derecha.
  \LaTeX{} no esta tratando de dejar cada línea del mismo largo.
  \end{flushright}
  
  \begin{center}
  En el centro\\de la tierra
  \end{center}
  
  2.11.3. QUOTE, QUOTATION Y VERSE
  
  El ambiente "quote" es útil para agregar citas, frases importantes y
  ejemplos en el texto. Por ejemplo:
  
  Una regla tipográfica para el ancho una línea es:
  \begin{quote}
  En general, ninguna línea deberia superar los 66 carácteres.
  \end{quote}
  Es por esta razón que las páginas de LaTeX{} tienen bordes tan largos
  por defecto y también es por esta razón que se usa la impresión en
  varias columnas en los periódicos.
  
  Existen dos ambientes similares al "quote": "quotation" y "verse". El
  ambiente "quotation" es útil para citas largas que llevaran varios
  párrafos, porque realiza párrafos "dentados". El ambiente "verse" es
  útil para poemas, donde los saltos de línea son importantes. Las líneas
  son separadas introduciendo "\\" al final de cada línea y una línea
  vacía al final de cada verso. Por ejemplo:
  
  Sólo sé un poema en inglés de memoria. Habla de Humpty Dumpty.
  \begin{flushleft}
  \begin{verse}
  Humpty Dumpty sat on a wall:\\
  Humpty Dumpty hay a great fall.\\
  All the King's horses and all the King's men\\
  Couldn't put Humpty together again.
  \end{verse}
  \end{flushleft}
  
  2.11.4. VERBATIM (LITERALMENTE)
  
  Todo texto que se encuentre dentro del ambiente "verbatim" será
  impreso directamente, como si fuera escrito en una máquina de escribir,
  con todos los saltos de líneas y espacios, sin ser ejecutado ninguna
  orden LaTeX. Para obtener el mismo efecto dentro de un párrafo se
  puede utilizar la orden
  
  \verb+texto+
  
  sustituyendo "texto" con lo que se desea imprimir sin ser procesado. El
  carácter "+" es sólo un ejemplo de carácter delimitador, éste podria
  ser cualquier carácter con la excepcion de letras, el "*" y el espacio.
  
  El ambiente "verbatim" y la orden "verb" no deben ser utilizados
  dentro de parámetros de otras órdenes.
  
  2.11.5. TABULAR
  
  El ambiente "tabular" puede ser utilizado para crear tablas con líneas
  verticales y horizontales opcionales. LaTeX determina el ancho de las
  columnas automáticamente.
  El parámetro "formato" de la orden
  
  \begin{tabular}{formato}
  
  define el formato de la tabla. Se pueden utilizar los siguientes
  parámetros:
  
  	l: Columna con texto alíneado a la izquierda.
  	r: Columna con texto alíneado a la derecha.
  	c: Columna con texto centrado.
  	p{ancho}: Columna con texto justificado y saltos de línea.
  	|: Línea vertical.
  
  En el ambiente "tabular":
  
  	&: Salta a la siguiente columna.
  	\\: comienza una nueva línea.
  	\hline: Inserta una línea horizontal.
  	\cline{j-i}: Agrega una línea parcial, donde "j" e "i" son los
  	             números de columna en los cuales la nueva línea se
  	             debe extender.
  
  Por ejemplo:
  
  \begin{tabular}{|r|l|}
  \hline
  7C0 & hexagecimal \\
  3700 & Octal \\ \cline{2-2}
  11111000000 & binario \\
  \hline \hline
  1984 & decimal \\
  \hline
  \end{tabular}
  
  \begin{tabular}{|p{4.7cm}|}
  \hline
  Bienvenido al párrafo de Boxy.
  Esperamos que todos disfruten del show. \\
  \hline
  \end{tabular}
  
  El separador de columnas puede ser especificado con la construccion
  
  @{...}
  
  Esta orden inhibe el espacio entre columnas y los sustituye con lo
  que se haya puesto entre llaves. Un uso común de esta orden es
  explicado a continuación. Trata el problema del alineado de cifras
  decimales. También se utiliza comúnmente para eliminar espacios no
  deseados en la tabla. Pruébense los siguientes códigos y compárense:
  
  \begin{tabular}{@{} l @{}}
  \hline
  sin espacios\\
  \hline
  \end{tabular}
  
  \begin{tabular}{l}
  \hline
  con espacios a la derecha y a la izquierda\\
  \hline
  \end{tabular}
  
  No existe manera de alinear columnas decimales a un punto
  decimal en una instalación estándar. Pero se puede realizar un pequeño
  truco: un entero alineado a la derecha y una fracción alineada a la
  izquierda. la orden
  
  @{.}
  
  en la línea "\begin{tabular}" reemplaza el espacio entre columnas con
  un punto ("."), dando la apariencia de una sola columna justificada al
  nivel del punto decimal. No se debe olvidar de reemplazar los puntos
  decimales de los números por un separador de columnas ("&"). Una
  etiqueta de columna puede ser ubicada sobre nuestra "columna" numérica
  (que en realidad son dos columnas) utilizando la orden "\multicolumn".
  Véanse los siguientes ejemplos:
  
  \begin{tabular}{c r @{.} l}
  Expresion Pi &
  \multicolumn{2}{c}{Valor} \\
  \hline
  $\pi$ & 3&1416 \\
  $\pi^{\pi}$ & 36&46 \\
  $(\pi^{\pi})^{\pi}$ & 80662&7 \\
  \end{tabular}
  
  \begin{tabular}{|c|c|}
  \hline
  \multicolumn{2}{|c|}{Ene} \\
  \hline
  Mene & Muh! \\
  \hline
  \end{tabular}
  
  Todo material contenido en un ambiente tabular siempre se mantiene
  dentro de una misma página. Si se desea crear tablas muy extensas,
  veánse los ambientes "supertabular" y "longtabular".
  
  2.12. CUERPOS FLOTANTES (IMAGENES Y TABLAS)
  
  La mayoria de la publicaciones contienen figuras y tablas. Las mismas
  necesitan un trato especial dentro del documento, porque no pueden
  quedar partidas a lo largo de las distintas páginas. Un método podría
  ser comenzar una nueva página cada vez que una figura o tabla sea muy
  grande como para ubicarla en la página actual que se está procesando.
  Este método dejaría páginas parcialmente vacías, lo que se ve muy mal.
  La solución a este problema es hacer "flotar" la figura o tabla que no
  cabe en la página actual a la siguiente página, mientras que se sigue
  llenando la página actual con texto. LaTeX ofrece dos ambientes para
  cuerpos flotantes; uno para tablas y otro para figuras. Para obtener el
  mayor provecho de estos dos ambientes, es importante entender cómo
  LaTeX maneja la "flotación" internamente. De otro modo, las flotaciones se
  podrian convertir en una fuente de frustración, ya que LaTeX nunca los
  pone en el lugar que uno desean que estén.
  Primero veremos las órdenes que LaTeX provee para los flotes:
  Todo material contenido dentro de un ambiente "figure" o "table" será
  tratado como un cuerpo flotante. Ambos ambientes mencionados soportan
  un parámetro opcional llamado "especificador de lugar":
  
  \begin{figure}[especificador de lugar]
  
  \begin{table}[especificador de lugar]
  
  Este parámetro es utilizado para decirle a LaTeX las ubicaciones a
  donde el cuerpo flotante puede ser desplazado. Un especificador de
  lugar es creado construyendo una cadena de permisos de lugares para
  flotación. Las posibles opciones para esta cadena son las siguientes:
  
  	h: "here" En el mismo lugar del texto en donde se realizó
  	   la declaración del objeto.
  	t: "top" Al comienzo de una página.
  	b: "bottom" Al final de una página.
  	p: "page" En una página especial en donde se encuentran sólo
  	   objetos flotantes.
  	!: Sin tener en cuenta parámetros internos que podrían detener
  	   la inserción del objeto (como ser el mayor número de objetos
  	   flotantes permitidos por página).
  
  Por ejemplo, una tabla podría ser declarada de la siguiente forma:
  
  \begin{table}[!hbp]
  
  El especificador de lugar "[!hbp]" le permite a LaTeX ubicar la tabla
  en el mismo lugar de la declaracion (h) o al final de alguna página (b)
  o en una página especial de objetos flotantes (p), todo esto aún si no
  luce bien en el documento (!). Si no se introduce un especificador de
  lugar, los valores por omisión para el mismo son "[tbp]".
  LaTeX ubicará cada objeto flotante que encuentre, de acuerdo con el
  especificador de lugar ingresado por el autor. Si un objeto flotante no
  puede ser ubicado en la página actual, éste es diferido a la cola de
  figuras o de tablas. Estas colas son del estilo FIFO ("First In First
  Out"), lo que quiere decir que el primer objeto en entrar en la cola,
  es el primero en salir, manteniendo este orden a lo largo de toda la
  lista. Cuando una nueva página es iniciada, primero LaTeX revisa si es
  posible crear una página especial para cuerpos flotantes con cuerpos de
  las colas. Si esto no es posible, el primer objeto de cada cola es
  tratado como si recién ubiera aparecido en el texto: LaTeX trata de
  ubicarlo de acuerdo con su especificador de lugar (con la excepción de
  'h' que ya no es más útil). Cualquier nuevo objeto flotante que
  aparezca en el texto es enviado a su respectiva cola. LaTeX mantiene
  estrictamente la orden en el que fueron apareciendo los objetos
  flotantes a lo largo del documento. Esta es la esplicacion de porqué
  una figura que no puede ser ubicada desplaza todas las figuras
  siguientes al final del documento. Por lo tanto, si LaTeX no está
  ubicando los objetos flotantes donde se espera, comúnmente es sólo un
  objeto el que da problemás obstruyendo una o las dos colas FIFO.
  El brindar una sola ubicacion posible en los especificadores de lugar
  causa problemas. Si el objeto no puede ser ubicado en dicha posición,
  este se queda atascado, bloqueando los objetos flotantes subsecuentes.
  En particular no se deberia utilizar nunca la opcion 'h', es tan mala
  que en las últimas versiones de LaTeX es sustituida por 'ht'.
  Existen algunas cosas más a mencionar acerca de los ambientes "table" y
  "figure". Con la orden
  
  \caption{texto}
  
  se puede definir un texto explicativo para el objeto flotante. Un
  número secuencial y el texto "Figure" o "Table" (dependiendo del
  idioma) serán agregados por LaTeX.
  Las órdenes
  
  \listoffigures
  
  y
  
  \listoftables
  
  operan de forma análoga a la  orden "\tableofcontents", imprimiendo una
  lista de figuras o tablas respectivamente. En estas listas el texto
  completo creado por la orden "\caption" es repetido. Si se utilizan
  textos largos, se deben especificar versiones más cortas de los mismos
  para ser utilizados en las listas. Esto es logrado introduciendo la versión
  corta entre paréentesis rectos dentro de la orden "\caption":
  
  \caption[texto corto]{texto largo}
  
  Con las órdenes "\label" y "\ref" se pueden crear referencias a
  cuerpos flotantes a lo largo del texto.
  El siguiente ejemplo dibuja un cuadrado y lo inserta en el documento.
  Se puede utilizar ésto si  se desea reservar espacio para imágenes que
  serán pegadas en el documento finalizado.
  
  La figura~\ref{white} es un ejemplo de Arte Pop.
  \begin{figure}[!hbp]
  \makebox[\textwidth]{\framebox[5cm]{\rule{0pt}{5cm}}}
  \caption{Cinco por cinco centímetros.} \label{white}
  \end{figure}
  
  En este ejemplo LaTeX intentará con mucho esfuerzo (!) ubicar la figura
  justo en "este lugar" (h) (siempre y cuando la cola este vacía). Si no
  es posible, intentará ubicarla al final de la página (b). Si falla al
  intentar ubicar la imagen en la página actual, determinará cuando es
  posible crear una página especial para objetos flotantes conteniendo
  esta imagen y posiblemente tablas contenidas en la cola de tablas. Si
  no hay suficiente material como para crear una página de esta índole, LaTeX
  comenzará una nueva página, y nuevamente tratará a esta imagen como
  recién ingresada en el texto.
  Bajo ciertas circunstancias puede ser necesario utilizar la orden
  
  \clearpage
  
  o aun la orden
  
  \cleardoublepage
  
  la orden "\clearpage" obliga a LaTeX a ubicar inmediatamente todos
  los objetos flotantes que están en las colas y comenzar una nueva
  página. La orden "\cleardoublepage" comienza una página de mano
  derecha (en el caso de que el texto se este creando para imprimirse
  de los dos lados de las hojas).
  Se mencionará más adelante como incluir dibujos en formato PostScript
  en documentos LaTeX2e.
  
  2.13. PROTEGIENDO ÓRDENES DÉBILES
  
  Texto brindado como argumento de órdenes del estilo de "\caption" o
  "\section" pueden aparecer más de una vez a lo largo del documento (Por
  ejemplo en la tabla de contenidos como en el cuerpo del documento).
  Algunas órdenes suelen fallar cuando son utilizadas como parte del
  parámetro de órdenes como "\section". Éstas son llamadas "órdenes
  débiles". Órdenes débiles son, por ejemplo,
  
  \footnote
  
  o
  
  \phantom
  
  Lo que necesitan estas órdenes para trabajar es protección. Se pueden
  proteger introduciendo la orden
  
  \protect
  
  antes de ellos. la orden "\protect" sólo protege a la orden que esta
  en seguida a continuación de él, ni siquiera a sus argumentos. En la
  mayoría de los casos un "\protect" superfluo no hará daño. Por ejemplo:
  
  \section{Soy considerado \protect\footnote{y protejo mis notas al pie}}
  
  3. ESPECIALIDADES
  
  3.1. INCLUYENDO GRÁFICOS POSTSCRIPT
  
  LaTeX provee de facilidades básicas para trabajar con cuerpos flotantes
  como imágenes o gráficos, con los ambientes "figure" y "table".
  Existen también varias posibilidades para generar gráficos con LaTeX
  básico o con un paquete de extensión de LaTeX. Desafortunadamente la
  mayoria de los usuarios encuentran estos paquetes difíciles de usar.
  Por lo cual no se abordarán en este documento.
  Una manera mucho más facil de incluir gráficos en un documento es
  generarlos con un software especial (como CorelDraw, Gimp, XFig, etc.)
  y luego incluir los gráficos finalizados en el documento. Aquí
  nuevamente, LaTeX ofrece muchas maneras de para realizar este trabajo.
  En esta introducción se discutirá únicamente el uso de gráficos
  PostScript Encapsulados (EPS del inglés Encapsulated PostScript), ya
  que es fácil de hacer y muy utilizado. Para utilizar imágenes en
  formato EPS, se debe tener una impresora PostScript disponible como
  salida. Un buen conjunto de órdenes para la inclusión de paquetes se
  encuentra en el paquete "graphicx" creado por D. P. Carlisle. Se
  asumirá que se posee una impresora PostScript y LaTeX instalado con el
  paquete "graphicx". A continuación se ofrece una lista de pasos para
  incluir una imagen en un documento:
  
  A. Exportar la imagen desde el software de gráficos en formato EPS.
  B. Cargar el paquete "graphicx" en el preámbulo del fichero de entrada
     con la orden "\usepackage[driver]{graphicx}" donde "driver" es el
     nombre del programa que convierte el formato DVI a PostScript que se
     posee (por ejemplo "dvi2ps").
  C. Usar la orden
  
     \includegraphics[key=valor,...]{fichero}
  
     para incluir al fichero "fichero.eps" en el documento. El parámetro
     opcional acepta una lista de parámetros ("keys") separados por comas
     con sus respectivos valores. Los "keys" más importantes son los
     siguientes:
  
  	width: Ancho de la imagen.
  	height: Altura de la imagen.
  	angle: Ángulo de rotación.
  	scale: Escala.
  
     El siguiente ejemplo:
  
     \begin{figure}
     \begin{center}
     \includegraphics[angle=90, width=0.5\textwidth]{test}
     \end{center}
     \end{figure}
  
     incluye el gráfico contenido en el fichero "test.eps". Primero, el
     gráfico es rotado 90 grados y luego es escalado hasta lograr un
     ancho de 0.5 veces el ancho de un párrafo común.
  
  3.2. BIBLIOGRAFÍA
  
  Se puede producir una bibliografía con el ambiente "thebibliography".
  Cada item comienza con la orden
  
  \bibitem{marcador}
  
  El "marcador" es utilizado después para citar el libro, artículo o papel
  a lo largo del documento con la orden
  
  \cite{marcador}
  
  La numeración de las entradas se genera automáticamente. El parámetro que
  sigue a la orden
  
  \begin{thebibliography}
  
  indica el máximo de estos números. En el siguiente ejemplo,
  "{99}" le indica a LaTeX que espere que ninguno de los números de los
  items en la biliografia supere al 99.
  
  H. Partl~\cite{pa} ha propuesto que \ldots
  \begin{thebibliography}{99}
  \bibitem{pa} H.~Partl: \emph{German \TeX}, TUGboat Volume~9, Issue~1 (1988)
  \end{thebibliography}
  
  Se recomienda la exploración del programa BibTeX para realizar la
  bibliografía de proyectos grandes.
  
  3.3. INDEXADO
  
  Una de las mayores utilidades que tiene un libro es su índice. Con
  LaTeX y el programa de soporte "makeindex", se puede generar un índice
  fácilmente. En este documento sólo se explicarán las órdenes basicas
  para la creacion de índices.
  Para habilitar la creacion de un índice se debe cargar el paquete
  "makeidx" en el preámbulo del fichero de entrada con la orden
  
  \usepackage{makeidx}
  
  y las órdenes para realizar el indexado se deben habilitar con el
  orden
  
  \makeindex
  
  también en el preambulo del fichero de entrada.
  El contenido del índice es especificado con la orden
  
  \index{key}
  
  donde "key" es la entrada del índice, el identificador. Se deben
  escribir las órdenes "\index" en los lugares a los cuales se
  desea que las entradas finales del índice apunten. A continuacion se
  brindan una lista de ejemplos que explican la sintaxis del parámetro
  "key" de la orden "\index":
  
  EJEMPLO		 	 ENTRADA DEL ÍNDICE	COMENTARIO
  ---------------------------------------------------------------------------
  \index{hello}		 hello, 1		Entrada simple
  \index{hello!Peter}	    Peter, 3		Subentrada bajo 'hello'
  \index{Sam@\textsl{Sam}} Sam, 2			Entrada formateada
  \index{Lin@\textbf{Lin}} Lin, 7			Entrada formateada
  \index{Jenny|textbf}	 Jenny, 3		Número de página formateado
  \index{Joe|textit}	 Joe, 5			Número de página formateado
  
  El fichero es procesado nuevamente, este índice ordenado es incluido en
  el documento en el lugar donde LaTeX encuentra la orden
  
  \printindex
  
  3.4. FUENTES Y TAMAÑOS
  
  3.4.1. ÓRDENES PARA CAMBIAR DE TIPO
  
  LaTeX escoge la fuente apropiada y el tamaño de fuente apropiado
  basándose en la estructura lógica del documento (secciones, notas al
  pie, etc.). En algunos casos se puede desear cambiar el tipo y el
  tamaño de la misma a mano. Para hacer esto se pueden utilizar las
  siguientes órdenes:
  
  -----------------------------------------------------------------------
  			ÓRDENES PARA FUENTES
  -----------------------------------------------------------------------
  \textrm{...}	Roman		\textsf{..}	Sans Serif
  \texttt{...}	Typewriter
  \textmd{...}	Medium		\textbf{...}	Bold Face (Negrita)
  \textup{...}	upright		\textit{...}	Italica
  \textsl{...}	slanted		\textsc{...}	small caps
  \emph{...}	emphasized	\textnormal{...}	Fuente normal
  -----------------------------------------------------------------------
  			ÓRDENES PARA TAMAÑOS
  -----------------------------------------------------------------------
  \tiny		Diminuta	\Large		Más Grande
  \scriptsize	Muy diminuta	\LARGE		Muy Grande
  \footnotesize	No tan pequeña
  \small		Pequeña		\huge		Enorme
  \normalsize	Normal
  \large		Grande		\Huge		Más Enorme
  -----------------------------------------------------------------------
  
  El tamaño por omisión de cada fuente depende de la clase del documento
  y de sus opciones. Los tamaños por omisión para las clases más comunes
  son los siguientes:
  
  Tamaño 		10pt (default) 	11pt option 	12pt option
  -----------------------------------------------------------------------
  \tiny 		5pt 		6pt 		6pt
  \scriptsize 	7pt 		8pt 		8pt
  \footnotesize 	8pt 		9pt 		10pt
  \small 		9pt 		10pt 		11pt
  \normalsize 	10pt 		11pt 		12pt
  \large 		12pt 		12pt 		14pt
  \Large 		14pt 		14pt 		17pt
  \LARGE 		17pt 		17pt 		20pt
  \huge 		20pt 		20pt 		25pt
  \Huge 		25pt 		25pt 		25pt
  -----------------------------------------------------------------------
  
  A continuación se muestra un ejemplo de cómo utilizar las órdenes:
  
  {\small The small and \textbf{bold} Romans ruled}
  {\Large all of great big \textit{Italy}.}
  
  En LaTeX2e los atributos de los tipos   son independientes. Esto quiere
  decir que, por ejemplo, se puede cambiar el tipo           y seguir
  manteniendo el formato       negrita indicado anteriormente.
  En la utilización de las órdenes de tamaño de fuente, las llaves son
  muy importantes, ya que indican el área de texto a la que afecta la
  orden. Por ejemplo:
  
  A él le gustan las palabras {\LARGE grandes y {\small small} pequeñas}.
  
  Las órdenes para cambiar el tamaño del tipoe también cambian el
  espaciado entre líneas, pero sólo si el párrafo termina dentro del
  orden de tamaño de tipo.
  Si se desea activar una orden de cambio de tamaño de tipo para un
  párrafo entero o incluso para algún área mayor de texto, conviene
  utilizar la orden como si fuese un ambiente. Por ejemplo:
  
  \begin{Large}
  Esto no es verdad. Pero, qué lo es en estos dias \ldots
  \end{Large}
  
  Esto ahorrará muchas llaves "{}" incómodas.
  
  3.5. ESPACIADO
  
  3.5.1. ESPACIO ENTRE LÍNEAS
  
  Si se desea utilizar un espaciado mayor entre líneas en un documento,
  se puede cambiar su valor introduciendo la orden
  
  \linspread{factor}
  
  en el preámbulo del documento. Utilice "\linespread{1.3}" para un
  espaciado de "Uno y medio", y "\linespread{1.6}" para un espaciado
  "Doble". El valor por omisión es 1.
  
  3.5.2. FORMATO DE PÁRRAFOS
  
  En LaTeX existen dos parámetros que influyen en la disposicióon de un
  párrafo. Incluyendo una definición como la siguiente
  
  \setlength{\parindent}{0pt}
  \setlength{\parskip}{1ex plus 0.5ex minus 0.2ex}
  
  en el preámbulo del documento, se puede cambiar el formato de los
  párrafos. Estas dos órdenes aumentan el espacio entre dos párrafos,
  mientras que especifican el sangrado (indent) de los párrafos a cero.
  Las partes "plus" y "minus" de la segunda línea le dicen a TeX, que
  puede comprimir y expandir el salto entre párrafos por la cantidad
  especificada si es necesario para mantener los párrafos en una misma
  página (siempre que sea posible).
  Para sangrar un párrafo se puede utilizar la  orden
  
  \indent
  
  al principio del párrafo. Para crear un párrafo no dentado, se puede
  utilizar la orden
  
  \noindent
  
  como la primera orden del párrafo. Esto puede ser útil cuando se
  comienza un documento con texto y sin un orden de seccionado.
  
  3.5.3. ESPACIO HORIZONTAL
  
  LaTeX determina los espacios entre palabras y oraciones automáticamente.
  Para agregar un espacio horizontal, se debe utilizar la orden
  
  \hspace{largo}
  
  Si el espacio deseado debe ser mantenido aunque éste caiga al final o al
  principio de una línea, se debe utilizar la orden "\hspace*" en lugar
  de "\hspace". El parámetro "largo", en el caso más simple, es sólo un
  número seguido de una unidad. Las unidades más importantes son las
  siguientes:
  
  UNIDAD		MEDIDA		EQUIVALENCIA
  -------------------------------------------------------------------
  mm		milímetro	1/25 pulgadas
  cm		centímetro	10 mm
  in		pulgada		25.4 mm
  pt		punto		1/72 in ~ 1/3 mm
  em		El ancho de una 'M' en la fuente actual
  ex		El alto de una 'X' en la fuente actual
  
  Un ejemplo de la utilizacion de la orden "\hspace" puede ser el
  siguiente:
  
  Esto\hspace{1.5cm}es un espacio de 1.5 cm.
  
  la orden
  
  \stretch{n}
  
  genera un espacio "goma" especial. La orden se alarga hasta que todos
  los espacios faltantes en una línea son llenados. Si dos órdenes del
  estilo "\hspace{\stretch{n}} son implementados en la misma línea, los
  mismos creceráan de acuerdo al factor de la orden "\stretch".
  
  3.5.4. ESPACIO VERTICAL
  
  El espacio entre espacios, secciones, subsecciones, etc. es determinado
  automáticamente por LaTeX. Si es necesario, se puede agregar espacio
  vertical adicional entre dos párrafos con la orden
  
  \vspace{largo}
  
  Esta orden debería ser utilizada normalmente entre dos líneas vacias.
  Si el espacio debe ser preservado al principio o al final de una
  página, se debe utilizar la orden "\vspace*" en lugar de "\vspace".
  la orden "\stretch" en conexión con "\pagebreak" puede ser utilizada
  para escribir texto en la última línea de una página o para centrar un
  texto verticalmente en la página. Por ejemplo:
  
  Algun texto \ldots
  
  \vspace{\stretch{1}}
  Esto va en la última línea de la página.\pagebreak
  
  Con la orden
  
  \\[largo]
  
  se puede especificar espacio adicional entre dos líneas de un mismo
  párrafo o dentro de una tabla.
  Con las órdenes
  
  \bigskip	y	\smallskip
  
  se pueden saltar una cantidad predefinida de espacio vertical sin
  necesidad de preocuparse por números exactos.
  
  3.6. DISPOSICION DE LA PÁGINA
  
  LaTeX2e permite especificar el tamaño de la página con la orden
  "\documentclass". Tras esta orden, automáticamente se eligen los
  márgenes correctos. Pero a veces se puede no estar conforme con los
  valores por omisión. Naturalmente, éstos pueden ser cambiados. Las
  opciones para modificar los márgenes son las siguientes:
  
  	\hoffset			\voffset
  	\evensidemargin			\topmargin
  	\headheight			\headsep
  	\textheight			\textwidth
  	\marginparsep			\marginparwidth
  	\footskip			\marginparpush
  	\paperwidth			\paperheight
  
  3.7. CAJAS
  
  LaTeX crea sus páginas a traves de cajas. Primero, cada letra es una
  caja pequeña, que luego es "pegada" a otras letras para formar las
  palabras. Estas son nuevamente pegadas a otras palabras, pero con un
  pegamento especial, que es elástico, asi las series de palabras pueden
  ser estiradas o comprimidas para llenar exactamente una línea en la
  página.
  Esta es una versión muy simplificada de lo que realmente ocurre, pero
  el punto es que TeX trabaja con pegamento y cajas. No sólo una letra
  puede ser una caja. Se pueden introducir virtualmente cualquier cosa en
  una caja, inclusive otras cajas. Caja caja será tratada por LaTeX
  como si fuese una letra. El ambiente "tabular" y la orden
  "\includegraphics" por ejemplo, crean ambos una caja. Por lo tanto, se
  pueden alinear fácilmente tablas o imágenes una al lado de la otra.
  Sólo se debe tener la precaucion de que el ancho combinado de éstos
  objetos no supere el ancho de una línea ("textwidth").
  Se puede tanbién empaquetar un párrafo con la orden
  
  \parbox[posicion]{ancho}{texto}
  
  o con el ambiente
  
  \begin{minipage}[posicion]{ancho}
  	...texto...
  \end{minipage}
  
  El parámetro "posición" puede tomar uno de los siguientes valores:
  
  	c: "center"
  	t: "top"
  	b: "bottom"
  
  Todos estos valores son relativos a la línea base del texto que rodea
  la caja. La orden "ancho" especifica el ancho de la página.
  La mayor diferencia entre la orden "\parbox" y "\minipage" es que no
  se pueden utilizar todas las órdenes dentro de "\parbox", mientras que
  casi cualquier cosa puede ser utilizada dentro de "\minipage".
  Mientras que "\parbox" empaqueta un párrafo completo realizando saltos
  de línea y todo lo relacionado a un párrafo, existe también una clase
  de órdenes para cajas que trabajan sólo con material horizontalmente
  alineado. "\mbox" es uno de ellos, simplemente empaqueta una serie de
  cajas dentro de otra, y puede ser utilizado para prohibirle a LaTeX que
  divida dos palabras. Ya que se pueden meter cajas dentro de otras cajas,
  estos empaquetadores de cajas horizontales brindan la última
  flexibilidad.
  
  \makebox[ancho][posicion]{texto}
  
  El parámetro "ancho" define el ancho de la caja resultante (más alla de
  su contenido). Además de las expresiones para especificar medidas, se
  pueden útilizar también los órdenes
  
  \width		\height		\depth		\totalheight
  
  en el parámetro "width". Los valores de estas órdenes son obtenidos
  según las medidas del parámetro "texto". El parámetro "posición" puede
  obtener uno de los siguientes parámetros:
  
  	C: centrado.
  	L: alineado a la izquierda.
  	R: alineado a la derecha.
  	S: exparce el texto dentro de la caja hasta llenarla.
  
  la orden "\framebox" trabaja exactamente de la misma forma que
  "\makebox", con la diferencia que "\framebox" dibuja una caja alrededor
  del texto, y "\makebox" no.
  la orden
  
  \raisebox{elevacion}[ancho][altura]{texto}
  
  permite definir propiedades verticales en una caja. Se pueden utilizar
  las órdenes
  
  \width		\height		\depth		\totalheight
  
  en sus primeros tres parámetros, para trabajar sobre el tamaño de la
  caja dentro del parámetro "texto".
  
  3.8. REGLAS Y CONTORNOS
  
  la orden
  
  \rule[elevacion]{ancho}{altura}
  
  produce una caja negra. Aquí se muestran algunos ejemplos:
  
  \rule{3mm}{.1pt}%
  \rule[-1mm]{5mm}{1cm}%
  \rule{3mm}{.1pt}%
  \rule[1mm]{1cm}{5mm}%
  \rule{3mm}{.1pt}
  
  Esta orden es útil para dibujar líneas vertivales y horizontales. Un
  caso especial es una orden "\rule" sin ancho, pero con un cierto alto
  minimo. Esto se puede utilizar en un ambiente tabular para asegurarse de
  que un registro tiene un alto mínimo deseado. Por ejemplo:
  
  \begin{tabular}{|c|}
  \hline
  \rule{1pt}{4ex}Pitprop \ldots\\
  \hline
  \rule{0pt}{4ex}Strut\\
  \hline
  \end{tabular}
  
  Gaston Simone, gsimone@linuxmail.org
