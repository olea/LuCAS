<!-- <!doctype glossary PUBLIC "-//OASIS//DTD DocBook V3.1//EN"> -->

<glossary id="glossary"><?dbhtml filename="glossary.html"?>
  <title>Glossary</title>
  <glossentry>
    <glossterm>attribute</glossterm>
    <glossdef>
      <para>An attributte makes available extra information regarding the 
          element on which it appears. The attributes always appear as a 
          name-value pair on the initialization pointers. Example of an
          attribute is <parameter
          class="option">id="identification"</parameter>, which gives the
          attribute <parameter class="option">id</parameter> the value
          <parameter class="option">identification</parameter>.</para>
    </glossdef>
    </glossentry>
  <glossentry>
    <glossterm>Document Type Definition      
    (<acronym>DTD</acronym>)</glossterm> 
    <glossdef>
      <para>A group of statements that define element names and their attributes
          specifying the rules for combinations and sequences. It's the
          <acronym>DTD</acronym> that defines which elements can or cannot
          be inserted in the given context.   
          </para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm><acronym>DSSSL</acronym></glossterm>
    <glossdef>
      <para><acronym>DSSSL</acronym> stands for Document Style Semantics and
          Specification Language. It's an <acronym>ISO</acronym> standard
          (ISO/IEC 10179:1996). The <acronym>DSSSL</acronym> standard is
          internationally used as a language for documents stylesheets pages for
          <acronym>SGML</acronym>.</para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>element</glossterm>
    <glossdef>
      <para>The elements define the hierarchical structure of a document. The
          majority of elements have opening and closing pointers. Within these
          pointers, pieces of text or even the whole document being written can
          be found. There are empty elements which contains only opening 
          pointers without any content.</para>
          </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>entity</glossterm>
    <glossdef>
      <para>An entity is a name designated for some part of data so that it
          can be referenced by a name.  The data could be anything from
          from simple characters to chapters to sets
          of statements of a <acronym>DTD</acronym>.
          Entity parameters can be generic, external, internal or
          <acronym>SGML</acronym> data.  An entity is similar to a variable
          in a programming language, or a macro.
          </para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>external entity</glossterm>
    <glossdef>
      <para>An external entity points to an external document. External entities
          are used to include texts on certain locations of a
          <acronym>SGML</acronym> document. It could be used to include
          sample screens, legal notes, and chapters for example.</para> 
     </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>generic entities</glossterm>
    <glossdef>
      <para>An entity referenced by a name, which starts with  
          <quote>&amp;</quote> and ends with semicolon is a generic    
          entity. Most of the time this type of entity is used in the 
          document and not on the <acronym>DTD</acronym>. There are two types
          of entities: external and internal.  They can refer to special
          characters or to text objects such as repeated sentences, names or
          chapters.</para> 
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>internal entity</glossterm>
    <glossdef>
      <para>An internal entity refers to part of the text and is often used
          as a shortcut for frequently repeated text.</para>
           </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>parameter entity</glossterm>
    <glossdef>
      <para>An entity often used in the <acronym>DTD</acronym>. The entity's
          name starts with a percent sign (&percnt;) and ends with a
          semicolon.</para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>float</glossterm>
    <glossdef>
        <para>Objects such as side bars, pictures, tables, and charts are called
          floats when they don't have a fixed placement on the text. For
          printed text, a chart can appear either at the top or at the
          bottom of the page. It can also be placed on the next page if it is 
          too large.</para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>processing instruction</glossterm>
    <glossdef>
      <para>A processing instruction is a command passed to the document 
          formatting tool. It starts with <quote>&lt;?</quote>. This document
          uses processing instructions for naming files when it
          is rendered into
          <acronym>HTML</acronym>: <sgmltag class="starttag">?dbhtml
          filename="file.html"</sgmltag></para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm><acronym>SGML</acronym></glossterm>
    <glossdef>
      <para><foreignphrase>Standard Generalized Markup
          Language</foreignphrase>.
          It is an international standard (<acronym>ISO</acronym>8879) that
          specifies rules for the creation of electronic documents in markup
          systems, regardless the work platform used.</para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>tag</glossterm>
    <glossdef>
      <para>An <acronym>SGML</acronym> element bounded by the marks
          <quote>&lt;</quote> and <quote>&gt;</quote>. Tags are used
          to mark the semantic or logical structure of a document. A sample
          is the tag <emphasis><sgmltag
          class="starttag">title</sgmltag></emphasis> to mark the beginning
          of a title.</para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm><acronym>XML</acronym></glossterm>
    <glossdef>
      <para>eXtensible Markup Language. A subproduct of <acronym>SGML</acronym>
          created specifically for Internet use.</para> 
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm><acronym>XSL</acronym></glossterm>
    <glossdef>
      <para><acronym>XML</acronym> Style
          Language. XSL is to a <acronym>XML</acronym> document what a 
          <acronym>DSSSL</acronym> style is for a <acronym>SGML</acronym>
          document. The XSL is written in
          <acronym>XML</acronym>.</para>  
    </glossdef>
  </glossentry>
</glossary>
