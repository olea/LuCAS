<?xml version="1.0" encoding="iso-8859-1" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<article>

<articleinfo>

<title>Java CGI COMO</title>
<author>
	<firstname>David H.</firstname>
	<surname>Silber</surname>
	<affiliation>
		<address><email>javacgi-document@orbits.com</email></address>
	</affiliation>
</author>
<pubdate>v0.5, 1 de Diciembre de 1998.</pubdate>

<abstract>

<para>
Este documento COMO explica como configurar su servidor para permitir
programas CGI escritos en Java y como usar Java para escribir programas
CGI.
Aunque los documentos COMO están dirigidos hacia el uso con el sistema
operativo Linux, este en particular no depende de la versión de concreta
de unix que estemos usando.
</para>

</abstract>

</articleinfo>

<sect1>
<title>Introducción</title>

<para>
Debido a la forma en que Java está diseñado, el programador no tiene un
acceso fácil a las variables de entorno del sistema. Asímismo, por la
forma en que el JDK está configurado, se hace necesario el uso de
multiples <emphasis remap="it">tokens</emphasis> que invoquen el programa, el cual no cuadra muy bien
con las formas estandarizadas de operación de HTML/CGI. Hay caminos que
sortean estas limitaciones, y yo he implementado una de ellas. Daré
detalles posteriormente.
</para>

<para>
Desde que escribí el párrafo anterior en 1996, han habido muchos cambios
en la tecnología Java. Es probable que existan mejores soluciones para
ejecutar programas Java en servidor -- quizás debería echar un vistazo a
los <emphasis remap="it">servlets</emphasis>.
</para>

<sect2>
<title>Conocimientos previos</title>

<para>
Asumo que tiene un conocimiento general de los conceptos de HTML y CGI, y
al menos un conocimiento mínimo de su servidor HTTP. También debería
conocer cómo programar en Java, o la mayoría de esto no tendrá mucho
sentido.
</para>

</sect2>

<sect2>
<title>Este documento</title>

<para>
La última versión de este documento puede leerse en: <ulink
url="http://www.orbits.com/software/Java_CGI.html"
>http://www.orbits.com/software/Java_CGI.html</ulink
>.
</para>

</sect2>

<sect2>
<title>El paquete</title>

<para>
La última versión del paquete descrito aquí puede ser accedido via FTP
anónimo en <ulink
url="ftp://ftp.orbits.com/pub/software/java_cgi-0.5.tgz"
>ftp://ftp.orbits.com/pub/software/java_cgi-0.5.tgz</ulink
>. La
distribución que acompaña al paquete incluye la fuente SGML para este
documento.
</para>

<para>
El paquete es distribuido siguiendo los términos de la licencia pública
general de la librería GNU. Este documento puede ser redistribuido bajo
los términos del acuerdo de licencia Linux para los COMOs.
</para>

<para>
Si usa este software, haga el favor de hacer referencia a <ulink
url="http://www.orbits.com/software/Java_CGI.html"
>http://www.orbits.com/software/Java_CGI.html</ulink
>, de forma que otras
personas también puedan encontrar las clases Java para CGIs.
</para>

<para>
Me he quedado sin tiempo para mantener y dar soporte a este paquete, de
forma que probablemente ésta será su última versión. Si hay alguién ahí
fuera lo suficientemente enamorado de este software que quiera encargarse
de mantenerlo, por favor, contacte conmigo en: <literal remap="tt"><ulink
url="mailto:javacgi-document@orbits.com"
>javacgi-document@orbits.com</ulink
></literal>.
</para>

</sect2>

<sect2 id="mailing-list">
<title>La lista de correo
</title>

<para>
He creado una lista de majordomo para permitir que la gente pueda ayudar
en el trabajo de los demás a través de los problemas mutuos sobre la
instalación y el uso de este software. Mande un mensaje a <literal remap="tt"><ulink
url="mailto:javacgi-request@orbits.com"
>javacgi-request@orbits.com</ulink
></literal>, conteniendo la palabra
<emphasis>subscribe</emphasis>.
</para>

</sect2>

</sect1>

<sect1 id="install-long">
<title>Configurando el servidor para ejecutar programas CGI
 (con explicaciones)
</title>

<para>
Esta sección le conducirá a través de la instalación de mi paquete de
<emphasis>CGI para Java</emphasis> con copiosas explicaciones, de forma que conozca los
efectos que producirán sus acciones. Si simplemente quiere instalar los
programas y no le importan los dóndes y porqués, pase directamente a <xref linkend="install-short"/>.
</para>

<sect2>
<title>Requerimientos del sistema</title>

<para>
Este sofware debería funcionar sobre cualquier servidor web de sistemas
UNIX, que tenga el JDK instalado. Estoy usandolo sobre un sistema
<emphasis>Linux Debian</emphasis>, con <emphasis>Apache</emphasis> como demonio HTTP. Si se encuentra
con que no funciona en su servidor, por favor contacte con la lista de
correo. Ver <xref linkend="mailing-list"/> para más
detalles.
</para>

<para>
Desafortunadamente, el interprete en tiempo de ejecución de Java parece
consumir gran cantidad de memoria -- es posible que quiera tirar algún
que otro megabyte de RAM en su servidor, si va a usar muchos programas
CGI en Java.
</para>

</sect2>

<sect2>
<title>Software suplementario (add-on) para CGIs en Java</title>

<para>
El software que escribí para ayudar en esto se llama JAVA CGI. Puede
obtenerlo desde <ulink
url="ftp://ftp.orbits.com/pub/software/java_cgi-0.5.tgz"
>ftp://ftp.orbits.com/pub/software/java_cgi-0.5.tgz</ulink
>. (El número de
versión puede haber cambiado.)
</para>

</sect2>

<sect2>
<title>Descomprimiendo los fuentes</title>

<para>
Encuentre un directorio conveniente para descomprimir el paquete (Si no
tiene todavía un lugar estandar para poner los paquetes, le sugiero que
use <literal remap="tt">/usr/local/src</literal>). Descomprima la distribución con el comando:
</para>

<para>

<screen>
gzip -dc java_cgi-0.5.tgz | tar -xvf -
</screen>

</para>

<para>
Este creará un directorio llamado <literal remap="tt">java_cgi-0.5</literal>. En él encontrará los
ficheros a los que se hace referencia en el resto de este documento. (Si
el número de versión ha cambiado, adapte las instrucciones para esa
distribución de aquí en adelante).
</para>

</sect2>

<sect2 id="make-programs">
<title>Decida sus políticas sobre rutas locales
</title>

<para>
Generalmente, querrá ponerlos en un directorio paralelo a su directorio
cgi-bin. Mi servidor apache vino configurado para usar
<literal remap="tt">/var/www/cgi-bin</literal> como directorio <literal remap="tt">cgi-bin</literal>, así que usé
<literal remap="tt">/var/www/javacgi</literal> como el directorio en el que poner los programas
CGI hechos con Java. Es probable que no quiera poner sus programas CGI
dentro de unos de los directorios <literal remap="tt">CLASSPATH</literal> existentes. Edite el
<literal remap="tt">Makefile</literal> para reflejar la configuración de su sistema. Asegurese de
que se conecta como root, y ejecute <literal remap="tt">make install</literal>. Esto compilará los
programas Java, modificando el script <literal remap="tt">java.cgi</literal> para ajustarse a su
sistema e instalar los programas en los lugares apropiados. Si quiere la
versión HTML de esta documentación y un documento HTML de test, ejecute en
su lugar, <literal remap="tt">make all</literal>.
</para>

</sect2>

<sect2 id="install-test">
<title>Comprobando la instalación
</title>

<para>
Se instalan desde la distribución los documentos HTML
<literal remap="tt">javacgitest.html</literal>, <literal remap="tt">javaemailtest.html</literal> and <literal remap="tt">javahtmltest.html</literal>.
Si lo instaló todo (<literal remap="tt">all</literal>) en la sección anterior, estará en el
directorio que especificó para WEBDIR en el <literal remap="tt">Makefile</literal>. Si no lo
hizo, puede ejecutar <literal remap="tt">make test</literal> para construirlos desde
<literal remap="tt">javacgitest.html-dist</literal>, <literal remap="tt">javaemailtest.html-dist</literal> y
<literal remap="tt">javahtmltest.html-dist</literal>.
</para>

<para>
Cuando esté seguro de que su instalación funciona correctamente, puede
que quiera borrar <literal remap="tt">CGI_Test.class</literal>, <literal remap="tt">email_Test.class</literal> y
<literal remap="tt">HTML_Test.class</literal> del directorio JAVACGI y <literal remap="tt">javacgitest.html</literal>,
<literal remap="tt">javaemailtest.html</literal> y <literal remap="tt">javahtmltest.html</literal> del directorio WEBDIR,
pues éstos muestran la información de usuario que está normalmente
disponible sólo para el servidor.
</para>

</sect2>

</sect1>

<sect1 id="install-short">
<title>Configurando el servidor para ejecutar CGIs en Java
 (la forma abreviada)
</title>

<para>

<itemizedlist>
<listitem>

<para>
Consiga el paquete desde <ulink
url="ftp://ftp.orbits.com/pub/software/java_cgi-0.5.tgz"
>ftp://ftp.orbits.com/pub/software/java_cgi-0.5.tgz</ulink
>. (El número de
versión puede haber cambiado)
</para>
</listitem>
<listitem>

<para>
Descomprima la distribución con el comando:

<screen>
gzip -dc java_cgi-0.5.tgz | tar -xvf -
</screen>

(Si el número de versión ha cambiado, adapte las instrucciones para esa
distribución de aquí en adelante)
</para>
</listitem>
<listitem>

<para>
Edite el <literal remap="tt">Makefile</literal> que encontrará en el directorio
recientemente creado <literal remap="tt">java_cgi-0.5</literal> para adaptarlo a su sistema.
</para>
</listitem>
<listitem>

<para>
Como usuario root, ejecute <literal remap="tt">make install</literal>. Esto compilará los
programas Java, aplicando la información específica de su sistema, e
instalando diversos ficheros. Si quiere la versión HTML de esta
documentación y un documento HTML de prueba, ejecute <literal remap="tt">make install</literal> en
su lugar.
</para>
</listitem>
<listitem>

<para>
Debería estar preparado para seguir.
</para>
</listitem>

</itemizedlist>

</para>

</sect1>

<sect1>
<title>Ejecutando un programa CGI en Java</title>

<sect2>
<title>Obstaculos en la ejecución de los programas Java bajo el modelo CGI</title>

<para>
Hay dos problemas principales a la hora de ejecutar programas Java desde
un servidor web:
</para>

<sect3>
<title>No se pueden ejecutar programas Java como ejecutables corrientes</title>

<para>
Necesita ejecutar el interprete en tiempo de ejecución de Java y
proporcionar la clase inicial, (programa a ejecutar) en la línea de
comandos. Con un formulario HTML, no hay forma de enviar una instrucción
de línea de comandos al servidor web.
</para>

</sect3>

<sect3>
<title>Java no tiene acceso general al entorno</title>

<para>
Cada variable de entorno que se necesitará para el programa en Java debe
pasarse explicitamente. No hay un método similar a la función
<literal remap="tt">getenv()</literal> de <emphasis remap="bf">C</emphasis>.
</para>

</sect3>

</sect2>

<sect2>
<title>Solucionando problemas al ejecutar programas CGI en Java</title>

<para>
para enfrentarme a estos obstáculos, escribí un programa shell CGI que
proporciona la información necesaria al intérprete de Java.
</para>

<sect3>
<title>El script java.cgi</title>

<para>
Este script maneja la interacción entre el demonio HTTP y el CGI en Java
que queremos utilizar. Extrae el nombre del programa que quiere ejecutar
desde la información proporcionada por el servidor. Recoje toda la
información del entorno y lo deposita en un fichero temporal. Entonces,
ejecuta el interprete en tiempo de ejecución de Java con el nombre del
fichero donde se encuentra la información del entorno, y el nombre del
programa añadido a la instrucción de línea de comandos.
</para>

<para>
El script <literal remap="tt">java.cgi</literal> fue configurado e instalado en <xref linkend="make-programs"/>.
</para>

</sect3>

<sect3>
<title>Llamando a java.cgi desde un formulario HTML</title>

<para>
Mis formularios que usan CGIs en Java especifican una acción de formulario
como sigue:
</para>

<para>
&#60;form action="/cgi-bin/java.cgi/CGI_Test" method="POST"&#62;
</para>

<para>
Donde <literal remap="tt">/cgi-bin/</literal> es el directorio local para los binarios de los
CGIs, <literal remap="tt">java.cgi</literal> es el <emphasis remap="it">front-end</emphasis> de Java que nos permite ejecutar
programas en Java sobre la web, y <literal remap="tt">CGI_Test</literal> es un ejemplo del nombre
del programa Java a ejecutar.
</para>

</sect3>

</sect2>

</sect1>

<sect1>
<title>Usando las clases Java para CGIs</title>

<para>
Actualmente hay soporte para tres clases principales --
<xref linkend="cgi-class"/>,
<xref linkend="email-class"/> and
<xref linkend="html-class"/>.
Estoy considerando clases para tratar con entrada y salida con formato
MIME -- MIMEin y MIMEout, respectivamente.
</para>

<para>
También hay unas pocas clases para soporte y prueba.
<xref linkend="cgi-test-class"/>,
<xref linkend="email-test-class"/> y
<xref linkend="email-test-class"/> se supone que serán usadas
para comprobar tu instalación. También pueden ser usadas como un punto de
partida para tus propios programas en Java, los cuales usan esta librería
de clases. La clase <xref linkend="text-class"/> es la superclase tanto
para la clase <literal remap="tt">email</literal> como para la clase <literal remap="tt">HTML</literal>.
</para>

<sect2 id="cgi-class">
<title>CGI</title>

<sect3>
<title>Síntaxis de clase</title>

<para>
<literal remap="tt">public class CGI</literal>
</para>

</sect3>

<sect3>
<title>Descripción de la clase</title>

<para>
La clase CGI tiene la «Información CGI» -- Variables de entorno
establecidas por el servidor web y el par nombre/valor enviado desde un
formulario cuando la acción <emphasis remap="bf">submit</emphasis> es seleccionada. Toda la
información es guardada en un objeto de la clase <literal remap="tt">Properties</literal>.
</para>

<para>
Esta clase está en el paquete «Orbits.net»
</para>

</sect3>

<sect3>
<title>Resumen de funciones miembro</title>

<para>

<programlisting>
	CGI()         //  Constructor.
	getNames()    //  Recoge la lista de nombres.
	getValue()    // Recoge el valor del formulario al especificar el
nombre.
</programlisting>

</para>

</sect3>

<sect3>
<title>Vea también</title>

<para>
<literal remap="tt">CGI_Test</literal>.
</para>

</sect3>

<sect3>
<title>CGI()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Construye un objeto el cual contiene los datos CGI
disponibles.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public CGI()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Cuando un objeto CGI es construido, toda la información
CGI disponible es absorvida en almacenamiento local en el nuevo objeto.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>getNames()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Lista los nombres los cuales son definidos para tener
valores asociados.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public Enumeration getKeys ()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Proporciona la lista completa de nombres que tienen
valores asociados definidos.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Devuelve</term>
<listitem>
<para>
Una <literal remap="tt">enumeración</literal> de todos los nombres definidos.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>getValue()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Devuelve el <emphasis remap="bf">valor</emphasis> asociado al nombre especificado.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public String getValue ( String name )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Este método proporciona la correspondencia entre
<literal remap="tt">nombres</literal> y <literal remap="tt">valores</literal> enviados desde un formulario HTML.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametros</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>name</term>
<listitem>
<para>
La clave sobre la cuál los valores correspondientes son
seleccionados.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Devuelve</term>
<listitem>
<para>
Una <literal remap="tt">cadena</literal> conteniendo un valor.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

</sect2>

<sect2 id="cgi-test-class">
<title>CGI_Test</title>

<para>
Esta clase proporciona tanto un ejemplo de como usar la clase <literal remap="tt">CGI</literal>
como de programa de pureba que puede ser usado para confirmar que el
paquete de <emphasis>CGI</emphasis> con Java funciona correctamente.
</para>

<sect3>
<title>Resumen de funciones miembro.</title>

<para>

<programlisting>
	main()      //  Program main().
</programlisting>

</para>

</sect3>

<sect3>
<title>Vea también</title>

<para>
<literal remap="tt">CGI</literal>.
</para>

</sect3>

<sect3>
<title>main()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Proporcionar un método main().
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public static void main( String argv[] )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Este es el punto de entrada para los programas CGI que
no hace nada sino devolver una lista de los pares nombre/valor disponibles
y sus valores actuales.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametros</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>argv&lsqb;&rsqb;</term>
<listitem>
<para>
argumentos pasados al programa por el script
<literal remap="tt">java.cgi</literal> Actualmente, sin uso.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

</sect2>

<sect2 id="email-class">
<title>email</title>

<sect3>
<title>Sintáxis de clase</title>

<para>
<literal remap="tt">public class email extends Text</literal>
</para>

</sect3>

<sect3>
<title>Descripción de la Clase</title>

<para>
Los mensajes son construidos con los métodos de la clase <literal remap="tt">Text add*()</literal>
y los métodos específicos de e-mail añadidos por esta clase. Cuando está
completo, el mensaje es enviado a su destino.
</para>

<para>
Esta clase está en el paquete «Orbits.net».
</para>

</sect3>

<sect3>
<title>Resumen de funciones miembro.</title>

<para>

<programlisting>
	email()      //  Constructor.
	send()       //  Envia el e-mail.
	sendTo()     //  Añade un destino para el mensaje.
	subject()    //  Establece un Asunto: para el mensaje.
</programlisting>

</para>

</sect3>

<sect3>
<title>Vea también</title>

<para>
<literal remap="tt">email_Test, Text</literal>.
</para>

</sect3>

<sect3>
<title>email()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Construye un objeto que contendrá el email.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public email()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Establece un mensaje vacio para que sea completado
por el método <literal remap="tt">email</literal>.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">Text</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>send()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Envía el e-mail.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void send ()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Formatea y envia el mensaje. Si no se ha especificado
una dirección de destino, no se lleva a cabo ninguna acción.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>sendTo()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Añade un destino para el mensaje.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public String sendTo ( String address )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Añade una <literal remap="tt">dirección</literal> a la lista de destinos para
este método.  No se ha establecido el número de destinos límite que un
email debería tener. Estoy seguro de que si construye una lista lo
suficientemente larga, puede exceder el tamaño del parámetro lista que el
<emphasis>Agente de Transporte de Correo</emphasis> puede aceptar o agotar su memoria.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametros/</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>address</term>
<listitem>
<para>
Un destino al que enviar el mensaje.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>subject()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Establece el asunto para este mensaje.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void subject ( String subject )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Éste método establece el texto para la línea de asunto
del email. Si es llamada más de una vez, el último asunto es el que acaba
siendo usado.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametros</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>subject</term>
<listitem>
<para>
El texto de la línea de Asunto: del mensaje.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

</sect2>

<sect2 id="email-test-class">
<title>email_Test</title>

<para>
Esta clase proporciona tanto un ejemplo de como usar la clase <literal remap="tt">EMail</literal>
como un programa que puede ser usado para confirmar que el paquete
<emphasis>CGI</emphasis> en Java funciona correctamente.
</para>

<sect3>
<title>Resumen de funciones miembro</title>

<para>

<programlisting>
	main()      //  Program main().
</programlisting>

</para>

</sect3>

<sect3>
<title>Vea también</title>

<para>
<literal remap="tt">email</literal>.
</para>

</sect3>

<sect3>
<title>main()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Proporcionar un método <literal remap="tt">main()</literal>.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public static void main( String argv[] )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Este es el punto de entrada para los programas CGI que
devuelven una lista de los pares nombre/valor disponibles y sus valores
actuales. También enviará esta lista a las direcciones especificadas en la
variable <literal remap="tt">email</literal>.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametros</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>argv&lsqb;&rsqb;</term>
<listitem>
<para>
argumentos pasados al programa por el script
<literal remap="tt">java.cgi</literal>. Actualmente, sin uso.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

</sect2>

<sect2 id="html-class">
<title>HTML</title>

<sect3>
<title>Síntaxis de clase</title>

<para>
<literal remap="tt">public class HTML extends Text</literal>
</para>

</sect3>

<sect3>
<title>Descripción de clase</title>

<para>
Los mensajes son construidos mediante los métodos <literal remap="tt">add*()</literal> de la clase
<literal remap="tt">Text</literal> y los específicos de HTML añadidos por esta clase. Cuando están
completados, el mensaje es enviado a su destino.
</para>

<para>
En la actualidad, no hay ningún error en confirmar que los métodos de
construcción de listas están siendo usados en el orden correcto, de forma
que el programador debe tener cuidado en no violar la Sintáxis HTML.
</para>

<para>
Esta clase está en el paquete «Orbits.net».
</para>

</sect3>

<sect3>
<title>Resumen de funciones miembro.</title>

<para>

<programlisting>
	HTML()                  //  Constructor.
	author()                //  Establece el nombre del autor del
documento.
	definitionList()        //  Comienza una lista de definiciones.
	definitionListterm()    //  Añade un &#60;tt/item/ a la lista de
definiciones.
	endList()               //  termina una lista.
	listItem()              //  Añadir una entrada a la lista.
	send()                  //  Envía el mensaje HTML.
	title()                 //  Establece el texto para el título del
documento.
</programlisting>

</para>

</sect3>

<sect3>
<title>Vea también</title>

<para>
<literal remap="tt">HTML_Test, Text</literal>.
</para>

</sect3>

<sect3>
<title>HTML()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Construye un objeto que contendrá un mensaje HTML.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public HTML()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Configura un mensaje vacio para ser completado con los
métodos HTML.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">Text</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>author()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Establecer el nombre del autor del documento.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void author ( String author )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Establece el nombre del autor del documento a
<literal remap="tt">author</literal>.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametro/</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>author</term>
<listitem>
<para>
El texto a usar como el autor de este mensaje.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">title()</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>definitionList()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Inicializa una lista de definiciones.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void definitionList ()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Inicializa una lista de definiciones. Una <emphasis>lista de
definiciones</emphasis> es una lista especializada de forma que cada entrada en la
lista es un <emphasis>término</emphasis> seguido por el <emphasis>texto</emphasis> de definición para este
término. La inicialización de esta lista debería ir seguida por la
creación de (como mínimo) un par elemento/texto y una llamada al método
<literal remap="tt">endList()</literal>. <emphasis>Es importante darse cuenta de que, actualmente, las
listas no pueden anidarse</emphasis>.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">definitionListterm()</literal>, <literal remap="tt">endList()</literal>,
<literal remap="tt">listItem()</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>definitionListterm()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Añadir un elemento a una lista de definiciones.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void definitionListterm ()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Añade un elemento a la lista de definiciones. El texto
para la parte del elemento de la entrada actual de la lista debería ser
añadida al mensaje después de que este método es llamado y antes de que el
correspondiente método <literal remap="tt">listItem</literal> sea invocado.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">definitionList()</literal>, <literal remap="tt">listItem()</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>endList()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
termina una lista.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void endList ()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
termina una lista. Este método cierra una lista.
<emphasis>Debemos darnos cuenta de que, en la actualidad las listas no se pueden
anidar</emphasis>.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">definitionList()</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>listItem()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Añade una entrada a la lista.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void listItem ()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term></term>
<listitem>
<para>
<literal remap="tt">public void listItem ( String item )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term></term>
<listitem>
<para>
<literal remap="tt">public boolean listItem ( String term, String item )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Añade una entrada a la lista. Si usamos la primera
fórmula, el texto para el item actual de la lista debería ser añadido al
mensaje después de que este método sea llamado y antes de que ningún otro
método de lista sea llamado. En la segunda y tercera fórmula, el
<literal remap="tt">elemento</literal> de texto es especificado como un parámetro para el método en
lugar de (o además de) ser añadido al mensaje. La tercera fórmula es
específica para listas de definiciones, y proporciona tanto el elemento
como la definición de la entrada de lista.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametros</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>item</term>
<listitem>
<para>
El texto de esta entrada en la lista.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>term</term>
<listitem>
<para>
El texto de la parte del término para esta entrada de la lista
de definiciones.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">definitionList()</literal>,
<literal remap="tt">definitionListterm()</literal>, <literal remap="tt">endList()</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>send()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Enviar el mensaje HTML.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void send ()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Enviar el mensaje HTML.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>title()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Establecer el texto para el título del documento.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void title ( String title )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Establece el texto para el título del documento.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametro</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>title</term>
<listitem>
<para>
El texto del título de este mensaje.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">author()</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

</sect2>

<sect2 id="html-test-class">
<title>HTML_Test</title>

<para>
Esta clase proporciona tanto un ejemplo de como usar la clase <literal remap="tt">HTML</literal>
como un programa de pruebas que puede usarse para confirmar que el paquete
de <emphasis>CGI</emphasis> en Java funciona correctamente.
</para>

<sect3>
<title>Resumen de funciones miembro</title>

<para>

<programlisting>
	main()      //  Program main().
</programlisting>

</para>

</sect3>

<sect3>
<title>Vea también</title>

<para>
<literal remap="tt">HTML</literal>.
</para>

</sect3>

<sect3>
<title>main()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Proporcionar un método <literal remap="tt">main()</literal>.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public static void main( String argv[] )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Es el punto de entrada para un programa CGI que devuelve
una lista de los pares nombre/valor en un documento HTML, con cada para
nombre/valor mostrado en un elemento de la lista de definiciones.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametro</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>argv&lsqb;&rsqb;</term>
<listitem>
<para>
argumentos pasados al programa por el script
<literal remap="tt">java.cgi</literal>. Actualmente sin usarse.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

</sect2>

<sect2 id="text-class">
<title>Text</title>

<sect3>
<title>Sintaxis de clase</title>

<para>
<literal remap="tt">public abstract class Text</literal>
</para>

</sect3>

<sect3>
<title>Descripción de clase</title>

<para>
Esta clase es la superclase de las clases <literal remap="tt">email</literal> y <literal remap="tt">HTML</literal>. Los
mensajes son construidos con los métodos en esta clase y completados y
formateados con los métodos de las subclases.
</para>

<para>
Esta clase está en el paquete «Orbits.text».
</para>

</sect3>

<sect3>
<title>Resumen de funciones miembro</title>

<para>

<programlisting>
	Text()            //  Constructor.
	add()             //  Añade texto a este objeto.
	addLineBreak()    //  Añade un fin de línea.
	addparagraph()    //  Añade un fin de párrafo.
</programlisting>

</para>

</sect3>

<sect3>
<title>Vea también</title>

<para>
<literal remap="tt">email</literal>, <literal remap="tt">HTML</literal>.
</para>

</sect3>

<sect3>
<title>add()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Añade texto a este elemento.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void add ( char addition )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term></term>
<listitem>
<para>
<literal remap="tt">public void add ( String addition )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term></term>
<listitem>
<para>
<literal remap="tt">public void add ( StringBuffer addition )</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Añade <literal remap="tt">adition</literal> a los contenidos de este elemento de
texto.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>parametro</term>
<listitem>
<para>
<variablelist>

<varlistentry>
<term>addition</term>
<listitem>
<para>
Texto a añadir al elemento de texto.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">addLineBreak()</literal>, <literal remap="tt">addparagraph()</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>addLineBreak()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Fuerza un fin de lína en este punto en el texto.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void addLineBreak ()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Añade un fin de línea al texto en el punto actual.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">add()</literal>, <literal remap="tt">addparagraph()</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

<sect3>
<title>addparagraph()</title>

<para>
<variablelist>

<varlistentry>
<term>Propósito</term>
<listitem>
<para>
Comenzar un nuevo párrafo.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Sintaxis</term>
<listitem>
<para>
<literal remap="tt">public void add ()</literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Descripción</term>
<listitem>
<para>
Comienza un nuevo párrafo en este punto en el flujo del
texto.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Vea también</term>
<listitem>
<para>
<literal remap="tt">add()</literal>, <literal remap="tt">addLineBreak()</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</sect3>

</sect2>

</sect1>

<sect1>
<title>Planes para el Futuro</title>

<para>

<itemizedlist>
<listitem>

<para>
Añadir a la clase email:
<variablelist>

<varlistentry>
<term>email( int capacity )</term>
<listitem>
<para>
Usado cuando sabemos cuanto espacio necesitará
el mensaje tener reservado.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>sendTo( String &lsqb;&rsqb; address )</term>
<listitem>
<para>
Añade una lista de destinos primarios al
mensaje email.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>sendCc( String address )</term>
<listitem>
<para>
Añade un destino para una copia del mensaje
e-mail.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>sendCc( String &lsqb;&rsqb; address )</term>
<listitem>
<para>
Añade una lista de destinos para una
copia del mensaje e-mail.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>sendBcc( String address )</term>
<listitem>
<para>
Añade un destino ciego para una copia del
mensaje e-mail.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>sendBcc( String &lsqb;&rsqb; address )</term>
<listitem>
<para>
Añade una lista de destinos ciegos para
una copia del mensaje e-mail.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
<listitem>

<para>
Añadir a la clase HTML:
<variablelist>

<varlistentry>
<term>HTML( int capacity )</term>
<listitem>
<para>
Usado cuando sabemos cuanto espacio necesitará
el mensaje tener reservado.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>public void unorderedList()</term>
<listitem>
<para>
Inicializa una lista desordenada.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>public void orderedList()</term>
<listitem>
<para>
Inicializa una lista ordenada.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>public void directoryList()</term>
<listitem>
<para>
Comienza una lista de directorios.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>public void menuList()</term>
<listitem>
<para>
Comienza una lista de menús.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>void anchor( String anchorName )</term>
<listitem>
<para>
Especifica un ancho.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>void link( String url, String text )</term>
<listitem>
<para>
Especifica un enlace.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>void applet( String url, String altText )</term>
<listitem>
<para>
Especifica un vínculo de
tipo <literal remap="tt">applet</literal>.
</para>
</listitem>
</varlistentry>
</variablelist>
</para>
</listitem>
<listitem>

<para>
Permitir que las listas HTML puedan ser anidadas.
</para>
</listitem>
<listitem>

<para>
Añadir código de comprobación de errores para forzar la ordenación
correcta de los códigos de formato de las listas en HTML.
</para>
</listitem>
<listitem>

<para>
La localización del fichero de datos del entorno debería ser
configurable desde el <literal remap="tt">Makefile</literal>.
</para>
</listitem>
<listitem>

<para>
Librarse de los molestos pares valor/nombre vacios que aparecen en
la lista cuando tratamos con el método GET de transferencia de datos.
</para>
</listitem>
<listitem>

<para>
Considerar la implementación de una interfaz CGI
java.util.Enumeration para proporcionar sucesivamente nombres de
variables.
</para>
</listitem>
<listitem>

<para>
Añadir una clase <literal remap="tt">Test</literal>, que usaría cada método en este paquete.
</para>
</listitem>
<listitem>

<para>
Documentar como <literal remap="tt">CGI_Test</literal>, <literal remap="tt">email_Test</literal> y <literal remap="tt">HTML_Test</literal> se
basan las unas en las otras para proporcionar pruebas incrementales para
propósitos de depurado de errores.
</para>
</listitem>
<listitem>

<para>
Documentar como Test usa cada elemento disponible en este paquete.
</para>
</listitem>

</itemizedlist>

</para>

</sect1>

<sect1>
<title>Cambios</title>

<sect2>
<title>Cambios de 0.4 a 0.5</title>

<para>

<itemizedlist>
<listitem>

<para>
Cambia la documentación y comentarios par reflejar la naturaleza
final de la distribución.
</para>
</listitem>

</itemizedlist>

</para>

</sect2>

<sect2>
<title>Cambios de 0.3 a 0.4</title>

<para>

<itemizedlist>
<listitem>

<para>
Rellenó la clase HTML para proporcionar una funcionalidad mínimal.
</para>
</listitem>
<listitem>

<para>
Escribió la clase HTML_Test y el fichero javahtmltest.html-dist.
</para>
</listitem>
<listitem>

<para>
Añadió los métodos HTMK para manejar definiciones de listas.
</para>
</listitem>

</itemizedlist>

</para>

</sect2>

<sect2>
<title>Cambios de 0.2 a 0.3</title>

<para>

<itemizedlist>
<listitem>

<para>
Añadió las clases Text y email.  HTML fue también añadida, pero era
una simple idea a estas alturas.
</para>
</listitem>
<listitem>

<para>
Recogió las diversas clases en paquetes. Las clases principales
están en <literal remap="tt">Orbits.net.*</literal>, mientras que las clase de soporte <literal remap="tt">Text</literal>
está en <literal remap="tt">Orbits.text.Text</literal>.
</para>
</listitem>
<listitem>

<para>
Cambió <literal remap="tt">CGItest</literal> a <literal remap="tt">CGI_Test</literal>.
</para>
</listitem>
<listitem>

<para>
Añadió la clase <literal remap="tt">email_Test</literal>.
</para>
</listitem>

</itemizedlist>

</para>

</sect2>

<sect2>
<title>Cambios de 0.1 a 0.2</title>

<para>

<itemizedlist>
<listitem>

<para>
Las variables de entorno se colocan en un fichero temporal en lugar
de ser embutido en la línea de comandos del intérprete Java. Las clases
<literal remap="tt">CGI</literal> y <literal remap="tt">java.cgi</literal> tuvieron que ser modificadas.
</para>
</listitem>
<listitem>

<para>
El documento <literal remap="tt">javacgitest.html</literal> entró a formar parte de la
distribución.
</para>
</listitem>
<listitem>

<para>
Los ficheros de texto que son modificados por la instalación
(<literal remap="tt">make</literal>) son provistos de nombres que terminan en <emphasis>-dist</emphasis>.
</para>
</listitem>

</itemizedlist>

</para>

</sect2>

</sect1>

<sect1>
<title>Traducción</title>

<para>
Este documento ha sido traducido por el grupo <emphasis>Linux-Kfe</emphasis>. Puede
visitar nuestra página en la siguiente dirección: <ulink
url="http://members.es.tripod.de/linuxkfe"
>http://members.es.tripod.de/linuxkfe</ulink
> (también puede utilizar el
enlace: <ulink
url="http://go.to/linuxkfe"
>http://go.to/linuxkfe</ulink
>).
</para>

<para>
Actualmente gestionamos este grupo las siguientes personas:
</para>

<para>
<variablelist>

<varlistentry>
<term>Director del Proyecto:</term>
<listitem>
<para>
Jesús Martínez Mateo <literal remap="tt"><ulink
url="mailto:jmartinez@sportec.es"
>jmartinez@sportec.es</ulink
></literal>,
<literal remap="tt"><ulink
url="mailto:kfetro@cajamurcia.es"
>kfetro@cajamurcia.es</ulink
></literal>
</para>
</listitem>
</varlistentry>
</variablelist>
<variablelist>

<varlistentry>
<term>Coordinadores:</term>
<listitem>
<para>
Juan José Roldán Guerrero <literal remap="tt"><ulink
url="mailto:jroldan@sportec.es"
>jroldan@sportec.es</ulink
></literal>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term></term>
<listitem>
<para>
Pedro Ruiz Maldonado <literal remap="tt"><ulink
url="mailto:bigplac@newmail.net"
>bigplac@newmail.net</ulink
></literal>
</para>
</listitem>
</varlistentry>
</variablelist>
</para>

<para>
Si desea colaborar con nosotros en futuras traducciones y distintos
proyectos relacionados con el mundo de Linux (o si simplemente desea
realizar alguna aportación, crítica o sugerencia), envíe un e-mail a la
siguiente dirección: <literal remap="tt"><ulink
url="mailto:linuxkfe@lycosmail.com"
>linuxkfe@lycosmail.com</ulink
></literal>. Procuraremos atenderle lo antes
posible, de todas formas, si lo cree conveniente puede dirigirse de forma
directa a cualquiera de los coordinadores nombrados anteriormente.
</para>

<para>
Traducción: Juan José Roldán Guerrero.

Revisión: 0.1, Jesús Martínez Mateo.

Última modificación: 1 de Diciembre de 1999.
</para>

</sect1>

</article>
