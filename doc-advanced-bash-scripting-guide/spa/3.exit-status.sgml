  <chapter id="exit-status">
    <title>Salida y estado de salida</title>

    <epigraph>
      <attribution>Chet Ramey</attribution>
      <para>...hay esquinas oscuras en la shell Bourne, y la gente usa
      todas ellas.</para>
    </epigraph>
    
      <para><anchor id="exitcommandref">El
	<command>
	  <indexterm>
	    <primary>exit</primary>
	  </indexterm>
	  <indexterm>
	    <primary>comando</primary>
	    <secondary>exit</secondary>
	  </indexterm>
	  comando exit
	</command> 
	puede usarse para terminar un script, igual que en un programa C.
	También puede devolver un valor, el cual está disponible para
	el proceso padre del script.</para>


      <para><anchor id="exitstatusref">Cada comando devuelva un
	<firstterm>
	  <indexterm>
	    <primary>estado salida</primary>
	  </indexterm>
	  estado de salida
	</firstterm> 
	(algunas veces referido como un 
	<firstterm>
	  <indexterm>
	    <primary>estado de retorno</primary>
	  </indexterm>
	  estado de retorno
	</firstterm>). Un comando exitoso devuelve un
	<returnvalue>0</returnvalue>, mientras que uno no exitoso
	devuelve un valor <returnvalue>distinto de cero</returnvalue>
	que usualmente puede ser interpretado como un código de error.
	Los comandos UNIX, los programas y las utilidades se espera que
	devuelvan un código de salida <returnvalue>0</returnvalue>
	después de que terminen con éxito, aunque hay algunas excepciones.</para>

      <para>Como de todas formas las funciones dentro de un script y
	el script mismo devuelven un estado de salida. El último
	comando ejecutado en la función o script determina el estado
	de salida. Dentro de un script un comando
	<userinput>exit <replaceable>nnn</replaceable></userinput>
	puede usarse para entregar un estado de salida
	<returnvalue><replaceable>nnn</replaceable></returnvalue> a la
	shell (<returnvalue><replaceable>nnn</replaceable></returnvalue>
	debe ser un número en base diez en el rango <returnvalue>0</returnvalue> -
	<returnvalue>255</returnvalue>).</para>

      <note><para>Cuando un script termina con un
	<command>exit</command> que no tiene un parámetro, el estado
	de salida del script es el estado de salida del comando
	ejecutado en el script (<emphasis>sin</emphasis>
	contar el comando <command>exit</command>).</para></note>

      <para>
	<varname>
	  <indexterm>
	    <primary>$?</primary>
	  </indexterm> <indexterm>
	    <primary>variable</primary> <secondary>$?</secondary>
	  </indexterm> $?</varname> lee el estado de salida del
	  último comando ejecutado. Después del retorno de una función,
	  <varname>$?</varname> da el estado de salida del último
	  comando ejecutado en la función. Esto es la forma en que
	  tiene Bash para dar a las funciones un <quote>valor de
	  retorno</quote>. Después de que un script termina, un
	  <varname>$?</varname> desde la línea de comandos devuelve el
	  estado de salida del script, esto es, el último comando
	  ejecutado en el script, que es  por convención, 
	    <userinput>0</userinput> si ha tenido éxito o un entero en
	  el rango 1 - 255 si hubo un error.</para>

      <example id="ex5">
	<title>salida / estado de salida</title>
	<programlisting>&ex5;</programlisting>
      </example>
      
      <para><link linkend="xstatvarref">$?</link> es especialmente útil
        para probar el resultado de un comando en un script (vea el <xref
        linkend="filecomp"> y el <xref linkend="lookup">).</para>

      <note>
      <para>El operador <link linkend="notref">!</link>, el
	cualificador lógico <quote>not</quote>, invierte la salida de
	un test o comando y esto afecta su <link
	linkend="exitstatusref">estado de salida
	</link>.

	<example id="negcond">
	<title>Negar una condición usando <token>!</token></title>
	<programlisting>true  # the "true" builtin.
echo "exit status of \"true\" = $?"     # 0

! true
echo "exit status of \"! true\" = $?"   # 1
# Note that the "!" needs a space.
#    !true   leads to a "command not found" error

# Thanks, S.C.</programlisting>
        </example>

      </para>
      </note>


      <caution><para>Ciertos códigos de estado de salida tienen <link
	linkend="exitcodesref">significados reservados</link> y no
	deberían ser especificados por el usuario en un script.	</para></caution>


  </chapter> <!-- Exit and Exit status -->
