

==========================================================================================
         CAP 11 --- Traductor: Sefer. Version: Beta. Fecha: 16:43 18/03/2004

CONVENCIONES:

- los números entre parentesis indican notas de traduccion al final de 
documento
- los números entre corchetes indican notas de texto original.
- los signos "++" indican que se ha agregardo texto que excede el contenido 
original, bien en su literalidad, o es una adenda de contenido

==========================================================================================


Capitulo 11. Manejando cuentas de usuario

"Similitudes entre administradores de sistema y narcotraficantes: ambos miden 
cosas en Kilos y tiene usuarios" (Viejo y cansador chiste de computación)

Este capitulo explica cómo crear nuevos usuarios, cómo modificar las 
propiedades de esas cuentas, y cómo remover/borrar. Diferentes sistemas 
GNU/Linux tiene diferentes herramientas para hacer esto.


11.1.1 ¿Qué es una cuenta?

++Concretamente es un nombre de usuario -mas una contraseña, salvo 
excepciones- y todos los archivos (de configuración y aquellos personales) que 
impliquen el ingreso y permanencia en el sistema  de un usuario .++
Cuando una computadora la usa mucha gente es usualmente necesario hacer 
diferencias en estos usuarios. Por ejemplo, para que sus archivos privados 
permanezcan privados.. Esto es importante aun si el sistema es usado por una 
sola persona a la vez, como es con la mayoría de las computadoras [38]. Así, a 
cada usuario se le da un nombre de usuario único, y ese nombre es usado para 
ingresar al sistema.
Un usuario es mas que sólo un nombre, como sea?. Una cuenta es todos los 
archivos, recursos, e información que pertenece a un usuario. El término 
insinúa como en bancos y en sistemas comerciales, cada cuenta usualmente tiene 
algo de dinero asignado, y ese dinero se gasta a diferentes velocidades 
dependiendo de cuantos usuario exijan el sistema. Por ejemplo, el espacio de 
disco puede tener un precio por mega por día, y ++tiempo de++ procesamiento 
puede tener un precio por segundo.




11.2 Crear una cuenta de usuario

El núcleo de Linux en sí trata a los usuario como meros números. Cada usuario 
es identificado por un único numero entero, el  uid ++(identificación de 
usuario)++ esto debido a que un numero es mas fácil y rápido de procesarlo que 
un nombre para un sistema. Una base de datos o tabla asociada a dichos UIds y 
GIds, por fuera del núcleo asigna un nombre textual, un único nombre de 
usuario para cada id. La base de datos que también contiene información 
adicional. 

Para crear un usuario, necesita agregar información sobre el usuario a la base 
de datos (ver arriba) y crear un directorio "inicio" ++(directorio principal 
del usuario)++ para él. También puede ser necesario educar al usuario, y 
configurar un ambiente conveniente para él.

La mayoría de las distribuciones de Linux cuentan con programas para crear 
cuentas. Existen muchos de estos programas disponibles (1). Contamos con dos 
comandos alternativos que son  adduser y useradd, así también como con 
herramientas graficas(2)
Cualquiera sea el programa, resulta muy poco el trabajo manual por hacer. Aun 
cuando los detalles son muchos e intrincados, estos programas hace parecer 
todo trivial. Como sea, en la sección 11.2.4 se describe cómo hacerlo a mano.






11.2.1. /etc/passwd y otros archivos informativos/de informacion ++/etc/shadow

La base de datos básica de usuarios en un sistema Unix es un archivo de texto  
/etc/passwd (llamado el archivo de contraseñas), que lista todos los nombres 
de usuarios validos y su información asociada. El archivo tiene una línea por 
usuario, y es dividido en siete colon-delimited campos.

nombre de usuario
contraseña, de modo encriptado
Identificación (Id) de numero de usuario
Identificación (Id) de numero de grupo
Nombre completo u otra información descriptiva de la cuenta
Directorio Inicio (directorio principal del usuario)
Interprete de comandos (programa a ejecutar al ingresar al sistema)

El formato esta explicado con mas detalles en la pagina de manual del 
++comando++ passwd.
Cualquier usuario del sistema puede leer el archivo de contraseñas, para por 
ejemplo conocer el nombre de otro usuario del mismo. Esto significa que la 
contraseña (el segundo campo) esta también disponible para todos. El archivo 
de contraseñas encripta las contraseñas, así que en teoría no hay problema, 
pero dicho encriptado puede ser quebrado, sobre todo si dicha contraseña es 
"débil"(3).
Por lo tanto no es buena idea tener las contraseñas en el archivo de 
contraseñas.

Muchos sistemas GNU/Linux tienen contraseñas "sombra".Esto es una  alternativa 
en la manera de almacenar las contraseñas: las claves encriptadas se guardan 
en un archivo separado /etc/shadow que solo puede ser leído por el 
administrador del sistema. Asi el archivo /etc/passwd solo contiene un 
marcador especial en ese segundo campo. Cualquier programa que necesite 
verificar un usuario o uid, pueden también acceder al archivo shadow/sombra. 
Significa también que programas normales que solo usan otros campos del 
archivo de contraseñas, no pueden acceder a las contraseñas. ++Paralelamente 
también existe /etc/gshadow para cierta información según grupos++



11.2.2. Elegir números de identificación de usuario y grupo

En la mayoría de los sistemas, no importa cuales son los números de usuario y 
grupo, pero si usa un sistema de archivos de red (4), necesitará que sean los 
mismo números de identificacion de usuario (uid) y grupo (gid) en todos los 
sistemas. Esto es porque el sistema de archivos de red también identifica al 
usuarios (nombre de usuario) con su ++respectivo++ numero de identificación de 
usuario (uid). 
Si esta usando un sistema de archivos de red NFS (4), tiene que inventar un 
mecanismo para sincronizar la información de cada cuenta. Una alternativa es 
el sistema NIS(4a) ++(ver Guía de Administración de Redes con Linux, Capítulo 
13)++
Como sea, trate de evitar re-usar numeros de identificación de usuario (UIds) 
y nombres de usuario exactamente iguales entre si entre sistemas, porque el 
nuevo dueño de ese numero de identificación de usuario o nombre de usuario 
puede tener ++(o tendrá seguro?)++ acceso a los archivos o correos-e del 
anterior dueño.






11.2.3. Ambiente inicial: /etc/skel(5)

Cuando el directorio Inicio para un nuevo usuario es creado es inicializado 
por ++medio++ del directorio /etc/skel. El administrado del sistema puede 
crear archivos dentro de /etc/skel que proveerán un amable entorno 
predeterminado para los usuarios. Por ejemplo, el puede crear un 
/etc/skel/.profile que configura  las variable de entorno de algún editor mas 
amigable para los usuarios nuevos.
Como sea, usualmente lo mejor es conservar dicho directorio lo mas pequeño que 
sea posible, ya que en el futuro será imposible actualizar los archivos de los 
usuarios. Por ejemplo, si cambia el nombre de un editor a uno mas amigable, 
todos los usuarios tendrán que editar su archivo  .profile. El administrador 
del sistema podría tratar de hacer esto automáticamente con un script(6), pero 
casi con seguridad resultará que se corrompa el archivo de alguno.
Siempre que sea posible, es mejor poner lo que sea configuración global dentro 
de archivos globales, como es /etc/profile. De esta manera es posible 
actualizarlo sin corromper la configuración de ningún usuario.






11.2.4. Crear un usuario a mano

Para crear una nueva cuenta a mano, sigue estos pasos:

- Editar /etc/passwd con vipw y agregar una nueva linea por cada nueva cuenta. 
Teniendo cuidado con la sintaxis.
No lo edite directamente con un editor! Use vipw que bloquea el archivo, así 
otros comandos no tratarán de actualizarlo al mismo tiempo. Debería hacer que 
el campo de la contraseña sea `*', de esta forma es imposible ingresar al 
sistema.
- Similarmente, edite /etc/group con vigr, si necesita crear también un grupo.
- Cree el directorio Inicio del usuario con el comando mkdir.
- Copie los archivos de /etc/skel al nuevo directorio creado (7)
- corrija la pertenencia del dueño y permisos con los comandos chown y chmod 
++(Ver paginas de manual de los respectivos comandos)++. La opción -R es muy 
útil. Los permisos correctos varían un poco de un sitio a otro, pero 
generalmente los siguientes comandos harán lo correcto:

cd /home/nuevo-usuario
chown -R nombre-de-usurio.grupo
chmod -R go=u,go-w
chmod go=

- Asigne una contraseña con el comando passwd

Después de asignar la contraseña del usuario en el ultimo paso, la cuenta 
funcionara. No debería configurar esto hasta que todo lo demás este hecho, de 
otra manera el usuario puede inadvertidamente ingresar al sistema mientras 
copias los archivos de configuración de su entorno de trabajo.
A veces es necesario crear cuentas "falsas" [40] que no son usadas por 
personas. Por ejemplo, para configurar un servidor FTP(8) anónimo (así 
cualquiera podrá acceder a los archivos por él, sin tener que conseguir una 
cuenta ++de usuario en el sistema++ primero) podría crear una cuenta llamada 
"ftp". En esos casos, usualmente no es necesario asignar una contraseña (el 
ultimo paso de arriba). 
Verdaderamente, es mejor no hacerlo, para que nadie puede usar la cuenta, a 
menos que primero sea root/cuenta administrador, y así convertirse en 
cualquier usuario.(???)





11.3. Cambiar las propiedades del usuario

Hay algunos comandos para cambiar varias propiedades de cualquier cuenta. 
Normalmente los usuarios solo pueden cambiar las propiedades de sus propias 
cuentas. A veces es necesario deshabilitar estas posibilidades (por medio del 
comando chmod)  para los usuarios normales, por ejemplo en un ambiente con 
muchos usuarios novatos.

Otras tareas pueden ser necesarias hacerlas manualmente. Por ejemplo, cambiar 
el nombre de usuario, editando el archivo /etc/passwd directamente (recuerda 
hacerlo con el vigr). También para agregar o quitar a uno o varios usuarios de 
uno o mas grupos, editando /etc/group (con vigr). Este tipo de tareas tienden 
a ser mas raras, de todas maneras, siempre hay que ir con cuidado: si cambia 
un nombre de usuario, dicho usuario dejara de acceder a su cuenta de correo a 
menos que también le cree un alias para su correo.[41]






11.4. Borrando usuarios.  

Para borrar un usuario, primero borre los archivos que le pertenezcan, casilla 
de correo, alias de correo, trabajos de impresión, trabajos pendientes a 
través de los demonios cron y at, y cualquier otra referencia al usuario. 
Entonces quite las correspondientes lineas relevantes de los archivos 
etc/passwd y /etc/group (recuerde borrar al usuario de todos los grupos a los 
cuales pertenecía). 
Puede ser buena idea deshabilitar la cuenta antes de empezar a borrar cosas 
para prevenir que el usuario use la cuenta mientras esta siendo borrado.
Recuerde que los usuarios pueden tener archivos fuera de su directorio Inicio. 
Para encontrarlos use el comando:
find / -user username

Como sea, note que lo de arriba puede tomar mucho tiempo si tiene discos muy 
grandes. Si monta un disco de red, necesita ser cuidadoso pues no quiere 
arruinar la red o el servidor.
Algunas distribuciones tiene comandos especiales para hacer esto, ver deluser 
o userdel. Igualmente, es fácil hacerlo a mano, y de todas maneras puede que 
el comando no lo haga todo.





11.5. Deshabilitar un usuario temporalmente

A veces es necesario deshabilitar una cuenta temporalmente, sin borrarla.
Por ejemplo, un usuario pudo dejar de pagar sus cuentas, o el administrador de 
sistema puede sospechar que un cracker(9)  tiene la contraseña de esa cuenta.
La mejor manera es deshabilitar una cuenta es cambiar su interprete de 
comandos por otro programa que solo mande mensajes en pantalla. De esta 
manera, cualquiera sea la forma que intente entrar al sistema con esa cuenta 
fracasará, y sabrá porqué. El mensaje puede decir que el usuario se contacte 
con el administrador de sistema para que cualquier problema sea tratado 
con/por él.
Es posible también cambiar el nombre de usuario o contraseña del mismo por 
otro, en tal caso el usuario no sabrá que pasa. Usuarios confusos significa 
mas trabajo.

Una manera simple de para crear un programa especial es escribir una "cola de 
script": 

  #!/usr/bin/tail +2
  Esta cuenta ha sido cerrada por razones de seguridad.
  Por favor llame a 555-1234 y espere hasta que que lleguen los Hombre de 
Negro(10).

Los primeros dos caracteres (`#!') le dicen al núcleo que el resto de la línea 
es un comando que necesita ejecutarse por medio de un interprete. El comando 
tail en este caso manda una salida en pantalla de todo excepto de la primera 
línea de la salida estandar??? El usuario billg(11) es sospechado de infringir 
la seguridad, el administrador del sistema puede hacer algo como esto:

  # chsh -s
  /usr/local/lib/no-login/security billg
  # su - tester
  Esta cuenta ha sido cerrada por razones de seguridad.
  Por favor llame a 555-1234 y espere hasta que lleguen los Hombre de Negro


El propósito del comando su es verificar que el cambio funciona, por 
supuesto.
"Tail script" debe mantenerse en un directorio separado, así sus nombres no 
interfieren con los comandos de los usuarios normales.



[38] Puede ser un poco embarazoso si mi hermana pudiera leer mis cartas de 
amor.
[39] Si, esto significa que en el archivo de contraseña contiene toda la 
información sobre un usuario excepto su contraseña. Una maravilla del 
desarrolla.
[40] Usuarios Surrealistas?
[41] Los usuarios pueden cambiar su nombre por haberse casado, por ejemplo, y 
quieran tener su cuenta de usuario actualizada para reflejar su nuevo nombre.

------------------------------------------------



Notas del traductor:
(1) En Internet puede comenzar buscando en: http://sourceforge.com y 
http://freshmeat.com
(2) GUI: Grafic User Interface. En KDE dispone de Kuser. En Gnome ?XXX?
(3) Estadísticamente, según el estudio de los métodos para romper claves 
encriptadas, se ha establecido que aumenta significativamente la seguridad una 
suma de características: tener mas de 6 caracteres, combinar letras mayúsculas 
y minúsculas, a la vez que intercalar también números. 
(4)  N. de T.: NFS: Network file System
(4a) N. de T.: NIS: Network Information Service
(5)  N. de T.: apocope de la palabra inglesa skeleton, que en castellano 
significa esqueleto, asiendo referencia al función de estructura.+++
(6) Lenguaje de programación cuyo codigo no necesita ser compilado para ser 
ejecutado, por lo general conjunto de instrucciones a ejecutar por el 
interprete de comandos (Shell). Se llamar también script a un programa o 
fragmento de código escrito en algún lenguaje de scripts, interpretados por 
ejemplo por Perl (Mundo Unix y en general para todas las demás plataformas) 
Visual Basic Script (Microsoft Windows) JavaScript (Todas las plataformas). 
Ver también "Expresiones regulares".
(7) cp /etc/skel/* /ruta (donde ruta será por convención /home/"nombre de 
usuario"
(8) NdeT. FTP: File transfer Protocol.  
(9) NdeT. en este caso traducible a invitado inesperado y malicioso
(10) Especie de broma que hace referencia a los agentes especiales de la 
película Hombres de Negro (Men In Black)
(11)  N. de T.: billg: referencia a Bill Gate, uno de los cofundadores de la 
empresa Microsoft.





