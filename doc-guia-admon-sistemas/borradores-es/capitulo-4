4.0 Vista General del Árbol de Directorios

"Dos días mas tarde, estuvo Pooh, sentada en su rama, balanceándose con sus 
patas, y allí, estando su, fueron cuatro cazuelas (ollas) de encanto 
(dulzura)"(A.A. Milne)

En este capítulo se describen las partes importantes de un árbol de 
directorios GNU/Linux estándar, basado en el Estándar de la Jerarquía del 
Sistema de Archivos de Linu (Filesystem Hierarchy Standart, FHS). En este 
capítulo además, se explica en líneas generales, la forma normal de dividir el 
árbol de directorios dentro de sistemas de archivos con diferentes propósitos 
y establece los motivos para esta distribución particular. También serán 
descriptas otras formas alternativas de realizar tal división.


4.1 Trasfondo

Este capítulo está basado en el Estándar de la Jerarquía del Sistema de 
Archivos de Linux, (FHS), versión 2.1, el cual intenta establecer un estándar 
de como se organiza el árbol de directorios en un sistema GNU/Linux. Tal 
estándar tiene la ventaja de facilitar el trabajo al escribir o portar 
software al sistema operativo GNU/Linux, 
y administrar máquinas Linux, debido a que todas las cosas se encuentra 
en sus lugares habituales. No existe autoridad que obligue a cualquiera a 
cumplir con el estándar, pero este tiene el apoyo de muchas distribuciones 
GNU/Linux. No es una buena idea quebrar con el FHS 
sin que existan justificaciones indiscutibles. El FHS pretende seguir con la 
tradición UNIX y con las tendencias actuales, ocacionando que los sistemas 
GNU/Linux le sean familiares a quienes tengan experiencia con otros sistemas 
Unix, y viceversa.

Este capítulo no es tan detallado como el FHS. Un administrador de sistemas 
debe leer el FHS completo para entenderlo totalmente.

En este capítulo no se explican todos los archivos en detalle. El propósito es 
dar una visión general del sistema desde el punto de vista del sistema de 
archivos, lo cual no significa que se describa cada uno de los archivos. 
Información adicional sobre cada archivo se encuentra disponible en su manual 
o en las páginas de manual de GNU/Linux.

El árbol de directorios completo está proyectado para ser dividido en partes 
pequeñas, cada una en su propio disco o partición, para acomodarse a los 
límites del tamaño del disco y para que le sea fácil realizar copias de 
seguridad y otras tareas en la administración de sistemas. Las partes 
principales son los sistemas de archivos raíz (/), /usr, /var, y /home. Cada 
parte tiene un propósito diferente. El árbol de directorios fue diseñado para 
que trabaje bien en una red de máquinas GNU/Linux, las cuales pueden compartir 
algunas partes del sistema de archivos sobre un dispositivo de solo-lectura 
(CD-ROM por ejemplo), o sobre la red a través de NFS.

Los roles de las diferentes secciones del árbol de directorios son descriptas 
aquí debajo.

El sistema de archivos raíz es específico para cada máquina (generalmente se 
encuentra almacenado en el disco local, aunque este puede tranquilamente ser 
un ramdisk o una unidad de red) y contiene los archivos que son necesarios 
para iniciar el sistema, y dejar a este en un estado en que los demás sistemas 
de archivos puedan ser montados. El contenido del sistema de archivos raíz es 
por lo tanto suficiente para el estado o nivel de ejecución de usuario 
individual. También contiene herramientas para solucionar problemas en un 
sistema dañado, y para recuperar archivos que se hayan perdido desde copias de 
seguridad.

El sistema de archivos /usr contiene todos los comandos, librerías, páginas de 
manual, y otros archivos que no serán modificados durante la operación normal 
del sistema. No existen archivos bajo /usr que deban ser específicos para una 
máquina particular, y ninguno de los archivos aquí deben ser modificados 
durante la utilización normal del sistema. Esto permite que los archivos sean 
compartidos a través de la red, lo cual puede ser efectivo en costo, debido 
que se tiene un ahorro en espacio de disco (/usr puede ocupar fácilmente miles 
de megabytes),  y puede facilitar la administración (solo el /usr maestro 
necesita ser modificado cuando actualizamos una aplicación, y no en cada 
máquina por separado). Aún cuando el sistema de archivos resida en el disco 
local, este puede ser montado como solo lectura, para evitar la posibilidad de 
que se corrompa durante una falla o caída.

El sistema de archivos /var contiene archivos que cambian durante la operación 
normal del sistema, tales como directorios spool (para correo, noticias 
(news), impresoras, etc), archivos de log, páginas de manual formateadas, y 
archivos temporarios. Tradicionalmente todo en /var es algo que debería estar 
en /usr, pero que haría imposible a /usr montar como solo lectura.

El sistema de archivos /home contiene los directorios homes de los usuarios, 
i.e., todos los datos reales del sistema. Separar los directorios homes a su 
árbol de directorios o sistema de archivos propio, hace más fácil la tarea de 
realizar copias de seguridad; los demás sistemas de archivos no necesitan 
frecuentemente que se les haga copias de seguridad, o al menos no tan 
frecuentemente (ellos rara vez cambian). Un gran /home puede se partido en 
varios sistemas de archivos, lo cual requiere agregar niveles de nombres 
extras dentro de /home, como por ejemplo, /home/estudiantes y /home/staff.

Aunque si bien las diferentes partes fueron llamadas sistemas de archivos 
anteriormente, no existe ningún requerimiento para que ellos se encuentren 
actualmente en sistemas de archivos separados. Ellos pueden fácilmente 
mantenerse en un solo sistema de archivos si el sistema es un sistema pequeño 
de un solo usuario, y este solo desea mantener las cosas de manera simple. El 
árbol de directorios puede también ser dividido en sistemas de archivos 
diferentemente, dependiendo de cuan grande sean los discos, y de como el 
espacio es destinado para varios propósitos. La parte importante, no obstante, 
es que todos los nombres estándar trabajen, aún cuando, digamos, /var y /usr 
se encuentren actualmente en la misma partición, los nombres /usr/lib/libc.a y 
/var/log/messages deben trabajar, aún cuando, por ejemplo, moviéramos los 
archivos que se encuentren en /var dentro de /usr/var, y hagamos a /var un 
enlace simbólico a /usr/var.

La estructura del sistema de archivos en UNIX agrupa a los archivos de acuerdo 
a sus propósitos, por lo tanto, todos los comandos están en un mismo lugar, 
todos los archivos de datos en otro, la documentación en un tercer lugar, etc. 
Otra alternativa, podría ser, la de agrupar los archivos de acuerdo al 
programa al que ellos pertenecen, i.e., todos los archivos de Emacs podrían 
llegar a estar en un mismo directorio, todos los de Tex en otro, etc. El 
problema con esta última aproximación es que hace dificultoso compartir 
archivos (el directorio del programa frecuentemente contiene archivos no 
cambiantes y compartibles, y cambiantes y no compartibles), y algunas veces 
hace dificultoso encontrar archivos (por ejemplo, las páginas de manual se 
encuentran ubicadas en una gran cantidad de lugares, y trae como consecuencia, 
que sea una pesadilla para los programas que leen tales páginas de manual, 
cuando buscan a estas).


4.2 El sistema de archivos raíz

El sistema de archivos raíz debe generalmente ser pequeño, ya que residen 
archivos muy críticos. Si el sistema de archivos es pequeño y rara vez es 
modificado, entonces tiene más posibilidades de no 
dañarse. Un sistema de archivos raíz dañado generalmente significa que el 
sistema no podrá iniciarse, excepto que se tomen medidas especiales (por ej., 
tal vez pueda iniciarse desde un disquete de emergencia), por lo que no 
querrás arriesgarte.

El directorio raíz no contiene generalmente archivos, exceptuando quizás a la 
imagen del kernel estándar, usualmente llamada /vmlinuz. 

Todos los demás archivos se encuentran en subdirectorios bajo el sistema de 
archivos raíz:

/bin
Comandos necesarios durante el inicio del sistema que pueden ser utilizados 
por usuarios normales (probablemente luego de que el sistema se haya iniciado).
/sbin
Igual que /bin, pero los comandos no están destinados a los usuarios normales, 
aunque pueden utilizarse en caso de que sea necesario y el sistema lo permita. 
/sbin no se encuentra en los caminos por defecto de los usuarios normales, si 
se encuentra definido en los caminos por defecto para root.
/etc
Archivos de configuración específicos de la máquina.
/root
El directorio home para el usuario root. Usualmente no puede ser accedido por 
los demás usuarios del sistema.
/lib
Librerías compartidas necesarias por los programas que se encuentran en el 
sistema de archivos raíz.
/dev
Archivos de dispositivos. Algunos de los archivos de dispositivos más 
comúnmente utilizados son examinados en el Capítulo 5.
/tmp
Archivos temporarios. Los programas que se ejecuten después de que el sistema 
se haya iniciado deben utilizar /var/tmp, no /tmp, debido a que /var/tmp 
probablemente resida en una partición o disco con más espacio. Frecuentemente 
/tmp es un enlace simbólico para /var/tmp.
/boot
Archivos utilizados por el cargador de arranque, por ejemplo, LILO. Las 
imágenes del kernel son con frecuencia mantenidas en este directorio, en vez 
de encontrarse en el directorio raíz. Si existen muchas imágenes del kernel, 
el directorio puede llegar a crecer mucho, por lo que es mejor mantener a este 
directorio en un sistema de archivos separado. Otra razón puede llegar a ser 
para asegurarse de que las imágenes del kernel se encuentren dentro de los 
primeros 1024 cilindros de un disco IDE.
/mnt
Punto de montaje temporario para los sistemas de archivos montados por el 
administrador del sistema. Los programas no conocen como deben montar en /mnt 
automáticamente. Es posible que /mnt se encuentre dividido en subdirectorios 
(por ej., /mnt/dosa puede llegar a ser el punto de montaje para la unidad de 
disquete con sistema de archivos MS-DOS, y /mnt/extra puede llegar a ser lo 
mismo con un sistema de archivos ext2).
/proc, /usr, /var, /home
Puntos de montaje para otros sistemas de archivos.


4.3 El directorio /etc

El directorio /etc contiene un grupo particular archivos. Algunos de ellos 
están descriptos aquí, mas debajo. Para otros archivos, debería determinar a 
que programa ellos configuran y leer la página de manual para este programa. 
Muchos archivos de configuración de red se encuentran en /etc, y se encuentran 
descriptos en La Guía para Administradores de Redes en Linux.

/etc/rc o /etc/rc.d o /etc/rc?.d
Archivos scripts o directorios de archivos scripts que se ejecutan en el 
arranque del sistema o cuando cambia el nivel de ejecución. Vea el capítulo 
sobre init para mas información.
/etc/passwd
La base de datos de los usuarios, con campos que dan el nombre de usuario, 
nombre real, directorio home, password encriptada, y otra información acerca 
de cada usuario. El formato de este archivo se encuentra documentado en la 
página de manual para passwd.
/etc/fdprm
Tabla de parámetros para discos flexibles. Describe que formatos de discos 
flexibles diferentes pueden llegar a utilizarse. Este archivo es utilizado por 
el programa setfdprm. Vea la página de manual de setfdprm para más información.
/etc/fstab
Lista los sistemas de archivos que deben ser montados automáticamente en el 
arranque del sistema por el comando mount -a (en /etc/rc o archivo de inicio 
equivalente). Bajo Linux, también contiene información acerca de áreas de swap 
utilizadas automáticamente por swapon -a. Lea la Sección 6.8.5 y la página de 
manual del comando mount para obtener más información.
/etc/group
Este archivo es similar a /etc/passwd, pero describe grupos en vez de 
usuarios. Vea la página de manual group para obtener más información.
/etc/inittab
Archivo de configuración para init.
/etc/issue
Archivos que utiliza getty como salida antes de pedir el nombre de usuario. 
Usualmente contiene una descripción corta o mensaje de bienvenida al sistema. 
El contenido es establecido por el administrador del sistema.
/etc/magic
El archivo de configuración para el programa file. Contiene las descripciones 
de varios formatos de archivos que utiliza file para determinar el tipo de 
cada archivo. Vea las página de manual para magic y file para más información.
/etc/motd
Contiene el mensaje del día, automáticamente emitido luego de un inicio se 
sesión exitoso. El contenido es colocado por el administrador del sistema. Con 
frecuencia se utiliza para dar información a todos los usuarios, tal como, por 
ejemplo, mensajes de advertencias acerca de la hora en que se planea cerrar el 
sistema del servidor.
/etc/mtab
Contiene un listado de los sistemas de archivos actualmente montados. 
Inicialmente establecido por los scripts del arranque del sistema, y 
actualizado automáticamente por el comando mount. Se utiliza cuando se 
necesita un listado de los sistemas de archivos que estén actualmente 
montados, por ejemplo por el comando df.
/etc/shadow
Archivo de contraseñas ocultas en sistemas donde el software de contraseñas 
ocultas se encuentre instalado. Si utiliza contraseñas ocultas la password 
encriptada de cada usuario es removida de /etc/passwd y colocada en el archivo 
/etc/shadow; este archivo no puede ser leído por nadie a excepción del usuario 
root. De esta manera se dificulta el proceso de crakear las passwords de los 
usuarios. Si la distribución GNU/Linux que utilice le permite elegir utilizar 
o no contraseñas ocultas (puede hacerlo), entonces es áltamente recomendado 
que lo haga.
/etc/login.defs
Archivo de configuración para el comando login. El archivo login.defs 
usualmente tiene la página de manual en la sección 5.
/etc/printcap
Similar a /etc/termcap, con la excepción de que está destinado a la 
configuración de colas de impresión. La sintaxis también es diferente. 
printcap tiene la página de manual en la sección 5.
/etc/profile, /etc/csh.login, /etc/csh.csgrc
Archivos que son ejecutados en el momento de iniciar el intérprete de comandos 
C o Bourne. Permite al administrador del sistema establecer parámetros 
globales por defecto para todos los usuarios. Vea las páginas de manual para 
los respectivos intérpretes de comandos.
/etc/securetty
Identifica las terminales seguras, i.e., las terminales por las cuales el 
usuario root tiene permitido iniciar una sesión. Típicamente solo las cónsolas 
virtuales se encuentran listadas en este archivo, de esta manera se hace 
imposible (o al menos mas difícil) obtener privilegios de superusuario a 
través de un módem o la red. No permita iniciar una sesión como usuario root 
desde la red. Es preferible iniciar una sesión con un usuario sin privilegios 
y utilizar su o sudo para obtener privilegios de root.
/etc/shells
Listado de intérpretes de comandos confiables. El comando chsh permite a los 
usuarios cambiar su intérprete de comandos por defecto a otro que se encuentre 
listado en este archivo. Ftpd, el proceso servidor que provee servicios FTP 
para una máquina, chequea que los intérpretes de comandos de los usuarios 
estén listados en /etc/shells y no permite que personas inicien una sesión si 
el intérprete de comandos no se encuentra en tal listado.
/etc/termcap
La base de datos de la capacidad de la terminal. Describe por cuales 
secuencias de escapes varias terminales pueden ser controladas. Los programas 
son escritos para que en vez de sacar directamente una secuencia de escape que 
solo trabaja en un tipo de terminal, ellos observan la secuencia correcta de 
lo que quieren hacer en /etc/termcap. Como resultado, la mayoría de los 
programas trabajan con la mayoría de los tipos de terminales existentes. Vea 
las páginas de manual de termcap, curs_termcap, y de terminfo para más 
información.


4.4 El directorio /dev

El directorio /dev contiene los archivos de dispositivos especiales para todos 
los dispositivos. Los archivos de dispositivos están nombrados utilizando 
convenciones especiales; ellos están descriptos en el Capítulo 5. Los archivos 
de dispositivos son creados durante la instalación del sistema, y luego pueden 
ser creados con el script /dev/MAKEDEV. El /dev/MAKEDEV.local es un script 
escrito por el administrador del sistema que crea archivos de dispositivos 
solo-locales o enlaces (i.e., estos no son partes del estándar MAKEDEV, tal 
como archivos de dispositivos para algún controlador de dispositivo no 
estándar).


4.5 El sistema de archivos /usr

El sistema de archivos es con frecuencia grande, debido a que todos los 
programas están instalados aquí. Todos los archivos en /usr usualmente viene 
desde una distribución Linux; programas instalados localmente y otros stuff se 
encuentran bajo /usr/local. De esta manera es posible actualizar el sistema 
desde una nueva versión de la distribución, o tal vez desde una distribución 
completamente nueva (otra), sin tener que instalar todos los programas 
nuevamente. Algunos de los directorios de /usr están explicados aquí debajo 
(algunos de los directorios menos importantes fueron omitidos, vea el FSSTND 
para obtener más información).

/usr/X11R6
Se encuentran todos los archivos del Sistema de Ventanas X. Para simplificar 
el desarrollo y la instalación de X,  los archivos de X no fueron integrados 
dentro del resto del sistema. Existe un árbol de directorios bajo /usr/X11R6 
similar al que está bajo /usr.
/usr/X386
Similar a /usr/X11R6, pero para X11 versión 5.
/usr/bin
En este directorio se encuentran la gran mayoría de los comandos para todos 
los usuarios. Algunos otros comandos pueden encontrarse en /usr/local/bin.
/usr/sbin
Comandos para la administración del sistema que no son necesarios en el 
sistema de archivos raíz, como por ejemplos la mayoría de los programas que 
proveen servicios.
/usr/share/man, /usr/share/info, /usr/share/doc
Páginas de manual, documentos Info GNU, y archivos de documentación de los 
programas instalados.
/usr/include
Archivos cabecera para el lenguaje de programación C. Estos deben estar 
actualmente debajo de /usr/lib para consistencia, pero la tradición es 
overwhelmingly en soporte para este nombre.
/usr/lib
Archivos de datos para programas y subsistemas que no sufren cambio, 
incluyendo algunos archivos de configuración site-wide. El nombre lib viene de 
librería, originariamente las librerías de las subrutinas de programación 
fueron almacenadas en /usr/lib.
/usr/local
El lugar para el software instalado localmente y para algunos otros archivos. 
Las distribuciones no deben colocar archivos bajo este directorio. Se reserva 
para ser utilizado únicamente por el administrador del sistema local. De esta 
manera, el administrador del sistema local se encuentra absolutamente seguro 
de que ninguna actualización de su distribución sobreescribirá software extra 
que el mismo haya instalado localmente.


4.6 El sistema de archivos /var

El sistema de archivos /var contiene datos que cambian cuando el sistema se 
ejecuta normalmente. Es específico para cada sistema y por lo tanto no es 
compartido a través de la red con otras computadoras.

/var/cache/man
Una caché para páginas de manual que son formateadas en demanda. Las fuentes 
de las páginas de manual se encuentran almacenada usualmente en /usr/man/man? 
(donde ? es la sección de las páginas de manual. Lea la página de manual para 
man en la sección 7); algunas páginas de manual pueden llegar a venir con una 
versión pre-formateadas, las cuales están almacenadas en /usr/share/man/cat*. 
Otras páginas de manual necesitan ser formateadas cuando ellas son 
visualizadas por primera vez; la versión formateada es almacenada entonces en 
/var/cache/man para que la próxima vez que una persona necesite ver la misma 
página no tiene que esperar a que se le de formato.
/var/lib
Archivos que cambian mientras el sistema se ejecuta normalmente.
/var/local
Datos variables para los programas que se encuentran instalados en /usr/local 
(programas que fueron instalados por el administrador del sistema. Note que 
aunque los programas se encuentren instalados localmente deben utilizar los 
otros directorios /var en caso de que fuese apropiado, como por ejemplo: 
/var/lock.
/var/lock
Archivos de bloqueos. Muchos programas siguen una convención para crear un 
archivo de bloqueo en /var/lock para inidicar que están utilizando un 
dispositivo particular o un archivo. Otros programas se notifican a través de 
algún archivo de bloqueo y no intentan acceder a el dispositivo o archivo.
/var/log
Archivos de log de varios programas, especialmente de login (/var/log/wtmp, el 
cual registra todos los inicios de sesión y los cierre de sesión en el 
sistema) y de syslog (/var/log/messages, en donde se almacenan todos los 
mensajes del kernel y de los programas del sistema). Archivos dentro del 
directorio /var/log pueden crecer indefinidamente, por lo que requieren una 
limpieza a intervalos regulares.
/var/mail
Esta es la ubicación definida por el FHS para almacenar los archivos de 
correos. Dependiendo de cuanto cumpla su distribución GNU/Linux con el FHS, 
estos archivos pueden llegar a estar ubicados en /var/spool/mail.
/var/run
Directorio que contiene archivos con información acerca del sistema. Tal 
información es valedera hasta el próximo inicio del sistema. Por ejemplo: 
/var/run/utmp contiene información de las personas que actualmente tienen 
sesiones iniciadas.
/var/spool
Contiene directorios para las noticias, el correo, colas de impresión, y otros 
que necesiten trabajar con colas. Cada spool diferente tiene su propio 
directorio debajo de /var/spool, por ejemplo: el spool de noticias se 
encuentra en /var/spool/news. Note que si alguna instalación no cumple 
totalmente con la última versión del FHS entonces los buzones de correo 
entrante de los usuarios pueden encontrarse en /var/spool/mail.
/var/tmp
Archivos temporarios grandes o que necesitan existir por un tiempo más 
amplio de lo permitido en /tmp. (De todas formas, el administrador del 
sistema, puede no permitir muchos archivos antiguos en /var/tmp si así lo 
desea).


4.7 El sistema de archivos /proc

El sistema de archivos /proc contiene un sistema de archivos imaginario o 
virtual. Este no existe físicamente en disco, sino que el kernel lo crea en 
memoria. Es utilizado para ofrecer información relacionada con el sistema 
(originalmente acerca de procesos, de aquí su nombre). Algunos de los archivos 
más importantes son explicados mas debajo. El sistema de archivos /proc se 
encuentra descripto con más detalle en la página de manual de proc.

/proc/1
Un directorio con información acerca del proceso número 1. Cada proceso tiene 
un directorio debajo de /proc cuyo nombre es el número de identificación del 
proceso (PID).
/proc/cpuinfo
Información acerca del procesador: su tipo, marca, modelo, performance, etc.
/proc/devices
Lista de controladores de dispositivos configurados dentro del kernel que está 
en ejecución.
/proc/dma
Muestra los canales DMA que están siendo utilizados.
/proc/filesystems
Lista los sistemas de archivos que están soportados por el kernel.
/proc/interrupts
Muestra la interrupciones que están siendo utilizadas, y como muchas de cada 
ellas están.
/proc/ioports
Información de los puertos de E/S que se estén utilizando en este momento.
/proc/kcore
Una imagen de la memoria física del sistema. Este archivo tiene exactamente el 
mismo tamaño que tu memoria física, pero no existe en memoria como el resto de 
los archivos bajo /proc, es generado en el momento en que un programa accede a 
este. (Recuerde: a menos que copie este archivo en otro lugar, nada bajo /proc 
toma espacio en disco).
/proc/kmsg
Mensajes emitidos por el kernel. Estos son ruteados por syslog.
/proc/ksyms
Tabla de símbolos para el kernel.
/proc/loadavg
La carga promedio del sistema; tres indicadores significativos sobre cuanto 
trabaja el sistema en este momento.
/proc/meminfo
Información acerca de la utilización de la memoria física y de swap.
/proc/modules
Indica que módulos del kernel fueron cargados hasta el momento.
/proc/net
Información acerca del estado acerca de los protocolos de red.
/proc/self
Un enlace simbólico al directorio del proceso del programa que esté observando 
a /proc. Cuando dos procesos observan a /proc, ellos obrienen diferentes 
enlaces. Esto es principalmente una conveniencia para que sea fácil para los 
programas obtener su directorio de procesos.
/proc/stat
Varias estadísticas acerca del sistema, tales como el número de fallas de 
páginas que se sucedieron desde el arranque del sistema.
/proc/uptime
El tiempo en segundos que el sistema fue iniciado.
/proc/version
La versión del kernel.

Nótese que mientras los archivos anteriores tienden a ser archivos de textos 
fáciles de leer, algunas veces, ellos pueden llegar a tener un formato que no 
sean fáciles de digerir. Existen muchos comandos que solo leen los archivos 
anteriores y les dan un formato para que la información sea fácil de entender. 
Por ejemplo, el comando free, lee el archivo /proc/meminfo y convierte las 
cantidades dadas en bytes a kilobytes (y agrega un poco mas de información 
extra).



