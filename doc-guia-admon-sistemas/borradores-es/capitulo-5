5.0 Archivos de Dispositivos

En este capítulo se presenta un resumen que le explica que es un archivo de 
dispositivo y de como crearlo. También se listan algunos de los archivos de 
dispositivos más importantes. El listado canónico de los archivos de 
dispositivos se encuentra en /usr/src/linux/Documentation/devices.txt, siempre 
y cuando el código fuente del kernel Linux se encuentre instalado en el 
sistema. El listado de dispositivos que se presenta en este capítulo 
corresponde a los archivos de dispositivos de la versión 2.2.17 del kernel 
Linux.



5.1 El Script MAKEDEV

Después de haber instalado tu sistema GNU/Linux, la mayoría de los archivos 
de dispositivos ya se encuentran creados y listos para ser utilizados. Si por 
alguna razón necesita crear un archivo de dispositivo, entonces debe intentar 
utilizar en primer lugar el Script MAKEDEV. Este script se encuentra ubicado 
generalmente en /dev/MAKEDEV, también puede llegar a existir una copia (o un 
enlace simbólico) en /sbin/MAKEDEV. Si alguna o ambas rutas son correctas y no 
se encuentran definida en tu variable de entorno PATH, entonces deberás 
especificar la ruta completa explícitamente.

En general el comando es utilizado como:

#/dev/MAKEDEV -v ttyS0
create ttyS0 c 4 64 root:dialout 0660

El comando anterior creará el archivo de dispositivo /dev/ttyS0 como un 
dispositivos de caracteres, con un valor de 4 para el nodo mayor y con un 
valor de 64 para el nodo menor; tendrá como permisos de acceso 0660 y su dueño 
y grupo serán root:dialout.

ttyS0 es un puerto serial. Los números de nodo mayor y menor son entendidos 
por el kernel. El kernel utiliza números para referirse a dispositivos de 
hardware, esta forma de referenciar un dispositivo puede que llegue a ser muy 
difícil de recordar, por lo que utilizamos nombres de archivos. Los permisos 
de acceso 0660 significa permisos de lectura y escritura para su dueño (en 
este caso root) y permisos de lectura y escritura para los miembros del grupo 
al que pertenece este archivo (en este caso dialout), y ningún permiso para el 
resto del mundo. 


5.2 El comando mknod

MAKEDEV es la manera preferida de crear archivos de dispositivos 
que no se encuentren presentes. No obstante, algunas veces el script MAKEDEV 
no tiene información referente al archivo de dispositivo que desea crear, por 
lo que no será posible crear el archivo de dispositivo con MAKEDEV. 
Aquí es cuando debe emplear el comando mknod. Para utilizar el comando mknod 
necesita conocer los valores numéricos de los nodos mayor y menor del archivo 
de dispositivo a crear. El archivo devices.txt es la fuente canónica para 
obtener esta información, dicho archivo viene con la documentación del kernel.

Como ejemplo, suponga que la versión instalada del script MAKEDEV no conoce 
como crear el archivo de dispositivo /dev/ttyS0. Entonces, necesita utilizar 
el comando mknod para crearlo. Al observar el archivo devices.txt, conoce que 
ttyS0 es un archivo de dispositivo de caracteres con número mayor 4 y número 
menor 64. Con estos datos ya cuenta con toda la información necesaria para 
crear el archivo.

# mknod /dev/ttyS0 c 4 64
# chown root.dialout /dev/ttyS0
# chmod 0644 /dev/ttyS0
# ls -l /dev/ttyS0
crw-rw----   1 root dialout    4,   64 Oct 23 18:23 /dev/ttyS0

Como podrá observar, se necesitan muchos más pasos (sin MAKEDEV) para poder 
crear el archivo. En este ejemplo, puede contemplar todo el proceso requerido. 
Es improbable de que el archivo ttyS0 no pueda ser creado por el script 
MAKEDEV, pero es suficiente para ilustrar el ejemplo.



5.3 Listado de dispositivos

El listado siguiente no tiene la intención de ser exhaustivo o detallado como 
debería. Muchos de estos archivos de dispositivos necesitan soporte compilado 
dentro del kernel. Lea la documentación del kernel para obtener los detalles 
de cada archivo en particular.

Si piensa que existen otros archivos de dispositivos que deben estar en este 
listado, hágamelo saber. Intentaré incluírlos en la próxima revisión.

/dev/dsp
Procesador de Señal Digital. Básicamente forma la interface entre el software 
que produce sonido con tu tarjeta de sonido. Es un dispositivo de caracteres 
con nodo mayor 14 y menor 3.
/dev/fd0
La primera unidad de disquete. Si tiene la suerte suficiente de contar con 
varias unidades, entonces estarán numeradas secuencialmente. Este es un 
dispositivo de caracteres con nodo mayor 2 y menor 0.
/dev/fb0
El primer dispositivo framebuffer. El framebuffer es una capa abstracta entre 
el software y el hardware de video. De esta manera las aplicaciones no 
necesitan conocer el tipo de hardware existente, aunque si es necesario que 
conozcan como comunicarse con la API (Interface de Programación de Aplicación) 
del controlador del framebuffer, que se encuentra bien definida y 
estandarizada. El framebuffer es un dispositivo de caracteres con nodo mayor 
29 y nodo menor 0.
/dev/hda
/dev/hda es el dispositivo IDE maestro que se encuentra adjunto al controlador 
IDE primario. /dev/hdb es el dispositivo IDE esclavo sobre el controlador 
primario. /dev/hdc y /dev/hdd son los dispositivos maestro y esclavo 
respectivamente sobre el controlador secundario. Cada disco se encuentra 
dividido en particiones. Las particiones 1-4 son particiones primarias y las 
particiones 5 en adelante son particiones lógicas que se encuentran dentro de 
particiones extendidas. De esta manera los nombre de los archivos de 
dispositivos que referencian a cada una de las particiones están formados de 
varias partes. Por ejemplo /dev/hdc9 es el archivo de dispositivo que 
referencia a la partición 9 (una partición lógica dentro de un tipo de 
partición extendida) sobre el dispositivo IDE maestro que se encuentra adjunto 
al controlador IDE secundario. Los números de los nodos mayor y menor son algo 
más complejos. Para el primer controlador IDE todas las particiones son 
dispositivos de bloques con nodo mayor 3. El dispositivo maestro hda tiene 
número de nodo menor 0 y el dispositivo esclavo hdb tiene un valor para el 
nodo menor 64. Por cada partición dentro de la unidad el valor para el nodo 
menor se obtiene de sumar el valor del nodo menor para la unidad más el número 
de partición. Por ejemplo /dev/hdb5 tiene un valor para el nodo mayor 3 y para 
el nodo menor 69 (64 + 5 = 69). Para las unidades adjuntas a la interface 
secundaria los valores para los nodos son obtenidos de la misma manera, pero 
con valor para el nodo mayor 22.
/dev/ht0
La primera unidad de cinta IDE. Las unidades subsiguientes son numeradas ht1, 
ht2, etc. Son dispositivos de caracteres con valor para el nodo mayor 27 e 
inician con valor de 0 para el nodo menor para ht0, nodo mayor 1 para ht1, etc.
/dev/js0
El primer joystick análogo. Los joysticks subsiguientes tienen los nombres 
js1, js2, etc. Los joysticks digitales tienen los nombres djs0, djs1, etc. Son 
dispositivos de caracteres con valor para el nodo mayor 15. Los valores para 
el nodo menor en los joysticks análogos comienzan en 0 y llega a  127 (más que 
suficiente hasta para el más fanático de los jugadores). Los valores para el 
nodo menor para joysticks digitales comienzan desde 128 en adelante.
/dev/lp0
El primer dispositivo para impresoras con puerto paralelo. Las archivos de 
dispositivos para puertos paralelos para impresoras subsiguientes tienen los 
nombres lp1, lp2, etc. Son dispositivos de caracteres con valor para el nodo 
mayor 6 y valor para el nodo menor 0 para lp0 y numerados secuencialmente para 
el resto de los archivos de dispositivos lp.
/dev/loop0
El primer dispositivo loopback. Los dispositivos Loopback son utilizados para 
montar sistemas de archivos que no se encuentren localizados en dispositivos 
de bloques tales como los discos. Por ejemplo, si necesita montar una imagen 
CD ROM iso9660 sin "quemarla" en un CD entonces necesita utilizar un 
dispositivo loopback. Usualmente esta manera de trabajar es transparente para 
el usuario y es manejado por el comando mount. Diríjase a las páginas de 
manual para mount y losetup. Los dispositivos loopback son dispositivos de 
bloques con valor de 7 para el nodo mayor y valores para los nodos menores 
iniciando en 0 y numerados secuencialmente.
/dev/md0
Primer grupo de metadiscos. Los metadiscos están relacionados a los 
dispositivos RAID (Arreglo Redundante para Discos Independientes). Lea los 
COMOS (HOWTOs) relacionados con RAID existentes en LDP para conocer más 
detalles. Los dispositivos metadiscos son dispositivos de bloques con valor de 
9 para el nodo mayor y valores para el nodo menor comenzando en 0 y numerados 
secuencialmente.
/dev/mixer
Este archivo de dispositivo es parte del controlador OSS (Sistema de Sonido 
Abierto). Diríjase a la documentación de OSS http://www.opensound.com para 
conocer más detalles. /dev/mixer es un dispositivo de caracteres con valor de 
14 para el nodo mayor y 0 para el nodo menor.
/dev/null
El bit bucket. Un hoyo negro en donde puede enviar datos que nunca más volverá 
a ver. Todo lo que se envíe a /dev/null desaparece. Puede ser utilizado, por 
ejemplo, para ejecutar un comando y no ver en la terminal la salida estándar 
(debe redirigir la salida estándar a /dev/null). Es un dispositivo de 
caracteres con valor de 1 para el nodo mayor y 3 para el nodo menor.
/dev/psaux
El puerto para el mouse PS/2. Este es un dispositivo de caracteres con valor 
de 10 para el nodo mayor y 1 para el nodo menor.
/dev/pda
Discos IDE adjuntos al puerto paralelo. Los nombres para estos discos son 
similares a los utilizados para los discos internos adjuntos a los 
controladores IDE (/dev/hd*). Son dispositivos de bloques con un valor de 45 
para el nodo mayor. Los valores para los nodos menores necesitan un poco de 
explicación. El primer dispositivo /dev/pda tiene un valor de 0 para el nodo 
menor. Por cada partición dentro de la unidad el valor para el nodo menor se 
obtiene de sumar el valor del nodo menor para la unidad más el número de 
partición. Cada dispositivo tienen un límite de 15 particiones como máximo en 
vez de las 63 que tienen los discos IDE internos. /dev/pdb tiene un valor de 
16 para el nodo menor, /dev/pdc 32 y /dev/pdd 48. Por ejemplo, el valor del 
nodo menor para el dispositivo /dev/pdc6 debe ser 38 (32 + 6 = 38). Este 
esquema tiene un límite de 4 discos paralelos con 15 particiones cada uno como 
máximo.
/dev/pcd0
Unidades CD ROM adjuntos al puerto paralelo. Los nombres para estos 
dispositivos están numerados secuencialmente /dev/pcd0, /dev/pcd1, etc. Son 
dispositivos de bloques con un valor de 16 para el nodo mayor. /dev/pcd0 
tiene un valor de 0 para el nodo menor, las demás unidades tienen valores 
secuenciales para el nodo menor 1, 2, etc.
/dev/pt0
Dispositivos de cintas adjuntos al puerto paralelo. Las cintas no tienen 
particiones por lo tanto los nombres para estos dispositivos están numerados 
secuencialmente /dev/pt0, /dev/pt1, etc. Son dispositivos de caracteres con un 
valor de 96 para el nodo mayor. Los valores para el nodo menor comienzan con 0 
para /dev/pt0, 1 para /dev/pt1, etc.
/dev/parport0
Los puertos paralelos. La mayoría de los dispositivos adjuntos a los puertos 
paralelos tienen su propios controladores. Este es un disposito que permite 
acceder al puerto paralelo directamente. Es un dispositivo de caracteres con 
un valor de 99 para el nodo mayor y con un valor de 0 para el nodo menor. Los 
dispositivos subsiguientes tienen como valores secuenciales para el nodo menor.
/dev/random o /dev/urandom
Estos son generadores de números aleatorios para el kernel. /dev/random es un 
generador no-determinístico, lo que significa que el valor del próximo número 
aleatorio no puede ser obtenido utilizando el número anterior. Para generar 
los números utiliza el entropy del hardware del sistema. Cuando no existan mas 
entropy se debe esperar hasta que se coleccionen más para leer un nuevo 
número. /dev/urandom trabaja de manera similar. Inicialmente utiliza el 
entropy del hardware del sistema, cuando no existan mas entropy continúa 
retornando números que se elaboran a partir de una fórmula generadora de 
números pseudo aleatorios. Utilizar este dispositivo es menos seguro para 
propósitos críticos como la generación de una clave criptográfica. Si la 
seguridad es el factor importante debe utilizar /dev/random, en cambio si lo 
que necesita es velocidad el dispositivo /dev/urandom puede trabajar mejor. 
Ambos son dispositivos de caracteres con un valor de 1 para el nodo mayor, los 
valores para el nodo menor son 8 y 9 para /dev/random y /dev/urandom 
respectivamente.
/dev/zero
Este es un dispositivo que puede utilizar de manera simple para obtener ceros. 
Cada vez que lea el dispositivo obtiene como respuesta un cero. Puede ser 
útil, por ejemplo, para crear un archivo de tamaño fijo sin que le importe su 
contenido. /dev/zero es un dispositivo de caracteres con un valor de 1 para el 
nodo mayor y 5 para el nodo menor.




