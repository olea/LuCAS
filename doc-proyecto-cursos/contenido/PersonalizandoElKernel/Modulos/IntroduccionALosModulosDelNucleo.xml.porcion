<?xml version="1.0" encoding="ISO-8859-1" ?><!-- -*- xml -*- -->
 
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
       "file:///usr/share/sgml/docbook/dtd/xml/4.1.2/docbookx.dtd">
 
<!--
\porcion{Introducción a los módulos del núcleo Linux}
\autor{\LDP}
\colaborador{\NC}
\revisor{}
\traductor{}
-->

<section>
  <title>Introducción a los módulos del núcleo Linux</title>

  <para>Una mejora extraordinaria al núcleo fue la
    <emphasis>modularización</emphasis> del mismo. En un principio el
    núcleo era <emphasis>monolítico</emphasis>, es decir, un gran
    archivo que contenía todos los controladores para los
    dispositivos.</para>

  <para>Un núcleo monolítico es más eficiente que uno modularizado, en
    parte porque toda referencia se conoce en tiempo de compilación y
    por otro lado el sistema entero está en memoria siempre. Como
    desventaja tiene su gran tamaño, poca flexibilidad de incorporar
    nuevos controladores y no acepta cambios en el código
    existente.</para>

  <para>Los módulos como contrapartida, se pueden cargar y descargar
    de memoria en cualquier momento. Dando la libertad de poder
    utilizar sólo lo necesario. Y si estamos programando un
    controlador para cualquier periférico, compilamos el controlador,
    lo cargamos a memoria, lo probamos y luego se puede sacar de
    memoria, recompilar y seguir probando. Todo esto sin rearrancar el
    sistema, ni cerrar los programas que estamos usando.</para>

</section>
