<?xml version="1.0" encoding="ISO-8859-1" ?><!-- -*- xml -*- -->
 
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
       "file:///usr/share/sgml/docbook/dtd/xml/4.1.2/docbookx.dtd">
 
<!--
\porcion{Introducción a la compilación del núcleo}
\autor{\LDP}
\colaborador{\NC}
\revisor{}
\traductor{}
-->

<section>
  <title>Introducción a la compilación del núcleo</title>
  
  <para>¿Que es el núcleo<footnote> <para>En inglés se lo llama
	<foreignphrase lang="en">kernel</foreignphrase></para>
	</footnote>?, ¿que es lo que hace realmente?  El núcleo es el
	corazón del sistema operativo, todo sistema operativo tiene un
	núcleo, los hay de varias formas: monolíticos, modulares, de
	tiempo real, <foreignphrase
	lang="en">microkernel</foreignphrase>, etc. Nuestro Linux (así
	se llama el núcleo, por eso al sistema completo lo llamamos
	GNU/Linux) puede hallarse de dos formas, modular o monolítico,
	pero por ahora no hay que preocuparse por esto ya que lo
	veremos mas adelante.</para>

  <para>Un núcleo (cualquiera) administra los recursos de hardware del
    equipo, algunos lo hacen de una manera chapucera y desordenada, de
    modo tal que se producen los famosos <emphasis>colgazos</emphasis>
    y <emphasis>pantallas azules de la muerte</emphasis>, otros (como
    Linux) lo hacen de manera ordenada, y muy eficiente. Un núcleo se
    encarga de manejar la memoria, los discos, el vídeo, el módem, y
    demás dispositivos físicos, y da acceso al usuario para que
    disponga de estos dispositivos de forma controlada.</para>

  <para>La administración de la memoria y el procesador que realiza el
    núcleo Linux permite la ejecución de programas en
    <emphasis>pseudo-paralelismo</emphasis>.  No es paralelismo puro a
    menos que el equipo posea varios procesadores y cada uno esté
    ejecutando un programa a la vez. El pseudo-paralelismo consiste en
    dar a cada programa en ejecución<footnote> <para>A los programas
    en ejecución se los llama procesos, y así es como los llamaremos
    de aquí en adelante</para></footnote> una porción de tiempo
    definida en el procesador, que normalmente son unos pocos
    milisegundos, cuando se acaba el tiempo asignado de
    procesador<footnote> <para>En la jerga de los sistemas operativos
    esto se llama <foreignphrase
    lang="en">timeslice</foreignphrase>.</para></footnote>, el núcleo
    pausa el proceso para darle prioridad a otro que está esperando su
    turno. Este intercambio de procesos se hace tan rápidamente que no
    lo notamos, y es por eso que parece que el equipo ejecuta muchos
    procesos a la vez.</para>

  <para>Como la mayoría de los sistemas operativos tipo UN*X, Linux es
    un núcleo monolítico<footnote><para>No es totalmente cierto, como
    veremos mas adelante</para></footnote>, esto significa que todos
    los manejadores de dispositivos deben estar incluidos dentro del
    código del núcleo al momento de encender el equipo. Esto es a
    veces poco práctico en el sentido de que al necesitar soporte para
    algún dispositivo nuevo, se debe <emphasis>recompilar</emphasis>
    el núcleo agregando el nuevo manejador, proceso que toma cierto
    tiempo y requiere reiniciar el equipo.</para>

  <para>Como se dijo anteriormente, el núcleo Linux puede también ser
    modular, esto significa que muchos manejadores pueden estar en
    archivos separados del archivo principal del núcleo, y por lo
    tanto, pueden ser cargados y descargados de memoria dinámicamente,
    evitando así la necesidad de reiniciar el equipo. Esta es la
    manera preferible de compilar los núcleos, pero hay ciertas
    ocasiones cuando se debe si o si compilarlo en forma
    monolítica.</para>

  <para>En esta sección veremos cómo dar soporte a nuevos
    dispositivos, cómo y donde buscar las actualizaciones de los
    núcleos nuevos, el manejo de los módulos del núcleo y la
    configuración del arrancador <command>LILO</command>.</para>
</section>

