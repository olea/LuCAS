<?xml version="1.0" encoding="ISO-8859-1" ?><!-- -*- xml -*- -->
 
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
       "file:///usr/share/sgml/docbook/dtd/xml/4.1.2/docbookx.dtd">
 
<!--
\porcion{Programación en shell}
\autor{\NC}
\colaborador{\RR}
\revisor{\}
\traductor{}
-->
 
<section>
  <title id="seccion:progbash" xreflabel="Programación en shell">Programación en shell</title>

  <para>Una de las grandes ventajas que ofrece un intérprete de comandos es la
programación en un lenguaje rústico pero poderoso para automatizar
infinidad de tareas.</para>

  <para>Como todo lenguaje, posee reglas sintácticas que establecen
la forma de escribir las sentencias a ejecutar.</para>

  <para>Para quienes poseen conocimiento de otros lenguajes de programación,
el signo «punto y coma» (;) es utilizado frecuentemente como
separador o terminador de sentencias. En <command>bash</command> no es
necesario y puede ser reemplazado por <keycombo><keycap>Enter</keycap></keycombo>. Es común encontrar una línea de este tipo:</para>

  <screen>
# comando1 ; comando2
(ejecución de comando1 seguido de comando2)
  </screen>

  <para>es equivalente a:</para>

  <screen>
# comando1
(ejecución de comando1)
# comando2
(ejecución de comando2)
  </screen>

  <para>En el primer ejemplo con una sola línea se ejecutan ambos comandos.
Es muy buen ejemplo cuando se quiere encadenar tareas que consumen
mucho tiempo y tienen que ser seguidas.</para>

  <para>Hay que tener presente que no se ejecutan en paralelo. Cuando
termina de ejecutarse <command>comando1</command> empieza a ejecutarse <command>comando2</command>.</para>

</section>
