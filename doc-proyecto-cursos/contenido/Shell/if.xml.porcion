<?xml version="1.0" encoding="ISO-8859-1" ?><!-- -*- xml -*- -->
 
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
       "file:///usr/share/sgml/docbook/dtd/xml/4.1.2/docbookx.dtd">
 
<!--
\porcion{El comando if}
\autor{\NC}
\colaborador{\RR}
\revisor{\}
\traductor{}
-->
 
<section>
  <title>El comando <command>if</command></title>

  <para>Ya vimos un ejemplo sencillo utilizando <command>if</command>, que a su
vez puede ser de gran utilidad. Ya hablamos de la equivalencia
entre el «;» y el «Enter» pero hay veces que pasa desapercibido
el detalle de que <command>if</command> y <command>then</command> deben estar
en diferentes líneas por lo que: </para>

  <screen>
# if COMANDO then COMANDO fi
  </screen>

  <para>Este último ejemplo va a dar error de sintaxis. La forma
correcta de expresar es:</para>

  <screen>
# if COMANDO; then COMANDO ; fi
  </screen>

  <para>o bien:</para>

  <screen>
# if COMANDO
> then COMANDO
> fi
  </screen>

  <para>No hace falta crear un archivo que contenga las instrucciones, en
cambio, esta programación se puede ir realizando «en línea». Es decir,
introducirla por línea de comandos en una terminal.</para>

  <para>Muchas veces es necesario hacer comparaciones o comprobaciones para
tomar decisiones. Por ejemplo "Si el usuario no posee el archivo
<filename>~/.configuracion</filename> con la configuración por defecto" o bien
"Si el número de archivos es mayor a 20 escribir <emphasis>no se puede
transferir</emphasis>".</para>

  <para>Existe el comando <command>test</command> para hacer estas evaluaciones
y en base al resultado, código de error de <command>test</command> será 0 u otro número. Por ejemplo, para saber si un archivo
<filename>.configuracion</filename> existe en el <emphasis>home</emphasis> del
usuario el comando puede ser:</para>

  <screen>
# test -e $HOME/.configuracion
  </screen>

  <para>para facilitar la notación dentro del comando <command>if</command> se
hace un <emphasis>enlace simbólico</emphasis>
    <footnote>
      <para><foreignphrase>symbolic link</foreignphrase> en inglés, utilizando
el comando <command>ln -s</command></para>
    </footnote>
a un comando llamado <command>[</command>. Parece extraño llamar a un comando
con un corchete abierto pero veamos un ejemplo:</para>

  <screen>
if test -e $HOME/.configuracion
  </screen>

  <para>Puede traducirse a:</para>

  <screen>
if [ -e $HOME/.configuracion ]
  </screen>

  <para>donde el <command>]</command> <emphasis>(corchete cerrado)</emphasis>
final no tiene importancia y la programación queda menos engorrosa.</para>

  <para>Podríamos utilizar lo aprendido para crear un script que
 "Si el usuario no posee el archivo
<filename>/HOME/.configuracion</filename> con la configuracion por defecto
entonces crearlo." en unas pocas líneas:</para>

  <screen>
if [ -e $HOME/.configuracion ]
then
  crear-configuracion >> $HOME/.configuracion
fi
  </screen>

  <para>El comando <command>test</command> permite la composición de
condiciones con AND y OR lógicos con los modificadores <option>-a</option> y
<option>-o</option> respectivamente y el modificador NOT con
!. Se podría agregar a la linea del <command>if</command>
anterior la condición "y además no posee el archivo <filename>SinConfiguracion</filename>" de la siguiente forma:</para>

  <screen>
if [ -e $HOME/.configuracion -a ! -e SinConfiguracion]
  </screen>

  <para>Ejemplos mucho más interesantes de analizar se pueden encontrar en el
directorio <filename>/etc/rc.d/init.d</filename>
    <footnote>
      <para>Este directorio puede variar según las distribuciones, también puede ser <filename>/etc/init.d</filename></para>
    </footnote>
.</para>
</section>
