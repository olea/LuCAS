<?xml version="1.0" encoding="ISO-8859-1" ?><!-- -*- xml -*- -->
 
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
       "file:///usr/share/sgml/docbook/dtd/xml/4.1.2/docbookx.dtd">
 
<!--
\porcion{Códigos de salida}
\autor{\NC}
\colaborador{\RR}
\revisor{\}
\traductor{}
-->
 
<section>
  <title>Códigos de salida</title>

  <para>Una vez que termina cada programa, puede brindar al entorno un
<emphasis>Código de salida</emphasis> para que otros programas o el intérprete
sepan como concluyó la aplicación.</para>

  <para>Tomemos un ejemplo de la vida de un administrador. Es común que la
administración sea remota, por lo que vamos a considerar que en
nuestra tarea no tenemos conocimiento de lo que está pasando en una
máquina alejada en la que se está ejecutando
<command>arreglar-base-de-datos</command>.</para>

  <para>El script <command>arreglar-base-de-datos</command> es un script que corrige
posibles errores en una hipotética gran base de datos. Y el resultado de
esa corrección interesa, especialmente, si no se pudo arreglar.</para>

  <para>Vamos a suponer que hay 2 posibles alternativas:</para>

  <variablelist>
    <varlistentry>
      <term><emphasis>Salida exitosa</emphasis></term>
      <listitem>
	<para> La base de datos no tuvo ningún error. En este
  caso sólo hay que agregar al archivo <filename>/var/log/BD.registro</filename> una línea con la fecha de comprobación y el responsable en ese momento.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><emphasis>Se detectaron errores pero no se repararon</emphasis></term>
      <listitem>
	<para>Esta situación es
  peor. Hay que escribir información detallada
  en <filename>/var/log/BD.registro</filename> y además enviar correo-e
          <footnote>
	    <para>Por ridículo que parezca es la forma correcta de mencionar a los
<emphasis>emails</emphasis></para>
	  </footnote>
 a una lista de encargados y directivos de la empresa.</para>
      </listitem>
    </varlistentry>
  </variablelist>

  <para>Para diferenciar cada caso se asigna un <emphasis>código de
salida</emphasis> a cada uno. Luego de ejecutar <command>arreglar-base-de-datos</command> se verifica en base al código, los comandos a ejecutar.</para>

  <para>El algoritmo sería algo similar a:</para>

  <screen>
if arreglar-base-de-datos
then
  date >> /var/log/BD.registro
  echo $RESPONSABLE_BD >>  /var/log/BD.registro
else
  informar-errores.sh >> /var/log/BD.registro
  enviar-mail "Errores en BD" lista-encargados lista-directivos
fi
  </screen>

  <para>¿Y dónde están los códigos de salida? Bueno, el <emphasis>comando
  interno</emphasis>
    <footnote>
      <para><emphasis>Built-in command</emphasis> en inglés.</para>
    </footnote> 
<command>if</command> analiza el código de salida, y si es
<emphasis>0</emphasis> (cero) ejecuta la lista de comandos después del
<command>then</command>, en caso contrario (y si existe) la lista de comandos
después del <command>else</command> hasta encontrar un <command>fi</command>.</para>

  <para>Por lo tanto el script <command>arreglar-base-de-datos</command> tiene
que devolver <emphasis>0</emphasis> en caso de éxito. Éste es  el
comportamiento normal de la mayoría de los comandos en Linux y otros Unix, y un valor para varios errores.</para>

  <para>Las páginas <command>man</command> suelen tener una sección llamada
<emphasis>Exit Status</emphasis> que contiene los códigos que devuelve el programa.</para>

</section>
