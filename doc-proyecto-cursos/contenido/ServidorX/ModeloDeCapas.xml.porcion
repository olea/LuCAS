<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
       "file:///usr/share/sgml/docbook/dtd/xml/4.1.2/docbookx.dtd">

<!--
% Nota: Pensar un mejor título
\porcion{Modelo de capas del protocolo X11}
\autor{\LDP}
\colaborador{}
\revisor{}
\traductor{}
-->
<section>
	<title>Porción: Modelo de capas del protocolo X11</title>
	<para>
		El hecho de que el servidor X haya sido diseñado para ser portable a
		diferentes arquitecturas hizo que el funcionamiento de éste con las
		aplicaciones gráficas funcionen en modo de capas. La división de
		areas en distintas capas es algo que se ve en muchos aspectos del
		funcionamiento de GNU/Linux dada la facilidad de mantenimiento de los
		programas que se logra.
	</para>
	<para>
		<figure id="fig:ModeloDeCapasConKDE">
			<title>
				Modelo de capas con el entorno KDE
			</title>
			<graphic fileref="imagenes/ServidorX/ModeloDeCapasConKDE.png" scale="40"/>
		</figure>
		
		En la figura <xref linkend="fig:ModeloDeCapasConKDE"/> vemos que como capa inferior, se
		tiene al hardware, el cual interactúa con su capa inmediata superior,
		que en este caso es el servidor X, es decir que X se encarga de lidiar
		con las particularidades de cada tarjeta de vídeo, manejar las
		funciones de red, y el dibujado básico en pantalla
			<footnote>
				<para>
					Cuando se habla de dibujado básico, se está hablando de pintado de puntos en
					pantalla.
				</para>
			</footnote>
		Estas funciones de dibujado, X se las provee a su capa
		superior la cual dependerá del entorno gráfico que se esté
		manejando. En el caso de KDE por ejemplo, la capa superior a X es la
		biblioteca llamada Qt, ésta provee las funciones de armado de
		ventanas, movimiento de las mismas, y dibujado de botones, flechas,
		punteros, etc. las cuales son aprovechadas por la capa correspondiente
		a las <emphasis>kde-libs</emphasis> es decir, a las bibliotecas de KDE dedicadas a
		dar una colección de funciones de construcción de cajas de diálogos
		estándar, menúes, etc. a las aplicaciones KDE y al entorno KDE
		propiamente dicho.
	</para>
	<para>
		En el caso del entorno gráfico GNOME
		<footnote>
			<para>
				Se dan estos dos ejemplos ya que son los entornos gráficos mas populares en estos		
				días.
			</para>
		</footnote>
		el esquema de capas es muy similar al anterior, como se ve en
		la figura <xref linkend="fig:ModeloDeCapasConGNOME"/>
	</para>
	<para>
		<figure id="fig:ModeloDeCapasConGNOME">
			<title>Modelo de capas con el entorno GNOME</title>
			<graphic fileref="imagenes/ServidorX/ModeloDeCapasConGNOME.png" /> 
		</figure>
	</para>
	<para>
		Lo único que cambia son las capas por encima del servidor X, y es por
		eso que es posible tener en un mismo equipo varios entornos gráficos y
		usar el que mas se ajuste a las necesidades del usuario, a diferencia
		de otros sistemas operativos que sólo poseen una opción.
	</para>
	<para>
		Lo interesante del modelo de capas, es que éstas son intercambiables:
		si por ejemplo se cambia la tarjeta de vídeo (la capa mas inferior),
		no es necesario tener que cambiar el resto del conjunto de programas,
		sólo basta con que la capa superior (el servidor X en este caso) pueda
		comunicarse con la nueva capa de hardware para que todo funcione
		correctamente. Otra ventaja es que si el desarrollo de las diferentes
		capas se realiza por diferentes grupos de personas, cuando se
		actualiza una de las capas el conjunto en su totalidad se actualiza
		automáticamente, si por ejemplo el equipo GNOME lanza su nueva versión
		de la biblioteca GTK+, solamente hará falta instalar esta nueva
		versión y el resto de los programas que conforman las otras capas no
		deberían tocarse, quedando todo funcionando
		correctamente
		<footnote>
			<para>
				Esto es lo que normalmente ocurre, pero a veces
				puede tomar un poco más de trabajo dependiendo del nivel de
				actualización.
			</para>
		</footnote>			
	</para>
</section>

