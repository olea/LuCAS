<?xml version="1.0" encoding="ISO-8859-1" ?><!-- -*- xml -*- -->

<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
       "file:///usr/share/sgml/docbook/dtd/xml/4.1.2/docbookx.dtd">

<!--
\porcion{Configuración y utilización de Leafnode}
\autor{Carlos Pérez Pérez}
\colaborador{\SGG}
\revisor{}
\traductor{}
-->

<section>
  <title>Configuración y utilización de
  <productname>Leafnode</productname></title>

  <para>La configuración de <productname>Leafnode</productname> es
    relativamente sencilla, se concentra en un sólo archivo.  Para
    RedHat lo encontraremos en
    <filename>/etc/leafnode/config</filename>, que es donde se instala
    por defecto. Para Debian en
    <filename>/etc/news/leafnode/config</filename>.  Este archivo
    tiene varias opciones que vamos a explicar a continuación:</para>

  <variablelist>
    <varlistentry>
      <term>server</term>
      <listitem>
	<para>el servidor al que se conectará Leafnode.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>supplement</term>
      <listitem>
	<para>un servidor de apoyo para bajar aquellas noticias que no
	encontremos en el principal o cuando éste no esté disponible.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>expire</term>
      <listitem>
	<para>el tiempo máximo que permanecerán las noticias en el
	servidor Leafnode.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>username</term>
      <listitem>
	<para>nombre de usuario para acceder al servidor.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>password</term>
      <listitem>
	<para>la clave para permitir el acceso.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>port</term>
      <listitem>
	<para>puerto al que se conectará Leafnode para bajar las
	noticias si es diferente del 119.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>timeout</term>
      <listitem>
	<para>máximo tiempo de espera si no se conecta.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>nodesc</term>
      <listitem>
	<para>aquí decidimos si queremos bajar los grupos con
	descripciones, valor 1, o sin descripciones, por defecto,
	valor 0.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>filterfile</term>
      <listitem>
	<para>fichero en el que se encuentran los filtros.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>groupexpire</term>
      <listitem>
	<para>tiempo de caducidad de las noticias dentro de un grupo
	determinado.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>maxfetch</term>
      <listitem>
	<para>número máximo de noticias que se bajarán desde el
	servidor en una sesión.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>initialfetch</term>
      <listitem>
	<para>el número de noticias que se obtienen la primera vez que
	Leafnode baja un grupo de noticias. Útil cuando se trata de
	grupos que tengan mucho tráfico, de esta manera se bajarán los
	más actuales.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>delayboy</term>
      <listitem>
	<para>para bajar sólo los encabezados en un primer momento y,
	posteriormente, los cuerpos de aquellas noticias que hayamos
	seleccionado con el lector de noticias. Hay que tener cuidado
	porque da problemas con el lector de noticias del
	Netscape.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>maxcrosspost</term>
      <listitem>
	<para>número máximo al que se ha enviado una noticia, si
	excede el número, la noticia no será almacenada.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>maxage</term>
      <listitem>
	<para>con esta opción indicamos la antigüedad máximo de las
	noticias a bajar.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>maxlines</term>
      <listitem>
	<para>número máximo de líneas que puede contener la noticia.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>maxbytes</term>
      <listitem>
	<para>tamaño máximo de las noticias, para evitar la descarga
	de binarios.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>timeout_short</term>
      <listitem>
	<para>indica el número de días que Leafnode mantendrá un grupo
	de noticias antes de darlo de baja cuando no tiene a nadie
	suscrito al mismo.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>timeout_long</term>
      <listitem>
	<para>es el número de días que Leafnode seguirá bajando
	noticias a un grupo que nadie está leyendo, luego lo dará de
	baja.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>timeout_active</term>
      <listitem>
	<para>con esta opción indicamos a Leafnode un intervalo en
	días para que actualize la lista de grupos desde los
	servidores.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>create_all_links</term>
      <listitem>
	<para>para aquellos que usen lectores de noticias que permitan
	puntuar/matar, valor 1 para activar, 0 para desactivar.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>hostname</term>
      <listitem>
	<para>nombre del servidor de noticias que saldrá en la noticia
	en el caso de que Leafnode no lo resuelva de forma
	satisfactoria.</para>
      </listitem>
    </varlistentry>
  </variablelist>

<!-- Introduccir ejemplo de configuración. A ser posible con los -->
<!-- comentarios pasados al español. -->

  <para>Este es el fichero de configuración que viene con
<productname>Leafnode</productname>, he optado por dejar los
comentarios en inglés y poner, opcionalmente, algunos comentarios en
español al final de cada sección.</para>

<screen>
## This is the NNTP server leafnode fetches its news from.
## You need read and post access to it. Mandatory.

server = news.servidor_principal.com

#Puede que necesite poner usuario y clave para lo que usaremos:
#username = usuario
#password = clave
#******************************************************************

## Unread discussion threads will be deleted after this many days if
## you don't define special expire times. Mandatory.

expire = 5

#Este es el tiempo de caducidad por defecto de todos los grupos.
#******************************************************************

# Todo lo que viene después son parámetros opcionales.
##
## All the following parameters are optional
##

## I have free access to my news server. If you don't have, comment out
## the following two lines and change them accordingly.
## username = name
## password = pass

## Standard news servers run on port 119. If your newsserver doesn't, comment
## out the following line and change it accordingly.
# port = 8000
#El puerto en el que escucha leafnode es el 119, con port se puede cambiar.
#***************************************************************************

## This is another news server which stores some groups that are not
## available on the first one. You can define username, password and port
## for each server separately.

server = news.un_servidor.com
username = usuario
password = clave
server = news.otro_servidor.com.es
username = usuario
password = clave

#Esta parte es si se necesita tener servidores adicionales por si el principal
#falla o para complementar las noticias.
#*****************************************************************************

## This is a news server which does not understand the
## "LIST NEWSGROUP news.group" command. For this reason, we don't try to
## download newsgroups descriptions when getting new newsgroups. This is
## achieved by putting "nodesc = 1" somewhere behind the server
## line.
# server = broken.upstream.server
# nodesc = 1

## Here we have another news server which has a very slow connection. For
## that reason, we wait a full minute before we give up trying to connect.
## The default is 10 seconds.
# server = really.slow.snail
# timeout = 60

## Non-standard expire times (glob(7) wildcard constructs possible)
# groupexpire comp.os.linux.* = 5 # groups too big to hold articles 20 days
# groupexpire any.local.newsgroup = 100 # very interesting, hold articles longer
#groupexpire es.comp.os.linux.* = 20

## Never fetch more than this many articles from one group in one run.
## Be careful with this; setting it much below 1000 is probably a bad
## idea.
maxfetch = 100

## Fetch only a few articles when we subscribe a new newsgroup. The
## default is to fetch all articles.
initialfetch = 30

## If you want to use leafnode like an offline newsreader (e.g. Forte
## Agent) you can download headers and bodies separately if you set
## delaybody to 1. In this case, fetch will only download the headers
## and only when you select an article, it will download the body.
## This can save a huge amount of bandwith if only few articles are really
## read from groups with lots of postings.
## This feature works not very well with Netscape, though (which is not
## a fault of Leafnode).
delaybody = 0

## To avoid spam, you can select the maximum number of crosspostings
## that are allowed in incoming postings. Setting this below 5 is
## probably a bad idea. The default is unlimited crossposting.
maxcrosspost = 2

## If you suffer from repeatedly receiving old postings (this happens
## sometimes when an upstream server goes into hiccup mode) you can
## refuse to receive them with the parameter "maxage" which tells the
## maximum allowed age of an article in days. The default maxage is 10
## days.
maxage = 10

## maxlines will make fetch reject postings that are longer than a certain
## amount of lines.
# maxlines = 100

## minlines will make fetch reject postings that are shorter than a certain
## amount of lines.
# minlines = 2

## maxbytes will make fetch reject postings that are larger
maxbytes = 1048576
#maxbytes = 5120

## timeout_short determines how many days fetch gets a newsgroup which
## has been accidentally opened. The default is two days.
# timeout_short = 1

## timeout_long determines how many days fetch will wait before not getting
## an unread newsgroup any more. The default is seven days.
# timeout_long = 6

## timeout_active determines how many days fetch will wait before re-reading
## the whole active file. The default is 90 days.
# timeout_active = 365

## If you want to have your newsreader score/kill on Xref: lines, you might
## want to uncomment this.
# create_all_links = 1

## If you want to filter out certain regular expressions in the header,
## create a "filterfile" (how this is done is explained in the README)
## and set
filterfile = /etc/leafnode/filters

## If your newsreader does not supply a Message-ID for your postings
## Leafnode will supply one, using the hostname of the machine it is
## running on.  If this hostname is not suitable, this parameter can be
## used to override it.  Do not use a fantasy name, it may interfere with
## the propagation of your messages.  Most modern newsreaders do provide
## a Message-ID.
# hostname = host.domain.country
</screen>

  <para><parameter>Leafnode</parameter> consta de una serie de
    programas que tienen como objetivo el control del servidor:</para>

  <variablelist>
    <varlistentry>
      <term>fetchnews</term>
      <listitem>
	<para>con este comando se prepara a Leafnode para albergar los
	  grupos de noticias y para bajar las noticias cada vez que
	  queramos. Presenta una serie de modificadores que nos ayudan
	  a controlar su funcionamiento. Los modificadores más
	  destacados son <option>v</option>, <option>f</option>,
	  <option>x</option>, <option>l</option>, <option>n</option> y
	  <option>P</option>. Con el modificador <option>v</option>
	  hacemos que pase a modo de depuración, de esta manera irá
	  mostrando en pantalla los mensajes que va generando, con lo
	  que podemos ver el estado actual o los mensajes de error si
	  los hubiera. La profundidad de depuración viene marcada por
	  la cantidad de <option>v</option> que se pongan. El
	  modificador <option>f</option> se utiliza para volver a leer
	  las listas de grupos desde los servidores, puede tardar
	  tiempo y se utiliza cuando Leanode comienza a dar problemas
	  al servir las noticias. El modificador <option>x #</option>
	  nos permite bajar # noticias extras desde el exterior. El
	  modificador <option>l</option> se usa para que Leafnode no
	  utilice los servidores suplementarios. Con el modificador
	  <option>n</option> se puede comunicar a Leafnode que no
	  elimine los grupos que no se leen, esto es, cuando nos
	  inscribimos en un grupo que nos interesa pero que no leemos
	  desde hace tiempo. El modificador <option>P</option> se
	  utiliza para mandar las noticias que hayamos recibido
	  localmente a los servidores externos pero no bajar ninguna
	  noticia nueva.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>texpire</term>
      <listitem>
	<para>este es el programa que retira del servidor todas
	  aquellas noticias que superen el tiempo dado en la directiva
	  expire o groupexpire. Sus modificadores son dos,
	  <option>v</option> y <option>f</option>. El modificador
	  <option>v</option> es el mismo que en el comando
	  anterior. El modificador <option>f</option> se utiliza para
	  forzar la caducidad de las noticias independientemente del
	  tiempo de acceso.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>applyfilter</term>
      <listitem>
	<para>con este programa se busca dentro de las noticias
	  almacenadas en el directorio <filename
	  class="directory">news</filename> todas aquellas que
	  coincidan con los patrones dados dentro del fichero
	  <filename>filters</filename> para ser retiradas.  Su
	  sintaxis es <literal>applyfilter grupo de
	  noticias</literal>, ha de notarse que se debe dar el nombre
	  completo del grupo, por ejemplo, para el grupo misc de la
	  jerarquía ecol ha de ponerse <literal>applyfilter
	  es.comp.os.linux.misc</literal>.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>checkgroups</term>
      <listitem>
	<para>se utiliza para actualizar las descripciones de los
	grupos.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>newsq</term>
      <listitem>
	<para>con este vemos las noticias que hay en la cola listas
	para ser enviadas al servidor en la próxima conexión.</para>
      </listitem>
    </varlistentry>
  </variablelist>

  <figure id="fig:knode">
    <title>Viendo las noticias en
    <productname>knode</productname></title>
    <graphic fileref="imagenes/ServidoresDeNoticias/knode.png"
    scale="100"/>
  </figure>

</section>
