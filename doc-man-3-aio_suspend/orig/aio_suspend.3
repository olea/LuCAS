.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.TH AIO_SUSPEND 3 2003-11-14  "" "Linux Programmer's Manual"
.SH NAME
aio_suspend \- wait for asynchronous I/O operation or timeout
.SH SYNOPSIS
.nf
.sp
.B "#include <aio.h>"
.sp
.BI "int aio_suspend(const struct aiocb * const " cblist [],
.br
.BI "                int " n ", const struct timespec *" timeout );
.sp
.fi
.SH DESCRIPTION
The
.B aio_suspend
function suspends the calling process until at least one of the
asynchronous I/O requests in the list
.I cblist
of length
.I n
have completed, a signal is delivered, or
.I timeout
is not NULL and the time interval it indicates has passed.
.LP
Each item in the list must either be NULL (and then is ignored),
or a pointer to a control block on which I/O was initiated using
.BR aio_read (3),
.BR aio_write (3),
or
.BR lio_listio (3).
.LP
If CLOCK_MONOTONIC is supported, this clock is used to measure
the timeout interval.
.SH "RETURN VALUE"
If this function returns after completion of one of the indicated
requests, it returns 0. Otherwise it returns \-1 and sets
.I errno
appropriately.
.SH ERRORS
.TP
.B EAGAIN
The call was ended by timeout, before any of the indicated operations
had completed.
.TP
.B EINTR
The call was ended by signal.
(Possibly the completion signal of one of the operations we were waiting for.)
.SH NOTE
One can achieve polling by using a non-NULL
.I timeout
that specifies a zero time interval.
.SH "CONFORMING TO"
POSIX 1003.1-2003
.SH "SEE ALSO"
.BR aio_cancel (3),
.BR aio_error (3),
.BR aio_fsync (3),
.BR aio_read (3),
.BR aio_return (3),
.BR aio_write (3)
