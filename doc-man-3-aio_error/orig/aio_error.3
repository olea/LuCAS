.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.TH AIO_ERROR 3 2003-11-14  "" "Linux Programmer's Manual"
.SH NAME
aio_error \- get error status of asynchronous I/O operation
.SH SYNOPSIS
.sp
.B "#include <aio.h>"
.sp
.BI "int aio_error(const struct aiocb *" aiocbp );
.sp
.SH DESCRIPTION
The
.B aio_error
function returns the error status for the asynchronous I/O request
with control block pointed to by
.IR aiocbp .
.SH "RETURN VALUE"
This function returns EINPROGRESS if the request has not been
completed yet. It returns ECANCELED if the request was cancelled.
It returns 0 if the request completed successfully.
Otherwise an error value is returned, the same value that would have
been stored in the
.I errno
variable in case of a synchronous
.IR read ,
.IR write ,
.IR fsync ,
or
.I fdatasync
request.
On error, the error value is returned.
.SH ERRORS
.TP
.B EINVAL
.I aiocbp
does not point at a control block for an asynchronous I/O request
of which the return status (see
.BR aio_return (3))
has not been retrieved yet.
.SH "CONFORMING TO"
POSIX 1003.1-2003
.SH "SEE ALSO"
.BR aio_cancel (3),
.BR aio_fsync (3),
.BR aio_read (3),
.BR aio_return (3),
.BR aio_suspend (3),
.BR aio_write (3)
