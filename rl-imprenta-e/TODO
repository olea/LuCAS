- Terminar el SPEC para RH: conseguir que todas las llamadas a módulos perl
  funcionen (esto parece que ya está bastante acabado)
- Preparar una página man para incluir en el paquete (hacerla con docbook, y
  luego desde el spec, registrarla en scrollkeeper)
- Traducir los comentarios y variables del código a inglés
- Pruebas exhaustivas
- Incorporar al cvs el material php de Gaspar (luego ya veremos cómo acaba
  quedando).
- Arreglar los problemas de login con cvs
- Añadir dependencia a tar (resuelto)
- Cambiar la configuración de la aplicación (/etc/imprenta-e):
   * los registros de los documentos no deben ir en
     /etc/imprenta-e/ sino en un directorio, por ejemplo /var/spool/imprenta-e
   * ¿Cuál debe ser la configuración? Al menos:
           ¬ ruta de acceso al registro de documentos
                   Cada registro es el documento OMF con los metadatos del
                   documento, que debe incluir también su URL fuente.
           ¬ ruta de acceso al directorio de publicación
                   Del directorio de publicación colgarían los directorios que
                   contienen a los documentos. Idealmente cada uno de estos
                   directorios tendría una estructura parecida a
                   http://olea.org/proyectos/web_publishing_estructure/index.html,
                   pero esto podrá esperar
           ¬ por cada formato implementado que lo permita, hoja de estilo
             corporativa.
- Si al realizar el cambio anterior se echan datos en falta será necesario
  estudiar los metadatos de los formatos OMF y AOP y modificarlos en lo
  necesario.
- Evitar que aparezcan rastros del procesado de los documentos colgando de /
- Añadir opciones de la línea de órdenes:
        -h/--help ayuda
        -u/--update actualizar documentos
        etc
      

## Comentarios ##

- Creo que el formato prioritario debería ser Docbook XML, al menos el
  primero en tener acabado
- Al menos con xsltproc es posible usar añadidos a las hojas de estilo para
  perfilar o ampliar el manejo de marcas. Esto puede ser conveniente en
  algunos casos. Pero esta necesidad tiene menos prioridad.
- No conviene usar Linuxdoc-SGML, al menos por ahora
- Debe ser posible manejar otros formatos más o menos estructurados, aunque
  sea con limitaciones: presentaciones, html, documentos latex... esto tiene
  la menor prioridad de todas.
