<?xml version="1.0"?>
<!-- <!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"> -->
<chapter id="chap-fases-migracion">
  <title>Descripción técnica de las fases de migración</title>
  <sect1>
    <title>Introducción</title>
    <para>Las descripciones técnicas hacen una aproximación más técnica
    a los distintos productos, soluciones y servicios descritos en el
    capítulo 2 en los sistemas de TI en cuestión:</para>
    <para>Se trataron los siguientes aspectos:</para>
    <itemizedlist>
      <listitem>
        <para>Servicios de infraestructura</para>
        <itemizedlist>
          <listitem>
            <para>Servicios de ficheros</para>
          </listitem>
          <listitem>
            <para>Servicios de impresión</para>
          </listitem>
          <listitem>
            <para>Servicios de autenticación</para>
          </listitem>
          <listitem>
            <para>Servicios de red</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>Componentes middleware y de integración</para>
        <itemizedlist>
          <listitem>
            <para>Servicios de Directorio</para>
          </listitem>
          <listitem>
            <para>Modelo de componentes de objetos</para>
          </listitem>
          <listitem>
            <para>Plataformas para sistemas distribuidos y servicios
            web</para>
          </listitem>
          <listitem>
            <para>XML</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>Servicios en Servidores</para>
        <itemizedlist>
          <listitem>
            <para>Groupware y mensajería</para>
          </listitem>
          <listitem>
            <para>Servidores de bases de datos</para>
          </listitem>
          <listitem>
            <para>Servidores Web</para>
          </listitem>
          <listitem>
            <para>Servicios especiales</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>Componentes middleware y de integración</para>
      </listitem>
      <listitem>
        <para>Servicios en Servidores</para>
      </listitem>
      <listitem>
        <para>Aplicaciones de escritorio, incluyendo el paquete
        Office</para>
      </listitem>
    </itemizedlist>
    <para>Las descripciones se centran en la posibilidad técnica de
    migrar productos individuales de Microsoft a soluciones OSS o COLS
    adecuadas. Se analizarán en detalle los siguientes aspectos para
    los componentes individuales de este escenario partiendo del
    escenario de sistemas IT establecido por Windows, descrito en el
    capítulo 2.1:</para>
    <itemizedlist>
      <listitem>
        <para>¿Cual es la situación inicial?</para>
      </listitem>
      <listitem>
        <para>¿Qué funciones importantes están disponibles?</para>
      </listitem>
      <listitem>
        <para>¿Qué interfaces existen y/o a cual hay que dar
        servicio?</para>
      </listitem>
      <listitem>
        <para>¿Cuáles son las características especiales durante la
        operación?</para>
      </listitem>
    </itemizedlist>
    <itemizedlist>
      <listitem>
        <para>¿Qué alternativas están disponibles en OSS o, si aplica,
        en soluciones COLS?</para>
      </listitem>
      <listitem>
        <para>¿Cuáles son las diferencias funcionales?</para>
      </listitem>
      <listitem>
        <para>¿Se cumplen los requerimientos críticos?</para>
      </listitem>
    </itemizedlist>
    <itemizedlist>
      <listitem>
        <para>¿ Qué debe tenerse en cuenta a la hora de migrar?, ¿donde
        están los problemas?, ¿como pueden resolverse?</para>
      </listitem>
      <listitem>
        <para>¿Existen múltiples alternativas?, ¿para quien y/o con que
        propósito pueden utilizarse dichas alternativas?</para>
      </listitem>
      <listitem>
        <para>¿Cómo pueden dichas alternativas integrarse en mundos
        completamente heterogéneos? Si es necesario, ¿Como
        interaccionan entre ellas? (Especialmente con Microsoft,
        compatibilidad e interoperabilidad)</para>
      </listitem>
      <listitem>
        <para>¿Cuales son las repercusiones de la integración potencial
        en un futuro con la linea de productos de Microsoft?</para>
      </listitem>
      <listitem>
        <para>¿Que potenciales existen si el uso de la linea de
        productos de Microsoft continúa?</para>
      </listitem>
      <listitem>
        <para>¿Que funcionalidades adicionales están
        disponibles?</para>
      </listitem>
      <listitem>
        <para>¿Donde residen los mayores cambios?</para>
      </listitem>
      <listitem>
        <para>¿Cubren dichas innovaciones y posibles modificaciones los
        requerimientos críticos?</para>
      </listitem>
      <listitem>
        <para>¿Que debe tenerse en cuenta debido a la independencia de
        los sistemas?</para>
      </listitem>
    </itemizedlist>
    <para>La descripciones normalmente finalizan con una breve
    evaluación. Si existen múltiples alternativas, son soluciones
    comparables e igualmente comentadas, si existe la posibilidad de
    llevarse a cabo.</para>
  </sect1>
  <sect1>
    <title>Sistema de ficheros</title>
    <sect2>
      <title>Perspectiva general</title>
      <para>El resultado de las descripciones detalladas de los
      servicios que se cubren pueden ser resumidas como sigue:</para>
      <para>En el caso de la sustitución directa de un servidor Windows
      NT como sistema de almacenamiento de ficheros, manteniendo fijos
      los clientes Windows, Samba es el sistema idóneo dentro de la
      comunidad de código abierto. Samba se comporta como si de un
      servidor Windows NT se tratase, desde el punto de vista de los
      clientes Windows. Samba esta en continua actualización y soporte,
      no solo por la comunidad sino que también esta creciendo entre
      proveedores de servicios IT.</para>
      <para>Dependiendo de la envergadura de la migración Linux desde
      el punto de vista del cliente, NFS y AFS también son alternativas
      muy interesantes. NFS y AFS están ampliamente extendidos entre
      redes UNIX, pero debe instalarse software adicional en los
      clientes para poder integrar clientes Windows. Un cliente NFS se
      incluye, por ejemplo, en los Servicios de Microsoft Windows para
      UNIX (SFU 3.0). El cliente AFS está disponible libre de cargos y
      con su código fuente en OpenAFS.org. El uso de NFS y AFS en un
      entorno de clientes Windows siempre requiere un gran cambio en
      cuanto a conceptos en comparación con Windows NT.</para>
      <para>El concepto de seguridad de Kerberos, que también oculta el
      directorio activo de Windows 2000, juega un papel importante que
      viene a modernizar la infraestructura IT dentro de un proyecto de
      migración. La posibilidad de ver OpenAFS como alternativa a
      Windows2000 como servidor de ficheros debería ser evaluada con
      más detalle si el cliente final sigue utilizando la linea de
      productos de Windows.</para>
      <para>Los sistemas de ficheros más apropiados para el
      almacenamiento físico de datos en sistemas de discos de
      servidores reales son , por ejemplo, XFS y EXT3. Ambos sistemas
      soportan “journaling”, “quotas” y la asignación de privilegios de
      acceso a nivel de fichero y de directorio. Tanto XFS como EXT3
      soportan atributos extendidos de ficheros como abd POSIX-ACL's
      para garantizar los derechos. Cuando se “mapea/traduce” de
      Windows-ACL a POSIX-ACL debe tenerse cuidado, puesto que la fina
      granularidad con la que los privilegios pueden ser definidas bajo
      Windows, se pierden. Como análisis final, las repercusiones que
      ambas restricciones tienen en dicho caso o si son aceptables,
      deben ser analizadas profundamente.</para>
    </sect2>
    <sect2>
      <title>Windows NT 4</title>
      <sect3>
        <title>Requisitos funcionales</title>
        <para>La funcionalidad general de un sistema basado en red
        consiste en los siguientes puntos:</para>
        <itemizedlist>
          <listitem>
            <para>Recibir (escribir) y entregar (leer) ficheros.</para>
          </listitem>
          <listitem>
            <para>Crear y presentar una estructura de
            directorios.</para>
          </listitem>
          <listitem>
            <para>Administrar y presentar “meta-datos” para directorios
            y ficheros.</para>
          </listitem>
          <listitem>
            <para>Implementar los privilegios de acceso y restricciones
            en ficheros y directorios.</para>
          </listitem>
          <listitem>
            <para>Deshabilitar accesos a ficheros en el caso de que se
            produzca un conflicto.</para>
          </listitem>
        </itemizedlist>
        <para>En la mayoría de los entornos, los servicios de ficheros
        de Windows Nt se utilizan para los siguientes
        propósitos:</para>
        <itemizedlist>
          <listitem>
            <para>Almacenamiento de ficheros específicos de cada
            usuario (directorios /home)</para>
          </listitem>
          <listitem>
            <para>Almacenamiento de los perfiles basados en servidores
            si se requiere soporte optimizado para usuarios que
            interactúan con distintas máquinas.</para>
          </listitem>
          <listitem>
            <para>Almacenamiento de ficheros de grupos, específicos de
            usuarios (carpetas de grupo) que serán utilizadas
            únicamente por un conjunto determinado de usuarios (por
            departamentos, por ejemplo).</para>
          </listitem>
          <listitem>
            <para>Almacenamiento de bases de datos basadas en ficheros
            que serán utilizados por distintos usuarios al mismo tiempo
            (como la base de datos de MS Access pero con “frontent”
            separado).</para>
          </listitem>
          <listitem>
            <para>Almacenamiento de programas (ficheros .exe, ficheros
            .dll, etc de aplicaciones) para evitar la necesidad de
            almacenar dichos ficheros localmente en la máquina
            cliente.</para>
          </listitem>
          <listitem>
            <para>Almacenamiento de sistemas de bases de datos que
            permiten el almacenamiento de datos del usuario en otro
            servidor bajo una ruta “UNC”.</para>
          </listitem>
        </itemizedlist>
        <para>En la práctica, los usos aquí descritos normalmente
        varían mucho en cuanto a detalles según requisitos, que serán
        resaltados en las secciones que siguen.</para>
      </sect3>
      <sect3>
        <title>El sistema de ficheros NTFS4</title>
        <para>El sistema de ficheros NTFS4 es la base del
        almacenamiento y manejo de ficheros bajo Windows NT4.</para>
        <sect4>
          <title>Propiedades</title>
          <para>Las propiedades de NTFS4 incluyen, por ejemplo, lo
          siguiente:</para>
          <para>La carpeta de cada fichero tiene asignado lo que se
          denomina una lista de control de acceso (ACL, Access Control
          List), que se almacena en el mismo fichero o carpeta. La ACL
          contiene lo que se denomina entradas de control de acceso
          (ACE, Access Control Entries) que contienen el SID del grupo
          o usuario y la autorización correspondiente. El acceso es
          también controlado a través de la ACL y es posible
          implementar un sistema de control de acceso granular. La ACL
          debe ser a su vez fragmentada en listas de control de acceso
          al sistema (SACL, System Access Control List) y en listas de
          control de acceso discrecional (DACL, Discretional Access
          Control List): Las DACLs contienen los SID de los grupos y
          usuarios que están autorizados a acceder a dicho objeto o no.
          Las SACLs determinan el modo en que el subsistema monitoriza
          el acceso al objeto.</para>
          <para>En principio, NTFS4 no soporta herencia: Sólo cuando se
          crea un fichero nuevo, los privilegios de la carpeta se
          copian en la ACL (lista de control de acceso) de dicho
          fichero. Cuando los privilegios de la carpeta cambian, la
          herencia de los privilegios de las ACL que contienen los
          ficheros de dicha carpeta, debe ser activada explícitamente.
          Debemos considerar otra característica especial: Un fichero
          que se almacena en la ruta UNC
          \\servidor\\freigabe\\ordner\\subordner puede ser leído por
          un usuario aunque la carpeta “ordner” prohíba su lectura,
          siempre que la carpeta “subordner” lo permita.</para>
          <para>No existe limite en la longitud del nombre de la ruta.
          Se soportan los nombres de ficheros con más de 256
          caracteres. Aparte de nuevas excepciones (como *, \), todos
          los caracteres del conjunto de caracteres Unicode de 16 bits
          pueden ser, teóricamente, utilizados. Los nombres cortos
          corresponden a la convención 8.3. Los genera automáticamente
          el sistema operativo cuando se almacene cualquier directorio
          o fichero. Aunque las mayúsculas y las minúsculas se omitan
          durante el almacenaje, no se discriminarán durante el proceso
          de acceso al fichero.</para>
          <para>Cada carpeta y cada fichero tiene sus atributos
          almacenados en forma de “flags” (protección de escritura,
          archivos, sistemas, ocultos y comprimidos) al igual que la
          fecha en la que se crearon por primera vez, la fecha en la
          que se hizo el último cambio y la fecha del último acceso. El
          grado de compresión depende exclusivamente del contenido del
          fichero.</para>
          <para>NTFS soporta la tecnología de cadenas múltiples. Su
          frecuencia de uso es relativamente baja. Las cadenas
          múltiples deben ser soportadas por la aplicación en cuestión,
          y/o deberá ser programada en la misma. Se habilitarán, por
          ejemplo, en el almacenamiento de recurso Folk de ficheros en
          Macintosh.</para>
          <para>Desde el Service Pack 4, NTFS es capaz de manejar
          “quotas” (limites). La asignación y control de limites de uso
          en disco (quotas) está basada en la propiedad del propietario
          y cubren todo el volumen (dispositivo lógico del servidor de
          ficheros). Debido a restricciones técnicas, el uso de limites
          de espacio en disco debe ser considerada como una excepción
          más que como una regla existente en algunos entornos.</para>
          <para>El tamaño máximo de un fichero en NTFS4 son 2TB
          (terabytes), al igual que la capacidad del dispositivo
          lógico. La capacidad máxima del dispositivo lógico cubre 2TB
          ( teóricamente 16 exabytes). La cantidad real de datos en red
          depende del tamaño del cluster que se utilice durante el
          formateo. El numero de ficheros esta limitado a 232-1.</para>
          <para>NTFS habilita el registro de intentos y accesos
          satisfactorios. De este modo, es posible, por ejemplo,
          diagnosticar repetidamente la eliminación indeseada de
          ficheros .</para>
          <para>Los volúmenes de datos con formato NTFS son
          defragmentados continuamente durante las operaciones. La
          corrección automática (autocorrección) bajo Windows NT 4 no
          existe. Si se desea activar esta herramienta se deberán
          contratar los servicios de una tercera empresa</para>
        </sect4>
        <sect4>
          <title>El sistema de privilegios de NTFS</title>
          <para>Windows reconoce un total de 13 privilegios que pueden
          ser asignados a un objeto dentro del sistema de ficheros (nos
          referiremos a directorios y ficheros como objetos,
          indistintamente) para cada usuario o grupo:</para>
          <itemizedlist>
            <listitem>
              <para>Navegar por carpeta/ ejecutar un fichero.</para>
            </listitem>
            <listitem>
              <para>Listar carpetas / leer fichero.</para>
            </listitem>
            <listitem>
              <para>Leer atributos.</para>
            </listitem>
            <listitem>
              <para>Leer atributos extendidos.</para>
            </listitem>
            <listitem>
              <para>Crear ficheros / escribir datos.</para>
            </listitem>
            <listitem>
              <para>Crear carpetas / agregar datos.</para>
            </listitem>
            <listitem>
              <para>Escribir atributos.</para>
            </listitem>
            <listitem>
              <para>Escribir atributos extendidos.</para>
            </listitem>
            <listitem>
              <para>Eliminar subcarpetas y ficheros.</para>
            </listitem>
            <listitem>
              <para>Eliminar.</para>
            </listitem>
            <listitem>
              <para>Leer privilegios.</para>
            </listitem>
            <listitem>
              <para>Cambiar privilegios.</para>
            </listitem>
            <listitem>
              <para>Transferir privilegios de propietario.</para>
            </listitem>
          </itemizedlist>
          <para>Los cambios en los privilegios de acceso se realizan a
          traves de la pestaña de “configuración de seguridad” del
          diálogo de “propiedades”. Con el fin de encubrir la
          complejidad de los 13 privilegios del sistema que están
          estrechamente relacionados, de los usuarios promedio, esta
          pestaña ofrece la posibilidad de preseleccionar algunos
          hitos, denominados “privilegios de grupo” como una
          combinación más apropiada de los privilegios individuales.
          Existen 5 privilegios de grupo para ficheros y 6 para
          directorios. Los 13 privilegios individuales se muestran en
          el dialogo de “Entrada de privilegios” que se accede a traves
          de los botones “extender/mostrar/editar”.</para>
          <para>En este contexto, el punto de vista de los privilegios
          de grupo ofrecidos en la configuración de seguridad es
          extremadamente problemático porque la presentación puede
          sugerir fácilmente la falta de algunos privilegios, que de
          echo, existen. En el caso de acceso completo, por ejemplo,
          donde el privilegio de escritura de atributos extendidos es
          el único privilegio que no puede ser heredado, la
          presentación esquemática de la configuración de seguridad
          muestra un dibujo de perfiles de privilegio que habilitan
          únicamente lectura y ejecución. La tabla que sigue muestra
          que combinaciones de privilegios corresponden a que
          privilegios de grupo. Por favor, recuerde que la casilla de
          privilegios de grupo permanecerá activa aunque únicamente
          este activo un único privilegio.</para>
        </sect4>
        <sect4>
          <title>Control de acceso</title>
          <para>El control de acceso a ficheros y directorios a través
          de la red en entornos Windows NT se puede llevar a cabo
          mediante los dos mecanismos siguientes:</para>
          <itemizedlist>
            <listitem>
              <para>Abrir directorios (compartir)</para>
            </listitem>
            <listitem>
              <para>Privilegios NTFS</para>
            </listitem>
          </itemizedlist>
          <para>Para poder acceder a ficheros a través de la red, se
          debe liberar o abrir uno de los directorios del nivel más
          alto. Esta liberación da origen a un ACL que se almacena en
          el registro. Los privilegios para esta operación de
          liberación se restringen a los siguientes niveles:</para>
          <itemizedlist>
            <listitem>
              <para>Lectura</para>
            </listitem>
            <listitem>
              <para>Escritura</para>
            </listitem>
            <listitem>
              <para>Acceso Total</para>
            </listitem>
          </itemizedlist>
          <para>Estos privilegios se aplican de forma absoluta. Esto
          significa que los privilegios NTFS localizados por debajo son
          sobreescritos por los privilegios de liberación. Ejemplo: un
          privilegio de lectura a nivel de liberación impide la
          escritura aun cuando los privilegios NTFS lo permitan.</para>
          <para>Se debe prestar especial atención en entornos Windows
          NT a los privilegios (directivas para privilegios de usuario)
          debido a que esos privilegios pueden ser importantes para los
          servicios de ficheros, por ejemplo, “tomando la propiedad de
          ficheros y objetos” y “grabación de ficheros y
          directorios”.</para>
        </sect4>
        <sect4>
          <title>Concepto de usuarios y grupo</title>
          <para>ada directorio y cada fichero se asignan a un
          propietario que puede ser tanto un grupo como un usuario. El
          usuario que crea el fichero, normalmente se convierte en el
          propietario. Si el usuario es un miembro del grupo de
          administradores, este grupo se convierte en el
          propietario.</para>
          <para>El control de acceso sistemático en el entorno Windows
          NT utiliza con preferencia la asignación de privilegios a
          grupos. La asignación de privilegios a cuentas de usuario
          individuales debería dejarse para sistemas de ficheros
          específicos de usuario.</para>
          <para>En un entorno Windows NT existen los siguientes tipos
          de grupos:</para>
          <itemizedlist>
            <listitem>
              <para>Grupos globales</para>
            </listitem>
            <listitem>
              <para>Grupos locales en servidores miembros</para>
            </listitem>
            <listitem>
              <para>Grupos locales en controladores de dominio</para>
            </listitem>
          </itemizedlist>
          <para>Los grupos locales en los Controladores de Dominio
          difieren de los grupos locales en los Servidores Miembros en
          que, en el caso de los primeros, existen en todos ellos con
          el mismo SID (Identificador de Seguridad).</para>
          <para>Los grupos locales en los Servidores Miembros pueden
          ser anidados (anidación de grupos) con los siguientes
          grupos:</para>
          <itemizedlist>
            <listitem>
              <para>Con los grupos globales del dominio propio</para>
            </listitem>
            <listitem>
              <para>Con los grupos globales de los dominios en los que
              uno confía.</para>
            </listitem>
          </itemizedlist>
          <para>Los grupos globales sólo tienen cuentas de usuario como
          miembros.</para>
          <para>En el ámbito de dominios de Windows NT existen dos
          principios “clásicos” de control de acceso diferentes:</para>
          <itemizedlist>
            <listitem>
              <para>Método U-G-L-R (Usuario-Global-Local-Recurso): El
              usuario es miembro de un grupo global. Este grupo global
              por su lado es miembro de un grupo local en un servidor
              de ficheros. Este grupo local es el único para el que se
              establecen privilegios NTFS en el recurso de ficheros.
              (ver fig. 4)</para>
            </listitem>
            <listitem>
              <para>Método U-G-R (Usuario-Global-Recurso): El usuario
              es miembro de un grupo global. Este grupo global es el
              único para el que se establecen privilegios NTFS en el
              recurso de ficheros. (ver fig. 5)</para>
            </listitem>
          </itemizedlist>
          <para>Una asignación no ambigua de un recurso y un grupo
          local (o grupo global, respectivamente) es una condición para
          que ambos métodos funcionen sin riesgo. Esto significa que el
          grupo es usado por este recurso de forma exclusiva. Si el
          servicio de ficheros está implementado por un cluster, el
          método U-G-L-R tiene el inconveniente que el grupo local en
          el nodo servidor no puede tener el mismo SIDs. Esto puede
          remediarse configurando los nodos como controladores de
          dominio o usando el método U-G-R.</para>
        </sect4>
      </sect3>
      <sect3>
        <title>Herramientas</title>
        <para>Windows NT ofrece una selección limitada de herramientas
        para la gestión de ficheros, carpetas y sus privilegios.</para>
        <para>Con la interface gráfica de usuario:</para>
        <itemizedlist>
          <listitem>
            <para>Explorador NT (explorer.exe)</para>
          </listitem>
          <listitem>
            <para>Gestor de fichero (filemanager.exe)</para>
          </listitem>
        </itemizedlist>
        <para>Y sólo en la línea de comandos:</para>
        <itemizedlist>
          <listitem>
            <para>calcs</para>
          </listitem>
          <listitem>
            <para>Herramientas del Kit de Recursos: xcacls, scopy,
            etc.</para>
          </listitem>
        </itemizedlist>
        <para>Las herramientas ofrecidas por Windows NT a menudo
        ofrecen menos que la funcionalidad completa.</para>
        <para>El explorador de NT por ejemplo es el mejor ejemplo de
        esto: no es posible establecer el propietario (solo aceptarlo)
        o copiar las ACLs (Listas de Control de Acceso).</para>
        <para>Uno debe por lo tanto asumir que el administrador de un
        entorno NT utilice herramientas de terceros fabricantes o
        desarrolle sus propios scripts (como Perl) para facilitar la
        administración o para ejecutar tareas muy especiales.</para>
        <para>Esto hace que la estructura de privilegios mostrada por
        un Explorador de NT difiera de los verdaderos accesos
        concedidos.</para>
      </sect3>
    </sect2>
  </sect1>
  <sect1>
    <title>Servicios Web</title>
    <sect2>
      <title>Resumen</title>
      <para>Los servicios web permiten la integración de diferentes
      plataformas y aplicaciones basada en estándares y de una manera
      independiente del fabricante.</para>
      <para>Tanto el entorno de trabajo de .NET como J2EE proporcionan
      una plataforma integrada para el desarrollo de servicios
      web.</para>
      <para>J2EE y .NET son igualmente adecuados para el desarrollo de
      aplicaciones de este tipo. Otras características comunes son: 
      <itemizedlist spacing="compact" mark="dash">
        <listitem>
          <para>Arquitectura de 3 capas (3-tier)</para>
        </listitem>
        <listitem>
          <para>Orientación al componente, optimizados para
          arquitecturas distribuidas</para>
        </listitem>
        <listitem>
          <para>Orientación a red</para>
        </listitem>
        <listitem>
          <para>Internet como infraestructura central</para>
        </listitem>
        <listitem>
          <para>El navegador de internet como principal interficie de
          usuario, "clientes enriquecidos" como interficie
          secundaria</para>
        </listitem>
      </itemizedlist></para>
      <para>Las diferencias entre las dos plataformas ya fueron
      esquematizadas junto a la presentación del Framework de
      .NET.</para>
      <para>Debido a su alta flexibilidad y a su independencia tanto de
      fabricante como de plataforma, J2EE es el sistema a escoger. De
      esta forma también se siguen las recomendaciones de la SAGA 
      <footnote>
        <para>Standards und Architekturen fÃŒr
        E-Government-Anwendungen, Version 1.1, KBSt Publication Series,
        ISSN 0179-7263, Vol. 56, February 2003, 
        <ulink url="http://www.kbst.bund.de/saga">
        http://www.kbst.bund.de/saga</ulink></para>
      </footnote></para>
      <para>Pero, Â¿qué hay sobre la interoperatividad entre .NET y
      J2EE? En lo que a servicios web se refiere, dicha
      interoperatividad debería ser conseguida mediante la adopción por
      todas las partes implicadas de los estándares correspondientes
      (XML, SOAP, WSDL, UDDI). El único problema en este contexto es
      que SOAP, en su versión actual 1.1, todavía permite demasiada
      libertad, lo que puede significar la pérdida de interoperatividad
      en la práctica. De todas formas, la interoperatividad debe ser el
      objetivo de los servicios web. Este es un aspecto a mejorar,
      sobretodo con la versión 1.2 de SOAP.</para>
    </sect2>
    <sect2>
      <title>Fundamentos</title>
      <para>Un servicio web es un servicio el cual puede ser accedido
      mediante una dirección URL (Uniform Resource Alocator) por un
      cliente. El requerimiento crucial es que la implementación del
      servicio es completamente transparente para el cliente. Un web
      service puede ser considerado como una "caja negra" con cierta
      funcionalidad la cual puede ser usada de forma flexible sin tener
      que conocer los detalles de su implementación. Los servicios web
      ofrecen sus funciones al mundo exterior mediante interficies bién
      definidas. Dichas interficies son también denominadas Web Service
      Contract. Dicho contrato está descrito en un lenguaje
      específicamente desarrollado para ese propósito, esto es, el
      WebService Description Language (
      <acronym>WSDL</acronym>) (siendo éste un fichero XML). Los
      desarrolladores pueden usarlo como base para combinar servicios
      muy variados entre sí para formar una aplicación completa. Estos
      servicios pueden ser encontrados usando UDDI (Universal
      Description Discovery and Integration). 
      <acronym>UDDI</acronym>es una especificación basada en estándares
      para describir y encontrar servicios web, esto es, un repositorio
      para servicios web. Las primeras implementaciones han sido
      lanzadas ya por IBM, Microsoft y otros fabricantes.</para>
      <para>En contraste con las tecnologías de componentes actualmente
      en uso, los servicios web no utilizan un protocolo de objetos
      específico, como pueden ser DCOM, IIOP o RMI, porque su fácil
      utilización normalmente requiere una infraestructura homogénea
      tanto en el cliente como en el servidor. Los servicios web se
      basan en otra aproximación. Se fundamentan en estándares de
      internet y utilizan el "mínimo común denominador", esto es, HTTP
      y XML (ver capítulo 3.10). Un cliente envía un mensaje
      empaquetado en XML vía HTTP a un servidor que contesta a la
      petición enviando otro mensaje en XML. Esto significa que los
      servicios web son independientes de lenguajes de programación
      concretos o de plataformas particulares. Mientras los dos
      extremos estén de acuerdo en el formato de los mensajes y se
      comuniquen mediante una secuencia de llamada común, el tipo de
      implementación del servicio (servicio web) es de una importancia
      secundaria. Puede usar todas las opciones de la plataforma en la
      que es utilizado. 
      <acronym>SOAP</acronym>es la generalización de este principio. El
      llamado Simple Object Access Protocol define como deben
      construirse los mensajes XML y como debe formarse la secuencia de
      llamada. Esto quiere decir que las aplicaciones más dispares
      funcionando en plataformas diferentes pueden ser combinadas e
      integradas en soluciones existentes vía internet. El único
      prerequisito es que las aplicaciones usen SOAP para comunicarse
      entre ellas. El propio SOAP puede utilizar diferentes protocolos
      (como HTTP, SMTP). SOAP es un simple y poco complicado mecanismo
      para intercambiar información tipada y estructurada entre
      sistemas en un entorno descentralizado y distribuido usando XML.
      La desventaja de SOAP es, de todas formas, que es relativamente
      lento. SOAP está formado por tres partes. El envoltorio SOAP
      define un entorno de trabajo (framework, N.T.) para cada mensaje.
      Informa al recipiente del contenido del mensaje, a quién va
      dirigido y si se trata de un mensaje obligatorio u opcional. Esto
      se sigue de las reglas que definen, dentro del entorno de SOAP,
      como son codificados los datos (por ejemplo, números). XML
      incluye reglas que permiten un alto grado de flexibilidad. SOAP
      es menos flexible debido a que tiene definido un set de reglas
      más limitado, aunque esto no supone ningún impedimento.</para>
      <para>Los servicios web permiten la integración de diferentes
      plataformas y aplicaciones de manera independiente del fabricante
      basándose en estándares.</para>
      <para>Ambos, el entorno de trabajo de .NET y J2EE proporcionan
      una plataforma integrada para el desarrollo de servicios
      web.</para>
    </sect2>
    <sect2>
      <title>Servicios web .NET</title>
      <para>El entorno de trabajo de .NET (ver capítulo 3.8.2) soporta
      el desarrollo de servicios web profesionales. Esto comporta una
      reedición de Windows DNA (Distributed interNet
      Architecture).</para>
      <para>.NET incluye su propio nivel de servicio para servicios
      web. La ilustración siguiente muestra la interacción entre los
      módulos individuales en lo que respecta a servicios web. 
      <figure>
        <title>Entorno de trabajo Microsoft .NET</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="imagenes/f28.png" />
          </imageobject>
          <textobject>
            <phrase>Arquitectura de 
            <application>Apañao</application></phrase>
          </textobject>
        </mediaobject>
      </figure></para>
    </sect2>
  </sect1>
</chapter>
