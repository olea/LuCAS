.\" Written by Michael Haardt, Fri Nov 25 14:51:42 MET 1994
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Added siglongjmp, Sun Mar  2 22:03:05 EST 1997, jrv@vanzandt.mv.com
.\" Modifications, Sun Feb 26 14:39:45 1995, faith@cs.unc.edu
.\" "
.TH LONGJMP 3 1997-03-02 "" "Library functions"
.SH NAME
longjmp, siglongjmp \- non-local jump to a saved stack context
.SH SYNOPSIS
.ad l
.B #include <setjmp.h>
.sp
.nf
.BI "void longjmp(jmp_buf " env ", int " val );
.BI "void siglongjmp(sigjmp_buf " env ", int " val );
.fi
.ad b
.SH DESCRIPTION
\fBlongjmp()\fP and \fBsetjmp()\fP are useful for dealing with errors
and interrupts encountered in a low-level subroutine of a program.
\fBlongjmp()\fP restores the environment saved by the last call of
\fBsetjmp()\fP with the corresponding \fIenv\fP argument.  After
\fBlongjmp()\fP is completed, program execution continues as if the
corresponding call of \fBsetjmp()\fP had just returned the value
\fIval\fP.  \fBlongjmp()\fP cannot cause 0 to be returned.  If longjmp
is invoked with a second argument of 0, 1 will be returned instead.
.P
\fBsiglongjmp()\fP is similar to \fBlongjmp()\fP except for the type of
its \fIenv\fP argument.  If the \fBsigsetjmp()\fP call that set this
\fIenv\fP used a nonzero \fIsavesigs\fP flag, \fBsiglongjmp()\fP also
restores the set of blocked signals.
.SH "RETURN VALUE"
These functions never return.
.SH "CONFORMING TO"
POSIX
.SH NOTES
POSIX does not specify whether \fBlongjmp\fP will restore the signal
context.  If you want to save and restore signal masks, use
\fBsiglongjmp\fP.
.P
\fBlongjmp()\fP and \fBsiglongjmp()\fP make programs hard to
understand and maintain.  If possible an alternative should be used.
.SH "SEE ALSO"
.BR setjmp (3),
.BR sigsetjmp (3)
