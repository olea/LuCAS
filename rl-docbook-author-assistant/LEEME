El programa se ha desarrollado con cherrypy para facilitar la creación de la herramienta cliente/servidor.

Ficheros incluidos:
-----------------
original.html	Interfaz web que creó Stein Gjoen, sin el código javascript
Tldp.cpy	Documento para procesar con cherrypy
tldpDoc.py	Clases auxiliares para manipular el fichero xml y los procesadores xslt
Makefile	Makefile que he usado para crear el server
TldpData.py  	Funciones auxiliares
TldpServer.py   Versión ya compilada con cherrypy. Server ejecutable.
TldpServer.cfg	Configuración del server por defecto: pool de 5 hilos. Permite lanzar la aplicación sin apache. y puerto 8000. 
static		Directorio con las imágenes y ficheros de traducción experimentales. Por ahora no estoy usando esos ficheros,

Instalación
-----------
Para la instalación es necesario:
- Python (recomendable 2.3) (http://www.python.org)
- Módulos de 4Suite para proceso de xml/xslt (http://cvs.4suite.org)
  Descargar el módulo y ejecutar dentro del directorio como root si se usa el python del sistema) 
  # python setup.py install
  Aquí Uche Ogbuji describe cómo instalarlo como usario http://uche.ogbuji.net/uche.ogbuji.net/tech/akara/?xslt=irc.xslt&date=2003-12-23#04:10:53
- Si se quiere usar el procesador xml/xsl de libxml2 (por defecto no 
  está activado), hay que isntalar libxml2 y libxslt para Python
- En la versión actual no está activada la negociación del idioma, que se piensa hacer con itools 
- cherrypy1.0 (http://www.cherrypy.org) Si se quiere recompilar el programa:
  python [path]cherrypy.py Tldp.cpy (hay un modelo en el Makefile)
- para ejecutar el programa, 
  python TldpServer.py 

Configuración
-------------
El archivo TldpServer.cfg tiene los parámetros de configuración del servidor:
[server]		# opciones del servidor
socketPort=8000		# puerto donde se lanza la aplicación
threadPool=5		# modo del servidor: un pool de 5 hilos. Hay más opciones
logToScreen=0		
logFile=Tldp.log
    
[staticContent]
static=static		# directorio donde van los contenidos estáticos (imágenes, etc)

[session]
storageType=ram		# Modo de almacenamiento para los datos de sesión
#storageFileDir=./tmp
timeout=30

Hay más opciones en el tutorial de cherrypy: uso con apache, ...


Uso
---
1. Lanza el servidor: python TldpServer.py
2. Por en el navegador la url del equipo que tiene el servidor y el puerto donde se lanza la aplicación.
   Ejemplo: http://localhost:8000
   http://midireccion.org:8000

