<?xml version="1.0" encoding="iso-8859-15" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<article>

<articleinfo>

<title>Inalámbrico COMO</title>
<author>
	<firstname>Roberto</firstname>
	<surname>Arcomano</surname>
	<affiliation>
		<address><email>berto@fatamorgana.com</email></address>
	</affiliation>
</author>
<othercredit>
	<firstname>Montse</firstname>
	<surname>Herrera</surname>
	<affiliation>
		<address><email>montse@redlibre.net</email></address>
	</affiliation>
	<contrib>Traduccion al castellano</contrib>
</othercredit>
<othercredit>
	<firstname>Jaime</firstname>
	<surname>Robles</surname>
	<affiliation>
		<address><email>jaime@redlibre.net</email></address>
	</affiliation>
	<contrib>Traduccion al castellano</contrib>
</othercredit>
<othercredit>
	<firstname>Alejandro</firstname>
	<surname>Pallares</surname>
	<affiliation>
		<address><email>alejandro@pallanet.com</email></address>
	</affiliation>
	<contrib>Traduccion al castellano</contrib>
</othercredit>
<othercredit>
	<firstname>Javier</firstname>
	<surname>Fernandez</surname>
	<affiliation>
		<address><email>serrador@arrakis.es</email></address>
	</affiliation>
	<contrib>Revision para TLDP-ES</contrib>
</othercredit>

<pubdate>v1.3, 12 de Noviembre de 2001 - Traducción v1.1, 21 Noviembre de 2001</pubdate>
</articleinfo>

<abstract>

<para>
La inalámbrica es una nueva tecnología de tarjetas de red,
con alta velocidad (hasta 11 Mbps). Este documento explica cómo configurar
una red inalámbrica en GNU/Linux, problemas de compatibilidad, algunos requerimientos geográficos
y más.
La última versión de este documento puedes encontrarla en
<ulink
url="http://www.fatamorgana.com/bertolinux"
>http://www.fatamorgana.com/bertolinux</ulink
>
</para>

</abstract>


<sect1>
	<title>Introduccion</title>
	<para>Introduccion</para>
<sect2>
<title>Introducción</title>

<para>
Este documento explica algunos aspectos sobre Redes Inalámbricas, cómo configurarlas,
y posibles problemas que puedan surgir. A diferencia de la red de cable, la
red inalámbrica requiere algunos trucos para que funcione correctamente. Debes saber algo sobre antenas,
cómo orientarlas, itinerancia y algunos aspectos más. Acepto correcciones.
Puedes encontrar más ayuda en <ulink
url="http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux"
>Jean Tourrilhes Wireless Howto</ulink
>
</para>

<para>
para alguna sugerencia o corrección escribe a mi <ulink
url="mailto:berto@fatamorgana.com"
>dirección de correo</ulink
>
</para>

</sect2>

<sect2>
<title>copyright</title>

<para>
copyright (C) 2000,2001 Roberto Arcomano.
</para>

<para>
Esto documento es libre; puedes redistribuirlo y/o modificarlo bajo los términos
de la Licencia Pública General GNU como se publica por la Fundación para el Software
Libre; o por la versión 2 o (a tu elección) posterior de esta licencia.
</para>

<para>
Este documento se distribuye con la esperanza de que sea útil, pero SIN GARANTÍA ALGUNA;
incluso sin la implícita de MERCANTILISMO o MANTENIMIENTO PARA PROPÓSITO PARTICULAR.
Ver la Licencia Pública General GNU para más detalles. Puedes conseguir una copia de
ella en <ulink
url="http://www.gnu.org/copyleft/gpl.html"
>aquí</ulink
>
</para>

</sect2>

<sect2>
<title>Traducciones</title>

<para>
Si quieres traducir este documento eres libre de hacerlo, sólo tienes que:
</para>

<para>

<orderedlist>
<listitem>

<para>
Comprobar que no existe otra versión en tu LDP (Proyecto de Documentación
Linux) local
</para>
</listitem>
<listitem>

<para>
Mantener toda la sección 'Introducción' (incluidas 'Introducción',
'copyright', 'Traducciones', 'Créditos').
</para>
</listitem>

</orderedlist>

</para>

<para>
¡Gracias por tu traducción!
</para>

</sect2>

<sect2>
<title>Créditos</title>

<para>
Gracias a <ulink
url="http://www.fatamorgana.com"
>Fatamorgana Computers</ulink
> por el equipamiento hardware y la oportunidad de experimentar.
</para>

<para>
Gracias a <ulink
url="http://www.linuxdoc.org"
>Linux Documentation Project</ulink
> por publicar y subir mi documento muy rápidamente.
</para>

</sect2>

</sect1>

<sect1>
<title>Conocimientos Básicos</title>

<sect2>
<title>¿Qué es Inalámbrico?</title>

<para>
La Inalámbrica es una nueva tecnología que te puede ayudar a conectar ordenadores
a distancia. Funciona con tarjetas inalámbricas con un TX/RX interno a 2.4 GHz mientras
que la interfaz de software es del tipo ethernet, con una dirección física diferente
para cada tarjeta en el mundo. Normalmente la potencia de transmisión es de 10-20 mW hasta
100mW (ver estándar IEEE 802.11 y licencias FCC/CEPT).
</para>

</sect2>

<sect2>
<title>¿Cuál es la distancia máxima entre tarjetas de radio?</title>

<para>
El aspecto más importante en la comunicación inalámbrica es una línea visual clara:
DEBES VER (a simple vista o con binoculares) una antena desde el otro extremo pudiendo
existir entre ambos un pequeño árbol como máximo.
</para>

<para>
La distancia depende de la antena (y eventualmente de un amplificador) utilizada: de 2 a 300
metros con una antena omnidireccional; 1 km con una direccional; de 2 a 3 km con una
omnidireccional amplificada(200mW); algunos kms. con una antena parabólica. 50 a 60
kms con una antena parabólica o direccional amplificada (algunos  watios).
</para>

<para>
Ten en cuenta que no siempre el uso de tarjetas inalámbricas amplificadas es legal,
ya que puedes violar las especificaciones FCC/CEPT (y también las propias de tu país).
</para>

</sect2>

<sect2>
<title>¿Qué diferencia hay entre una red de cable y una inalámbrica?</title>

<para>
Las redes de cable son muy sencillas de configurar (al menos a bajo nivel). Las
inalámbricas son muy difíciles de configurar, de administrar, y depurar...
El típico problema con una red de cable es la instalación del hardware, del software,
la depuración y demás, que pueden llegar a ser muy críticos en una red inalámbrica:
</para>

<para>

<orderedlist>
<listitem>

<para>
Tienes que elegir la tarjeta inalámbrica correcta: existen muchas tarjetas de diversos
fabricantes con requerimientos y especificaciones diferentes. Si quieres crear una pequeña
LAN/WAN tienes que comprar tarjetas que cumplan el estándar IEEE 802.11 con un Punto de Acceso.
</para>
</listitem>
<listitem>

<para>
Muchas tarjetas son PCMCIA, por tanto primero tienes que instalar las fuentes pcmcia de Linux.
</para>
</listitem>
<listitem>

<para>
Debes comprobarlo con dos sistemas funcionando, primero a corta distancia,
para que luego puedas alejarlos.
</para>
</listitem>
<listitem>

<para>
Debes probarlo con distintas condiciones atmosféricas (normalmente con lluvia).
</para>
</listitem>
<listitem>

<para>
Por último felicitarte por haberlo hecho funcionar.
</para>
</listitem>

</orderedlist>

</para>

<para>
¡Si instalas un repetidor(Caja LiNUX con varias tarjetas de red de cable e inalámbricas)
puedes tener problemas para modificar su configuración a distancia!
</para>

</sect2>

<sect2>
<title>¿Qué necesito saber para configurar una red inalámbrica?</title>

<para>
Existen una serie de requisitos para configurar una red inalámbrica;
</para>

<para>
Requerimientos software:
</para>

<para>

<orderedlist>
<listitem>

<para>
Conceptos generales como dirección IP, máscara de red, encaminamiento... incluidos
en el Linux NET3-4-HOWTO; *
</para>
</listitem>
<listitem>

<para>
Conceptos específicos de red como proxy arp, bridging, proc fs, contenidos en
Proxy-ARP-Subnet, Bridge Mini-Howto y en las fuentes del kernel LiNUX (2.2.x o
2.4.x) en Documentation/networking/ ip-sysctl.txt) *
</para>
</listitem>
<listitem>

<para>
Conocimientos de red inalámbrica como modo de acceso (ADHOC, INFRAESTRUCTURA y
PUNTO DE ACCESO), concepto de canal, definiciones de exterior e interior y algunos más que
puedes encontrar en algunos documentos que tratan sobre redes inalámbricas: estándar IEEE 802.11, CEPT, etc.
</para>
</listitem>

</orderedlist>

</para>

<para>
requerimientos no-software:
</para>

<para>

<orderedlist>
<listitem>

<para>
Experiencia mínima en antenas, montaje y orientación
</para>
</listitem>
<listitem>

<para>
Instalación de hardware de PC con especial cuidado en no producir interferencias
entre diferentes tarjetas inalámbricas (si es necesario).
</para>
</listitem>

</orderedlist>

</para>

<para>
¡Finalmente mucha suerte!
</para>

<para>
* Todos los COMOs necesarios para crear este documento pueden obtenerse en
<ulink
url="http://www.linuxdoc.org"
>http://www.linuxdoc.org</ulink
>
</para>

</sect2>

<sect2>
<title>¿Por qué debo montar una red inalámbrica y qué puedo esperar de ella?</title>

<para>
¿Por qué? ¡Porque no estás satisfecho con una red de cable!
</para>

<para>
Con tarjetas inalámbricas puedes cruzar jardines, parques, casas, (¡pero DEBES VER
el otro extremo!).
</para>

<para>
El protocolo de alto Nivel usado en las tarjetas inalámbricas es el mismo que en las tarjetas
ethernet: TCP/IP sobre ethernet inalámbrica pero debes prestar atención al compartir aplicaciones 
Windows, ya que si usas GNU/Linux para reenvío, debes tener cuidado con un repetidor IP ya que
no permite pasar mensajes difusión (ver más sobre el protocolo NetBIOS):
en este caso debes usar un servidor WINS para soportar el Examinador de Red
(ver documento sobre Samba).
</para>

<para>
La tecnología inalámbrica te permite crear una pequeña LAN/WAN con un punto de acceso central
(¡incluso con acceso a Internet!) y dar acceso a cualquiera por aire.
</para>

<para>
Imagina todo un país conectado por máquinas de radio.
</para>

<para>
Imagina una red que puede conectar a toda la gente de un país, compartiendo
ficheros, aplicaciones de audio, de vídeo con un amplio ancho de banda (como una red
de cable).
</para>

<para>
Todo lo que puedes hacer (que ya está funcionando en algunos países) usando tarjetas
inalámbricas, puntos de acceso y máquinas GNU/Linux, que funcionen como repetidor
(a nivel IP como un encaminador o, si quieres, a nivel de enlace de datos, como puente,
ver detalles en <ulink
url="http://openrock.net/bridge"
>Bridge Http link</ulink
> o <ulink
url="ftp://openrock.net/bridge"
>Bridge Ftp link</ulink
>
</para>

</sect2>

<sect2>
<title>¿Qué tarjetas inalámbricas están incluidas en este COMO?</title>

<para>
En este COMO empleo una configuración genérica (como introducción a las
redes inalámbricas), y describo un ejemplo para cada tarjeta que he probado
Personalmente, con algunos trucos que pueden mejorar su rendimiento.
</para>

<para>
Lista de tarjetas inalámbricas:
</para>

<para>

<orderedlist>
<listitem>

<para>
Proxim Symphony -<ulink
url="http://www.proxim.com"
>http://www.proxim.com</ulink
>
</para>
</listitem>
<listitem>

<para>
Webgear AviatorPRO 2.4 (necesita soporte pcmcia) - <ulink
url="http://www.webgear.com"
>http://www.webgear.com</ulink
>
</para>
</listitem>
<listitem>

<para>
Lucent Wavelan I, II, Orinoco - <ulink
url="http://www.lucent.com"
>http://www.lucent.com</ulink
>
and <ulink
url="http://www.orinoco.net"
>http://www.orinoco.net</ulink
>
</para>
</listitem>
<listitem>

<para>
Cabletron - <ulink
url="http://www.cabletron.com"
>http://www.cabletron.com</ulink
>
</para>
</listitem>
<listitem>

<para>
YDI am930_isa - <ulink
url="http://www.ydi.com"
>http://www.ydi.com</ulink
>
</para>
</listitem>
<listitem>

<para>
Siemens Radio Modem (Dect) - <ulink
url="http://www.siemens.com"
>http://www.siemens.com</ulink
>
</para>
</listitem>
<listitem>

<para>
RadioLan (5 GHZ) - <ulink
url="http://www.radiolan.com"
>http://www.radiolan.com</ulink
>
</para>
</listitem>

</orderedlist>

</para>

<para>
para una lista más exhaustiva ver <ulink
url="http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux"
>Jean Tourrilhes Wireless Howto</ulink
>.
</para>

<para>
El Módem Siemens Radio no es realmente una tarjeta inalámbrica 802.11, es un módem
que se conecta al puerto de serie y actúa como módem (a 1800 MHz, con tecnología DECT).
Su uso se describe en el Apéndice B.
</para>

<para>
Las tarjetas RadioLan funcionan a 5.4GHz en un entorno Windows 9x y  con un punto de acceso
RadioLan que enlaza entre redes de cable e inalámbricas (no existe controlador conocido para Linux).
</para>

</sect2>

<sect2>
<title>¿Cuánto cuestan?</title>

<para>
Las tarjetas que aparecen más abajo tienen un coste muy bajo: desde algunos cientos de euros
hasta algunos miles de euros para los puntos de acceso (incluyen 2 tarjetas inalámbricas
(Lucent, por ejemplo) que pueden actuar como puente.
</para>

</sect2>

</sect1>

<sect1>
<title>Información técnica acerca de la tecnología inalámbrica.</title>

<para>
Aquí expongo alguna información técnica para entender las bases de los
entornos inalámbricos.
</para>

<sect2>
<title>Capa física</title>

<para>
En la primera capa ISO/OSI podemos tener 3 tipos de aspectos:
</para>

<para>

<orderedlist>
<listitem>

<para>
FHSS, Agilidad de frecuencia de espectro expandido (Frequency Hopping Spread Spectrum)
</para>
</listitem>
<listitem>

<para>
DSSS, Secuencia directa de espectro expandido (Direct Sequence Spread Spectrum)
</para>
</listitem>
<listitem>

<para>
Conexiones infrarrojas, no cubiertas en este COMO
</para>
</listitem>

</orderedlist>

</para>

</sect2>

<sect2>
<title>Configuraciones</title>

<para>
2 tipos de configuraciones:
</para>

<para>

<orderedlist>
<listitem>

<para>
Modo AdHoc (también llamado modo independiente), donde hay redes
independientes con un BSS (Conjunto de Servicio Básico) cada una. Cada
estación tiene el mismo BSS.
</para>
</listitem>
<listitem>

<para>
Modo intraestructura, donde el número de redes (con un BSS cada uno) puede
comunicarse unas con otras gracias a un Punto de Acceso (uno por
cada BSS) para crear un ESS (Conjunto de Servicio Extendido). También tiene
la función de itinerancia que permite a una estación &quot;engancharse&quot; al Punto de Acceso
más cercano.
</para>
</listitem>

</orderedlist>

</para>

<para>
Adhoc es el método más sencillo (y también el menos escalable) y permite a
muchas máquinas comunicarse con otras directamente. El requisito restrictivo
es que todas deben ser visibles entre ellas para llegar a una cobertura
completa en la red. (¡Al menos idealmente porque este problema puede ser
solucionado en la capa IP! para más información mirar Par 5.4).
</para>

<programlisting>
                                 Modo Adhoc

                               A - - - - - C
                                 &bsol;       /
                               |   &bsol;   /   |
                                     /&bsol;
                               |   /    &bsol;  |
                                 /       &bsol;
                               B - - - - - D
</programlisting>

<para>
En un entorno de Infraestructura puedes usar un Punto de Acceso al que TODAS
las máquinas deben conectarse para compartir la red.
</para>

<programlisting>
Modo Infraestructura
                                    ESS

          A - - - | - Punto de Acceso -  -  Punto de Acceso - | - - - D

          B - - - |   BSS1                  BSS2              | - - - E

          C - - - |                                           | - - - F
</programlisting>

<para>
B y C no pueden ver a D, E y F, pero pueden comunicarse porque todas usan el
mismo ESS. importante: A,B y C podrían también no verse entre ellas.
</para>

<para>
Además hay términos como interior y exterior para distinguir un área
de cobertura pequeña de un área grande de cobertura.
</para>

</sect2>

<sect2>
<title>Compatibilidad</title>

<para>
Tenga en mente que hay muchas tarjetas inalámbricas en el mundo, pero no
todas las tarjetas pueden comunicarse con cualquier otra. para hablar entre
ellas deben usar:
</para>

<para>

<orderedlist>
<listitem>

<para>
misma configuración de modo: todas Adhoc o todas Infraestructura
</para>
</listitem>
<listitem>

<para>
la misma capa física: todas DSSS o todas FHSS
</para>
</listitem>
<listitem>

<para>
el mismo protocolo (por ejemplo Proxim tiene su protocolo propietario
particular OpenAir y no puede hablar con otras tarjetas FHSS).
</para>
</listitem>

</orderedlist>

</para>

</sect2>

<sect2>
<title>¿Debo usar Adhoc o Infraestructura?</title>

<para>
Un Punto de Acceso es muy útil y elimina problemas pero son caros. Idealmente,
para una red más concentrada puede usar el modo Infraestructura, mientras
que para pocas máquinas puede elegir Adhoc: ¿por qué gastar mucho dinero
para pocas máquinas?
</para>

<para>
De cualquier forma sepa que si gasta mucho dinero posiblemente todo funcione
bien mientras que si gasta poco tenga algún problema.
</para>

</sect2>

<sect2>
<title>¿No puede actuar un LiNUX como un Punto de Acceso?</title>

<para>
¡Buena pregunta! Desafortunadamente no hay ese tipo de programas (libres)
que puedan hacerlo, asi que tenemos que arreglárnosla con el modo Adhoc o
comprar más Puntos de Acceso.
</para>

<para>
Nota: si usted es un experto en ingeniería inversa puede descargarse el
firmware de un Punto de Acceso, usar un intérprete compatible con el
procesador y hackear el código de un Punto de Acceso y reescribirlo para
LiNUX.
</para>

</sect2>

</sect1>

<sect1>
<title>Herramientas requeridas</title>

<sect2>
<title>hardware requerido</title>

<para>
Necesitas un LiNUX (486 o mejor un Pentium 100+ con 16MB+ de RAM), la
tarjeta de red inalámbrica, una antena (mira la parte 2.2). ¡Necesitas lo
mismo en el otro extremo (con Win9x o WinNT, si prefires...) porque tienes
que simular una comunicación!
</para>

</sect2>

<sect2>
<title>Programas requeridos</title>

<para>
Necesitas:
</para>

<para>

<orderedlist>
<listitem>

<para>
las fuentes de un kernel estable reciente (2.2.x)
</para>
</listitem>
<listitem>

<para>
fuentes del paquete pcmcia estable reciente (pcmcia-cs) si compras una tarjeta pcmcia
</para>
</listitem>
<listitem>

<para>
El controlador de la tarjeta inalámbrica: si no lo tienes puedes descargártelo de
la web del fabricante o del vendedor. Si no lo encuentras puedes buscar en
el <ulink
url="http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux"
>Wireless-howto de Jean Tourrilhes</ulink
>.
</para>
</listitem>

</orderedlist>

</para>

<para>
¡¡Si incluso así no lo encuentras deberás esperar o convertir un driver de
Windows en un driver para LiNUX!! (¡buena suerte!).
</para>

<para>
Después de eso, deberás recompilar el núcleo, recompilar las fuentes pcmcia
(si las necesitas para la tarjeta inalámbrica), finalmente recompilar el
controlador de la tarjeta. Esta es la situación general, puede ser que algunas
tarjetas sólo requieran el paso 3 o 1 y 3, depende de cada controlador  específico.
</para>

</sect2>

</sect1>

<sect1>
<title>Vistazo general a la configuración de una red inalámbrica.</title>

<sect2>
<title>Pasos fundamentales</title>

<para>
Una vez que tienes el material necesario y que has compilado todo lo que
necesitas, deberás hacer el paso fundamental en la configuración de un
sistema inalámbrico:
</para>

<para>

<orderedlist>
<listitem>

<para>
Configuración de bajo nivel del núcleo para permitirle ver tu tarjeta
inalámbrica (a bajo nivel, los puertos E/S, interrupciones, DMA, ...): debes
ver la clase de mensajes que dicen que tu tarjeta ha sido encontrada y
configurada correctamente.
</para>
</listitem>
<listitem>

<para>
para la configuración del nivel de enlace para cada tarjeta existe una
utilidad que puede poner el típico valor del nivel de enlace inalámbrico.
Por ejemplo en Proxim Synphony la utilidad se llama
&quot;rl2cfg&quot; mientras que en la configuración de tarjetas pcmcia la
configuración se hace en los ficheros de pcmcia. Tienes que configurar todas
tus tarjetas inalámbricas de forma coherente para que hablen entre ellas.
</para>
</listitem>
<listitem>

<para>
Configuración IP debes ser capaz de usar las funcionalidades de ifconfig
y route para cambiar la configuración IP.
</para>
</listitem>
<listitem>

<para>
Trucos para un mejor rendimiento y para evitar conflictos. Ahora tu red
inalámbrica está funcionando básicamente: además tienes que ajustar algunas
configuraciones particulares como el proxy-arp, el icmp echo redirect, el
bridging, el canal y ese tipo de cosas para optimizar la red y evitar
conflictos extraños y comerse inútilmente el ancho de banda.
</para>
</listitem>

</orderedlist>

</para>

<para>
N.B.: los pasos 1, 2 y 3 se corresponden con los niveles 1, 2 y 3 del
estándar ISO/OSI mientras el paso 4 es un añadido para solucionar la
situación generada por la máscara de red 255.255.255.255. De hecho la
máscara de 32 bits viola el estándar ISO/OSI porque fuerza que se use la
misma dirección para la difusión y la IP de la máquina y la dirección de
red no existe.
</para>

<para>
Alguien puede criticar este punto de vista, pero si usas el estándar ISO/OSI
para configurar una red inalámbrica perderás muchas direcciones configurando
subredes; por cada subred habitualmente descartas dos direcciones IP (red y
difusión) y no puedes conseguir flexibilidad en la asignación de IP
(geográficamente hablando).
Puedes encontrar más información sobre ésto en el Apéndice A.
</para>

<para>
date cuenta de que el paso 2 no está presente en las tarjetas con hilos
porque no hay configuraciones especiales para hacer esto.
</para>

</sect2>

<sect2>
<title>Configuración a bajo nivel del núcleo</title>

<para>
Siempre es un problema para la administración del PC: para el núcleo (o en
general) mira tu hardware.
</para>

<para>
Las tarjetas inalámbricas son más complejas porque muchas de ellas,
habitualmente tienen un interfaz PCMCIA, así que primero de todo tienes que
hacer que tu núcleo vea el adaptador PCMCIA y después intentar instalar el
controladores específico del hardware de tu tarjeta inalámbrica.
</para>

<para>
Así que en la configuración PCMCIA tendrás que:
</para>

<para>

<orderedlist>
<listitem>

<para>
Instalar las fuentes del núcleo linux de
<ulink
url="http://www.kernel.org"
>http://www.kernel.org</ulink
> en /usr/src/linux (mira las utilidades tar y gzip)
</para>
</listitem>
<listitem>

<para>
instalar las fuentes PCMCIA de <ulink
url="ftp://projects.sourceforge.net/pub/pcmcia-cs"
>ftp://projects.sourceforge.net/pub/pcmcia-cs</ulink
> para instalarlo en  /usr/src/pcmcia (mira tar y gzip)
</para>
</listitem>
<listitem>

<para>
configurar y recompilar tu núcleo: mira el fichero README en el directorio del núcleo (/usr/src/linux)
</para>
</listitem>
<listitem>

<para>
configurar y recompilar las fuentes PCMCIA: usa configure y make en /usr/src/pcmcia.
Asegúrate de que el controlador está ahí, si no tendrás que instalarlo y seguir
las instrucciones (habitualmente un tar zxvf controlador.tgz desde el directorio
pcmcia es suficiente).
Después teclea &quot;make all&quot; para compilar. para terminar teclea &quot;make install&quot;.
</para>
</listitem>
<listitem>

<para>
Una vez tecleado install encontrarás ficheros de configuración en /etc/pcmcia.
</para>
</listitem>

</orderedlist>

</para>

<para>
&#60;p&#62;
En el caso no PCMCIA:
</para>

<para>

<orderedlist>
<listitem>

<para>
Si tu controlador está presente (99% no) en las fuentes de GNU/Linux, tienes
que instalarlo en un directorio y compilarlo.
</para>
</listitem>

</orderedlist>

</para>

<para>
Una vez que sabes el nombre del módulo tienes que cargarlo: en la
configuración PCMCIA sólo tienes que arrancar el demonio PCMCIA  (/etc/rc.d/init.d/pcmcia start
en RedHat), para otra &quot;modprobe module_name options&quot;. Con
las opciones le darás el puerto IO, IRQ, y configuración del enlace (mira
Par 5.3) del controlador inalámbrico. De todas formas las herramientas para saber
si el hardware se ve correctamente con el controlador son:
</para>

<para>

<orderedlist>
<listitem>

<para>
&quot;tail /var/log/messages&quot; que da información del syslog
</para>
</listitem>
<listitem>

<para>
&quot;dmesg&quot; para mayor información.
</para>
</listitem>
<listitem>

<para>
/proc dir: ioports, devices, irq ficheros y subdirectorios específicos del controlador.
</para>
</listitem>

</orderedlist>

</para>

</sect2>

<sect2>
<title>Configuración del nivel de enlace</title>

<para>
¿Qué es eso?
</para>

<para>
Las redes de cable sólo necesitan conectarse unas a otras y se podrán
configurar los parámetros de TCP/IP.
</para>

<para>
Por contra, las redes inalámbricas necesitan configuración de la capa de enlace como:
</para>

<para>

<orderedlist>
<listitem>

<para>
¿A qué tipo de red inalámbrica pertenezco? (Adhoc o Infraestructura)
</para>
</listitem>
<listitem>

<para>
¿Qué canal debo usar?
</para>
</listitem>
<listitem>

<para>
¿A qué subred (BSSID) pertenezco y cúal es mi id ESS?
</para>
</listitem>
<listitem>

<para>
¿Está mi comunicación protegida por un algoritmo de encriptación? ¿Cuál es la longitud de clave?
</para>
</listitem>

</orderedlist>

</para>

<para>
Como ves hay muchas configuraciones que tienes que ajustar, la razón viene
de la arquitectura de una red inalámbrica: puede haber alguien cerca que
pueda ver tus paquetes, usar tus servicios únicamente apuntando su antena en
la dirección adecuada y configurando bien los parámetros TCP/IP.
</para>

<para>
Además pueden existir muchas subredes inalámbricas que pueden generar
interferencias unas a otras.
</para>

<para>
Así que hay:
</para>

<para>

<orderedlist>
<listitem>

<para>
Opciones para el módulo en tiempo de carga: &quot;modprobe ray_cs essid='LINUX'&quot;
por ejemplo o
</para>
</listitem>
<listitem>

<para>
Utilidades para el controlador en tiempo de ejecución: &quot;rl2cfg eth1 master&quot;.
</para>
</listitem>

</orderedlist>

</para>

</sect2>

<sect2>
<title>Configuración IP</title>

<para>
Éste es el tercer problema al que hay que enfrentarse. Esta situación se
vuelve problemática únicamente cuando tu red empieza a evolucionar hacia una
red más grande.
</para>

<para>
¡Recuerda que las redes IP inalámbricas no te forzarán si no las fuerzas tú!
</para>

<sect3>
<title>Una configuración sencilla</title>

<programlisting>
                       Todas las máquinas se ven entre ellas

                               A - - - - - C
                                 &bsol;       /
                               |   &bsol;   /   |
                                     /&bsol;
                               |   /    &bsol;  |
                                 /       &bsol;
                               B - - - - - D

</programlisting>

<para>
Una configuración como ésta es muy sencilla y no requiere nada en especial
(a nivel IP): sólo necesitas asignar una dirección IP para cada máquina y
asignar una máscara de red global coherente.
</para>

</sect3>

<sect3>
<title>Una configuración más compleja</title>

<programlisting>

                       A no ve directamente a B

                                A &lt;- - - -
                              NO&bsol;        |
                            TALK&bsol;        C
                                &bsol;        |
                                B &lt;- - - -

</programlisting>

<para>
Aquí A y B pueden comunicarse pasando a través de C.
</para>

<para>
Si la red es en modo Infraestructura y C es el Punto de Acceso todo es
correcto. Si es en modo Adhoc, también puedes diseñar una máquina como &quot;master&quot;
(¡sé que el término no es demasiado formal!), una máquina que crea un BSS
al que la otra máquina puede unirse.
</para>

<para>
Ahora se alcanza conectividad plena en la capa IP: A y B pueden hablar con C
usando el mismo interfaz de C, así que si haces ping desde A a B recibirás
muchos paquetes ICMP REDIRECT de C porque C le está diciendo a A que el
destino está en la red de la que llega la petición.
</para>

<para>
Solución: teclea &quot;echo 0 &gt; /proc/sys/net/ipv4/conf/ethx/send_redirects&quot;
(donde ethx es el interfaz de C hacia A y C) para anular eso.
</para>

<para>
Otro problema: ¿Qué máscara asigno a A y C? Si asignas a A una máscara que
incluya a A y C nada funciona porque A no sabe usar la ruta predeterminada (C)
sino que hace una petición ARP con una dirección MAC destino desconocida.
</para>

<para>
Puedes pensar en usar proxy ARP, sin razón porque las respuestas del proxy
arp se dan sólo cuando el destino está en un interfaz diferente del origen:
¡Y éste no es el caso!
</para>

<para>
Así que tienes que usar una máscara MUY pequeña (Win0x te permite usar
255.255.255.254, WinNT al menos 255.255.255.248), y tienes que asegurarte de
que A y C no tienen la misma dirección de red.
</para>

<para>
Ejemplos:
</para>

<para>

<orderedlist>
<listitem>
<para>
IP(A) = x.y.z.2/31, IP(B) = x.y.z.3/31. Esto no funciona porque A pregunta
por B en su propia red (petición ARP) y C no responde porque A y B
pertenecen al mismo interfaz (así que no va el proxy arp).
</para>
</listitem>
<listitem>

<para>
IP(A) = x.y.z.1/31, IP(B)= x.y.z.2/31. Esto si funciona porque A pregunta a
C (envía peticiones a B con la MAC de C) por B.
</para>
</listitem>

</orderedlist>

</para>

<para>
En general con una máscara de 255.255.255.254 el sistema funciona con 2 IP
cambiando únicamente el bit final.
</para>

<para>
Esto es TCP/IP forzado pero es la única forma de obtener un alto nivel de
flexibilidad.
</para>

<para>
Nota: Si usas un Punto de Acceso (red en modo infraestructura) no tienes el
problema de redirección porque todo se soluciona en el nivel de enlace (casi
todos los Puntos de Acceso funcionan como un puente...). Pero los Puntos de
Acceso son caros (sobre 1000 dólares americanos o más) y es más barato usar
un P133 con 32 RAM para reenviar incluso con 2 o más tarjetas.
</para>

</sect3>

<sect3>
<title>Acceso a Internet</title>

<programlisting>
                               A - - - - - C - - Internet
                                 &bsol;       /
                               |   &bsol;   /   |
                                     /&bsol;
                               |   /    &bsol;  |
                                 /       &bsol;
                               B - - - - - D

</programlisting>

<para>
Hay un número de situaciones:
</para>

<para>

<orderedlist>
<listitem>

<para>
C es la única IP pública.Sólo tienes que configurar direcciones privadas
(192.168.x.y por ejemplo) para la red inalámbrica habilitando en C el
reencaminamiento y el enmascaramiento. A, B y D apuntarán a C.
</para>
</listitem>
<listitem>

<para>
Tienes una máscara pública visible desde Internet y C es tu pasarela predeterminada a
Internet para la red. Aquí sólo tienes que habilitar el reenvío en C,
configurando C como ruta por defecto para A, B y D.
</para>
</listitem>
<listitem>

<para>
Tienes una máscara visible desde Internet y C no es la pasarela predeterminada
a Internet. Tienes dos posibles soluciones: Modificar tu ruta predeterminada
para hacer que sea C. Al mismo tiempo hacer que C apunte a la pasarela a
Internet. Puedes, también, habilitar el proxy arp en C (echo 1 &gt; /proc/sys/net/ipv4/conf/ethx/proxy_arp
donde ethx es el interfaz hacia la pasarela predeterminada) y configurar tu
pasarela en C para que apunte a la pasarela predeterminada. El proxy arp es
forzar TCP/IP pero funciona bien.
</para>
</listitem>

</orderedlist>

</para>

</sect3>

<sect3>
<title>Mezcla de redes: Cableada e Inalámbrica</title>

<programlisting>
                                Internet
                                       &bsol;
                                        &bsol;        E
                                         &bsol;     /
                                          &bsol;  /       Inalámbrica
                               A - - - - - C - - F
                                 &bsol;       /   &bsol;
                               |   &bsol;   /   |   &bsol;
                     Cableada        /&bsol;          G
                               |   /    &bsol;  |
                                 /       &bsol;
                               B - - - - - D

</programlisting>

<para>
Ahora C une dos redes: a la derecha la inalámbrica y la cableada a la
izquierda.
</para>

<para>
Además tienes acceso a Internet por lo que en total tienes 3 tarjetas de red
en C.
</para>

<para>
¿Qué direcciones IP asigno a las máquinas? Tienes dos posibles soluciones:
</para>

<para>

<orderedlist>
<listitem>

<para>
Separa la red en 2 subredes: por ejemplo 192.168.1.0/24 y 192.168.2.0/24.
Esta solución es rápida pero no escalable si estás usando direcciones IP de
Internet porque estarás desperdiciando demasiadas IPs.
</para>
</listitem>
<listitem>

<para>
Habilita el proxy ARP en C para las dos interfaces. Los parámetros de red
(dirección de red y máscara) son los mismos para la red inalámbrica y
cableada, pero con el proxy-arp habilitado puedo elegir qué IPs están en la
cableada y cuáles en la inalámbrica.
</para>
</listitem>

</orderedlist>

</para>

<para>
Ahora examinamos la solución 2
</para>

<para>
Por ejemplo: Considera que tienes una subred pública de Internet x.y.z.0/24.
</para>

<para>
Los interfaces son:
</para>

<para>

<orderedlist>
<listitem>

<para>
ifconfig eth0 x.y.z.C netmask 255.255.255.255 (cableada)
</para>
</listitem>
<listitem>

<para>
ifconfig eth1 x.y.z.C netmask 255.255.255.255 (inalámbrica)
</para>
</listitem>
<listitem>

<para>
ifconfig eth2 x.y.z.C netmask 255.255.255.255 (a Internet)
</para>
</listitem>

</orderedlist>

</para>

<para>
Rutas estáticas en eth2:
</para>

<para>

<orderedlist>
<listitem>

<para>
route add IPGW dev eth2
</para>
</listitem>
<listitem>

<para>
route add default gw IPGW
</para>
</listitem>

</orderedlist>

</para>

<para>
Esta ruta está para direccionar todas las peticiones de Internet a tu
pasarela predeterminada: como habrás notado, primero le tienes que decir a
Linux dónde está el encaminador, entonces haces las peticiones a través de él.
</para>

<para>
Rutas estáticas en eth0:
</para>

<para>

<orderedlist>
<listitem>

<para>
route add x.y.z.A dev eth0
</para>
</listitem>
<listitem>

<para>
route add x.y.z.B dev eth0
</para>
</listitem>
<listitem>

<para>
route add x.y.z.D dev eth0
</para>
</listitem>

</orderedlist>

</para>

<para>
Máquinas A,B y D en la red cableada
</para>

<para>
Rutas estáticas en eth1:
</para>

<para>

<orderedlist>
<listitem>

<para>
route add x.y.z.E dev eth1
</para>
</listitem>
<listitem>

<para>
route add x.y.z.F dev eth1
</para>
</listitem>
<listitem>

<para>
route add x.y.z.G dev eth1
</para>
</listitem>

</orderedlist>

</para>

<para>
Máquinas E,F y G en la red inalámbrica
</para>

<para>
Nota que la flexibilidad es muy alta, pero tienes que configurar manualmente
cada máquina.
</para>

</sect3>

</sect2>

</sect1>

<sect1>
<title>Configuración</title>

<para>
Aquí expongo algunos ejemplos (¡espero que útiles!) acerca de cómo
configurar de una forma más difusa y menos en profundidad las tarjetas
inalámbricas.
</para>

<sect2>
<title>Información general de configuración</title>

<para>
Las tarjetas inalámbricas tienen una interfaz similar a cualquier tarjeta
Ethernet, así que tienes que añadir en /etc/conf.modules:
</para>

<para>

<orderedlist>
<listitem>

<para>
&quot;alias ethx module&quot;, donde ethx es el interfaz que quieres que le
sea asignado a tu tarjeta inalámbrica y module es el nombre del módulo del núcleo.
</para>
</listitem>
<listitem>

<para>
&quot;options module io=0xAAA irq=I ...&quot;, donde 0xAAA es la dirección
base IO para asignar a la tarjeta, I es la IRQ e igualmente si hay otros
parámetros.
</para>
</listitem>

</orderedlist>

</para>

<para>
Después de esto podrás usar las instrucciones ifconfig y route para configurar tu
tarjeta a nivel IP.
</para>

</sect2>

<sect2>
<title>Proxim Symphony</title>

<para>
tipo de red: FHSS, Adhoc sólamente con el protocolo propietario OpenAir.
</para>

<para>
Web: <ulink
url="http://www.proxim.com"
>http://www.proxim.com</ulink
>
donde necesitas bajar la documentación y el controlador para Linux y Win9x.
</para>

<para>
Los controladors vienen con el código fuente a compilar:
</para>

<para>

<orderedlist>
<listitem>

<para>
Deshaz el tar en un directorio vacío
</para>
</listitem>
<listitem>

<para>
teclea make para ver la ayuda.
</para>
</listitem>
<listitem>

<para>
make modules; make modules_install para instalar el controlador rlmod.o y la utilidad rl2cfg.
</para>
</listitem>
<listitem>

<para>
para ejecutar el controlador (después de haber modificado el /etc/conf.modules: mira Par.6.1.)
sólo necesitarás levantar el interfaz con el comando ifconfig.
</para>
</listitem>

</orderedlist>

</para>

<para>
La utilidad rl2cfg (para la ayuda teclea man rl2cfg una vez que hayas hecho
el paso c) te permite cambiar la configuración típica del nivel de enlace:
</para>

<para>

<orderedlist>
<listitem>

<para>
&quot;rl2cfg dev ethx sta&quot; para configurar a estación (esclavo)
</para>
</listitem>
<listitem>

<para>
&quot;rl2cfg dev ethx msta&quot; para configurar como primaria (Master)
</para>
</listitem>
<listitem>

<para>
&quot;rl2cfg dev ethx alt&quot; para configurar en modo automático.
</para>
</listitem>

</orderedlist>

</para>

<para>
Esto es todo lo que tienes que saber para hacerlo funcionar correctamente.
</para>

</sect2>

<sect2>
<title>Webgear Aviator 2.4 y AviatorPro</title>

<para>
tipo de red: FHSS, Adhoc sólo para Aviator 2.4 e infraestructura para AviatorPro.
</para>

<para>
Estas tarjetas necesitan más para funcionar, porque tienes que configurar
las fuentes PCMCIA porque vienen con conector PCMCIA.
</para>

<para>
Web <ulink
url="http://www.webgear.com"
>http://www.webgear.com</ulink
>.
</para>

<para>
para configurar:
</para>

<para>

<orderedlist>
<listitem>

<para>
Tienes que descargarte las fuentes PCMCIA y descomprimirlas en /usr/src/pcmcia
(ver Par 5.2)
</para>
</listitem>
<listitem>

<para>
Descarga el controlador de <ulink
url="http://www.webgear.com"
>http://www.webgear.com</ulink
>
y teclea &quot;tar zxvf controlador.tgz&quot; en el directorio /usr/src/pcmcia
</para>
</listitem>
<listitem>

<para>
reconfigurar PCMCIA (ver Par 5.2)
</para>
</listitem>
<listitem>

<para>
Siguiendo las instrucciones tendrás que añadir al fichero /etc/pcmcia/config.opts una entrada &quot;source ./ray_cs.opts&quot;.
</para>
</listitem>
<listitem>

<para>
date cuenta que en /etc/pcmcia/ray_cs.opts hay una línea como
ésta: &quot;module
&quot;ray_cs&quot; opts &quot;...&quot;. Aquí tienes que modificar
algunas configuraciones del nivel de enlace presentes en "opts" .
</para>
</listitem>

</orderedlist>

</para>

<para>
argumentos:
</para>

<para>

<itemizedlist>
<listitem>

<para>
pc_debug=x , donde x es el nivel de registro.
</para>
</listitem>
<listitem>

<para>
net_type=x, x=0 para AdHoc, x=1 para Infraestructura.
</para>
</listitem>
<listitem>

<para>
essid=x, x es el ESSID
</para>
</listitem>

</itemizedlist>

</para>

<para>
Finalmente, para verificar la configuración con el pc_debug &gt; 0,
verás los mensajes de la capa de enlace en tu consola como
estos: &quot;network started&quot; para una nueva red inalámbrica creada y
&quot;network joined&quot; para una nueva red inalámbrica unida a otra.
</para>

<para>
También el fichero
/proc/ray_cs puede ayudarte: el BSSID te dice a qué subred pertenece,
si es nulo no podrás recibir datos de ninguna tarjeta.
</para>

</sect2>

<sect2>
<title>Productos Lucent Wavelan I, II, Orinoco y Cabletron</title>

<para>
tipo de red: DSSS, Adhoc e infraestructura.
</para>

<para>
Los productos de Lucent son muy profesionales.
</para>

<para>
Web: <ulink
url="http://www.lucent.com"
>http://www.lucent.com</ulink
> y <ulink
url="http://www.orinoco.net"
>http://www.orinoco.net</ulink
>.
</para>

<para>
La configuración es como en WebGear: los pasos 1,2,3 son similares
</para>

<para>
Luego tienes que añadir al fichero /etc/pcmcia/config.opts: module &quot;wavelan_cs&quot;
opts &quot; ...&quot; para Lucent Wavelan I module y &quot;wavelan2_cs&quot;
opts &quot; ...&quot;, para Lucent Wavelan II u Orinoco.
</para>

<para>
En opts deberás especificar:
</para>

<para>

<orderedlist>
<listitem>

<para>
port_type=x, donde x indica Adhoc(3) o Infrastructura(1)
</para>
</listitem>
<listitem>

<para>
channel=x, x=channel, opción sólo relevante en modo AdHoc.
</para>
</listitem>
<listitem>

<para>
transmit_rate=x, para fijar la velocidad: atención a esta
configuración por la compatibilidad con las tarjetas Cabletron
</para>
</listitem>

</orderedlist>

</para>

<para>
Nota: Idealmente es posible en un tener en un Linux 2 tarjetas Lucent Wavelanx,
una en modo Adhoc y la otra en modo Intraestructura. Sólo una de ellas
funcionará adecuadamente porque al arrancar el servicio PCMCIA, las dos
tarjetas usarán el mismo valor de opts (por lo tanto en modo Adhoc o
Infraestructura). Así que tenemos que crear un módulo Linux (o puede que un
programa del modo usuario) que pueda cambiar los parámetros de la capa de
enlace en tiempo de ejecución como el modo de acceso y el canal usado en
modo Adhoc!
</para>

<para>
El parámetro del canal se usa generalmente para evitar las interferencias
con otros equipos inalámbricos.
</para>

<para>
Los controladors de Lucent también se pueden usar con tarjetas Cabletron 
<ulink
url="http://www.cabletron.com"
>http://www.cabletron.com</ulink
>
</para>

</sect2>

<sect2>
<title>YDI</title>

<para>
tipo de red: DSSS, Adhoc e Infraestructura.
</para>

<para>
YDI vende tarjetas muy profesionales con antenas, amplificadores y más.
</para>

<para>
Web <ulink
url="http://www.ydi.com"
>http://www.ydi.com</ulink
>
</para>

<para>
para instalar:
</para>

<para>

<orderedlist>
<listitem>

<para>
Descomprímelo en un directorio vacío.
</para>
</listitem>
<listitem>

<para>
teclea make para compilar.
</para>
</listitem>
<listitem>

<para>
make install para instalar el controlador am930_isa y la utilidad wlanctl
</para>
</listitem>

</orderedlist>

</para>

<para>
Una vez hecho esto puedes elegir si tecleas comandos manuales usando
la utilidad de la capa de enlace "wlanctl" o ficheros "scripts/rc.lan" para
configurar automáticamente la red.
</para>

<para>
En el caso manual hay unas configuraciones principales:
</para>

<para>

<orderedlist>
<listitem>

<para>
&quot;wlanctl scan ...&quot; para buscar BSSs presentes.
</para>
</listitem>
<listitem>

<para>
&quot;wlanctl netlist&quot; muestra qué ha encontrado con &quot;wlanctl scan
...&quot;.
</para>
</listitem>
<listitem>

<para>
&quot;wlanctl bsscreate ... ssid&quot; para crear una nueva red con ssid
parameter.
</para>
</listitem>
<listitem>

<para>
&quot;wlanctl bssjoin bssid&quot; para unirse a la red identificada por bssid.
</para>
</listitem>
<listitem>

<para>
&quot;wlanctl authen&quot; y &quot;wlanctl assoc&quot; para servicios de autenticación.
</para>
</listitem>

</orderedlist>

</para>

</sect2>

</sect1>

<sect1>
<title>Más sobre la tecnología inalámbrica</title>

<sect2>
<title>Una distribución Linux inalámbrica</title>

<para>
La distribución inalámbrica FlyingLinux comenzó en octubre de 1999 en el
"Telecommunication Systems Lab" de "Teleinformatics KTH" con el objetivo de
estudiar las posibilidades de usar IPv4 Móvil y el acceso inalámbrico estándar
basado en DHCP en los laboratorios de los estudiantes.
</para>

<para>
El resultado de ese trabajo fue que el entorno FlyingLinux estuviera
disponible para cientos de estudiantes y profesores durante el curso del
proyecto 2G1303 que tuvo lugar de marzo a mayo del año 2000.
</para>

<para>
FlyingLinux es la primera distribución de Linux orientada a los servicios
móviles.
Hemos tenido cuidado de los aspectos de seguridad incluyendo soporte
Kerberos y OpenSSH.
</para>

<para>
FlyingLinux es parte del movimiento "Open Source". hemos incluido programas
que han sido desarrollados en KTH bajo la licencia GPL.
</para>

<para>
Puedes encontrar la distribución inalámbrica de Linux en este
<ulink
url="http://www.flyinglinux.net"
>Web</ulink
>.
</para>

<para>
Desarrollador: Alberto Escudero <ulink
url="mailto:aep@it.kth.se"
>Correo-e</ulink
>
&#62;, <ulink
url="http://www.it.kth.se/~aep"
>Página principal</ulink
>
</para>

</sect2>

</sect1>

<sect1>
<title>Enlaces útiles</title>

<sect2>
<title>Enlaces de software libre</title>

<para>

<itemizedlist>
<listitem>

<para>
<ulink
url="http://www.linux-wlan.org/"
>Linux-wlan project</ulink
>
</para>
</listitem>
<listitem>

<para>
<ulink
url="http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux"
>Jean Tourrilhes Wireless Howto</ulink
>
</para>
</listitem>

</itemizedlist>

</para>

</sect2>

<sect2>
<title>Enlaces comerciales</title>

<para>

<itemizedlist>
<listitem>

<para>
<ulink
url="http://www.fatamorgana.com"
>Fatamorgana Computers</ulink
>
</para>
</listitem>
<listitem>

<para>
<ulink
url="http://www.lucent.com"
>Web de Lucent</ulink
>
</para>
</listitem>
<listitem>

<para>
<ulink
url="http://www.ydi.com"
>Web de YDI</ulink
>
</para>
</listitem>
<listitem>

<para>
<ulink
url="http://www.siemens.com"
>Web de Siemens</ulink
>
</para>
</listitem>

</itemizedlist>

</para>

</sect2>

</sect1>

<sect1>
<title>PUF - Preguntas de uso Frecuente - FAQ -</title>

<para>
Q1: ¿Cual es la diferencia entre el BSSID y el ESSID y cuando necesito un
ESSID?
</para>

<para>
A1: BSSID es un número de 48 bits usado para identificar la pequeña zona de
una BSS, donde todas las máquinas pueden hablar entre ellas (eventualmente
con un Punto de Acceso) ESSID es una cadena de longitud variable qye permite
la comunicación entre diferentes BSS para extender el Conjunto de Servicio
Extendido (ESS). Hay un Punto de Acceso por cada BSS y todos ellos se comunican
sólo si pertenecen al mismo ESSID. Realmente necesitas un ESSID si tienes
una red grande con al menos 2 Puntos de Acceso.
</para>

<para>
Q2: ¿Qué Punto de acceso debo comprar?
</para>

<para>
A2: El menos caro que puedas encontrar: lo que es importante es que el Punto
de acceso y las tarjetas que estás usando usen la misma especificación en la
capa física: todas compatibles FHSS o todas compatibles DSSS. Cuidado con
las tarjetas Proxim RageLan2 que no pueden hablar con otros FHSS estándar
porque usan el protocolo propietario OpenAir.
</para>

<para>
Q3: ¿para qué uso la configuración del canal?
</para>

<para>
A3: Cuando tienes más de una red con diferentes BSS (y diferentes marcas)
puedes tener un problema de interferencias: cambiar el canal de los Puntos
de Acceso o en el los nodos en modo Adhoc puede ayudarte con este tipo de
problemas.
</para>

<para>
Q4: ¿Por qué no puedo configurar el canal en máquinas con modo Intraestructura?
</para>

<para>
A4: Porque el canal lo decide el Punto de Acceso.
</para>

</sect1>

<sect1>
<title>Apéndice A - Máscara 255.255.255.255, proxy arp y puenteo</title>

<para>
Aquí veremos algunas ventajas en las redes inalámbricas.
</para>

<para>
GNU/Linux te permite usar una máscara como 255.255.255.255 para un interfaz lo
que puede ayudarte al asignar direcciones IP a cualquier interfaz que
quieras, por ejemplo uno en eth0, otro en eth1 y así...
</para>

<para>
Esto no tiene efectos secundarios especiales.
</para>

<para>
Además tienes la configuración del proxy arp bajo /proc/sys/net/ipv4/conf/ethx/proxy_arp
donde ethx es tu interfaz.
</para>

<para>
Haciendo &quot;echo 1 &gt; proxy_arp&quot; habilitas el proxy_arp
para ese interfaz mientras que con &quot;echo 0 &gt; proxy_arp&quot; lo deshabilitas.
</para>

<para>
¿Que es proxy_arp? De forma rápida proxy arp te ayuda cuando quieres
una respuesta de enrutamiento a una petición ARP si la dirección de destino
está en otra interfaz del encaminador GNU/Linux.
</para>

<para>
Ejemplo:
</para>

<para>
192.168.1.1 ---- 192.168.1.2 router LiNUX 192.168.2.2 ----192.168.2.1
</para>

<para>
para hacer funcionar este ejemplo deberías:
</para>

<para>
Sin proxy-arp
</para>

<para>

<orderedlist>
<listitem>

<para>
En la máquina 192.168.1.1 poner 192.168.1.2 como enlace predeterminado.
</para>
</listitem>
<listitem>

<para>
En la máquina 192.168.2.1 poner 192.168.2.2 como puerta de enlace.
</para>
</listitem>
<listitem>

<para>
haciendo pings con éxito desde ambos extremos.
</para>
</listitem>

</orderedlist>

</para>

<para>
Con proxy-arp
</para>

<para>

<orderedlist>
<listitem>

<para>
En la máquina 192.168.1.1 poner 192.168.1.2 como puerta de enlace
</para>
</listitem>
<listitem>

<para>
no pongas puerta de enlace para la máquina 192.168.2.1 pero habilita el
proxy_arp para el interfaz derecho del encaminador.
</para>
</listitem>
<listitem>

<para>
haciendo ping con éxito desde cualquier extremo
</para>
</listitem>

</orderedlist>

</para>

<para>
Proxy-arp en 2. caso permite al encaminador GNU/Linux contestar cuando tú haces ping
desde 192.168.2.1, diciendo que él tiene la máquina 192.168.1.1 por lo que
contesta por ella. Después, cuando el origen comienza a enviar paquetes
ICMP, el encaminador GNU/Linux sabe que tiene que redirigirlos al destino real
192.168.1.1
</para>

<para>
En una red inalámbrica el proxy arp puede ayudarte si tienes muchas máquinas
GNU/Linux que actúan como repetidores IP y no quieres tener que configurar en
todas las máquinas unas rutas estáticas.
</para>

<para>
También puedes experimentar con el puenteo con GNU/Linux en una red inalámbrica:
</para>

<para>

<orderedlist>
<listitem>

<para>
Instala un núcleo estable reciente
</para>
</listitem>
<listitem>

<para>
descarga los útiles apropiados de puenteo de
<ulink
url="http://openrock.net/bridge"
>enlace http</ulink
> o
<ulink
url="ftp://openrock.net/bridge"
>enlace ftp</ulink
>
</para>
</listitem>

</orderedlist>

</para>

<para>
El puenteo debería ser más sencillo de administrar.
</para>

</sect1>

<sect1>
<title>Apéndice B - Radio Módem Siemens DECT</title>

<para>
Web: <ulink
url="http://www.siemens.com"
>http://www.siemens.com</ulink
>
</para>

<para>
¿Qué es eso? Esos 2 componentes no son realmente tarjetas PC sino que son
más como los módems externos.
</para>

<para>
Máquina1-serie - RadioModem1 - - - - - RadioModem2 - serie-Máquina2
</para>

<para>
¿Cómo puedo conectarlo?
</para>

<para>
Si los ves con una visión abstracta puedes modelarlos como ésto:
</para>

<para>
Máquina1-serie - -CABLE NULL MODEM - - serie-Máquina2
</para>

<para>
Así tienes conexión entre dos puertos serie con dos posibles configuraciones:
</para>

<para>

<orderedlist>
<listitem>

<para>
GNU/Linux con Windows, GNU/Linux tiene un demonio que contesta a una llamada ppp
mientras que Windows hace una llamada bajo el acceso remoto.
</para>
</listitem>
<listitem>

<para>
GNU/Linux con GNU/Linux, donde puedes ejecutar (en ambas máquinas) una conexión ppp
con direcciones IP inversas.
</para>
</listitem>

</orderedlist>

</para>

<para>
para 1 puedes usar este sencillo guión en GNU/Linux:
</para>

<para>
&quot;/usr/sbin/pppd -detach lock idle 300 crtscts connect &quot;/usr/sbin/chat
-v TIMEOUT 5 AT OK AT OK AT OK AT OK&quot; IPLINUX:IPWINDOWS /dev/ttySx 115200
disconnect &quot;/usr/sbin/chat -v AT OK&quot; ms-dns IPDNS&quot;
</para>

<para>
donde:
</para>

<para>

<itemizedlist>
<listitem>

<para>
/dev/ttySx es tu puerto serie,
</para>
</listitem>
<listitem>

<para>
IPDNS es la dirección IP de tu servidor DNS,
</para>
</listitem>
<listitem>

<para>
IPLINUX es la dirección IP de tu GNU/Linux e IPWINDOWS es la dirección IP del
Windows.
</para>
</listitem>

</itemizedlist>

</para>

<para>
¡El guión anterior se necesita para permitir a Windows creer que hay un
módem en el extremo serie!
</para>

<para>
En Windows necesitas crear una conexión con el crtscts habilitado, velocidad
a 115200 con un número cualquiera a llamar (lo necesita el Acceso Remoto
pero no se usa en absoluto).
</para>

<para>
Con 2 máquinas GNU/Linux sólo tienes que ejecutar un guión realmente sencillo
como éste en cada GNU/Linux:
</para>

<para>
&quot;/usr/sbin/pppd passive local crtscts IPLINUX1:IPLINUX2 /dev/ttySx
115200 noauth persist&quot;
</para>

<para>
donde tendrás que invertir IPLINUX1 con IPLINUX2 en el otro extremo.
</para>

<para>
date cuenta de que puedes hacer autenticación tanto en Linux-Windows como en
Linux-Linux si quieres.
</para>

</sect1>

</article>
