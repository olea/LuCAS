<?xml version="1.0" encoding="ISO-8859-1" ?>

<appendix id="openldap-configure.options">
	<title>Opciones de compilación de OpenLDAP en Debian <acronym>GNU</acronym>/Linux</title>

<programlisting><![CDATA[
# Copyright 1998-2003 The OpenLDAP Foundation,  All Rights Reserved.
# 	Restrictions apply, see COPYRIGHT and LICENSE files.
# Usage: configure [options] [host]
# Options: [defaults in brackets after descriptions]
# Configuration:
#   --cache-file=FILE       cache test results in FILE
#   --help                  print this message
#   --no-create             do not create output files
#   --quiet, --silent       do not print `checking...' messages
#   --version               print the version of autoconf that created configure
# Directory and file names:
#   --prefix=PREFIX         install architecture-independent files in PREFIX
#                           [/usr/local]
--prefix=/usr
#   --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
#                           [same as prefix]
#   --bindir=DIR            user executables in DIR [EPREFIX/bin]
#   --sbindir=DIR           system admin executables in DIR [EPREFIX/sbin]
#   --libexecdir=DIR        program executables in DIR [EPREFIX/libexec]
--libexecdir='${prefix}/lib'
#   --datadir=DIR           read-only architecture-independent data in DIR
#                           [PREFIX/share]
#   --sysconfdir=DIR        read-only single-machine data in DIR [PREFIX/etc]
--sysconfdir=/etc
#   --sharedstatedir=DIR    modifiable architecture-independent data in DIR
#                           [PREFIX/com]
#   --localstatedir=DIR     modifiable single-machine data in DIR [PREFIX/var]
--localstatedir=/var/run
#   --libdir=DIR            object code libraries in DIR [EPREFIX/lib]
#   --includedir=DIR        C header files in DIR [PREFIX/include]
#   --oldincludedir=DIR     C header files for non-gcc in DIR [/usr/include]
#   --infodir=DIR           info documentation in DIR [PREFIX/info]
#   --mandir=DIR            man documentation in DIR [PREFIX/man]
--mandir='${prefix}/share/man'
#   --srcdir=DIR            find the sources in DIR [configure dir or ..]
#   --program-prefix=PREFIX prepend PREFIX to installed program names
#   --program-suffix=SUFFIX append SUFFIX to installed program names
#   --program-transform-name=PROGRAM
#                           run sed PROGRAM on installed program names
# Host type:
#   --build=BUILD           configure for building on BUILD [BUILD=HOST]
#   --host=HOST             configure for HOST [guessed]
#   --target=TARGET         configure for TARGET [TARGET=HOST]
# Features and packages:
#   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
#   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
#   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
#   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
#   --x-includes=DIR        X include files are in DIR
#   --x-libraries=DIR       X library files are in DIR
# --enable and --with options recognized:
#   --with-subdir=DIR       change default subdirectory used for installs
--with-subdir=ldap
#   --enable-debug 	  enable debugging [yes]
## Our users might want to use the -d option
--enable-debug
#   --enable-syslog	  enable syslog support [auto]
--enable-syslog
#   --enable-proctitle	  enable proctitle support [yes]
--enable-proctitle
#   --enable-cache	  enable caching (experimental) [no]
#--enable-cache
#   --enable-referrals	  enable LDAPv2+ Referrals (experimental) [no]
## Better support this standard ldap feature
--enable-referrals
#   --enable-ipv6 	  enable IPv6 support [auto]
## Debian tries to fully support IPv6 so we need this
--enable-ipv6
#   --enable-local	  enable AF_LOCAL (AF_UNIX) socket support [auto]
--enable-local
#   --enable-x-compile	  enable cross compiling [no]
#   --with-cyrus-sasl	  with Cyrus SASL support [auto]
--with-cyrus-sasl
#   --with-fetch		  with freeBSD fetch URL support [auto]
#   --with-kerberos	  with Kerberos support [auto]
#   --with-readline	  with readline support [auto]
--with-readline
#   --with-threads	  with threads [auto]
--with-threads
#   --with-tls		  with TLS/SSL support [auto]
--with-tls
#   --with-yielding-select  with implicitly yielding select [auto]
# 
# SLAPD (Standalone LDAP Daemon) Options:
#   --enable-slapd	  enable building slapd [yes]
--enable-slapd
#     --enable-aci	  enable per-object ACIs (experimental) [no]
#--enable-aci
#     --enable-cleartext	  enable cleartext passwords [yes]
--enable-cleartext
#     --enable-crypt	  enable crypt(3) passwords [no]
--enable-crypt
#     --enable-dynamic	  enable linking built binaries with dynamic libs [no]
--enable-dynamic
#     --enable-kpasswd	  enable Kerberos password verification [no]
#     --enable-lmpasswd	  enable LAN Manager passwords [no]
#     --enable-spasswd	  enable (Cyrus) SASL password verification [no]
--enable-spasswd
#     --enable-modules	  enable dynamic module support [no]
--enable-modules
#     --enable-phonetic	  enable phonetic/soundex [no]
--enable-phonetic
#     --enable-rewrite	  enable DN rewriting in back-ldap and back-meta [no]
--enable-rewrite
#     --enable-rlookups	  enable reverse lookups of client hostnames [no]
--enable-rlookups
#     --enable-slp          enable SLPv2 support [no]
--enable-slp
#     --enable-wrappers	  enable tcp wrapper support [no]
--enable-wrappers
#     --enable-bdb	  enable Berkeley DB backend [yes]
--enable-bdb
#     --with-bdb-module     module type static|dynamic [static]
--with-bdb-module=dynamic
#     --enable-dnssrv	  enable dnssrv backend [no]
--enable-dnssrv
#     --with-dnssrv-module  module type static|dynamic [static]
--with-dnssrv-module=dynamic
#     --enable-ldap	  enable ldap backend [no]
--enable-ldap
#     --with-ldap-module	  module type static|dynamic [static]
--with-ldap-module=dynamic
#     --enable-ldbm	  enable ldbm backend [no]
--enable-ldbm
#     --with-ldbm-api       with LDBM API auto|berkeley|bcompat|mdbm|gdbm [auto]
--with-ldbm-api=berkeley
#     --with-ldbm-module	  module type static|dynamic [static]
--with-ldbm-module=dynamic
#     --with-ldbm-type	  use LDBM type auto|btree|hash [auto]
#     --enable-meta	  enable metadirectory backend [no]
--enable-meta
#     --with-meta-module	  module type static|dynamic [static]
--with-meta-module=dynamic
#     --enable-monitor	  enable monitor backend [no]
--enable-monitor
#     --with-monitor-module module type static|dynamic [static]
--with-monitor-module=dynamic
#     --enable-null	  enable null backend [no]
--enable-null
#     --with-null-module	  module type static|dynamic [static]
--with-null-module=dynamic
#     --enable-passwd	  enable passwd backend [no]
--enable-passwd
#     --with-passwd-module  module type static|dynamic [static]
--with-passwd-module=dynamic
#     --enable-perl	  enable perl backend [no]
## This does not currently build with Perl 5.8 - disable it
--disable-perl
#     --with-perl-module	  module type static|dynamic [static]
#     --enable-shell	  enable shell backend [no]
--enable-shell
#     --with-shell-module	  module type static|dynamic [static]
--with-shell-module=dynamic
#     --enable-sql	  enable sql backend [no]
--enable-sql
#     --with-sql-module	  module type static|dynamic [static]
--with-sql-module=dynamic
# 
# SLURPD (Replication Daemon) Options:
#   --enable-slurpd	  enable building slurpd [auto]
--enable-slurpd
# 
# Library Generation & Linking Options
#   --enable-static[=PKGS]  build static libraries [default=yes]
#   --enable-shared[=PKGS]  build shared libraries [default=yes]
--enable-shared
#   --enable-fast-install[=PKGS]  optimize for fast installation [default=yes]
#   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
#   --disable-libtool-lock  avoid locking (might break parallel builds)
#   --with-pic              try to use only PIC/non-PIC objects [default=use both]
# 
# See INSTALL file for further details.]]></programlisting>
</appendix>
