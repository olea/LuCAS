<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DocBook XML DTD V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd">

<article lang="es" id="creacion-de-tablas">
  <articleinfo>
    <title>Creación de tablas HTML</title>
    <date>21 de Febrero de 2002</date>
    <author>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </author>
    <author>
      <firstname>Victor</firstname>
      <surname>García</surname>
    </author>
    <abstract>
      <para>
	Con su aparición las tablas y revolucionaron el
	diseño de las páginas web. Las tablas eran una herramienta
	perfecta para organizar datos de manera ordenada, pero su
	utilidad no se queda ahí, ya que escondiendo los bordes
	podremos usarlas también para definir la estructura de las
	páginas. En este capítulo aprenderemos todas las etiquetas y
	atributos que existen en el lenguaje HTML estándar para la
	creación de tablas y realizaremos numerosos ejemplos y
	ejercicios para ir cogiendo práctica, que es, al fin y al
	cabo, lo más importante a la hora de sacar el máximo partido a
	las tablas. 
      </para>
    </abstract>

    <editor>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </editor>
    <releaseinfo>Versión 1.0</releaseinfo>
    <orgname>Conquista la web</orgname>
    <legalnotice>
      <para>
	Copyright Jorge Ferrer y Victor García. Se otorga permiso para copiar,
	distribuir y/o modificar este documento bajo los términos de la
	Licencia de Documentación Libre GNU, Versión 1.1 o cualquier otra
	versión posterior publicada por la Free Software Foundation. Puede
	consultar una copia de la licencia en:
	http://www.gnu.org/copyleft/fdl.html
      </para>
      <para>
	Para más detalles consultenos a través de la dirección
	jferrer@acm.org
      </para>
    </legalnotice>
  </articleinfo>
  
  <para>
    Con lo que hemos visto hasta ahora la disposición de los elementos
    de una página web es aún harto difícil. Tras estudiar los métodos de
    alineamiento empezamos a adquirir un mayor control sobre ellos,
    pero sin duda fueron las tablas las que van a darnos una mayor
    flexibilidad para decidir la disposición de los elementos en una
    página. En un
    principio las tablas pueden servir para mostrar una serie de datos
    de una manera ordenada, tal y como estamos acostumbrados a ver en
    numerosas situaciones, sin embargo las tablas en la web tienen una
    utilidad aún mayor. Podemos hacer que toda nuestra página, o una
    parte de ella, sea una tabla e ir colocando los diferentes
    elementos de los que conste en sus celdas. De esta forma sabremos
    con gran precisión donde estamos colocándolas. En la página de
    GNOME Hispano, figura 7.1, podemos ver un
    excelente ejemplo de ello.
  </para>

  <figure label="7.1">

    <title>
      En el web de GNOME Hispano encontramos
      multitud de elementos, gráficos y texto, con una disposición muy
      cuidada. ¿Cómo lo hacen? Con tablas.
    </title>
    <graphic fileref="img/fig7-1.png"  format="PNG"/>

  </figure>
  <para>
    Un inconveniente de las tablas radica en que si bien los
    navegadores gráficos tienen una gran libertad para colocar y
    distribuir los elementos, esto no ocurre así con los navegadores
    en modo texto. Por ello cuando vemos una página con tablas en uno
    de estos navegadores nuestra cuidada presentación puede caer por
    los suelos. Sin hablar de navegadores para ciegos o los usados en
    los coches, que leen las páginas. En estos casos el usar tablas
    para controlar la apariencia provoca que el navegador se líe y no
    interprete bien la página.
  </para>
  <para>
    Por supuesto existen métodos o trucos para evitarlo en
    lo posible, y merecerán nuestra atención una vez nos hayamos
    convertido en unos expertos en la creación de tablas.
  </para>

  <sect1>

    <title>Cómo se crea una tabla</title>

    <para>
      Para crear las tablas será necesario usar una nueva etiqueta:
      <emphasis>TABLE</emphasis>, que significa, en inglés, tabla. Esta
      etiqueta consta de instrucción de inicio, <sgmltag>&lt;TABLE&gt;
      </sgmltag>, e instrucción de fin, <sgmltag>&lt;/TABLE&gt;
      </sgmltag>. Entre ambas debemos introducir otras tres etiquetas, que
      definirán la estructura de la tabla. Estas etiquetas son:
    </para>
    
    <itemizedlist>

      <listitem>

	<para>
	  <sgmltag>TR</sgmltag>: La etiqueta <emphasis>Table
	  Row</emphasis> nos permitirá 
	  insertar filas en la 
	  tabla. La tabla tendrá tantas filas como apariciones de esta
	  etiqueta haya entre <sgmltag>&lt;TABLE&gt;</sgmltag> y
	  <sgmltag>&lt;/TABLE&gt;</sgmltag>. La instrucción de inicio de
	  TR, <sgmltag>&lt;TR&gt;</sgmltag>, marca el comienzo de la
	  línea, la instrucción de fin, <sgmltag>&lt;/TR%gt;</sgmltag>,
	  marca su final. La instrucción de fin es optativa, si no se usa
	  se considera que una línea ha acabado cuando comienza otra o
	  cuando acaba la tabla. Entre el comienzo y el fin de la línea
	  debemos insertar las celdas de la tabla.	
	</para>

      </listitem>

      <listitem>

	<para>
	  <sgmltag>TH</sgmltag>: Este es el primero de los dos tipos de
	  celdas existentes en el lenguaje HTML. El nombre de la
	  etiqueta proviene del inglés 
	  <emphasis>Table Header</emphasis>,
	  encabezado de tabla. Al igual que la etiqueta anterior el
	  comienzo del encabezado viene dado por la instrucción de inicio,
	  <sgmltag>&lt;TH&gt;</sgmltag> y finaliza con la instrucción de
	  fin, <sgmltag>&lt;/TH&gt;</sgmltag>, o con el comienzo de otra
	  celda. En general entre el comienzo y el fin se suele insertar
	  texto, que será mostrado en negrita o subrayado y centrado.
	</para>

      </listitem>

      <listitem>

	<para>
	  <sgmltag>TD</sgmltag>: Este es el segundo tipo de celda de las
	  tablas HTML. El nombre de la etiqueta,
	  <emphasis>Table Data</emphasis> (Datos de
	  tabla), nos induce a pensar que su función será introducir todos
	  los datos que queramos en las celdillas definidas de esta
	  forma. Y así será, de hecho podemos insertar cualquier elemento
	  de HTML: imágenes, listas, texto
	  formateado e incluso otras tablas. La diferencia de esta celda
	  con la anterior es pequeña, y su existencia separada sólo tiene
	  sentido si consideramos el carácter descriptivo del
	  HTML. En la práctica la diferencia
	  principal es que el texto de los encabezados de tabla aparecerá
	  resaltado y centrado y el de las celdas normales (TD) no.
	</para>

      </listitem>

    </itemizedlist>
    
    <note>

      <para>
	El uso de las instrucciones de fin de TR, TD y TH es, como hemos
	dicho, optativo. Sin embargo en las primeras versiones del lenguaje
	HTML era obligatorio usarlas y por esta
	razón algunos navegadores antiguos las necesitan para poder
	entender las tablas. Es por ello que nuestra recomendación es usar
	siempre dichas instrucciones de fin para seguir con nuestro
	objetivo de llegar a la mayor cantidad de público posible.
      </para>

    </note>

    <para>
      Con una mera descripción de las etiquetas es difícil entender por
      completo como se crean tablas en HTML,
      así que vamos a ver unos ejemplos. 
    </para>

    <para>
      Para empezar crearemos una tabla sencilla de dos filas y dos
      elementos. Vayamos por pasos:
    </para>

    <orderedlist>

      <listitem>

	<para>
	  En primer lugar ponemos la instrucción de inicio y fin de la
	  etiqueta TABLE dejando un espacio entre ellas para insertar
	  posteriormente el resto de etiquetas:
	</para>

	<programlisting>
	  <sgmltag>&lt;TABLE&gt;</sgmltag>
	  ...Otras etiquetas...
	  <sgmltag>&lt;/TABLE&gt;</sgmltag>

	</programlisting>

      </listitem>

      <listitem>

	<para>
	  A continuación insertamos las filas. La tabla que nos hemos
	  propuesto crear consta de dos filas. Por tanto debemos usar la
	  etiqueta TR dos veces. Lo que insertemos en la primera (entre la
	  instrucción de inicio y la instrucción de fin) será el contenido
	  de la primera fila y lo que insertemos en la segunda será el
	  contenido de la segunda fila:
	</para>

	<programlisting>

	  <sgmltag>&lt;TABLE&gt;</sgmltag>
	  <emphasis>
	    <sgmltag>&lt;TR&gt;</sgmltag>   <sgmltag>&lt;/TR&gt;</sgmltag>
	    <sgmltag>&lt;TR&gt;</sgmltag>   <sgmltag>&lt;/TR&gt;</sgmltag>
	  </emphasis>
	  <sgmltag>&lt;/TABLE&gt;</sgmltag>

	</programlisting>

      </listitem>

      <listitem>

	<para>
	  El tercer paso será definir el contenido de cada fila. Como nos
	  habíamos propuesto que la tabla tuviese dos columnas en cada
	  fila debemos insertar dos celdas en cada una. Como hemos
	  explicado antes, para crear una celda debemos usar la etiqueta
	  TD. Entre la instrucción de inicio y la instrucción de fin de
	  está etiqueta será donde insertaremos el verdadero contenido de
	  la tabla. En este primer ejemplo sencillo será simplemente texto,
	  pero puede ser cualquier otro elemento web como imágenes o
	  listas. Volviendo a nuestro ejemplo, para cada fila debemos
	  escribir el siguiente código:
	</para>

	<programlisting>

	  <sgmltag>&lt;TR&gt;</sgmltag>
	  <emphasis>
	    <sgmltag>&lt;TD&gt;</sgmltag>
	    Columna1
	    <sgmltag>&lt;/TD&gt;</sgmltag>
	    <sgmltag>&lt;TD&gt;</sgmltag>
	    Columna2
	    <sgmltag>&lt;/TD&gt;</sgmltag>
	  </emphasis>
	  <sgmltag>&lt;/TR&gt;</sgmltag>

	</programlisting>

	<note>

	  <para>
	    En los ejemplos que veremos a lo largo de este curso
	    sangraremos las etiquetas a distintos niveles para que sea más
	    sencillo saber que etiquetas están dentro de otras. No es
	    necesario realizar esto para que el código funcione, de hecho
	    podríamos escribir el código en una sola línea y también
	    funcionaría, pero si es recomendable ya que nos facilita mucho
	    su lectura.
	  </para>

	</note>

      </listitem>

      <listitem>

	<para>
	  El cuarto paso es ponerlo todo junto, repitiendo el código
	  anterior para cada fila. El código final de la tabla será:
	</para>

	<programlisting>

	  <sgmltag>&lt;TABLE&gt;</sgmltag>
	  <sgmltag>&lt;TR&gt;</sgmltag>
    	  <sgmltag>&lt;TD&gt;</sgmltag>
	  Fila1,Columna1
	  <sgmltag>&lt;/TD&gt;</sgmltag>
    	  <sgmltag>&lt;TD&gt;</sgmltag>
	  Fila1,Columna2
	  <sgmltag>&lt;/TD&gt;</sgmltag>
	  <sgmltag>&lt;/TR&gt;</sgmltag>
	  <sgmltag>&lt;TR&gt;</sgmltag>
    	  <sgmltag>&lt;TD&gt;</sgmltag>
	  Fila2,Columna1
	  <sgmltag>&lt;/TD&gt;</sgmltag>
    	  <sgmltag>&lt;TD&gt;</sgmltag>
	  Fila2,Columna2
	  <sgmltag>&lt;/TD&gt;</sgmltag>
	  <sgmltag>&lt;/TR&gt;</sgmltag>
	  <sgmltag>&lt;/TABLE&gt;</sgmltag>

	</programlisting>

      </listitem>

    </orderedlist>

    <para>
      En la figura 7.2 podemos ver como muestra <productname>Explorer
      </productname>esta tabla.
    </para>

    <figure label="7.2">

      <title>
	Ya hemos creado nuestra primera tabla, aunque es sencilla ya
	podemos observar varias cosas curiosas en ella, por ejemplo que
	por defecto no se dibujan los bordes.
      </title>
      <graphic fileref="img/fig7-2.gif"  format="GIF"/>

    </figure>

    <para>
      Quizá el hecho que más nos sorprenda es que la tabla no tiene
      bordes, y que las celdas no están dibujadas. Más adelante
      comentaremos algo más sobre ello y aprenderemos a incluir bordes de
      diferentes tamaños. Lo que más nos interesa ahora es comprender la
      estructura de la tabla anterior. Como hemos podido comprobar, esta
      tabla se va creando por filas, y dentro de cada fila se insertan las
      celdas, cada una de las cuales aparecerán en una columna.
    </para>

    <para>
      A continuación mostramos una tabla ligeramente más complicada, en la
      que, ahora sí, haremos uso de los encabezados de tabla. En ella
      observaremos además que ocurre cuando una fila tiene más celdas que
      otra. Para la creación del código de esta tabla habrá que llevar a
      cabo los mismos pasos que en el ejemplo anterior. El código final que
      define la tabla será:
    </para>

    <programlisting>

      <sgmltag>&lt;/TABLE&gt;</sgmltag>

    </programlisting>

    <para>
      Este ejemplo es mostrado en la figura 7.3.
    </para>

    <figure label="7.3">

      <title>
	En esta segunda tabla ya podemos ver como son mostrados los
	encabezados de tabla.
      </title>
      <graphic fileref="img/fig7-3.gif"  format="GIF"/>

    </figure>

    <para>
      Como habíamos comentado, el texto de los encabezados es resaltado,
      en este caso (usando <productname>Explorer</productname>) es mostrado
      en negrita y centrado con respecto al resto de los elementos de su
      columna. Por otro lado en este ejemplo observamos el efecto de la
      existencia de una fila con más celdas (más columnas) que el resto. En
      la primera fila insertamos tres celdas usando la etiqueta TH y sin
      embargo en las siguientes filas sólo creamos dos celdas. Aunque lo
      pueda parecer esto no es ningún problema. El navegador creará una
      tabla de 3 filas y 3 columnas, pero algunas de las celdas estarán
      vacías.
    </para>

    <sect2>

      <title>Borde de las tablas</title>

      <para>
	El siguiente paso en el aprendizaje de las tablas consiste en
	añadirles un borde. Esto es tan sencillo como añadir un nuevo
	atributo a la instrucción de inicio de la etiqueta TABLE. El
	atributo del que hablamos es
	<sgmltag class="attribute">BORDER</sgmltag>, que 
	significa borde en inglés. Este atributo puede tomar un valor en
	pixeles que representa el grosor del borde a mostrar. Si incluimos
	<sgmltag class="attribute">BORDER</sgmltag> sin ningún valor es equivalente a <sgmltag class="attribute">BORDER="1"</sgmltag>
	Repitamos el segundo de los ejemplos vistos antes pero añadiéndole
	un borde de grosor 5.
      </para>

      <programlisting>

	<sgmltag>&lt;TABLE BORDER="5"&gt;</sgmltag>
	<sgmltag>&lt;TR&gt;</sgmltag>
	<sgmltag>&lt;TH&gt;</sgmltag>
	Encabezado1
	<sgmltag>&lt;/TH&gt;</sgmltag>
	<sgmltag>&lt;TH&gt;</sgmltag>
	Encabezado2
	<sgmltag>&lt;/TH&gt;</sgmltag>
	<sgmltag>&lt;TH&gt;</sgmltag>
	Encabezado3
	<sgmltag>&lt;/TH&gt;</sgmltag>
	<sgmltag>&lt;/TR&gt;</sgmltag>
	<sgmltag>&lt;TR&gt;</sgmltag>
	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila1,Columna1
	<sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila1,Columna2
	<sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;/TR&gt;</sgmltag>
	<sgmltag>&lt;TR&gt;</sgmltag>
	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila2,Columna1
	<sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila2,Columna2
	<sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;/TR&gt;</sgmltag>
	<sgmltag>&lt;/TABLE&gt;</sgmltag>

      </programlisting>

      <para>
	En la figura 7.4 podemos ver el resultado de este código. En ella
	observamos como <productname>Explorer</productname> le da un
	aspecto tridimensional al borde de las páginas.
      </para>

      <figure label="7.4">

	<title>
	  Tabla con bordes. En esta tabla podemos observar lo que ocurre
	  cuando una fila tiene más celdas que otra o cuando insertamos una
	  celda sin nada dentro.
	</title>
	<graphic fileref="img/fig7-4.gif"  format="GIF"/>

      </figure>

      <para>
	Un aspecto interesante a resaltar de la figura 7.4 es que las
	celdillas que están vacías, es decir, no tienen ni texto ni ningún
	otro elemento en su interior no son dibujadas por los
	navegadores. En este caso ni siquiera habíamos puesto las
	instrucciones <sgmltag>&lt;TD&gt;</sgmltag> y <sgmltag>&lt;/TD
	  &gt;</sgmltag> correspondientes a esas celdas, aunque si las
	hubiésemos puesto, pero sin ningún contenido dentro, es decir, si
	hubiéramos escrito:
      </para>

      <programlisting>

	<sgmltag>&lt;TR&gt;</sgmltag>
	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila2,Columna1
	<sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila2,Columna2
	<sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;TD&gt;</sgmltag><sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;/TR&gt;</sgmltag>

      </programlisting>

      <para>
	El resultado habría sido el mismo.
      </para>

      <para>
	Si queremos que sí sean dibujadas debemos insertar la etiqueta TD
	con un salto de línea (<sgmltag>&lt;BR&gt;</sgmltag>) o un espacio
	creado con una secuencia de escape, <emphasis>&nbsp;</emphasis>,
	para definirla. Esto es, en el caso anterior podíamos haber
	escrito.
      </para>

      <programlisting>

	<sgmltag>&lt;TABLE BORDER="5"&gt;</sgmltag> 
	<sgmltag>&lt;TR&gt;</sgmltag>
    	<sgmltag>&lt;TH&gt;</sgmltag>
	Encabezado1
	<sgmltag>&lt;/TH&gt;</sgmltag>
    	<sgmltag>&lt;TH&gt;</sgmltag>
	Encabezado2
	<sgmltag>&lt;/TH&gt;</sgmltag>
    	<sgmltag>&lt;TH&gt;</sgmltag>
	Encabezado3
	<sgmltag>&lt;/TH&gt;</sgmltag>
	<sgmltag>&lt;/TR&gt;</sgmltag>
	<sgmltag>&lt;TR&gt;</sgmltag>
    	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila1,Columna1
	<sgmltag>&lt;/TD&gt;</sgmltag>
    	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila1,Columna2
	<sgmltag>&lt;/TD&gt;</sgmltag>
    	<sgmltag>&lt;TD&gt;</sgmltag>
	<emphasis>
	  <sgmltag>&lt;BR&gt;</sgmltag>
	</emphasis>
	<sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;/TR&gt;</sgmltag>
	<sgmltag>&lt;TR&gt;</sgmltag>
    	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila2,Columna1
	<sgmltag>&lt;/TD&gt;</sgmltag>
    	<sgmltag>&lt;TD&gt;</sgmltag>
	Fila2,Columna2
	<sgmltag>&lt;/TD&gt;</sgmltag>
    	<sgmltag>&lt;TD&gt;</sgmltag>
	<emphasis>&nbsp;</emphasis>
	<sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;/TR&gt;</sgmltag>
        <sgmltag>&lt;/TABLE&gt;</sgmltag>

      </programlisting>

      <para>
	En este caso habríamos obtenido el resultado de la figura 7.5.
      </para>

      <figure label="7.5">

	<title>
	  Tabla con celdas vacías. Poniendo <sgmltag>&lt;BR&gt;</sgmltag>
	  o &nbsp; las celdas que antes no existían ahora si son dibujadas,
	  pero sin nada dentro.
	</title>
	<graphic fileref="img/fig7-5.gif"  format="GIF"/>

      </figure>

      <para>
	Como vemos, <sgmltag>&lt;BR&gt;</sgmltag> y &nbsp; consiguen el
	mismo resultado.
      </para>

    </sect2>

    <sect2>

      <title>Insertar un título para la tabla</title>

      <para>
	El siguiente elemento importante a destacar en las tablas y del que
	todavía no hemos hablado es el título. Este será un texto que
	acompaña a la tabla podrá estar situado encima o debajo de
	ella. Para insertarlo haremos uso de una nueva etiqueta:
	<emphasis>CAPTION</emphasis> (que se puede traducir al español
	como título), que deberá ser usada entre las instrucciones
	<sgmltag>&lt;TABLE&gt;</sgmltag> y <sgmltag>&lt;/TABLE
	  &gt;</sgmltag>, de la siguiente manera:
      </para>

      <programlisting>

	<sgmltag>&lt;TABLE&gt;</sgmltag>
	<emphasis>
	  <sgmltag>&lt;CAPTION&gt;</sgmltag>
	  Titulo de la tabla
	  <sgmltag>&lt;/CAPTION&gt;</sgmltag>
	</emphasis>
	... Código de la tabla ...
	<sgmltag>&lt;/TABLE&gt;</sgmltag>

      </programlisting>

      <para>
	El texto que servirá de título será insertado entre las
	instrucciones de inicio y fin. Este texto podrá ser formateado por
	otras etiquetas siempre y cuando sean de nivel de texto, esto es,
	que su inclusión no provoque un salto de línea. Esto,
	desgraciadamente, excluye  a los encabezados (H1 ,H2, etc.), pero
	no a las etiquetas de nivel de texto o a FONT.
      </para>

      <para>
	Los títulos de la tabla serán mostrados por defecto en la parte
	superior de esta, pero la etiqueta CAPTION permite el uso de un
	atributo (cuyo nombre nos resultará familiar), <emphasis>ALIGN
	</emphasis>, que nos permitirá elegir que dichos títulos sean
	mostrados como pie de la tabla. El atributo ALIGN, puede tomar dos
	valores <emphasis>top</emphasis> y <emphasis>bottom</emphasis>. El
	primero de ellos, top, significa en inglés arriba o parte superior
	y su efecto será que el título sea mostrado encima de la
	tabla. Bottom, por su parte puede ser traducido como abajo o parte
	inferior. El uso de este atributo provocará el efecto antes
	comentado: el título será mostrado al pie de la tabla. El siguiente
	código es un ejemplo del uso este tipo de alineamiento del título:
      </para>

      <programlisting>

	<sgmltag>&lt;TABLE&gt;</sgmltag>
	<emphasis>
	  <sgmltag>&lt;CAPTION ALIGN="bottom"&gt;</sgmltag>
	  Pie de la tabla
	  <sgmltag>&lt;/CAPTION&gt;</sgmltag>
	</emphasis>
	... Código de la tabla ...
        <sgmltag>&lt;/TABLE&gt;</sgmltag>

      </programlisting>

      <para>
	A continuación veremos un ejemplo completo de tabla con título. Es
	necesario resaltar dos aspectos de este ejemplo. El primero es que
	aunque usemos ALIGN="top" para el título, en realidad no
	es necesario, ya que este es el alineamiento que aparece por
	defecto. El segundo es que para resaltar el título nos hemos
	ayudado de las etiquetas BIG y B que ya conocemos, algo
	perfectamente válido dentro de la etiqueta CAPTION.
      </para>

      <para>
	Un ejemplo de inclusión de un encabezado es el siguiente:
      </para>

      <programlisting>

	<sgmltag>&lt;TABLE&gt;</sgmltag>
	<sgmltag>&lt;CAPTION ALIGN="top"&gt;</sgmltag>
        <sgmltag>&lt;BIG&gt;</sgmltag>
	<sgmltag>&lt;B&gt;</sgmltag>
	Tabla de ejemplo
	<sgmltag>&lt;/B&gt;</sgmltag>
        <sgmltag>&lt;/BIG&gt;</sgmltag> 
	<sgmltag>&lt;/CAPTION&gt;</sgmltag>
	<sgmltag>&lt;TR&gt;</sgmltag>
        <sgmltag>&lt;TD&gt;</sgmltag>
	Fila1,Columna1
        <sgmltag>&lt;/TD&gt;</sgmltag>
        <sgmltag>&lt;TD&gt;</sgmltag>
	Fila1,Columna2
        <sgmltag>&lt;/TD&gt;</sgmltag>
	<sgmltag>&lt;TR&gt;</sgmltag>
        <sgmltag>&lt;TD&gt;</sgmltag>
	Fila2,Columna1
        <sgmltag>&lt;/TD&gt;</sgmltag>
        <sgmltag>&lt;TD&gt;</sgmltag>
	Fila2,Columna2
        <sgmltag>&lt;/TD&gt;</sgmltag>
        <sgmltag>&lt;/TABLE&gt;</sgmltag>

      </programlisting>

      <para>
	Cuyo resultado podemos apreciar en la tabla izquierda de la figura
	7.6.
      </para>

      <figure label="7.6">

        <title>
	  Con la etiqueta CAPTION podemos poner un título a la tabla. Este
	  título puede situarse encima (ALIGN="top") o debajo
	  (ALIGN="bottom") de la tabla.
	</title>
	<graphic fileref="img/fig7-6.gif"  format="GIF"/>

      </figure>

      <para>
	La tabla de la derecha corresponde al mismo código pero con
	ALIGN="bottom".
      </para>

    </sect2>

    <sect2>

      <title>Tamaño de las tablas</title>

      <para>
	Todavía queda un tema de gran importancia en la creación de tablas
	que debemos comentar: su tamaño. Quizá tras haber hecho algunos
	ejemplos el lector se habrá dado cuenta que el tamaño de las tablas
	no es siempre el mismo. Lo más probable es que este hecho no nos
	haya sorprendido, aún así es importante la manera en que los
	navegadores <emphasis>calculan</emphasis> el tamaño de las tablas y
	sus celdas no es tan sencilla y suele ser muy útil conocerla
	bien. Posteriormente aprenderemos a cambiar este tamaño
	<emphasis>a mano</emphasis>.
      </para>

      <para>
	Cuando al leer una página el navegador encuentra una tabla calcula
	cual es el tamaño tanto horizontal como vertical necesario para
	mostrar el contenido de cada una de las celdas. En este momento hay
	que tener en cuenta que todas las celdas de una misma columna deben
	tener un mismo ancho y que todas las celdas de una misma fila deben
	tener la misma altura. La altura de cada fila quedará determinada
	por el elemento más alto (o el texto con más líneas) de todas las
	celdas de la fila. De manera similar se calcula el ancho de las
	columnas. Vistos estos conceptos probablemente se haya quedado
	el lector un poco confundido, esta parte es un poco complicada al
	principio pero se comprende rápidamente una vez hemos practicado
	un poco con tablas.
      </para>

      <para>
	Llegados a este punto ya podemos afirmar que sabemos todo lo
	necesario para crear tablas. Ahora nos queda conocer algunos
	aspectos más avanzados y realizar algunos ejemplos para adquirir
	destreza en su uso. Pero antes, practiquemos un poco.
      </para>

    </sect2>
    <sect2>
      <title>Ejercicio 7.1</title> 
      <para>
	En este ejercicio se propone la
	creación de tablas con elementos de diferentes tamaños en sus
	celdas para observar como varían sus tamaños. En el archivo
	<ulink
	       url="ejemplos/extra.zip"><filename>extra.zip</filename></ulink>
	se ofrecen imágenes de diferentes
	tamaños como ayuda. Las tablas que se proponen realizar son:
      </para>

      <orderedlist>

	<listitem>

	  <para>
	    Una tabla de 2 filas y 3 columnas. El contenido de todas las
	    celdas será la palabra: TABLA.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Se sustituye la palabra TABLA en cada una de las celdas
	    anteriores por un texto lo suficientemente largo para que
	    ocupe varias líneas.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Crear dos tablas iguales a las dos anteriores pero con la
	    imagen <filename>montana.gif</filename>
	    en la segunda celda de la primera fila.
	  </para>
	  
	</listitem>

	<listitem>

	  <para>
	    Combinar el texto escrito en el segundo caso, la imagen
	    <filename>montana.gif</filename>, y la imagen
	    <filename>spot.gif</filename>
	    en diferentes celdas para ver el cambio de tamaño que sufren.
	  </para>

	</listitem>

      </orderedlist>

    </sect2>

  </sect1>

  <sect1>

    <title>Alineamiento de tablas</title>

    <para>
      Hasta ahora las tablas que hemos visto no tenían ningún tipo de
      alineamiento especial. Se situaban en el margen izquierdo y se
      extendían hasta donde ocuparan por la derecha. Pero por supuesto el
      lenguaje HTML nos permite tener un mayor
      control sobre la disposición de las tablas con el uso de un nuevo
      atributo de la etiqueta TABLE: <emphasis>ALIGN</emphasis>. Este
      atributo nos permitirá alinear la tabla a la derecha, a la izquierda
      o centrada respecto a la ventana del navegador, para ello toma los
      siguientes valores:
    </para>

    <itemizedlist>

      <listitem>

	<para>
	  <emphasis>ALIGN="left"</emphasis>: Alinea la tabla a la
	  izquierda de la ventana del navegador. La manera de actuar del
	  navegador cuando se encuentra con una tabla alineada a la
	  izquierda es idéntica a su comportamiento con imágenes con este
	  mismo tipo de alineamiento, y por tanto también podemos conseguir
	  que un texto envuelva la tabla tal y como hacíamos con las
	  figuras y como podemos ver en la figura 7.7.
	</para>

	<figure label="7.7">

	  <title>
	    Con el atributo ALIGN podemos controlar el alineamiento de la
	    tabla. Si elegimos ALIGN="left" el texto bordeará a
	    la tabla al igual que ocurría con las imágenes.
	  </title>
	  <graphic fileref="img/fig7-7.gif"  format="GIF"/>

	</figure>

	<para>
	  La forma de usar este tipo de alineamiento es:
	</para>

	<programlisting>

	  <emphasis>
	    <sgmltag>&lt;TABLE ALIGN="left"&gt;</sgmltag>
	  </emphasis>
	  ...Código de la tabla...
	  <sgmltag>&lt;/TABLE&gt;</sgmltag>

	</programlisting>

	<para>
	  Para escribir texto al final de una tabla alineada a derecha o
	  izquierda deberemos usar, al igual que hacíamos con las imágenes,
	  la etiqueta BR con el atributo CLEAR. El siguiente ejemplo
	  funcionaría en ambos casos de alineamiento:
	</para>

	<programlisting>

	  <sgmltag>&lt;BR CLEAR="all"&gt;</sgmltag>

	</programlisting>

      </listitem>

      <listitem>

	<para>
	  <emphasis>ALIGN="right"</emphasis>: En esta ocasión la
	  tabla será alineada a la derecha. El texto también la envolverá
	  como ocurría con las imágenes alineadas a este lado. En la
	  figura 7.8:
	</para>

	<figure label="7.8">

	  <title>
	    Usando alineamiento a la derecha (ALIGN="right")
	    conseguimos un efecto muy similar al alineamiento a la
	    izquierda.
	  </title>
	  <graphic fileref="img/fig7-8.gif"  format="GIF"/>

	</figure>

	<para>
	  podemos ver el efecto de usar este modo de alineamiento:
	</para>

	<programlisting>

	  <emphasis>
	    <sgmltag>&lt;TABLE ALIGN="right"&gt;</sgmltag>
	  </emphasis>
	  ...Código de la tabla...
	  <sgmltag>&lt;/TABLE&gt;</sgmltag>

	</programlisting>

      </listitem>

      <listitem>

	<para>
	  <emphasis>ALIGN="center"</emphasis>: Usando este método
	  de alineamiento obtendremos una tabla centrada respecto al ancho
	  total de la ventana del navegador. El resultado de usar
	  ALIGN="center" es idéntico al que obtendríamos si
	  introdujéramos la tabla entre las instrucciones
	  <sgmltag>&lt;CENTER&gt;</sgmltag> y <sgmltag>&lt;/CENTER
	    &gt;</sgmltag>. En este tipo de alineamiento
	</para>

	<programlisting>

	  <emphasis>
	    <sgmltag>&lt;TABLE ALIGN="center"&gt;</sgmltag>
	  </emphasis>
	  ...Código de la tabla...
	  <sgmltag>&lt;/TABLE&gt;</sgmltag>

	</programlisting>

	<para>
	  el texto no envuelve a la tabla como podemos apreciar en la
	  figura 7.9.
	</para>

	<figure label="7.9">

	  <title>
	    Con ALIGN="right" la tabla se sitúa en el centro de
	    la ventana del navegador y el texto ya no la envuelve.
	  </title>
	  <graphic fileref="img/fig7-9.gif"  format="GIF"/>

	</figure>

      </listitem>

    </itemizedlist>

    <warning>

      <para>
	Hasta la aparición de las versiones 4 de <productname>Explorer
	</productname>y <productname>Navigator</productname> ningún
	navegador soportaba el alineamiento ALIGN="<emphasis>center
	</emphasis>" en las tablas. Por esta razón es recomendable
	usar además la etiqueta CENTER encerrando la tabla para
	asegurarnos que esta aparecerá centrada. En este caso le estaremos
	diciendo al navegador dos veces que alineamiento tiene la tabla,
	esto no es problema siempre que los dos alineamientos coincidan, y
	por otro lado conseguiremos que todos los navegadores centren la
	tabla ya que si no entienden ALIGN="center" entenderán
	la etiqueta CENTER y viceversa.
      </para>

    </warning>

  </sect1>

  <sect1>

    <title>ALINEAMIENTO DE CELDAS Y FILAS</title>

    <para>
      Hasta ahora hemos estudiado el alineamiento de las tablas con
      respecto a la ventana del navegador. El siguiente paso será aprender
      los diferentes tipos de alineamiento de los elementos de las
      diferentes celdas con respecto a estas. Estos tipos de alineamiento
      se dividen en dos: alineamiento vertical y alineamiento
      horizontal. En la figura 7.10 podemos ver una tabla en la que se
      ilustran las posibilidades de tipos de alineamiento.
    </para>

    <figure label="7.10">

      <title>
	Distintas posibilidades de los alineamientos vertical y horizontal
	de las celdas de una tabla.
      </title>
      <graphic fileref="img/fig7-10.gif"  format="GIF"/>

    </figure>

    <itemizedlist>

      <listitem>

	<para>
	  <emphasis>Alineamiento horizontal</emphasis>: Para seleccionar el
	  tipo de alineamiento horizontal de las celdas hay que usar el
	  atributo <emphasis>ALIGN</emphasis> de las etiquetas TH o TD en
	  función del tipo de celda. Este atributo permitirá seleccionar
	  entre un alineamiento a la izquierda (ALIGN="left"),
	  centrado (ALIGN="center") o a la derecha
	  (ALIGN="right"), tal y como veíamos en la figura 7.10.
	</para>

      </listitem>

      <listitem>

	<para>
	  <emphasis>Alineamiento vertical</emphasis>: En este caso usaremos
	  un nuevo atributo: <emphasis>VALIGN</emphasis> (Vertical Align,
	  alineamiento vertical). Las diferentes opciones con este tipo de
	  alineamiento son las que veíamos en la figura 7.10: Alineamiento
	  con la parte superior de la celda (VALIGN="top"),
	  alineamiento en medio de la celda (VALIGN="middle") y
	  alineamiento con la parte inferior de la celda (VALIGN="
	  bottom").
	</para>

      </listitem>

    </itemizedlist>

    <para>
      Por defecto las celdas de encabezado (TH) están centradas tanto
      horizontal como verticalmente, mientras que las celdas normales (TD)
      están alineadas a la izquierda y verticalmente se sitúan en el centro
      de la celda. El punto azul de la figura 7.11 representa el
      alineamiento por defecto en ambos tipos de celdas.
    </para>

    <figure label="7.11">

      <title>
	El punto azul de esta figura nos permite observar el alineamiento
	por defecto de los encabezados de tabla (TH) y de las celdas
	normales (TD).
      </title>
      <graphic fileref="img/fig7-11.gif"  format="GIF"/>

    </figure>

    <para>
      Este alineamiento por defecto puede ser cambiado para toda una fila
      usando los atributos ALIGN y VALIGN en la etiqueta TR. Por ejemplo
      si creamos una fila con el siguiente código:
    </para>

    <programlisting>

      <sgmltag>&lt;TR ALIGN="right" 
	VALIGN="bottom"&gt;</sgmltag>
      ... Etiquetas para crear las celdas ...
      <sgmltag>&lt;/TR&gt;</sgmltag>

    </programlisting>

    <para>
      Todas las celdas de esa fila tendrán se alinearán por defecto a la
      derecha y abajo. Por supuesto si en alguna de las celdas (TD o TH) de
      esa fila se vuelven a usar ALIGN y VALIGN con unos valores distintos
      serán estos últimos los que determinarán el alineamiento de esa celda
      en concreto. Por ejemplo:
    </para>

    <programlisting>

      <sgmltag>&lt;TABLE BORDER="1"&gt;</sgmltag>
      <emphasis>
	<sgmltag>&lt;TR ALIGN="right"
	  VALIGN="bottom"&gt;</sgmltag>
      </emphasis>
      <sgmltag>&lt;TD&gt;</sgmltag>
      Celda1
      <sgmltag>&lt;/TD&gt;</sgmltag>
      <sgmltag>&lt;TD&gt;</sgmltag>
      Celda2
      <sgmltag>&lt;/TD&gt;</sgmltag>
      <emphasis>
	<sgmltag>&lt;TD ALIGN="left" 
	  VALIGN="top"&gt;</sgmltag>
	Celda3
	<sgmltag>&lt;/TD&gt;</sgmltag>
      </emphasis>
      <sgmltag>&lt;/TR&gt;</sgmltag>
      <sgmltag>&lt;/TABLE&gt;</sgmltag>

    </programlisting>

    <para>
      El resultado de este código es que todas las celdas de esa fila
      tendrán como alineamiento por defecto ALIGN="right" y
      VALIGN="bottom", pero en la tercera celda especificamos
      ALIGN="left" VALIGN="top" y cambiamos el
      alineamiento de esa celda en concreto como podemos ver en la figura
      7.12
    </para>

    <figure label="7.12">

      <title>
	Usando los atributos ALIGN y VALIGN en la etiqueta TR cambiamos el
	alineamiento por defecto de las celdas de esa fila, pero aún
	podemos modificar ese alineamiento usando los mismos atributos en
	cada celda.
      </title>
      <graphic fileref="img/fig7-12.gif"  format="GIF"/>

    </figure>

    <note>

      <para>
	Si el lector prueba este último ejemplo probablemente no pueda
	apreciar el efecto del cambio de alineamiento porque la tabla es
	demasiado pequeña. Para poder apreciar dicho efecto será necesario
	aumentar el tamaño de la tabla con los métodos que aprenderemos en
	el siguiente apartado.
      </para>

    </note>

  </sect1>

  <sect1>

    <title>Ancho de tablas y celdas</title>

    <para>
      Como vimos antes en este capítulo, el ancho de las tablas queda
      determinado por el tamaño necesario para mostrar el contenido de sus
      celdas. Sin embargo el lenguaje HTML nos
      permite especificar el tamaño que deseemos por medio de un nuevo
      atributo de la etiqueta TABLE: <emphasis>WIDTH</emphasis> (que
      traducido significa <emphasis>ancho</emphasis>). Este atributo se
      usa igual que los vistos hasta ahora, y su valor representará el
      ancho en pixeles de la tabla:
    </para>

    <programlisting>

      <emphasis>
	<sgmltag>&lt;TABLE WIDTH="500"&gt;</sgmltag>
      </emphasis>
      ... Código de la tabla ...
      <sgmltag>&lt;/TABLE&gt;</sgmltag>

    </programlisting>

    <para>
      Es importante resaltar que si con ese tamaño no se pueden mostrar
      todos los elementos de la tabla, por ejemplo si en la tabla anterior
      hay una imagen de ancho 550 que no cabe en una tabla de 500 pixeles
      de ancho, el navegador ignorará el atributo WIDTH. Si la tabla
      únicamente contiene texto la etiqueta WIDTH tiene una mayor utilidad,
      ya que el texto se adaptará a ese ancho, ocupando más líneas si es
      necesario.
    </para>

    <note>

      <para>
	El tamaño del ancho de una tabla tambien se puede especificar en
	porcentaje respecto al ancho total de la ventana del navegador. Por
	ejemplo:
      </para>

      <programlisting>
	<sgmltag>&lt;TABLE WIDTH="50%"&gt;</sgmltag>
	... Código de la tabla ...
	<sgmltag>&lt;/TABLE&gt;</sgmltag>
      </programlisting>

      <para>
	hace que la tabla sea la mitad de la ventana. Si el usuario hace
	más pequeña la ventana la tabla también se hará más pequeña.
      </para>

    </note>

    <sect2>

      <title>Tamaño de las celdas</title>

      <para>
	Al igual que hemos modificado el ancho de la tabla completa también
	podremos modificar el tamaño de cada celda por separado. En este
	caso tendremos más posibilidades aún, ya que podremos modificar
	también la altura de la celda usando el atributo HEIGHT.
      </para>

      <para>
	Al igual que antes, las dimensiones que especifiquemos con WIDTH y
	HEIGHT sólo serán respetadas si en ese espacio cabe su
	contenido. Por ejemplo en el siguiente caso:
      </para>

      <programlisting>

	<sgmltag>&lt;TABLE&gt;</sgmltag>
	<emphasis> 
	  <sgmltag>&lt;TR&gt;</sgmltag>
          <sgmltag>&lt;TD WIDTH="50" 
	    HEIGHT="50"&gt;</sgmltag>
	</emphasis>
	<sgmltag>&lt;IMG SRC="img.gif" 
	  WIDTH="100" 
	  HEIGHT="100"&gt;</sgmltag>
	<sgmltag>&lt;/TD&gt;</sgmltag>
        <sgmltag>&lt;/TR&gt;</sgmltag>
        <sgmltag>&lt;/TABLE&gt;</sgmltag>

      </programlisting>

      <para>
	la única celda de la tabla tendrá un tamaño de 100 por 100, que es
	el tamaño de la imagen que hemos insertado en ella. En este caso
	no pueden respetarse los atributos WIDTH y HEIGHT de la etiqueta
	TD ya que en una celda de las dimensiones indicadas en ellas no
	cabría la imagen. Si en su lugar hubiésemos usado <sgmltag>&lt;
	  TD WIDTH="150" HEIGHT="150"&gt;</sgmltag>
	estas dimensiones SI se hubiesen respetado.
      </para>
    </sect2>
    <sect2>
      <title>EJERCICIO 7-2</title>
      <para>
	Como la mejor manera de
	aprender es practicar vamos a realizar un sencillo ejercicio pero
	que agrupa gran parte de los conocimientos adquiridos hasta ahora
	sobre tablas. El objetivo será crear una tabla con dos celdas y dos
	columnas de tamaño 100x100 todas ellas. Deberemos insertar en cada
	una de ellas la imagen <filename>spot.gif</filename>
	y alinearla de tal manera que consigamos el resultado
	de la figura 7.13.
      </para>

      <figure label="7.13">

	<title>
	  Este será el objetivo del ejercicio 7.2. Una pista: debemos usar
	  los atributos WIDTH, HEIGHT, ALIGN y VALIGN.
	</title>
	<graphic fileref="img/fig7-13.gif"  format="GIF"/>

      </figure>

      <para>
	La tabla deberá estar centrada y tener un grosor de 5 pixeles. [En
	el archivo <filename>ej7-2.zip </filename>se
	ofrece la solución de este ejercicio]
      </para>
    </sect2>

    <sect2>

      <title>El atributo NOWRAP</title>

      <para>
	Para completar nuestro aprendizaje sobre el tamaño de tablas y
	celdas y como modificarlo nos queda por comentar un último
	atributo: <emphasis>NOWRAP</emphasis>. Este atributo no toma ningún
	valor, es decir, su forma de uso es:
      </para>

      <programlisting>

	<sgmltag>&lt;TABLE&gt;</sgmltag>
	<sgmltag>&lt;TR&gt;</sgmltag>
        <emphasis>
          <sgmltag>&lt;TD NOWRAP&gt;</sgmltag>
	  Texto
          <sgmltag>&lt;/TD&gt;</sgmltag>
        </emphasis>
	<sgmltag>&lt;/TR&gt;</sgmltag>
        <sgmltag>&lt;/TABLE&gt;</sgmltag>

      </programlisting>

      <para>
	Su efecto será que el texto de esa celda no puede ser <emphasis>
	  partido</emphasis> en varias líneas, para adecuarse al tamaño de la
	celda. Cuando esto sucede se dice que la tabla ha envuelto
	(<emphasis>wrap</emphasis> en inglés) el texto. El significado de
	NOWRAP es por tanto <emphasis>no envolver</emphasis> el texto. Si
	es necesario para mantener el texto en una sola línea se ignorarán
	los atributos WIDTH y HEIGHT si fueron usados. En la figura 7.14
	observamos una primera tabla con una única celda en la que no
	hemos usado el atributo NOWRAP, en la segunda tabla mostramos la
	misma tabla pero poniendo NOWRAP en dicha celda.
      </para>

      <figure label="7.14">

        <title>
	  Usando el atributo NOWRAP evitamos que el texto sea partido
	  en varias líneas, sin embargo no es recomendable usarlo en líneas
	  muy largas como esta.
	</title>
	<graphic fileref="img/fig7-14.gif"  format="GIF"/>

      </figure>

      <para>
	Como vemos en este segundo caso la línea de texto no cabe en el
	tamaño de la ventana y por tanto se extiende más allá de esta.
      </para>

      <warning>

	<para>
	  Hay que tener mucho cuidado usando el atributo NOWRAP, ya que si
	  después escribimos un texto muy largo sin incluir ningún salto de
	  linea (BR) todo él será mostrado en una única línea, que no cabrá
	  en pantalla y por tanto obligará al visitante a usar las barras
	  de desplazamiento.
	</para>

      </warning>

    </sect2>

  </sect1>

  <sect1>

    <title>Celdas que abarcan varias filas o columnas</title>

    <para>
      Es hora ya de comenzar con dos de los atributos más interesantes en
      la creación de tablas: <emphasis>ROWSPAN</emphasis> y <emphasis>
	COLSPAN</emphasis>. Gracias a estos atributos podremos crear tablas
      mucho más complejas y  que se adapten a nuestras necesidades. Estos
      dos atributos sirven tanto para las celdas normales, TD, como para
      las celdas encabezado, TH, y su función será extender una fila
      (ROWSPAN) o una columna (COLSPAN) para que ocupen el tamaño de
      varias. Para comprender el significado del concepto <emphasis>
	extender</emphasis> lo mejor es ver un ejemplo:
    </para>

    <programlisting>

      <sgmltag>&lt;TABLE BORDER="1"&gt;</sgmltag>
      <sgmltag>&lt;TR&gt;</sgmltag>
      <sgmltag>&lt;TH COLSPAN="2"&gt;</sgmltag>
      Celda de dos columnas
      <sgmltag>&lt;/TH&gt;</sgmltag>
      <sgmltag>&lt;/TR&gt;</sgmltag>
      <sgmltag>&lt;TR&gt;</sgmltag>
      <sgmltag>&lt;TD ROWSPAN="2"&gt;</sgmltag>
      Celda de dos filas
      <sgmltag>&lt;/TD&gt;</sgmltag>
      <sgmltag>&lt;TD&gt;</sgmltag>
      Fila2,Columna2
      <sgmltag>&lt;/TD&gt;</sgmltag>
      <sgmltag>&lt;/TR&gt;</sgmltag>
      <sgmltag>&lt;TR&gt;</sgmltag>
      <sgmltag>&lt;TD&gt;</sgmltag>
      Fila3,Columna2
      <sgmltag>&lt;/TD&gt;</sgmltag>
      <sgmltag>&lt;/TR&gt;</sgmltag>
      <sgmltag>&lt;/TABLE&gt;</sgmltag>

    </programlisting>

    <para>
      En la figura 7.15 podemos ver la tabla resultado de este código:
    </para>

    <figure label="7.15">

      <title>
	Los atributos COLSPAN y ROWSPAN nos permiten crear celdas que se
	extiendan varias columnas o varias filas.
      </title>
      <graphic fileref="img/fig7-15.gif"  format="GIF"/>

    </figure>

    <para>
      como vemos la primera celda se extiende para ocupar dos columnas y la
      primera celda de la segunda fila ocupa dos filas. En este momento
      invitamos al lector a practicar con los atributos ROWSPAN y COLSPAN
      incluso con celdas de mayor tamaño, ya que esta es la mejor manera de
      habituarse a ellos, más adelante seguiremos realizando ejemplos
      prácticos con estos y otros atributos de las tablas.
    </para>

  </sect1>

  <sect1>

    <title>Márgenes y separación de celdas</title>

    <para>
      El único aspecto que nos queda por aprender sobre las tablas en
      HTML es el correspondiente a los márgenes
      en las celdas y la separación entre ellas. Antes de nada es
      conveniente comentar que el lenguaje HTML
      considera a cada celda como un elemento individual con sus propios
      bordes que no comparte con las celdas adyacentes. Basándonos en esta
      forma de ver las tablas podemos cambiar la <emphasis>distancia
      </emphasis>que existe entre los bordes de las células adyacentes
      usando el atributo CELLSPACING (Espaciado de celdas). El valor por
      defecto de este atributo es 1. En general se suele usar para eliminar
      el espaciado entre celdas (como veremos en el ejercicio 7-3) o para
      aumentarlo para crear un efecto como el del siguiente ejemplo:
    </para>

    <programlisting>

      <emphasis>
	<sgmltag>&lt;TABLE CELLSPACING="10"
	  BORDER="1"&gt;</sgmltag>
      </emphasis>
      ... Código de la tabla ...
      <sgmltag>&lt;/TABLE&gt;</sgmltag>
    </programlisting>

    <para>
      cuyo resultado podemos observar en la figura 7.16:
    </para>

    <figure label="7.16">

      <title>
	El atributo CELLSPACING controla el espaciado entre los bordes de
	cada una de las celdas de la tabla.
      </title>
      <graphic fileref="img/fig7-16.gif"  format="GIF"/>

    </figure>

    <para>
      Una segunda propiedad de las tablas de gran importancia es el margen
      que existe entre los elementos de las celdas y sus bordes. Esta
      separación es nula por defecto, pero puede aumentarse usando el
      atributo <emphasis>CELLPADDING</emphasis>. La forma de usar este
      atributo queda descrita en el siguiente ejemplo:
    </para>

    <programlisting>

      <sgmltag>&lt;TABLE CELLPADDING="10"
	BORDER="1"
	ALIGN="LEFT"&gt;</sgmltag>
      ... Código de la tabla ...
      <sgmltag>&lt;/TABLE&gt;</sgmltag>

    </programlisting>

    <para>
      y en la figura 7.17:
    </para>

    <figure label="7.17">

      <title>
	Con el atributo CELLPADDING podemos aumentar los márgenes entre el
	contenido de las celdas y su borde.
      </title>
      <graphic fileref="img/fig7-17.gif"  format="GIF"/>

    </figure>

    <para>
      Tanto en el atributo CELLPADDING como en el atributo CELLSPACING el
      valor entre comillas representa un tamaño en pixeles.
    </para>

    <para>
      Para practicar un poco el uso de estos dos atributos se propone un
      ejercicio con el que conseguiremos crear el efecto de una imagen
      entera a partir de sus trozos.
    </para>

    <sect2>
      <title>Ejercicio 7.3</title>
      <para>
	Este ejercicio consiste en la
	división de una imagen grande en cuatro partes de igual tamaño. El
	objetivo será volver a juntarlas. Para ello usaremos una tabla de 2x2
	con una de las partes en cada celda, sin borde y con márgenes y
	espaciado de las celdas nulo. El resultado buscado debe parecerse al
	de la figura 7.18 (exceptuando las flechas y las letras rojas que son
	indicativas):
      </para>

      <figure label="7.18">

	<title>
	  Ejercicio 7.3. Aunque pueda parecer que hay una sola imagen, en
	  realidad hay cuatro cuidadosamente colocadas.
	</title>
	<graphic fileref="img/fig7-18.gif"  format="GIF"/>

      </figure>

      <para>
	Las imágenes a usar, así como una posible solución, a este ejercicio
	pueden encontrarse en el archivo <filename>ej7-3.zip
	</filename>.
      </para>
    </sect2>
    <sect2>
      <title>Conclusión</title>
      <para>
	Bueno, ya podemos respirar tranquilos, ya sabemos todo lo que se
	puede saber sobre la creación de tablas en el lenguaje <productname>
	  HTML</productname> estándar. Sin duda es como para estar orgullosos,
	porque el método que usa este lenguaje no es excesivamente
	sencillo. Por esta razón no debe desanimarse el lector que llegado a
	este punto no recuerde parte de las etiquetas y atributos descritos
	en este capítulo. Nuestro objetivo no era ese, sino que como buenos
	creadores de páginas web conozcamos las etiquetas del lenguaje
	HTML sin llegar a saberlas de memoria pero
	lo suficiente para reconocer su función, conocer las posibilidades de
	las tablas y poder crear rápidamente tablas sencillas. Para la creación
	de tablas muy complicadas es recomendable usar un asistente como los
	que incluyen <productname>FrontPage</productname> o <productname>
	  HomeSite</productname> (la versión shareware será incluida en el
	archivo <filename>FrontPage.zip</filename> y
	<filename>HomeSite.zip</filename>). Aunque estos
	asistentes no siempre nos ofrecen justo lo que queremos, nosotros ya
	conocemos lo suficiente para retocar el código de la tabla una vez
	creada.
      </para>
    </sect2>
  </sect1>

</article>
