<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V3.1.7//EN"
  "/usr/lib/sgml/dtd/docbook-xml/docbookx.dtd">

<article lang="es">
  
  <articleinfo>
    <title>FRAMES, LAS VENTANAS LLEGAN AL WWW</title>
    <date>7 de Abril de 2002</date>
    <author>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </author>
    <author>
      <firstname>Victor</firstname>
      <surname>García</surname>
    </author>
    <abstract>

      <para>
	  Una de las extensiones usadas más habitualmente el WWW son los
	  <emphasis>marcos</emphasis> o <emphasis>frames</emphasis>. Los
	  frames fueron introducidos por <productname>Netscape</productname>
	  y han causado una auténtica revolución en el diseño de páginas
	  Web. A algunos programadores les horroriza la idea de que sus
	  páginas tengan frames, otros no entienden como han podido vivir sin
	  ellos hasta ahora. Pero, lo que está claro es que usando
	  correctamente los frames daremos una nueva dimensión a nuestras
	  páginas.
      </para>

      <para>
	  Los frames consisten en una técnica para insertar varios documentos
	  HTML en una sola ventana del navegador. Para ello divide la
	  pantalla en varias zonas o secciones que reciben el nombre de
	  <emphasis>frames</emphasis> o <emphasis>marcos</emphasis>. En cada
	  uno de estos marcos debemos insertar un contenido, que en general
	  constará de un documento HTML, aunque también puede ser una imagen
	  o algún otro elemento del WWW visualizable por los navegadores. En
	  la figura 10.1 podemos ver un ejemplo de <productname>Explorer
	  </productname> dividido en 4 frames:
	</para>

	<figure label="10.1">

	  <title>
	    Los frames nos permiten dividir la ventana del navegador en
	    varias secciones diferentes. En este caso la ventana a sido
	    dividida en 4 frames.
	  </title>
	  <graphic fileref="fig10-1.gif"  format="GIF"/>

	</figure>

	<para>
	  Una de las ventajas de los frames es que cada uno de los
	  documentos HTML puede ser cambiado sin que ello afecte al resto.
	  Ya en el capítulo anterior (figuras 9.1 y 9.6) vimos algunos
	  ejemplos de uso de frames que nos pueden ayudar a hacernos una
	  idea de su funcionamiento y de los que seremos capaces de hacer
	  tras este capítulo.
	</para>

	<para>
	  Además de sus ventajas los frames también tienen algunos
	  inconvenientes. Por ello desde su aparición en la versión 1.0 del
	  navegador <productname>Netscape Navigator</productname> han sido el
	  foco de una gran controversia. Uno de los principales problemas de
	  los frames es el hecho de ser una extensión del lenguaje HTML y no
	  formar parte del estándar. Por esta razón no todos los navegadores
	  están preparados para ellos y no podrán visualizar páginas que
	  contengan frames. Pero afortunadamente, hoy en día la mayor parte
	  de los navegadores gráficos los soportan. Entre estos se incluyen
	  <productname>Netscape Navigator 1.0</productname> o superior (por
	  supuesto), <productname>Microsoft Internet Explorer 3.0
	  </productname> o superior y <productname>Opera 3.0</productname>.
	  Además existen métodos para solucionar el problema de los
	  navegadores no compatibles.
	</para>

	<note>

	  <para>
	    Aunque hoy por hoy ni el estándar HTML 2.0 ni el estándar 3.2
	    incluyen los frames, el estándar HTML 4.0 si lo cubre y por tanto
	    hemos de esperar que todas las versiones de los navegadores
	    gráficos (las versiones 5.0) que aparezcan a partir de ahora los
	    soporten.
	  </para>

	</note>

	<para>
	  El segundo gran foco de la controversia es mucho menos técnico y
	  radica en la discusión de si los frames son útiles o no.
	  Probablemente el origen de esta discusión surgió con el BOOM
	  sucedido cuando aparecieron los frames. Debido a lo novedoso del
	  tema, una gran parte de los programadores de páginas Web empezaron
	  a usar frames indiscriminadamente, con lo que el WWW se pobló de
	  ellos y en la mayoría de los casos estos sólo eran usados porque
	  eran algo nuevo, pero perjudicaban la navegación. Por esta razón
	  empezaron a surgir detractores de los frames. Pero, ahora, pasado
	  un tiempo ya no existen tantos sitios Webs que usan frames de
	  manera abusiva, con lo que aquellos que discutían empiezan a llegar
	  a un acuerdo. Lo que casi todo el mundo parece admitir es que en
	  ciertas ocasiones, como la que nos encontramos en el Web de la
	  figura 10.2, el uso de frames puede ser conveniente y ayuda a la
	  navegación, que es en definitiva el motivo por el que surgieron en
	  primer lugar.
	</para>

	<figure label="10.2">

	  <title>
	    En el Web <ulink url="http://www.chess.com">www.chess.com</ulink>
	    podemos ver un excelente ejemplo del uso de frames para mantener
	    visibles las barras de navegación.
	  </title>
	  <graphic fileref="fig10-2.gif"  format="GIF"/>

	</figure>

	<para>
	  En este Web existen tres frames. A la izquierda se ha usado uno
	  como barra de navegación donde se encuentran enlaces a las
	  distintas secciones. En la parte superior nos encontramos con un
	  segundo frame que contiene el encabezado gráfico de la página con
	  el logo de los <emphasis>Aficionado</emphasis> así como otros
	  links. El tercero de los frames es el que ocupa una mayor área, y
	  en el se encuentra el contenido de la página Web. El objetivo de
	  los frames en este caso consiste en mantener siempre visible el
	  encabezado y barra de navegación mientras el visitante se mueve por
	  el contenido principal usando las barras de desplazamiento, las
	  cuales, como podemos observar, sólo afectan al tercero de los
	  frames. En definitiva los frames son, sin duda, útiles para
	  mantener visibles barras de navegación (gráficas o simplemente
	  enlaces hipertexto) o encabezados y/o logotipos muy importantes
	  aunque el navegante se desplace por el contenido de la página o
	  navegue por el sitio Web.
      </para>

	<para>
	  Sin perder más tiempo vamos a empezar ya a estudiar las etiquetas y
	  atributos necesarios para crear los frames. Para empezar vamos a
	  ver un atributo, TARGET, y una etiqueta, BASE, que están
	  enormemente relacionados con la creación de páginas con frames.
	  Posteriormente nos adentraremos en las etiquetas necesarias para
	  crear la estructura de frames en las páginas.
	</para>

    </abstract>

    <editor>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </editor>
    <releaseinfo>Versión 1.0</releaseinfo>
    <orgname>Conquista la web</orgname>
    <legalnotice>
      <para>
	Copyright Jorge Ferrer y Victor García. Se otorga permiso para copiar,
	distribuir y/o modificar este documento bajo los términos de la
	Licencia de Documentación Libre GNU, Versión 1.1 o cualquier otra
	versión posterior publicada por la Free Software Foundation. Puede
	consultar una copia de la licencia en:
	http://www.gnu.org/copyleft/fdl.html
      </para>
      <para>
	Para más detalles consultenos a través de la dirección
	jferrer@acm.org
      </para>
    </legalnotice>
  </articleinfo>
  
  <sect1>

    <title>El atributo TARGET<title>

    <para>
	El atributo TARGET es, al igual que los frames, una extensión
	introducida por <productname>Netscape</productname> y adoptada
	posteriormente por <productname>Explorer</productname> y <productname>
	Opera</productname>. El principal uso de este atributo es cuando se
	usa en la etiqueta A para crear enlaces y su función es indicar el
	objetivo (TARGET significa diana u objetivo) en el que se debe cargar
	la página a la que saltamos tras seleccionar el texto o imagen de ese
	enlace. La forma de usar este atributo es:
    </para>

    <programlisting>

	<sgmltag>
	  &lt;A HREF=&quot;URL&quot; TARGET=&quot;nombre_ventana&quot;&gt;
	</sgmltag>
	  ...
	<sgmltag>&lt;/A&gt;</sgmltag>

    <programlisting>

    <para>
	Aunque este atributo fue creado para los frames y es en ellos donde
	adquiere su verdadera utilidad también puede ser usado aunque estos
	no existan. Cuando el navegante selecciona un enlace que usa el
	atributo TARGET busca una ventana o frame (posteriormente veremos
	como se crean y cómo se les da nombre) cuyo nombre coincida con el
	que hemos indicado como valor de TARGET. Si existe, muestra la página
	a la que nos conduce el enlace en esa ventana o frame, pero si no
	existe abre una nueva ventana del navegador y la da el nombre
	indicado. En la figura 10.3 vemos una página con dos frames:
    </para>

    <figure label="10.3">

	<title>
	  Usando el atributo TARGET podremos lograr que pulsando el enlace de
	  un frame el resultado se muestre en otro.
	</title>
	<graphic fileref="fig10-3.gif"  format="GIF"/>

    </figure>

    <para>
	En la de la derecha hemos incluido un enlace usando como destino
	(TARGET) el frame de al lado. La flecha nos indica que al pulsar
	sobre el enlace aparece una nueva página en el frame de al lado.
    </para>

    <para>
	Posteriormente tendremos tiempo para practicar con frames, ahora
	vamos a ver un ejemplo del uso de este atributo en una página sin
	ellos, como las que hemos visto hasta ahora. Abrimos nuestro editor
	de texto o HTML favorito y creamos un archivo nuevo al que llamaremos
	<filename><emphasis>madre.htm</emphasis></filename> con este código:
    </para>

    <programlisting>

	<sgmltag>
	  &lt;!DOCTYPE HTML
			   PUBLIC &quot;-//W3C//DTD HTML 3.2 Final//EN&quot;&gt;
	</sgmltag>

	<sgmltag>&lt;HTML&gt;</sgmltag>

	  <sgmltag>&lt;HEAD&gt;</sgmltag>
	    <sgmltag>&lt;TITLE&gt;</sgmltag>
		Ventana Madre
	    <sgmltag>&lt;/TITLE&gt;</sgmltag>
	  <sgmltag>&lt;/HEAD&gt;</sgmltag>

	  <sgmltag>&lt;BODY BGCOLOR=&quot;#EDB301&quot;&gt;</sgmltag>
	    <sgmltag>&lt;H1&gt;</sgmltag>
		Esta es la ventana Madre que generará el resto
	    <sgmltag>&lt;/H1&gt;</sgmltag>
	    <sgmltag>&lt;P&gt;</sgmltag>
	    <sgmltag>
		&lt;A HREF=&quot;ventana1.htm&quot;
			TARGET=&quot;primera_ventana&quot;&gt;</sgmltag>
		    Abrir
	    <sgmltag>&lt;/A&gt;</sgmltag>
		una nueva ventana llamada primera_ventana
	    <sgmltag>&lt;p&gt;</sgmltag>
	    <sgmltag>
		&lt;A HREF=&quot;ventana2.htm&quot;
			TARGET=&quot;segunda_ventana&quot;&gt;</sgmltag>
		    Abrir
	    <sgmltag>&lt;/A&gt;</sgmltag>
		una nueva ventana llamada segunda_ventana
	    <sgmltag>&lt;P&gt;</sgmltag>
	    <sgmltag>
		&lt;A HREF=&quot;ventana3.htm&quot;
			TARGET=&quot;primera_ventana&quot;&gt;</sgmltag>
		    Poner
	    <sgmltag>&lt;/A&gt;</sgmltag>
		contenido <sgmltag>&lt;STRONG&gt;</sgmltag>nuevo
		<sgmltag>&lt;/STRONG&gt;</sgmltag> en la primera_ventana
	  <sgmltag>&lt;/BODY&gt;</sgmltag>
	<sgmltag>&lt;/HTML&gt;</sgmltag>

    </programlisting>

    <note>

	<para>
	  Este ejemplo completo se encuentra en el archivo <filename>
	  <emphasis>madre.zip</emphasis></filename>. El código puede ser
	  visto con el bloc de notas o con cualquier editor de texto. No es
	  recomendable verlo con <productname>FrontPage</productname> u otro
	  editor HTML de tipo WYSIWYG porque modifican el código.
	</para>

    </note>

    <para>
	Posteriormente debemos crear los archivos <filename><emphasis>
	ventana1.htm</emphasis></filename>, <filename><emphasis>ventana2.htm
	</emphasis></filename> y <filename><emphasis>ventana3.htm</emphasis>
	</filename>, que tendrán un código muy simple en el que simplemente
	debemos poner un texto que diga que ventana es esa. Por ejemplo en el
	caso de <filename><emphasis>ventana1.htm</emphasis><filename> podemos
	escribir el siguiente código.
    </para>

    <programlisting>

	<sgmltag>
	  &lt;!DOCTYPE HTML
			   PUBLIC &quot;-//W3C//DTD HTML 3.2 Final//EN&quot;&gt;
	</sgmltag>

	<sgmltag>&lt;HTML&gt;</sgmltag>

	  <sgmltag>&lt;HEAD&gt;</sgmltag>
	    <sgmltag>&lt;TITLE&gt;</sgmltag>
		Página 1
	    <sgmltag>&lt;/TITLE&gt;</sgmltag>
	  <sgmltag>&lt;/HEAD&gt;</sgmltag>

	  <sgmltag>&lt;BODY&gt;</sgmltag>
	    <sgmltag>&lt;H1&gt;</sgmltag>
		Esta es la página 1
	    <sgmltag>&lt;/H1&gt;</sgmltag>
	    Esta página debe mostrarse en la ventana
	    <sgmltag>&lt;STRONG&gt;</sgmltag>primera_ventana
	    <sgmltag>&lt;/STRONG&gt;</sgmltag>
	  <sgmltag>&lt;/BODY&gt;</sgmltag>

	<sgmltag>&lt;/HTML&gt;</sgmltag>

    <programlisting>

    <para>
	Creamos el resto de archivos con un código similar a este y abrimos
	el archivo <filename><emphasis>madre.htm</emphasis></filename> con el
	navegador que prefiramos. A continuación seguimos los siguientes
	pasos:
    </para>

    <orderedlist>

	<listitem>

	  <para>
	    Pulsamos sobre el primero de los enlaces. Observaremos que se
	    crea una nueva ventana con el contenido de <filename><emphasis>
	    pagina1.htm</emphasis></filename>.
	  </para>

	<listitem>

	<listitem>

	  <para>
	    Pulsamos sobre el segundo enlace. Se vuelve a crear una nueva
	    ventana, esta vez con el contenido de <filename><emphasis>
	    pagina2.htm</emphasis></filename>.
	  </para>

	<listitem>

	<listitem>

	  <para>
	    Pulsamos sobre la palabra &apos;Poner&apos; para activar el
	    tercero de los enlaces. En este caso el navegador busca una
	    ventana de nombre <emphasis>primera_ventana</emphasis> y la
	    encuentra, porque fue creada en el paso 1. Una vez encontrada
	    muestra en ella el contenido de <filename><emphasis>pagina3.htm
	    </emphasis></filename>quitando el contenido de <filename>
	    <emphasis>pagina1.htm</emphasis></filename>.
	  </para>

	<listitem>

    </orderedlist>

    <para>
	Tras llevar a cabo estos pasos deberíamos obtener el resultado de la
	figura 10.4, en la que vemos la ventana madre y las otras dos
	abiertas:
    </para>

    <figure label="10.4">

	<title>
	  Este debe ser el resultado final tras llevar a cabo todos los pasos
	  en el ejemplo de uso del atributo TARGET para crear varias
	  ventanas.
	</title>
	<graphic fileref="fig10-4.gif"  format="GIF"/>

    </figure>

    <para>
	Hemos puesto un color de fondo a <filename><emphasis>ventana3.htm
	</emphasis></filename>para que resalte más.
    </para>

  </sect1>

  <sect1>

    <title>La etiqueta BASE</title>

    <para>
	Cuando en el capítulo 2 aprendimos a crear enlaces vimos que había
	dos formas de especificar la dirección de destino. La primera era
	poniendo la dirección relativa. Por ejemplo, desde un archivo llamado
	<filename><emphasis>index.htm</emphasis></filename> situado en
	<ulink url="http://freek.futurnet.es">freek.futurnet.es</ulink>
	podríamos enlazar una página llamada <filename><emphasis>pag.htm
	</emphasis></filename>y situada en el directorio <emphasis>varios
	</emphasis>usando el código:
    </para>

    <programlisting>

	<sgmltag>&lt;A HREF=&quot;varios/pag.htm&quot;&gt;</sgmltag>
		...
	<sgmltag>&lt;/A&gt;</sgmltag>

    </programlisting>

    <para>
	Una segunda forma para enlazar esta misma página era poniendo la
	dirección completa (URL) de Internet, siguiendo con el ejemplo
	anterior debemos usar el siguiente código:
    </para>

    <programlisting>

	<sgmltag>
	  &lt;A HREF=&quot;http://freek.futurnet.es/varios/pag.htm&quot;&gt;
	</sgmltag>
		...
	<sgmltag>&lt;/A&gt;</sgmltag>

    </programlisting>

    <para>
	Comparando los dos ejemplos anteriores podemos deducir que cuando
	ponemos una dirección relativa el navegador le añade la dirección
	completa (exceptuando el nombre del archivo) de la página actual. Es
	decir, al usar en este caso la dirección relativa, el navegador ve
	que la página actual está en <ulink url="http://freek.futurnet.es">
	freek.futurnet.es</ulink> y se lo añade a la dirección relativa para
	obtener una dirección absoluta. Esta dirección que es añadida a las
	direcciones relativas para obtener la dirección completa recibe el
	nombre de <emphasis>dirección base</emphasis>, y en todos los casos
	que hemos visto hasta ahora la dirección base coincidía con la
	dirección de la página actual.
    </para>

    <para>
	Pues bien, la etiqueta <emphasis>BASE</emphasis> nos permitirá
	cambiar esa dirección base, y ahora podremos elegir cualquier
	dirección del WWW como base para todos los enlaces con direcciones
	relativas de la página. Esta etiqueta debe ser usada en la cabecera
	del documento, entre <sgmltag>&lt;HEAD&gt;</sgmltag> y
	<sgmltag>&lt;/HEAD&gt;</sgmltag>, dado que afectará a todo este. Para
	especificar la dirección se usará un atributo llamado <emphasis>HREF
	</emphasis>. Veamos un ejemplo, si queremos poner como dirección base
	de un documento HTML la dirección
	<ulink url="http://freek.jorgeferrer.com">freek.jorgeferrer.com
	</ulink> debemos escribir:
    </para>

    <programlisting>

	<sgmltag>&lt;HEAD&gt;</sgmltag>
	  ...Más código...
	  <sgmltag>
	    &lt;BASE HREF=&quot;http://freek.jorgeferrer.com/&quot;&gt;
	  </sgmltag>
	<sgmltag>&lt;/HEAD&gt;</sgmltag>

    </programlisting>

    <para>
	O bien:
    </para>

    <programlisting>

	<sgmltag>&lt;HEAD&gt;</sgmltag>
	  ...Más código...
	  <sgmltag>&lt;
	    BASE HREF=&quot;http://freek.jorgeferrer.com/index.htm&quot;
    &gt;</sgmltag>
	<sgmltag>&lt;/HEAD&gt;</sgmltag>

    </programlisting>

    <para>
	En la figura 10.5 podemos ver la diferencia entre usar y no usar BASE
	y como afecta ello al significado de una dirección relativa.
    </para>

    <figure label="10.5">

	<title>
	  Variando la dirección de base con la etiqueta BASE variará el
	  significado de las direcciones relativas.
	</title>
	<graphic fileref="fig10-5.gif"  format="GIF"/>

    </figure>

    <warning>

	<para>
	  Las direcciones que pongamos como valor del atributo HREF de la
	  etiqueta BASE deben ser siempre absolutas (completas).
	</para>

    </warning>

    <para>
	Es importante resaltar que aunque en todos los ejemplos que hemos
	puesto hasta ahora sólo hemos considerado los enlaces hipertexto la
	dirección base afecta a todas aquellas etiquetas en las que debemos
	especificar una dirección y podemos hacerlo de forma relativa, como
	por ejemplo en las imágenes. Por ejemplo si usamos BASE como hemos
	indicado en el código anterior y posteriormente insertamos una imagen
	con el código:
    </para>

    <programlisting>

	<sgmltag>&lt;IMG SRC=&quot;imagen.gif&quot;&gt;</sgmltag>

    </programlisting>

    <para>
	Esta imagen debe estar en
	<ulink url="http://freek.jorgeferrer.com/imagen.gif">
	freek.jorgeferrer.com/imagen.gif</ulink> y no en el mismo directorio
	que la página actual como sucedía hasta ahora cuando no usábamos la
	etiqueta BASE.
    </para>

    <note>

	<para>
	  La etiqueta BASE existe desde la primera versión del estándar
	  HTML: el HTML 2.0. Sin embargo hemos preferido no comentarla hasta
	  ahora porque, como enseguida veremos, es con los frames donde
	  realmente su uso es importante, casi imprescindible.
	</para>

    </note>

    <para>
	La pregunta que quizá nos hagamos ahora es ¿para qué puede servirnos
	cambiar la dirección base?. Puede haber diversas causas, por ejemplo
	existe la posibilidad de que tengamos nuestra página principal en un
	servidor, pero el resto de las páginas y enlaces en otro o
	simplemente que estén todas en otro directorio. En ambos casos
	podemos ahorrarnos poner el otro servidor o directorio
	especificándolo como dirección base.
    </para>

    <para>
	Sin duda esta forma de usar la etiqueta BASE puede llegar a ser útil,
	pero cuando se convierte en imprescindible es al usar un segundo
	atributo: <emphasis>TARGET</emphasis>. Hemos visto un poco antes que
	cuando trabajamos con páginas con varios frames se puede incluir el
	atributo TARGET en los enlaces para indicar el frame en el que debe
	mostrarse la página enlazada. Pues bien usando este mismo atributo en
	la etiqueta BASE lo que conseguimos es establecer el frame base donde
	se mostrará la página enlazada cuando pulsemos uno de los enlaces del
	frame actual. ¿Porqué es esto tan útil? Lo entenderemos un poco mejor
	en cuanto empecemos a trabajar con frames, pero podemos adelantar un
	caso en el que su utilidad resulta obvia. En la figura 10.6 vemos un
	ejemplo simple pero que ilustra lo que queremos a la perfección:
    </para>

    <figure label="10.6">

	<title>
	  En este Web pulsando sobre los enlaces del frame izquierdo nos
	  movemos por los diferentes temas del frame derecho.
	</title>
	<graphic fileref="fig10-6.gif"  format="GIF"/>

    </figure>

    <para>
	La página contiene una serie de enlaces organizados por temas y está
	dividida en dos frames. En el frame de la izquierda hay un listado de
	los diferentes temas y en el de la derecha los enlaces en sí. Pulsando
	sobre los temas del frame izquierdo se muestran los enlaces de ese
	tema en el frame derecho. En este caso es claro que todas las páginas
	a las que apuntan los enlaces deben ser mostradas en el frame derecho
	y por tanto lo más cómodo (y así es como está hecho en realidad) es
	usar (suponiendo que el nombre del frame derecho es <emphasis>derecho
	</emphasis>):
    </para>

    <programlisting>

	<sgmltag>&lt;BASE TARGET=&quot;derecho&quot;&gt;</sgmltag>

    </programlisting>

    <para>
	En el código del frame de la izquierda, con lo que nos ahorramos usar
	el atributo TARGET en cada uno de sus enlaces.
    </para>

    <para>
	Ya hemos aprendido todo lo necesario para comenzar con la
	construcción de páginas con frames, así que sin perder más tiempo
	pasamos ya a estudiar las etiquetas del lenguaje HTML que debemos
	usar.
    </para>

  </sect1>

  <sect1>

    <title>CREACIÓN DE PÁGINAS CON FRAMES</title>

    <para>
	El hecho de usar frames no sólo cambia por completo la apariencia de
	nuestra página, sino que también cambia el proceso de su
	realización. Si hasta ahora los Webs estaban formados por un único
	documento HTML donde estaba el contenido, al usar frames será
	necesario un documento HTML para definir la estructura de la página
	(número de frames a usar y disposición de estos), y posteriormente
	tantos documentos HTML extra como frames tengamos para insertar su
	contenido. En la figura 10.7 vemos un ejemplo con una página Web
	compuesta por 3 frames:
    </para>

    <figure label="10.7">

	<title>
	  Los Webs con frames constarán de varios documentos HTML. En este
	  ejemplo al haber tres frames serán necesarios 4 documentos HTML.
	</title>
	<graphic fileref="fig10-7.gif"  format="GIF"/>

    </figure>

    <para>
	En este caso serán necesarios 4 documentos HTML. El primero
	simplemente contiene el código que le indica al navegador el número
	de frames de la página, su tamaño, su posición y el nombre de los
	archivos donde está el contenido de los 3 frames, a este documento
	HTML le llamaremos <emphasis>documento de definición de frames
	</emphasis>. Los otros 3 documentos HTML tienen el contenido de cada
	uno de los tres frames y deben ser creados de la misma manera que
	hemos venido creando los documentos HTML hasta ahora, eso sí, hay que
	tener en cuenta que ese contenido será mostrado en un espacio
	reducido (el del frame correspondiente) y no en toda la ventana del
	navegador.
    </para>

  </sect1>

  <sect1>

    <title>CREACIÓN DEL DOCUMENTO DE DEFINICIÓN DE FRAMES</title>

    <para>
	La estructura del documento de definición de frames es parecida a la
	estructura de las páginas creadas hasta ahora. La principal
	diferencia será que este documento no tendrá contenido y por tanto no
	debe usarse la etiqueta BODY. A cambio ha de usarse una nueva
	etiqueta: <emphasis>FRAMESET</emphasis>. Esta será la etiqueta clave
	en la creación de los frames. La estructura básica del documento de
	definición será por tanto la que observamos en la figura 10.8:
    </para>

    <figure label="10.8">

	<title>
	  La estructura de las páginas con frames es diferente a las que no
	  tienen. La principal diferencia es la sustitución de BODY por
	  FRAMESET.
	</title>
	<graphic fileref="fig10-8.gif"  format="GIF"/>

    </figure>

    <para>
	En ella se observa claramente como la etiqueta FRAMESET sustituye a
	BODY. Se podría decir que estas dos etiquetas son exclusivas, cuando
	esté una no puede estar la otra.
    </para>

    <para>
	El siguiente paso en la creación de nuestra página con frames será
	decidir cuantos queremos crear como serán. Aunque posteriormente
	veremos cómo se pueden crear divisiones tan complejas como queramos,
	por ahora crearemos páginas en las que la ventana del navegador está
	dividida en filas o en columnas.
    </para>

    <sect2>

	<title>División en COLUMNAS</title>

	<para>
	  Para crear una página Web formada por varios frames que dividen la
	  ventana del navegador en columnas usamos el atributo <emphasis>COLS
	  </emphasis>de la etiqueta FRAMESET. Este atributo toma como valores
	  separados por comas la anchura de los diferentes frames:
	</para>

	<programlisting>

	  <sgmltag>
	    &lt;FRAMESET COLS=&quot;ancho_col1, ancho_col2, ...&quot;&gt;
	  </sgmltag>

	</programlisting>

	<para>
	  Existen diversas formas de indicar el ancho de las columnas, una de
	  ellas es usando porcentajes. Con este método podríamos dividir la
	  ventana en dos columnas usando el siguiente código:
	</para>

	<programlisting>

	  <sgmltag>&lt;HTML&gt;</sgmltag>

      <sgmltag>&lt;HEAD&gt;</sgmltag>
      <sgmltag>&lt;/HEAD&gt;</sgmltag>

      <sgmltag>&lt;FRAMESET COLS=&quot;20%,80%&quot;&gt;</sgmltag>
      <sgmltag>&lt;/FRAMESET&gt;</sgmltag>

	  <sgmltag>&lt;/HTML&gt;</sgmltag>

	</programlisting>

	<para>
	  En la que estamos diciendo que la primera columna (la de la
	  izquierda) ocupará el 20% del ancho de la ventana del navegador y
	  la segunda ocupará el 80% (ver figura 10.9).
	</para>

	<figure label="10.9">

	  <title>
	    Como vemos la ventana del navegador ha quedado dividida en dos
	    columnas con un ancho del 20% y del 80% del ancho total de la
	    ventana.
	  </title>
	  <graphic fileref="fig10-9.gif"  format="GIF"/>

	</figure>

	<warning>
	  Si el lector decide probar el ejemplo anterior probablemente no
	  obtenga el resultado deseado en su navegador. Esto es así porque
	  por ahora sólo hemos dicho que queremos que la ventana del
	  navegador se divida en dos columnas pero para indicar que serán
	  frames (lo cual es necesario para obtener el resultado de la figura
	  10.9) será necesario añadir algo más de código que veremos un poco
	  más adelante.
	</warning>

	<para>
	  Si quisiéramos dividir la ventana en 5 columnas simplemente
	  deberíamos especificar cinco valores separados por comas, por
	  ejemplo:
	</para>

	<programlisting>

	  <sgmltag>
	    &lt;FRAMESET COLS=&quot;10%,50%,15%,20%,5%&quot;&gt;
	  </sgmltag>

	</programlisting>

	<para>
	  Por supuesto la suma de todos los porcentajes debe ser igual a 100.
	</para>

	<note>

	  <para>
	    El lenguaje HTML no fija ningún límite en el número de filas,
	    columnas o frames en general en que puede dividirse una página.
	    Sin embargo no es recomendable crear más de 4 frames en total,
	    porque si no el espacio dedicado a cada uno de ellos será muy
	    pequeño. Debemos recordar que muchos de los navegantes verán
	    nuestras páginas con un monitor de 14 pulgadas y una resolución
	    de 640x480.
	  </para>

	</note>

	<para>
	  El método de especificar los tamaños de las columnas en porcentajes
	  es sencillo de entender, sin embargo no siempre es útil. Por ello
	  existen otros métodos que es importante comentar.
	</para>

	<para>
	  Uno de ellos consiste en especificar el ancho de las columnas en su
	  tamaño absoluto en pixeles directamente. Sin embargo existe un
	  problema: existen varias resoluciones de pantalla distintas y sería
	  muy extraño que todos los navegantes que visiten nuestras páginas
	  tengan una misma anchura de pantalla. Por esta razón no podemos
	  saber cuál será el ancho total de la ventana del navegador y esto
	  sería imprescindible para poder indicar el ancho de las columnas en
	  pixeles. Para solucionar este problema <productname>Netscape
	  </productname> invento el asterisco (*). Cuando se pone un
	  asterisco como ancho de una columna estamos indicando al navegador
	  que use todo el espacio sobrante para ese frame. Por ejemplo si
	  escribimos:
	</para>

	<programlisting>

	  <sgmltag>&lt;FRAMESET COLS=&quot;100,300,*&quot;&gt;</sgmltag>

	</programlisting>

	<para>
	  se crearán tres columnas, la primera de 100 pixeles, la segunda de
	  300 y la tercera ocupará todo el espacio que reste y que dependerá
	  del tamaño de la ventana del navegador con el que se visualicen las
	  páginas. Si el navegante usa una configuración de 640x480 es de
	  esperar que la ventana de su navegador tenga un ancho entre 600 y
	  640 pixeles y la tercera columna tendría una anchura de 200-240
	  pixeles. Si tiene una configuración de 800x600 el ancho será
	  760-800 pixeles y por tanto la tercera columna ocuparía en este
	  caso 360-400 pixeles de ancho. Esta es la resolución que hemos
	  usado para obtener la figura 10.10.
	</para>

	<figure label="10.10">

	  <title>
	    Las dos primeras columnas ocupan un ancho absoluto de 100 y 300
	    pixeles. La tercera al haber usado el asterisco ocupará el resto,
	    que en este ejemplo son 372 pixeles.
	  </title>
	  <graphic fileref="fig10-10.gif"  format="GIF"/>

	</figure>

	<para>
	  Estas son las dos configuraciones más extendidas y las que por
	  tanto debemos tener en cuenta. Si queremos cuidar mucho estos
	  detalles debemos tener en cuenta las configuraciones de 1024x800 o
	  mayores y el hecho de que los usuarios pueden cambiar el tamaño de
	  la ventana del navegador a su antojo. Sin embargo, por lo general,
	  no es en absoluto necesario llegar hasta esos extremos de cuidado.
	</para>

	<para>
	  El siguiente método para especificar el ancho de las columnas
	  consiste en combinar todos los anteriores. La mejor forma de
	  repasarlos es estudiando unos cuantos ejemplos. Para ellos vamos a
	  suponer un navegador de 800 pixeles de ancho:
	</para>

	<orderedlist>

	  <listitem>

	    <para>
		<sgmltag>&lt;FRAMESET COLS=&quot;*,*&quot;&gt;</sgmltag> : Al
		usar dos veces el asterisco se divide <emphasis>el resto
		</emphasis> entre las dos columnas a partes iguales. Es decir,
		cada una ocupará la mitad de la ventana del navegador (unos 400
		pixeles cada una). Este ejemplo es idéntico a usar <sgmltag>&lt;
		FRAMESET COLS=&quot;50%,50%&quot;&gt;</sgmltag>.
	    </para>

	  </listitem>

	  <listitem>

	    <para>
		<sgmltag>&lt;FRAMESET COLS=&quot;100,*,*&quot;> : Divide la
		ventana en tres columnas. La primera de 100 pixeles y entre las
		otras dos divide a partes iguales el espacio sobrante (700
		pixeles) con lo que (suponiendo el ancho total de 800 pixeles)
		cada una tendrá un ancho de 350 pixeles.
	    </para>

	    <note>

		<para>
		  Algunos de estos ejemplos requieren algún tiempo de práctica.
		  En caso de tener alguna dificultad entendiendo alguno de
		  ellos es mejor seguir practicando con frames usando los
		  métodos algo menos complejos. Una vez hayamos adquirido más
		  práctica trabajando con frames podremos volver sobre estos
		  ejemplos y para practicar con ellos.
		</para>

	    </note>

	  </listitem>

	  <listitem>

	    <para>
		<sgmltag>&lt;FRAMESET COLS=&quot;200,2*,*&quot;>: La primera
		columna ocupará un tamaño absoluto de 200 pixeles. El resto
		(600 pixeles) es divido entre las dos siguientes columnas, pero
		ahora no será a partes iguales, sino que la columna central
		debe ser el doble que la columna izquierda (este detalle se
		indica anteponiendo un 2 al asterisco). Por tanto del espacio
		sobrante, dos tercios (que equivalen a 400 pixeles en este
		caso), serán para la columna central y un tercio (200 pixeles)
		será para la tercera.
	    </para>

	    <para>
		Si hubiésemos querido que una columna fuese el triple de la
		otra deberíamos haber usado el código COLS=&quot;200,3*,
		*&quot;. Y si quisiéramos una relación 4:5 no tendríamos más
		que escribir COLS=&quot;200,4*,5*&quot;.
	    </para>

	  </listitem>

	  <listitem>

	    <para>
		<sgmltag>&lt;FRAMESET COLS=&quot;100,50%,*&quot;&gt;</sgmltag>:
		La primera columna ocupa 100 pixeles, la segunda la mitad del
		ancho de la pantalla (400 pixeles) y la tercera el resto, que
		en este caso será 300 pixeles. En la figura 10.11 podemos ver
		un ejemplo en el que se realiza esta división de columnas en un
		ordenador con configuración 800x600:
	    </para>

	    <figure label="10.11">

		<title>
		  En esta ocasión vemos un ejemplo del uso de FRAMESET
		  combinando los distintos modos de indicar el tamaño y el
		  ancho resultante de cada uno para una ventana con 800 pixeles
		  de ancho.
		</title>
		<graphic fileref="fig10-11.gif"  format="GIF"/>

	    </figure>

	    <note>

		<para>
		  Los tamaños absolutos deben usarse sólo en ocasiones que
		  realmente lo requieran y siempre que los utilicemos debe
		  haber al menos una de las otras columnas con un tamaño
		  definido usando un asterisco (*).
		</para>

	    </note>

	  </listitem>

	</orderedlist>

    </sect2>

    <sect2>

	<title>División en FILAS</title>

	<para>
	  Hasta ahora hemos aprendido a dividir la ventana en columnas, pero
	  como es de esperar también se puede dividir en filas. En esta
	  ocasión será necesario usar el atributo <emphasis>ROWS</emphasis>
	  (<emphasis>rows</emphasis> significa precisamente <emphasis>filas
	  </emphasis>en inglés). El funcionamiento del atributo ROWS es muy
	  similar al de COLS:
	</para>

	<programlisting>

	  <sgmltag>
	    &lt;FRAMESET ROWS=&quot;alto_fila1, alto_fila2, ...&quot;&gt;
	  </sgmltag>

	</programlisting>

	<warning>

	  <para>
	    Es importante hacer notar que cuando dividimos la ventana en
	    filas y usamos tamaños relativos, estos se refieren al alto de la
	    ventana, y no tienen en cuenta lo <emphasis>larga</emphasis> que
	    puedan ser las páginas o si hay que usar las barras de
	    desplazamiento o no para moverse por ella.
	  </para>

	</warning>

	<para>
	  En este caso es más importante, si cabe, tener en cuenta que ni
	  podemos saber el alto de la ventana del navegador de aquellos que
	  visiten nuestras páginas. Por esta razón el uso de tamaños
	  relativos o del asterisco (*) es aún más usual. Veamos algunos
	  ejemplos:
	</para>

	<orderedlist>

	  <listitem>

	    <para>
		<sgmltag>&lt;FRAMESET ROWS=&quot;200,*,100&quot;&gt;</sgmltag>:
		Divide la ventana en tres filas: una superior de 200 pixeles en
		la que se podría poner un encabezado; una inferior de 100
		pixeles en la que puede ponerse una coletilla o una barra de
		navegación; y una central que ocupa el espacio sobrante y donde
		se podría situar el contenido principal.
	    </para>

	  </listitem>

	  <listitem>

	    <para>
		<sgmltag>&lt;FRAMESET ROWS=&quot;15%,*,3*&quot;&gt;</sgmltag>:
		Se divide la ventana en una primera fila que ocupa el 15% de la
		altura; la siguiente fila ocupará un cuarto del resto y la
		tercera tres cuartos.
	    </para>

	  </listitem>

	</orderedlist>

	<para>
	  No son necesarios más ejemplos para comprender el funcionamiento,
	  así que vamos ya a definir el contenido de cada una de las
	  divisiones que hemos aprendido a crear. Cuando insertemos este
	  contenido, la división se convertirá en lo que realmente se llama
	  frame. Mientras tanto ésta estará sujeta a más divisiones como
	  veremos un poco más adelante.
	</para>

    </sect2>

    <sect2>

	<title>Combinando COLS y ROWS</title>

	<para>
	  Los atributos COLS y ROWS pueden ser usados simultáneamente en una
	  misma etiqueta FRAMESET. Si hacemos esto dividiremos la ventana del
	  navegador en cuadrículas de diferentes tamaños. Podríamos
	  interpretar el resultado de usar ambos atributos simultáneamente
	  como que cada una de las filas definidas por ROWS es subdividida en
	  el número de columnas que indica COLS. La página que mostramos en
	  la figura 10.1 es una muestra del uso de COLS y ROWS
	  simultáneamente. En ese caso el código usado fue:
	</para>

	<programlisting>

	  <sgmltag>
	    &lt;FRAMESET COLS=&quot;*,*&quot; ROWS=&quot;*,*&quot;&gt;
	  </sgmltag>
		...
	  <sgmltag>&lt;/FRAMESET&gt;</sgmltag>

	</programlisting>

	<para>
	  También se pueden crear combinaciones más complejas como por
	  ejemplo:
	</para>

	<programlisting>

	  <sgmltag>
	    &lt;FRAMESET COLS=&quot;100,50,*,*&quot;
			     ROWS=&quot;15%,*,3*&quot;&gt;
	  </sgmltag>
		... Más código ...
	  <sgmltag>&lt;/FRAMESET&gt;</sgmltag>

	</programlisting>

	<para>
	  Que da lugar a la página de la figura 10.12:
	</para>

	<figure label="10.12">

	  <title>
	    Es posible usar los atributos COLS y ROWS simultáneamente para
	    dividir la ventana en varias filas y columnas.
	  </title>
	  <graphic fileref="fig10-12.gif"  format="GIF"/>

	</figure>

    </sect2>

    <sect2>

	<title>La etiqueta FRAME</title>

	<para>
	  La etiqueta usada para insertar el contenido en las filas, columnas
	  o divisiones en general, hechas con la etiqueta FRAMESET, es
	  <emphasis>FRAME</emphasis>. Esta etiqueta debe ser usada una vez
	  por cada una de las divisiones que hallamos creado. Cada una de
	  estas veces debemos usar un atributo, <emphasis>SRC</emphasis>, que
	  servirá para indicar el documento HTML donde se encuentre el
	  contenido que queremos insertar en esa división:
	</para>

	<programlisting>

	  <sgmltag>&lt;FRAME SRC=&quot;docum.htm&quot;&gt;</sgmltag>

	</programlisting>

	<para>
	  Esta etiqueta consta de una única instrucción, es decir la
	  instrucción de fin <sgmltag>&lt;/FRAME&gt;</sgmltag> no existe, y
	  debe ser insertada entre la instrucción de inicio y la instrucción
	  de fin de la etiqueta FRAMESET.
	</para>

	<para>
	  Otro de los atributos más importantes de la etiqueta FRAME es
	  <emphasis>NAME</emphasis>. Con este atributo le daremos un nombre
	  al frame para poder referirnos posteriormente a él con el atributo
	  TARGET o con los lenguajes de script. La forma de usar este
	  atributo es:
	</para>

	<programlisting>

	  <sgmltag>
	    &lt;FRAME SRC=&quot;docum.htm&quot;
			  NAME=&quot;primer_frame&quot;&gt;
	  </sgmltag>

	</programlisting>

	<para>
	  Si posteriormente queremos crear un enlace a este frame desde otro
	  de la misma página no tendremos más que escribir:
	</para>

	<programlisting>

	  <sgmltag>
	    &lt;A HREF=&quot;otro.htm&quot;
		    TARGET=&quot;primer_frame&quot;&gt;
	  </sgmltag>

	</programlisting>

	<para>
	  Con los conocimientos adquiridos hasta ahora en este capítulo,
	  junto con lo que ya sabemos, estamos en disposición de crear
	  nuestra primera página completa con frames.
	</para>

    </sect2>

  </sect1>

  <sect1>

    <title>Página completa con frames</title>

    <para>
	El primer paso será crear el documento de definición de frames.
	Abrimos nuestro editor y creamos un nuevo archivo. En este caso lo
	llamaremos <filename><emphasis>index.htm</emphasis></filename> y
	escribimos en él el siguiente código:
    </para>

    <programlisting>

  <sgmltag>&lt;HTML&gt;</sgmltag>

    <sgmltag>&lt;HEAD&gt;</sgmltag>
      <sgmltag>&lt;TITLE&gt;</sgmltag>
		Primera página con frames
      <sgmltag>&lt;/TITLE&gt;</sgmltag>
    <sgmltag>&lt;/HEAD&gt;</sgmltag>

    <sgmltag>&lt;FRAMESET COLS=&quot;20%,80%&quot;&gt;</sgmltag>
      <sgmltag>&lt;FRAME SRC=&quot;izquierd.htm&quot;&gt;</sgmltag>
      <sgmltag>&lt;FRAME SRC=&quot;derecha.htm&quot;&gt;</sgmltag>
    <sgmltag>&lt;/FRAMESET&gt;</sgmltag>

  <sgmltag>&lt;/HTML&gt;</sgmltag>

    </programlisting>

    <para>
	Con esto tendremos una página que dividirá la ventana del navegador
	en una columna izquierda y otra derecha que ocupan el 20% y el 80%
	del ancho respectivamente. El contenido de cada una de estas columnas
	estará en los archivos <filename><emphasis>izquierda.htm</emphasis>
	</filename> y <filename><emphasis>derecha.htm</emphasis></filename>.
	El siguiente paso será la creación de estos archivos. Volvemos a
	abrir un archivo nuevo en nuestro editor y le llamamos <filename>
	<emphasis>izquierd.htm</emphasis></filename>. En este archivo podemos
	escribir todo el código HTML que queramos siempre teniendo en cuenta
	sus limitadas dimensiones. Para empezar podemos escribir:
    </para>

    <programlisting>

  <sgmltag>&lt;HTML&gt;</sgmltag>

    <sgmltag>&lt;HEAD&gt;</sgmltag>
    <sgmltag>&lt;/HEAD&gt;</sgmltag>

    <sgmltag>&lt;BODY BGCOLOR=&quot;#99FF99&quot;&gt;</sgmltag>
      <sgmltag>&lt;H1&gt;</sgmltag>
		Frame izquierdo
      <sgmltag>&lt;/H1&gt;</sgmltag>
      Este frame podría servir de índice:
      <sgmltag>&lt;UL&gt;</sgmltag>
        <sgmltag>&lt;LI&gt;</sgmltag>Tema 1
        <sgmltag>&lt;LI&gt;</sgmltag>Tema 2
        <sgmltag>&lt;LI&gt;</sgmltag>Tema 3
      <sgmltag>&lt;/UL&gt;</sgmltag>
       <sgmltag>&lt;/BODY&gt;</sgmltag>

     <sgmltag>&lt;/HTML&gt;</sgmltag>

    <programlisting>

    <para>
	A continuación abrimos otro archivo nuevo y le llamamos <filename>
	<emphasis>derecha.htm</emphasis></filename>. El código a incluir en
	este tercer documento HTML será:
    </para>

    <programlisting>

  <sgmltag>&lt;HTML&gt;</sgmltag>

    <sgmltag>&lt;HEAD&gt;</sgmltag>
    <sgmltag>&lt;/HEAD&gt;</sgmltag>

    <sgmltag>&lt;BODY&gt;</sgmltag>
      <sgmltag>&lt;H1&gt;</sgmltag>
		Este es el frame Derecho
      <sgmltag>&lt;/H1&gt;</sgmltag>
      <sgmltag>&lt;P&gt;</sgmltag>
	      En este frame podría ir el contenido principal del Web.
      <sgmltag>&lt;/P&gt;</sgmltag>
    <sgmltag>&lt;/BODY&gt;</sgmltag>

  <sgmltag>&lt;/HTML&gt;</sgmltag>

    </programlisting>

    <para>
	El último paso será visualizar el documento de definición de frames,
	<filename><emphasis>index.htm</emphasis></filename>, con el navegador
	que prefiramos. Por supuesto se podría ver cada uno de los documentos
	HTML por separado, y de hecho suele ser muy útil hacerlo mientras
	escribamos el código para ir comprobando que lo estamos haciendo bien,
	sin embargo una vez hemos terminado los documentos <filename>
	<emphasis>derecha.htm</emphasis></filename> y <filename><emphasis>
	izquierd.htm</emphasis></filename> sólo tienen significado como
	contenido de frames, y no como páginas Web individuales. Por esta
	razón el único archivo que debe ser visto <emphasis>desde fuera
	</emphasis> debe ser el documento de definición de frames (en este
	caso llamado <filename><emphasis>index.htm</emphasis></filename>).
	Una vez abierto <filename><emphasis>index.htm</emphasis></filename>
	con nuestro navegador deberíamos ver una página similar a la que
	observamos en la figura 10.13.
    </para>

    <figure label="10.13">

	<title>
	  Ejemplo completo de una página con frames formado por un frame
	  izquierdo pequeño que puede servir de índice y otro derecho con el
	  contenido principal.
	</title>
	<graphic fileref="fig10-13.gif"  format="GIF"/>

    </figure>

    <para>
	La creación de páginas con frames es algo más compleja que la
	creación de las páginas que hemos hecho hasta ahora, y por ello es
	común cometer errores, sobre todo al principio. Si al intentar ver
	una página con frames no observamos el resultado obtenido es
	recomendable comprobar los siguientes detalles:
    </para>

    <orderedlist>

	<listitem>

	  <para>
	    Al igual que con el resto de páginas debemos asegurarnos de haber
	    encerrado todo el código entre las instrucciones <sgmltag>&lt;
	    HTML&gt;</sgmltag> y <sgmltag>&lt;/HTML&gt;</sgmltag> y de que
	    hemos guardado todos los archivos con terminación <emphasis>.htm
	    </emphasis>o <emphasis>.html</emphasis>.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Comprobar que los nombres de los archivos coinciden con los
	    nombres indicados como valor del atributo SRC. En algunos casos
	    es necesario que los nombres coincidan en mayúsculas y
	    minúsculas. Este será el caso si vamos a publicar nuestras
	    páginas en un servidor UNIX (la mayoría lo son).
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Es importante que nos aseguremos de no haber usado la etiqueta
	    BODY en el archivo <filename><emphasis>index.htm</emphasis>
	    </filename>. Si lo hemos hecho debemos quitarla para que funcione
	    nuestro ejemplo.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    Si hemos solucionado todos los problemas anteriores y la página
	    sigue sin visualizarse correctamente probablemente estaremos
	    usando un navegador que no soporte frames.
	  </para>

	</listitem>

    </orderedlist>

  </sect1>

  <sect1>

    <title>Atributos de la etiqueta FRAME</title>

    <para>
	Además del atributo SRC y NAME, la etiqueta FRAME tiene otros que nos
	permitirán modificar algunas características de los frames. Todos los
	atributos  que veremos a continuación han sido aceptados en el
	estándar HTML 4.0.
    </para>

    <itemizedlist>

	<listitem>

	  <para>
	    <emphasis>SCROLLING</emphasis>: Usando este atributo podemos
	    controlar la aparición o no de barras de desplazamiento. Los
	    valores que puede tomar este atributo son:
	  </para>

	  <itemizedlist>

	    <listitem>

		<para>
		  SCROLLING=&quot;auto&quot;: Este es el valor por defecto y
		  provoca que el navegador sólo inserte barras de
		  desplazamiento si el contenido del frame ocupa más del
		  espacio dedicado para él.
		</para>

	    </listitem>

	    <listitem>

		<para>
		  SCROLLING=&quot;yes&quot;: Las barras de desplazamiento
		  aparecerán siempre.
		</para>

	    </listitem>

	    <listitem>

		<para>
		  SCROLLING=&quot;no&quot;: Las barras de desplazamiento no
		  aparecerán nunca. Hay que tener mucho cuidado si usamos esta
		  opción porque si la página ocupa más que el espacio de la
		  ventana dedicado al frame la información que no quepa en un
		  principio no podrá ser vista.
		</para>

	    </listitem>

	  </itemizedlist>

	</listitem>

	<listitem>

	  <para>
	    <emphasis>NORESIZE</emphasis>: Por defecto los usuarios pueden
	    mover los bordes de los frames sin más que situar el ratón sobre
	    ellos y arrastrarlos. Si incluimos este atributo en la etiqueta
	    FRAME evitaremos que el borde de ese frame pueda ser movido. Es
	    necesario notar que este atributo no toma ningún valor.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    <emphasis>MARGINHEIGHT</emphasis>: Ajusta el margen superior que
	    debe respetar el contenido de ese frame. El tamaño debe ser dado
	    en pixeles.
	  </para>

	</listitem>

	<listitem>

	  <para>
	    <emphasis>MARGINWIDTH</emphasis>: Ajusta el margen lateral que
	    debe respetar el contenido del frame. Al igual que antes, el
	    margen debe ser dado en pixeles.
	  </para>

	</listitem>

    </itemizedlist>

    <para>
	Para terminar vamos a ver un ejemplo del uso de todos ellos:
    </para>

    <programlisting>

	<sgmltag>
	  &lt;FRAMESET COLS=&quot;110,*&quot; ROWS=&quot;110,*&quot;&gt;
	</sgmltag>
	  <sgmltag>
	    &lt;FRAME NAME=&quot;Imagen&quot;
			  SRC=&quot;cuadrado.gif&quot;
			  MARGINWIDTH=&quot;0&quot;
			  MARGINHEIGHT=&quot;0&quot;
			  SCROLLING=&quot;No&quot;
			  FRAMEBORDER=&quot;No&quot;
	  </sgmltag>
	  <sgmltag>&lt;FRAME SRC=&quot;f2.htm&quot;</sgmltag>
	  <sgmltag>
	    &lt;FRAME SRC=&quot;rect.gif&quot; SCROLLING=&quot;no&quot;&gt;
	  </sgmltag>
	  <sgmltag>
	    &lt;FRAME SRC=&quot;f4.htm&quot;
			  MARGINWIDTH=&quot;100&quot;
			  MARGINHEIGHT=&quot;100&quot;
	  </sgmltag>
	<sgmltag>&lt;/FRAMESET>

    </programlisting>

    <para>
	que puede ser visto en la figura 10.14:
    </para>

    <figure label="10.14">

	<title>
	  Usando los diferentes atributos de la etiqueta FRAME podemos tener
	  un mayor control sobre las diferentes características de los frames.
	</title>
	<graphic fileref="fig10-14.gif"  format="GIF"/>

    </figure>

    <para>
	En esta figura observamos, entre otras cosas, que aunque la figura
	<filename><emphasis>rect.gif</emphasis></filename> no cabe en el
	tercer frame (abajo izquierda) no aparecen las barras de
	desplazamiento. Otros aspectos interesantes están comentados en rojo
	sobre la figura.
    </para>

    <note>

	<para>
	  En general es muy útil establecer unos márgenes iguales a cero en
	  los frames cuya función sea la de barra de navegación. En los
	  frames con contenido, especialmente si este es texto, se suele
	  poner un margen de 10 pixeles.
	</para>

    </note>

  </sect1>

  <sect1>

    <title>COMPATIBILIDAD: NOFRAME</title>

    <para>
	Hasta ahora hemos supuesto que los navegantes que vieran nuestras
	páginas con navegadores con soporte para frames, sin embargo ¿qué
	ocurre si las páginas son visualizadas con un navegador que no los
	soporte?. Este es un aspecto clave a considerar porque hoy por hoy
	los frames no forman parte del estándar y aunque <productname>
	Explorer</productname>, <productname>Netscape</productname> y
	<productname>Opera</productname> los entienden hay muchos otros que
	no lo hacen.
    </para>

    <para>
	Afortunadamente los inventores de los frames tuvieron este aspecto en
	cuenta y crearon una nueva etiqueta, <emphasis>NOFRAME</emphasis>,
	pensada para este tipo de navegadores. Esta etiqueta debe ser usada
	entre <sgmltag>&lt;FRAMESET&gt;</sgmltag> y <sgmltag>&lt;/FRAMESET&gt;
	</sgmltag> de la siguiente manera:
    </para>

    <programlisting>

	<sgmltag>&lt;FRAMESET ...&gt;</sgmltag>
	  ...Código de definición de frames...
	  <sgmltag>&lt;NOFRAME&gt;</sgmltag>
	    ...Código alternativo...
	  <sgmltag>&lt;/NOFRAME&gt;</sgmltag>
	<sgmltag>&lt;/FRAMESET&gt;</sgmltag>

    </programlisting>

    <para>
	Los navegadores que tengan soporte para frames simplemente ignorarán
	todo lo que haya entre la instrucción de inicio, <sgmltag>&lt;NOFRAME
	&gt;</sgmltag>, y la instrucción de fin, <sgmltag>&lt;/NOFRAME&gt;
	</sgmltag>. Por su parte los navegadores que no entiendan frames,
	directamente ignorarán todas estas etiquetas (no las entienden) y
	pasarán a interpretar las etiquetas que siguen a <sgmltag>&lt;NOFRAME
	&gt;</sgmltag>. Entre ellas debe estar la etiqueta BODY, ya que esta
	etiqueta era imprescindible para las páginas sin frames, y para los
	navegadores que no las soporten todas las páginas son sin frames. En
	esta ocasión BODY no provocará problemas con FRAMESET porque, como
	hemos dicho, los navegadores que entiendan esta última ignorarán todo
	el código entre <sgmltag>&lt;NOFRAME&gt;</sgmltag> y <sgmltag>&lt;
	/NOFRAME&gt;</sgmltag>.
    </para>

    <para>
	Un uso habitual de NOFRAME es:
    </para>

    <programlisting>

	<sgmltag>&lt;FRAMESET COLS=&quot;200,*&quot;&gt;</sgmltag>

	  <sgmltag>&lt;FRAME SRC=&quot;f1.htm&quot;&gt;</sgmltag>
	  <sgmltag>&lt;FRAME SRC=&quot;f2.htm&quot;&gt;</sgmltag>

	  <sgmltag>&lt;NOFRAME&gt;</sgmltag>

	    <sgmltag>&lt;BODY&gt;</sgmltag>
	      <sgmltag>&lt;P&gt;</sgmltag>Esta página usa frames y su
		navegador no los soporta, por favor vaya a
		<sgmltag>&lt;A HREF=&quot;sinframe.htm&quot;&gt;</sgmltag>
		  nuestras páginas sin frames
	 	<sgmltag>&lt;/A&gt;</sgmltag>
	    <sgmltag>&lt;/BODY&gt;</sgmltag>

	  <sgmltag>&lt;/NOFRAME&gt;</sgmltag>

	<sgmltag>&lt;/FRAMESET>

    </programlisting>

    <para>
	Si no hubiéramos usado la etiqueta NOFRAME el resultado de ver la
	página con este código con un navegador sin soporte para frames sería
	simplemente una pantalla en blanco como la que vemos en la figura
	10.15:
    </para>

    <figure label="10.15">

	<title>
	  El navegador <productname>NCSA Mosaic</productname> no soporta
	  frames, con lo que los usuarios de dicho navegador no verán nada si
	  no usamos la etiqueta NOFRAME.
	</title>
	<graphic fileref="fig10-15.gif"  format="GIF"/>

    </figure>

    <para>
	usándola se obtendrá el resultado mucho más explicativo de la figura
	10.16.
    </para>

    <figure label="10.16">

	<title>
	  En este caso sí hemos usado NOFRAMES ofreciendo al navegante un
	  enlace para ver una versión sin frames de las páginas.
	</title>
	<graphic fileref="fig10-16.gif"  format="GIF"/>

    </figure>

  </sect1>

</article>
