%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/avatar/Devel/WM/Manual/texvgrad.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 231 385 382 406
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 151 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
231 385 translate

% size of image (on paper, in 1/72inch coords)
150.98400 21.02400 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 171 string def


% load up the colormap
currentfile cmap readhexstring
000000 181818 201c20 282428 282c28 383438 383838 404040 484448 484848 
484c48 504c50 505050 505450 585458 585c58 605c60 606060 606460 686868 
706c70 707070 787878 807c80 808080 808480 888488 888888 888c88 889088 
908c90 909090 909490 989498 989898 989c98 a09ca0 a0a0a0 a0a4a0 a8a8a8 
a8aca8 b0b0b0 b8b4b8 b8b8b8 b8bcb8 c0c0c0 c8c4c8 c8c8c8 c8ccc8 d8d4d8 
d8d8d8 d8dcd8 e0e4e0 e8e8e8 f0f0f0 f8f8f8 f8fcf8 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


151 21 8			% dimensions of data
[151 0 0 -21 0 21]		% mapping matrix
rlecmapimage

7f3815380032
81382e7f2e132e0023
ff382d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c
2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c
2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c
2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d2c2d962c2d2c2d2c2d2c2d2c2d2c2d2c2d
2c2d2c2d2c2d2c2d21
81382bff2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a
2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a
2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a
2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a2b2a942b2a2b2a2b2a2b2a2b2a2b
2a2b2a2b2a2b2a2b2a1d
8138297f291329001b
8137277f2713270018
8136253225013801250138012503380b25013846250016
b53523222322232223222322232223222322232223222322232223222322232223222322
23222322232223222322232223222322232238833823223883382322388f382322232223
22232223222322232238c838232223222322232223222322232223222322232223222322
232223222322232223222322232223222322232223222322232223222322232223222322
232223222322232223222315
b53420212021202120212021202120212021202120212021202120212021202120212021
202120212021202120212021202120212021388338202138833820213802388120388238
213884382021203882382138833820213802388220213883382021388338202138b63820
212021202120212021202120212021202120212021202120212021202120212021202120
2120212021202120212021202120212014
b9331e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c
1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e381e1c3885381e1c381c3882381e380138
811e3882381c3882381e380138811e3883381c1e3882381c3883381e1c3883381e1c38b6
381e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e
1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e1c1e12
b631191a191a191a191a191a191a191a191a191a191a191a191a191a191a191a191a191a
191a191a191a191a191a191a191a191a191a193882381a388238193882381a3882381938
83381a193882381a388338191a388238193883381a193883381a193882381a3882381938
b7381a191a191a191a191a191a191a191a191a191a191a191a191a191a191a191a191a19
1a191a191a191a191a191a191a191a191a191a1910
b63018171817181718171817181718171817181718171817181718171817181718171817
181718171817181718171817181718171817183882381738823818388238173882381838
833817183882381738833818173882381838833817183883381718388238173882381838
b73817181718171817181718171817181718171817181718171817181718171817181718
17181718171817181718171817181718171817180e
812f16341601380116013801160138811638813816811638823816388138168116388238
163881381681163881381681163882381638823816388138163416000c
812d15341501380115013801150138811538813815811538823815388238153801388115
38813815811538813815011501380115013836150009
812b13341301380113013801130138811338813813811338813813811338823813388138
138113380238031301380113013836130007
ff2912111211121112111211121112111211121112111211121112111211121112111211
121112111211121112111211121112111211121112111211121112111211121112111211
121112111211121112111211121112111211121112111211121112111211121112111211
121112111211121112111211121112111211121112961112111211121112111211121112
111211121112111206
ff280f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f10
0f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f10
0f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f10
0f100f100f100f100f100f100f100f100f100f100f96100f100f100f100f100f100f100f
100f100f100f100f05
ff260e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d
0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d
0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d
0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e960d0e0d0e0d0e0d0e0d0e0d0e0d0e
0d0e0d0e0d0e0d0e04
ff240a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b
0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b
0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b
0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a0b0a960b0a0b0a0b0a0b0a0b0a0b0a0b0a
0b0a0b0a0b0a0b0a03
ff2009080908090809080908090809080908090809080908090809080908090809080908
090809080908090809080908090809080908090809080908090809080908090809080908
090809080908090809080908090809080908090809080908090809080908090809080908
090809080908090809080908090809080908090809960809080908090809080908090809
080908090809080902
811f017f0113010000

%
% Compression made this file 22.33% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer
