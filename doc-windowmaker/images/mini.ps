%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/avatar/Devel/WM/Manual/mini.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 274 374 328 428
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 64 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
274 374 translate

% size of image (on paper, in 1/72inch coords)
54.43200 54.43200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
040204 4c862c ccca84 1c4204 ece6b4 bccad4 1c221c 645264 dccecc bcb664 
2cae1c 342e0c 948a44 a4a6b4 748284 849694 b4b6b4 dcdadc ecf6f4 646e64 
444244 e4eae4 e4daac 948294 cccac4 dccee4 b4aaac 545664 d4d2dc 9c96a4 
d4caa4 243234 343234 9c9e9c 141214 8c6224 c4bebc 444254 849294 ece2d4 
7c7a6c f4eaec d4d2d4 b4b2ac 443244 f4eec4 848284 94a2a4 e4e2d4 2c2a24 
645274 342234 bcbecc 949294 d4cac4 343a44 1c1a04 dcca9c 344234 9496a4 
9c9eac d4ca9c 242234 44d624 bcbebc 647284 ecf2f4 dcd6bc 3c3644 445254 
8482a4 d4ca84 34521c 24221c acaeb4 949a84 fcfaf4 3c521c e4deac 8c8a8c 
ecd6ec a492a4 dccaa4 2c3634 343244 dcd6d4 bcb2ac 848a8c dce2e4 d4cad4 
ece6d4 dcd2dc 54ae44 bcbab4 eceae4 ecdab0 b4aec2 ccd6e4 1c121c 847284 
f4f2f5 fceec9 646274 342a29 544e54 545239 0c0204 24420b f4e6ba c4cad6 
645e5c dcd2d3 34ae22 3c2e11 e4dae0 747274 9482a4 e4d6f3 cccabc 2c2e2c 
34363b a49ea1 94622b 848294 d4ceca 445244 546264 8c7e7c 747284 746274 
545274 645a4c 544254 9492b4 647274 8c9a86 847e7c acaaae 748294 646a74 
e4d6bc d4ceec 241a04 949694 545264 2c323c 3c3212 a49eae e4d6d7 e4e2e8 
d4d6e1 c4b664 f4f6f4 cccad4 8492a4 e4d6c4 b4b2bc 9492a4 3c3a44 acaec4 
bcb2bc eceaf4 847294 646284 d4cabc 546274 747294 746284 b4bab7 b4aeb4 
141614 f4eeec 242622 fcfefc 342e2a 2c3234 040604 1c261c 748684 948694 
d4cea4 d4d6d4 848684 94a6a4 1c1e04 a496a4 dccea4 343644 d4ced4 1c161c 
0c0604 9486a4 848694 241e04 4c8634 ccca8c 1c420c ece6bc bccadc dcced4 
2cae24 342e14 dcdae4 e4eaec cccacc dcceec b4aab4 9c96ac 34323c 14121c 
8c622c c4bec4 ece2dc f4eaf4 b4b2b4 f4eecc e4e2dc 2c2a2c bcbed4 d4cacc 
9496ac 9c9eb4 44d62c bcbec4 ecf2fc d4ca8c 345224 242224 acaebc 949a8c 
fcfafc 3c5224 8c8a94 ecd6f4 2c363c dcd6dc bcb2b4 848a94 dce2ec bcbabc 
eceaec 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


64 64 8			% dimensions of data
[64 0 0 -64 0 64]		% mapping matrix
rlecmapimage

82104a1082104a1082104a1082104a1082104a1082104a1082104a1082104a1082104a10
82104a1082104a1082104a1082104a1082104a1082104a1082104a1082104a1082104a10
82104a1082104a1083104a107e
8110003c00006e
814a000f008198000c0081980004008198001400006e
8110000f0081ad000c0081ad001b00007e
8110000b008798ad980098ad980001008298ad0001008798ad0098ad98ad008400980098
008200980086009800980098000a00006e
814a000a008198008400ad00ad0084009800ad00840098009800020083ad0098008e00ad
00ad00ad009800ad00ad00ad000a00007e
8110000a0081ad008400980098008400ad0098008200ad008300ad980084009800ad0086
009800980098ad87ad009800980098000a00006e
814a000b0085ad98ad00ad0084009800ad0082009800010081ad008600ad009800980084
00ad00ad00020083ad00ad000b00007e
8110000d0083980098008200ad00830098ad00830098ad0001008198008200ad00010081
9800830098ad008400980098000b00006e
814a000b0082ad98002d00007e
8110003c00006e
9710f02f3c2f852fcf2f852fe82fe82f359ae89d269ae89a269726e826e8261726175746
574f5746260e260e260e7b0e7b0e040e8a630e630e630e630e41457e
aa4212512f352f352fb326519a519a9de8518f9a3574269d354635462617b246267b2617
57c00e177b177b8894887b887b88a288a288a20ea241630e730e638b8400
a598f02f852f512f852f85e8352f359d359a359a359a35261726e826172674264657bfb2
46267b857b887b88467b017b918a7b8a7b0ea60e630e630ea60ea60e804500
bf4298359d352fbf3551e8519abfe89a9dbf3546b3743546b34626177b46577f7b170e17
7b0e7b7f468a88a628a20ea788a60e630ea70e800e630e8141638b8400
9b42ab2f512f852f9a2f9a2f9d9a359de826359ae8263526e8261757000900836ebdd17b
017b020e907b0e6341a20ea20e6341a60e4128414500
8b6442352fb39d51b351359d3501358b9a3546b39a3546b3462617000300851099ccbceb
0082002206980614e3d988a288a20e7388a20e730e800e6341637363801400
9812ab2f85b79a359a2f9ab39ae885ed359d3526172617261700010083a910efcc88ccbc
1c581558c7870697066831ac8a7b41630ea241a20ea70e8b0e808ba60e8b4500
88ab1251e85135519d358d359d359d4f463546b3463546ed00010082894aa801a884db99
721130833065c52d912d002262221f69630ea60e6341630e638b808380638b8082808400

9598f02f352f9a2f85e89d9ae8269d26bf26352635570089009d894a5d105dccbc438343
04432d972d6c4e6c433d382269e2e3a20e630e630e8b0e800e8b0e8083808b4500
944298359d1d359a35e8359d354635463517e874260084009d0d56108310a8cc43014382
046c0496042d4e5f167647e5690c7331226341630e6341638b638085808b80731400
8542ab9de82f9d849d359d9a26a026bf354f4626462617009d89a9a810a8ef1076435f16
d7046c047558cc7602096989690c73480ea20e8b0e800180820e8b8084808b732500
936412519a35e835e89d3517357426463517ed17008b000d2b5d10a85d76a47c5f169b16
042d15db8926872eb68714230c280cbe00634180a3638b8073a7808380732500
8598f02f1d9a9d909d9a579aed9aed1726e826465700892b108e10ef5dcc76a40416044e
396dec3b83888388736ee22868310c830c92380084000e730e8087808b808b418b7d00
834264e83501358ce835743574357fe8462617570084004a5d10a8a7a8597c8c4e5f046c
52021a882888c339e18814bb8306310c230b22380080417380738073a7739e00
af98423be89d9a269a269a574626742674b21700a9a810a8a0cc18a44e6c4e5f3d02a928
132887a04aa9898869bb78060c830c0b8e388b386a008073418b418b809e00
96f09817269d35173574ed17264657170e17260010a84aa801a882431604010483433909
139d13878908306136a84b7314ac49480c69c1920b386a8ba773a773a3134400
b498ab9a9d2635269a574626465746ed462646001040102b102443c54e65c339c3027387
a95830159b61a44a2128ae209e0c7a92710b8a0b386a868b418b86a79e00
83426435e801e88e7457173517ed17007f267f7b00cc0003008f38042dd7ba1e970913b2
946cd558304396435d3d4b13693ac90c220b48441438a773a78681739e00
b26442269d9a3b26465746261757002646267b0018cc0010186138716c653d39c3098321
d71529f011d4b4a44a9db28369ac06ae8cae4883acb88b418ba38ba33a00
83426417e887e8267f261726177b927b007f46887b00bca80018bceb430b4e16023d943d
097ea85ef0cb295e11f0586f1a797369ae3148698b69013a148186818681862c00
8d1242573bed462646264657465700a7007bed0e00bc1000cc1c118e38163d47023d094d
9558f0d4cb5a152d42581036e5691f486983690c890c2c86a38b418b663700
8dab1217267f26745717b21726170087000e177b00bc8900020082383d020202903909be
f0157c6165cd652d0015eb76186901698d7eb216020c9e667381866686d000
a998f02646264626172646268a5700de00ed0e00cdcc0018cc00a439023d02090209ac15
42e0bdc5abc500010093ee7ccc7e13b22bd46c090c448ba38b8186813700
8b4298175746267f467f26177b877b003f007b8800158a1500cc6dc7383d024702090109
88bdb5428e2200e064000100935e61a41aa8086c163d09239e8186811ba7662c00
9698f026bf57462617ed46260e57003f000e7b00429800db92db2613671b88e1970c0931
89f0223800984200010093e6f043406c43ba3d027a1448863286a386663700
94421217264f2617b2e888177b17003f007b8800980001009418626769684dd9887a49c9
88e0f0be009829c5009885984c985e30168316390269896948668666138166d000
8e98f0261757462646ed8a7b8a57003fa23f000e0064eb7c99cc388328736848d988579e
883d4200f042e6984c424cf06598763d8d3d020969ac6713a713a38b663700
884298178a170e170e7b827b7f7b817b008c003f008800cb6f6d36246269280128966e73
1328881d6dd8cbe04200f06598e6f0e6f0763d02018501144d0b81660266827ed000
014289574f5746267b577bed7b827b0e039803000e009599366d5db24813875689768987
8976b5cbad9800010088c54ca129156f8c24098209833189310041668b6613663700
8a64421757170e170e178a008100888188c498c40088009636a82410a438693910767c36
c758abcb6598ad000100822dabf08bf0a19b7c56012314c90038660266836e66d000
8b125e0f46267b0e46887b0e00010082c40300010094ccefa810a9a85d62284aa4db2a94
30ee15424c9800010088d7ebe0d4a15b1e1a69866967b0008e136682661b668266ae00
876412170e7b0e177b847b88a200de82de3f0381030096006d56e4560d5dbc00693da808
eb9695d858f0426442008a00f042f0eeeb6fbca8836981690001000466821b5400
8498f0260e7b847b267b417b837b0e003f013f01038e0010d63b893beca80562b2a49927
589758155e15424c4298abcb29cb942a08991e7369836a38006686667e667e663a00
8842987f2e178846880083007b88000100813f039403004a1de5b9579da86f6967a9a858
d8f0585e154201428498d5f058ca8bca2adb7c5be588731f4900660166846e826e9100
8264427ba87b0e460e7b0e000e7b8a0e00de3f03000f1d886e285710cc0c69873dc7cb50
581158279627753059348a34722adba86f7c5de5132284226e667e660166811f00
8342640e7ba17b88a288a2006300630e00033fc400214f73837e28e5a90c48287910116f
76df186f016f8330c718ef93efbc27cc24999b18a98822ae666e326e826e3e00
8842ab7b0e8a7b417b0e010e01c4010081033f913f0028881368779eb6350c672821a8c7
76a98fa9762abcb5bcccefa9a836582799d3118c115d733190a56645667e1b1f00
8264422e882ea2887b0ea288a2030303013f820013689368e72006aecb09481da97618a8
3d89a9761810349634d63b9dbc30cd7205a8348d675345326e667e076eaf00
8212f07b017b8f8a0e888a0e41c4033fde0ade0a0014018c0114d93101750969a9767c08
2197213d89ef853b10efe4b63b106fd82a249a6b030a709066a585a532a5661f00
8d64126388a688a288a200a2000b0a030a8200060101018c315c018700690d1e5bccb69d
899b89e4b687a9df9ded359f2a8d55a84b6b030b0a66076e321b077e3e00
8364428a0e8d0e7b0e8a0e030003b13fc80ac80a010a010002019adec32268cc5955df9d
e410e43588874aa9edb6dde40519961e26030103010a877ea57e6645071f00
8ef0980e88a288a60e63030003003f010201840a9e1f06489048010f62690e6f8d113405
36da3cc0b69d8c9d3c88359f34da8d111c7984038a03c40a326e327e326e3e00
8464420ea20e010e85630ec464030a010a86c4c12248c277019101e24566440d082a555d
348d757c3c3bc03c013c821d9f349234c6bc8d5e266849bd03d11b7e1b827e071f00
8c64426388a20ea24163000a700a010a84abe66a00019001c25c265c06b25e30eb591061
192ac63c8e3c3560893cdd719c6dc68d1175c9688b686668af327e327e821b3300
8898f00e8a0e800e63008e000a01c201c2c8015c4801480126019b01234f5e5818a85da8
2866b2ce0d5c343bc035c40561598d752a03238b235728667e827e077e451f00
8cf098630ea70ea20e0038486700820022488348017e018101038203be2388230ee80d6b
038788688268883c8d3cc870661bb26bc6056134054a038103238a23b657071b07450782
3300
0142860ea20e630e6300870022491f064d0b03010382c4c10390036b73d266b2716bb288
6869688835700a980a1b45716b0a708dc63c666803d223b2dd7e327e827e821f00
8e64426341630e808bc61d68459020038603844513038e23032381666b886b6683d22314
6828c881c80395036b037e030a0d899d886e68e3c47166dc077e68906882683300
9212f00ea20ea60e80e92f1b90036b77d0919003010301908114238323680b038303910a
238623736970036b038c0320666b8993dd88838866ea238a238b1d7e827e827e821f00
a56412630e738b638be9e81b456b0391779e6803c449668b1b9131d0786845700a6eb27f
8366039603662206662f9fcf267f13b23b1b06778b2f072507456882683e00
8b426441a60ea20ea60e804180888073418073418b73418c41868186a386a713a38ba313
66016684861b661b669666a51ba5667e07a5077e077e327e827e8290821b820600
84641207456882689068016882146825882584452514849e8414a9149e25142c9e2514d0
9e2c37d037443a2c7754779120917733d9331f33d933b13e0633aa33063e06bd00
8142003d00

%
% Compression made this file 32.30% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer
