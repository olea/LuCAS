Seguridad en GNU/Linux
<RAW>
<H2>En esta presentación se verán someramente algunas
herramientas utilizadas para garantizar la seguridad
en el mundo GNU/Linux</H2>
</RAW>

Importancia de la seguridad
<RAW>
<H2>
A estas alturas es inevitable destacar la seguridad 
en un sistema de información, máxime cuando es potencialmente
más vulnerable (i.e. Internet).
</H2>
</RAW>

Fallos de seguridad
<ITEMIZE>
debidos a errores no conocidos.
debidos a errores desconocidos pero no arreglados.
debidos a mala configuración del sistema.
</ITEMIZE>
<NOTE>
Los dos últimos pueden deberse a negligencia o falta de tiempo.
</NOTE>

La situación actual
<RAW>
<H3>
En Internet hay multitud de servidores, algunos muy
asegurados otros montados por gente sin conocimiento
un informe tras el uso de BASS demostró que en Internet,
aproximadamente un 25% de los servidores era susceptible
de un ataque basado en agujeros conocidos desde hace tiempo.
</H3>
</RAW>

Importancia de las herramientas automatizadas
<ITEMIZE>
una herramienta que haga tests.
a un administrador le es dificíl mantenerse al día.
un administrador necesita supervisar muchas variantes de golpe.
</ITEMIZE>

Herramientas de ayuda a la administración
<HBOX>
<IMAGE>
satan.gif
</IMAGE>
<ITEMIZE>
COPS. Tests automáticos sobre sistemas UNIX.
SATAN (abril 1995). El primero con interfaz gráfico amigable (HTML)
ISS. Internet security Scanner.
SAINT. Basado en SATAN.
</ITEMIZE>
</HBOX>

Nuevas herramientas
<ITEMIZE>
Nessus (1998). Arquitectura cliente/servidor, interfaces en múltiples plataformas.
Nmap / Queso. Escáneres de puertos
Back Orifice. Para plataformas Windows.
</ITEMIZE>

Doble filo de las herramientas
<ITEMIZE>
se pueden usar por administradores
se pueden usar por otras personas no autorizadas
Polémica desatada en torno a SATAN tras su aparición.
</ITEMIZE>

Ventajas: Código disponible
<ITEMIZE>
el administrador puede supervisarlo y asegurarse de que hace lo que tiene que hacer (importante en cosas "sensibles")
el administrador puede adaptar la herramienta a sus necesidades
</ITEMIZE>

Ventajas:Desarrollo distribuido
<ITEMIZE>
potencialmente cualquiera puede contribuir
las contribuciones se integran fácilmente
el desarrollo es acelerado (muy importante en relación con seguridad ya que aparecen fallos cada poco tiempo)
menor tasa de errores en los programas
</ITEMIZE>

Nessus
<HBOX>
<IMAGE>
nessus.gif
</IMAGE>
<ITEMIZE>
Arquitectura cliente servidor.
Multiples Interfaces (GTK, Java..)
Comunicación encriptada (esto es, segura)
Contínuo desarrollo por comunidad de software libre.
Herramienta modular con multitud de tests.
</ITEMIZE>
</HBOX>

Nmap
<ITEMIZE>
Escáner de puertos (= servicios)
Con interfaz gráfico y sólo texto.
Incluye marcas TCP/IP (puede adivinar el SO)
</ITEMIZE>
<NOTE>
Un escáner es útil para el administrador para supervisar los
servicios activos en las máquinas a su cargo, y así saber
limitarlos a los imprescindibles.
</NOTE>

Documentación
<ITEMIZE>
Practical Unix and Internet Security. Simson Garfinkel and Gene Spafford. O'Reilly.
Máxima seguridad en Internet. Anónimo. Ed. Anaya 
Auditorias-COMO, en desarrollo (puedes encontrarlo <RAW><A HREF="http://www.dat.etsit.upm.es/~jfs/debian/doc/audit/">aquí</A></RAW>).
Guía de Seguridad en Linux, original <RAW><A HREF="http://www.securityportal.com/lasg">aquí</A> y traducción en <A HREF="http://lucas.hispalinux.es/html/manuales.html">LuCAS</A></RAW>
COMO de seguridad en Linux, original <RAW><A HREF="http://metalab.unc.edu/mdw/linux.html">aquí</A> y traducción <A HREF="http://www.gulic.org/cosecha/Teresa/">aquí</A></RAW>
</ITEMIZE>
