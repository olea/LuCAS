<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
	<TITLE></TITLE>
	<META NAME="GENERATOR" CONTENT="StarOffice/5.1 (Linux)">
	<META NAME="AUTHOR" CONTENT=" ">
	<META NAME="CREATED" CONTENT="20000201;16591700">
	<META NAME="CHANGEDBY" CONTENT=" ">
	<META NAME="CHANGED" CONTENT="20000201;16591700">
</HEAD>
<BODY>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
Copyright (C) 1991, 92, 94, 95, 96, 97, 98 Free Software Foundation,
Inc.</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  This file is part of the GNU C Library.</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  The GNU C Library is free software; you can redistribute it and/or</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  modify it under the terms of the GNU Library General Public License
</FONT></FONT>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  as published by the Free Software Foundation; either version 2 of
the</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  License, or (at your option) any later version.</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  The GNU C Library is distributed in the hope that it will be
useful,</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  but WITHOUT ANY WARRANTY; without even the implied warranty of</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  Library General Public License for more details.</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  You should have received a copy of the GNU Library General Public</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  License along with the GNU C Library; see the file COPYING.LIB.  If
</FONT></FONT>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  not, write to the Free Software Foundation, Inc., 59 Temple Place -
<BR><BR>   Suite 330, Boston, MA 02111-1307, USA.  */</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
*	POSIX Standard: 6.5 File Control Operations	&lt;fcntl.h&gt;</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
*/</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#ifndef	_FCNTL_H</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#define	_FCNTL_H	1</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#include
&lt;features.h&gt;</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
This must be early so &lt;bits/fcntl.h&gt; can define types
winningly.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">__BEGIN_DECLS</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
Get the definitions of O_*, F_*, FD_*: all the</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  numbers and flag bits for `open', `fcntl', et al.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#include
&lt;bits/fcntl.h&gt;</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
For XPG all symbols from &lt;sys/stat.h&gt; should also be available.
 */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#ifdef
__USE_XOPEN</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
include &lt;sys/stat.h&gt;</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#endif</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#ifdef	__USE_MISC</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
ifndef R_OK			/* Verbatim from &lt;unistd.h&gt;.  Ugh.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
Values for the second argument to access.</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  These may be OR'd together.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
 define R_OK	4		/* Test for read permission.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
 define W_OK	2		/* Test for write permission.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
 define X_OK	1		/* Test for execute permission.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
 define F_OK	0		/* Test for existence.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
endif</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#endif
/* Use misc.  */</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
XPG wants the following symbols.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#ifdef
__USE_XOPEN		/* &lt;stdio.h&gt; has the same definitions.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
define SEEK_SET	0	/* Seek from beginning of file.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
define SEEK_CUR	1	/* Seek from current position.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
define SEEK_END	2	/* Seek from end of file.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#endif	/*
XPG */</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
Do the file control operation described by CMD on FD.</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  The remaining arguments are interpreted depending on CMD.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int __fcntl __P ((int __fd, int __cmd, ...));</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int fcntl __P ((int __fd, int __cmd, ...));</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
Open FILE and return a new file descriptor for it, or -1 on error.</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  OFLAG determines the type of access used.  If O_CREAT is on OFLAG,</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  the third argument is taken as a `mode_t', the mode of the created
file.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int __open __P ((__const char *__file, int __oflag, ...));</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#ifndef
__USE_FILE_OFFSET64</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int open __P ((__const char *__file, int __oflag, ...));</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#else</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
ifdef __REDIRECT</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int __REDIRECT (open, __P ((__const char *__file, int __oflag, ...)),</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">		
      open64);</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
else</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
 define open open64</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
endif</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#endif</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#ifdef
__USE_LARGEFILE64</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int open64 __P ((__const char *__file, int __oflag, ...));</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#endif</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
Create and open FILE, with mode MODE.</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  This takes an `int' MODE argument because that is</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  what `mode_t' will be widened to.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#ifndef
__USE_FILE_OFFSET64</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int creat __P ((__const char *__file, __mode_t __mode));</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#else</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
ifdef __REDIRECT</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int __REDIRECT (creat, __P ((__const char *__file, __mode_t __mode)),</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">		
      creat64);</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
else</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
 define creat creat64</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
endif</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#endif</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#ifdef
__USE_LARGEFILE64</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int creat64 __P ((__const char *__file, __mode_t __mode));</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#endif</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#if
!defined F_LOCK &amp;&amp; (defined __USE_MISC || (defined
__USE_XOPEN_EXTENDED \</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">					
      &amp;&amp; !defined __USE_POSIX))</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
NOTE: These declarations also appear in &lt;unistd.h&gt;; be sure to
keep both</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  files consistent.  Some systems have them there and some here, and
some</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  software depends on the macros being defined without including
both.  */</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">/*
`lockf' is a simpler interface to the locking facilities of `fcntl'.</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  LEN is always relative to the current file position.</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">
  The CMD argument is one of the following.  */</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
define F_ULOCK 0	/* Unlock a previously locked region.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
define F_LOCK  1	/* Lock a region for exclusive use.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
define F_TLOCK 2	/* Test and lock a region for exclusive use.  */</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
define F_TEST  3	/* Test a region for other processes locks.  */</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
ifndef __USE_FILE_OFFSET64</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int lockf __P ((int __fd, int __cmd, __off_t __len));</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
else</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
ifdef __REDIRECT</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int __REDIRECT (lockf, __P ((int __fd, int __cmd, __off64_t __len)),</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">		
      lockf64);</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
else</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
 define lockf lockf64</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
endif</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
endif</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
ifdef __USE_LARGEFILE64</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">extern
int lockf64 __P ((int __fd, int __cmd, __off64_t __len));</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#
endif</FONT></FONT></P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#endif</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">__END_DECLS</FONT></FONT></P>
<P><BR><BR>
</P>
<P><FONT FACE="courier, monospace"><FONT SIZE=4 STYLE="font-size: 16pt">#endif
/* fcntl.h  */</FONT></FONT></P>
</BODY>
</HTML>