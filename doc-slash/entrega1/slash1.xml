<?xml version='1.0' encoding="ISO-8859-1"?>
<!-- <!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd"> -->

<!DOCTYPE article PUBLIC "-//Davenport//DTD DocBook V3.0//EN">

<article lang="es" id="slash1">
  <artheader>
    <title>Slash, servidor de contenidos y aplicaciones</title>
    <date>15 de Mayo de 2002</date>
    <author>
      <firstname>Álvaro</firstname>
      <surname>Del Castillo</surname>
    </author>
    <author>
      <firstname>Jorge</firstname>
      <surname>Ferrer</surname>
    </author>
    <abstract>
      <para>

      </para>
    </abstract>
    <releaseinfo>Versión 1.0</releaseinfo>
    <orgname></orgname>
    <legalnotice>
      <para>
	Copyright Jorge Ferrer y Álvaro del Castillo. Se otorga
	permiso para copiar, 
	distribuir y/o modificar este documento bajo los términos de la
	Licencia de Documentación Libre GNU, Versión 1.1 o cualquier otra
	versión posterior publicada por la Free Software Foundation. Puede
	consultar una copia de la licencia en:
	http://www.gnu.org/copyleft/fdl.html
      </para>
    </legalnotice>
  </artheader>

  <sect1>
    <title>Slash como servidor de contenidos</title>
    <para>
      Un servidor de contenidos es una aplicación que permite llevar a
      cabo una gestión integral de los contenidos que se mostrarán en un
      sitio web. En realidad existen mucho antes de la aparición del
      WWW pero nos centraremos en los orientados a este.
    </para>
    <para>
      Una gestión integral de contenidos incluye que se puedan añadir,
      modificar,  
      validar y en general aplicarle un flujo de trabajo (workflow)
      incluyendo un proceso de publicación. Un gestor de contenidos
      genérico debe permitir la definición de tipos de contenidos
      personalizados por el administrador o desarrollador del sitio web. 
      Generalmente los gestores de contenidos disponen de una interfaz web
      o una aplicación de escritorio que permite añadir y gestionar los
      contenidos. Adicionalmente ofrecen una interfaz de programación para
      facilitar una integración flexible de los contenidos en el sitio
      web.
    </para>
    <para>
      Una de las razones por las que los servidores de contenidos han
      tenido mucho éxito en el WWW es que una vez terminada la
      infraestructura del web, es posible añadir contenidos sin
      necesidad de tener conocimientos técnicos. Un campo donde esto
      ha representado una ventaja significativa es el de los
      periódicos, que necesitan de un sistema muy rápido para añadir
      contenidos 
      para poder tener un ritmo de actualización tan alto como se les
      exige.
    </para>
    <para>
      Existen gestores de contenidos completamente genéricos que se
      adaptan a cualquier necesidad ofreciendo gran flexibilidad para
      crear contenidos personalizados. Un ejemplo sencillo de
      definición de un tipo de contenido puede ser una noticia de un
      periódico. La definición consiste en describir los campos que
      componen el contenido:
      <variablelist termlength="10">
	<varlistentry>
	  <term>Título</term>
	  <listitem>
	    <para>El título de la noticia</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Autor</term>
	  <listitem>
	    <para>El autor de la misma</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Ladillo</term>
	  <listitem>
	    <para>Una introducción a la noticia</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Cuerpo</term>
	  <listitem>
	    <para>El texto completo</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Imagen</term>
	  <listitem>
	    <para>Una imagen asociada a la noticia</para>
	  </listitem>
	</varlistentry>
      </variablelist>
      Una vez definido el tipo se define donde y cómo se van a mostrar
      las noticias introducidas. Por ejemplo es habitual que la página
      principal tenga un listado de las últimas noticias con su
      título, ladillo y autor. Se podría hacer que se mostrara también
      la foto o una parte del texto de la noticia más reciente. Además
      de la portada se podría añadir una página individual con toda la
      información sobre cada una de las noticias.
    </para>
    <para>
      Una vez terminada la definición, los autores podrán añadir
      noticias a través de un formulario o una aplicación
      especial. Estas noticias pasarán por un proceso 
      de validación (un flujo de trabajo definido en el servidor de
      contenidos) y finalmente se publicarán, apareciendo en la página
      principal en su página individual y en tantos sitios como se
      haya definido, todo de forma automática.
    </para>
    <para>
      Los gestores de contenidos han revolucionado el WWW. A día de
      hoy ningún sitio web de importancia tiene 
      sus páginas hechas a mano en HTML dado que se ha visto que
      actualizar sus contenidos es demasiado lento y costoso. Para
      solucionar esto se usan servidores de contenidos genéricos,
      especializados o incluso soluciones a medida; pero siempre con
      una gestión de contenidos.
    </para>
    <para>
      El sitio web <ulink url="http://slashdot.org">slashdot.org</ulink>
      fue uno de los pioneros de esta revolución. Fue uno de los
      primeros webs que se actualizaban casi al minuto. Sus autores
      crearon una aplicación que permitía añadir noticias y
      comentarios sobre estas de forma sencilla y aprovecharon esto para
      permitir que cualquier visitante pudiera hacerlo. El éxito para
      un sitio tan modesto fue tan grande que sus autores decidieron
      publicar el software que empleaban bajo una licencia libre. El
      resultado fue <emphasis>Slashcode</emphasis>, conocido
      comúnmente como <emphasis>Slash</emphasis>.
    </para>
    <para>
      Slash es un gestor de contenidos especializado que soporta
      directamente los siguientes tipos de contenidos:
      <variablelist>
	<varlistentry>
	  <term>Noticias</term>
	  <listitem>
	    <para>Que pueden ser enviadas por cualquier visitante y
	    luego aceptadas o no por editores autorizados. Las
	    noticias pueden organizarse por secciones y temas.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Comentarios</term>
	  <listitem>
	    <para>Se puede permitir que cualquier visitante añada
	    comentarios a cualquiera de las noticias o incluso a los
	    comentarios previos.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Encuestas</term>
	  <listitem>
	    <para>Las visitantes pueden votar una opción y poner
	    comentarios a la encuesta. Se generan gráficas
	    instantáneas de los resultados de la votación.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Otros</term>
	  <listitem>
	    <para>
	      Se ofrecen facilidades para añadir cualquier otro
	      tipo de contenido o extender los contenidos
	      existentes. Aunque para ello es necesario tener
	      conocimientos de programación y/o de bases de datos.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
      Si se quiere crear un web centrado en estos tipos de contenidos,
      probablemente Slash sea la mejor opción actualmente. Ofrece la
      gran ventaja de ser un gestor de contenidos especializado y muy
      bien terminado en todos los detalles. Todo ello es consecuencia
      de su uso en su sitio web original (slashdot.org) que sigue
      siendo uno de los más visitados del WWW. Por ello Slash es hoy
      día una aplicación muy eficiente y con la garantía de disponer
      de todas las funcionalidades necesarias que se pueden necesitar
      para montar un sitio web de estas características.
    </para>

  </sect1>
  <sect1>
    <title>Slash como servidor de aplicaciones</title>
    <para>
      Un servidor de aplicaciones es una infraestructura que facilita la
      creación, ejecución y gestión de aplicaciones en un entorno de
      servidor. Una aplicación es cualquier software que ofrece una
      determinada funcionalidad a un usuario. En el mundo de los
      servidores de aplicaciones un tipo muy corriente son las
      aplicaciones web, que 
      ofrecen una interfaz basada en HTML y a la que se accede a través de
      un navegador. Estas aplicaciones pueden llegar a tener casi la misma
      funcionalidad que algunas aplicaciones de escritorio (limitado sólo
      por la expresividad de HTML y compañía), por ello su implementación
      es complicada. Algunos ejemplos de aplicación web son un
      buscador, un sitio web de compras, un portal de noticias
      automatizado, etc. Todas ellos deben tener un sistema software
      por detrás que de soporte a las funcionalidades que ofrecen
      tanto a los visitantes como a los administradores.
    </para>
    <para>
      El objetivo de los servidores es contener toda aquella
      funcionalidad que sería común para todas las aplicaciones 
      de forma que no sea necesario que se implemente para cada una
      por separado.
      </para>
    <para>
      Las dos tecnologías de las que más se ha hablado en el ámbito de
      los servidores de aplicaciones son
      <productname class="registered">.NET</productname> y
      <productname class="registered">J2EE</productname>. Pero existen
      muchas otras plataformas que pueden recibir esta terminología
      como <productname class="trade"><ulink
      url="http://www.zope.org">Zope</ulink></productname>,
      <productname class="trade"><ulink
      url="http://http://www.midgard-project.org">Midgard</ulink></productname>
      y Slash, como veremos a continuación.
    </para>
    <para>
      En general para ser considerado como tal, un servidor de
      aplicaciones debe ofrecer al menos varias de las siguientes
      características:  
      <itemizedlist>
	<listitem>
	  <para>Gestión del ciclo de vida de la aplicación</para>
	</listitem>
	<listitem>
	  <para>Facilidades para la gestión de usuarios y perfiles de
	  usuarios</para> 
	</listitem>
	<listitem>
	  <para>Facilidades para realizar persistencia de
	  información. Preferiblemente abstrayendo de la base de datos
	  concreta utilizada.</para>
	</listitem>
	<listitem>
	  <para>Servicio de autenticación y autorización</para>
	</listitem>
	<listitem>
	  <para>Sistema de configuración centralizado</para>
	</listitem>
	<listitem>
	  <para>Otros servicios especializados que reduzcan el tiempo
	  de desarrollo de las aplicaciones.</para>
	</listitem>
      </itemizedlist>
    </para>
    <para>
      Al hablar de Slash como servidor de aplicaciones se plantea la
      posibilidad que ofrece para crear extensiones que aprovechan la
      infraestructura existente para implementar una nueva
      funcionalidad en el menor tiempo posible. Estas extensiones
      reciben el nombre de plugins y pueden ser distribuidos de forma
      independiente e instalados en un servidor slash existente por
      medio de comandos de este. Como se ha comentado, Slash
      <emphasis>no surgió como un servidor de
      aplicaciones</emphasis>. Por ello carece de las características
      más avanzadas de estos, pero a cambio ofrece muchas utilidades
      especializadas que no se encuentra en ningún otro.
    </para>
    <para>
      A continuación se describe con más detalle cada una de las
      características de los servidores de aplicaciones y se describe
      el soporte de Slash: 
      <itemizedlist>
	<listitem>
	  <para>Gestión del ciclo de vida de la aplicación: Implica cargar en
  memoria la aplicación y crear varias instancias para poder atender
  al mayor número de usuarios posibles con la máxima eficiencia. En
  Slash esto lo gestiona directamente apache con mod_perl.
	    <!-- FIXME: es necesario explicar esto mejor -->
	  </para>
	</listitem>
	<listitem>
	  <para>
Facilidades para la gestión de usuarios y perfiles de usuarios. La gestión de
  perfiles de usuarios permite ofrecer una personalización del sitio
  web a las preferencias particulares de cada uno de ellos. También es
  un mecanismo en el que pueden basarse mecanismos de comunicación
  entre usuarios. Slash ofrece la posibilidad de que los usuarios se
  registren y les ofrece un perfil básico donde almacenar preferencias
  básicas de cada uno de ellos. Además ofrece mecanismos para extender
  este perfil para adaptarlo a los requisitos de cualquier aplicación.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Facilidades para realizar persistencia de información. Slash dispone
	    de un módulo que encapsula el acceso a una base de datos. Actualmente
	    se soportan MySQL y parcialmente PostgreSQL y Oracle. Este módulo 
	    está preparado para los
	    tipos de contenidos predefinidos en Slash. Si la aplicación requiere
	    un esquema de tablas diferente se necesitará extender este módulo.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Servicio de autenticación y autorización. Slash ofrece un
	    sistema de autenticación con una gestión web
	    completa. Cuando un usuario se registra se almacena su
	    nombre de usuario y clave en una base de datos
	    relacional. A partir de ese momento el usuario puede
	    autenticarse en cualquier momento. Una vez autenticado se
	    mantendrá su identidad durante toda la sesión y más tiempo
	    si se acepta el uso de cookies. El servicio de
	    autorización se basa en que cada usuario pertenece a un
	    grupo (<foreignphrase>user</foreignphrase>,
	    <foreignphrase>author</foreignphrase>, etc) y dentro de
	    cada grupo se le 
	    asigna un nivel de seguridad (seclevel) de 1 a
	    10.000. Cada una de las operaciones que se programen en la
	    aplicación pueden asociarse con un nivel de seguridad
	    mínimo, de forma que sólo podrán ejecutarlas aquellos
	    usuarios que dispongan de un nivel de seguridad más alto. 
	  </para>
	</listitem>
	<listitem>
	  <para>
  Sistema de configuración centralizado. Slash no dispone de sistema
  de configuración para sus aplicaciones.
	  </para>
	</listitem>
      </itemizedlist>
    </para>
    <para>
      Adicionalmente Slash ofrece los siguientes servicios
      especializados:
      <itemizedlist>
	<listitem>
	  <para>
	    Exportar un resumen de contenidos en formato RSS (Rich
	    Site Summary). 
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Creación y gestión de encuestas a los visitantes.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Gestión de la apariencia y de temas mediante y templates.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <foreignphrase>Blocks</foreignphrase>: sistema para
	    incluir información proveniente de otros sitios web a
	    través de RSS.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Filtros automáticos de contenidos. Permite rechazar
	    contenidos introducidos por los usuarios si no pasan el
	    filtro.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Por último, dado que Slash está programado en Perl, el
	    desarrollador puede emplear cualquiera de las librerías
	    existentes para este lenguaje. 
	  </para>
	</listitem>
      </itemizedlist>
    </para>
    <para>
      En resumen, Slash nació como un gestor de contenidos
      especializado en una función concreta que ha demostrado
      desempeñar con éxito. Su evolución ha llevado a la creación de
      una infraestructura que permite crear aplicaciones web sobre él
      con mucha facilidad. Aunque no ofrece todas las capacidades de
      entornos como J2EE, si se desea desarrollar un sitio web en el
      que sea importante la participación de los usuarios y la
      colaboración en la creación de contenidos, Slash es un entorno
      muy productivo. 
    </para>
  </sect1>
  <sect1>
    <title>Instalación slash</title>
    <para>
      La instalación de slash ha sido conocida históricamente por su dificultad,
      aunque en las últimas versiones, y sobretodo desde la publicación de las
      primeras versiones 2.x, se ha facilitado mucho su instalación y posterior
      mantenimiento.      
    </para>
    <para>
      La primer necesidad importante que tiene slash es que junto a Apache, necesitamos
      que está incluido el módulo de Perl de Apache. Este módulo permite
      una ejecución muy eficiente de código perl dentro de Apache. En muchas
      distribuciones, no viene por defecto este módulo integrado y en algunas,
      si que existe este módulo empaquetado pero no viene con todas las
      opciones que necesita slash, por lo que es necesario compilar Apache junto
      con mod_perl.
    </para>
    <para>
      Una de las distribuciones en las que es más sencillo instalar slash es Debian.
      Ya tiene de por sí un paquete apache-perl que sirve perfectamente para 
      ejecutar todo el código slash, por lo que gran parte de la instalación
      se centra ya en la instalación de todos los módulos de Perl necesarios junto
      con la necesaria configuración de Apache.
    </para>
    <para>
      pero en Debian aún se ha visto más facilitada la instalación gracias al trabajo
      llevado a cabo dentro de Ándago por el desarrollador de Debian 
      Eric Van Buggenhaut el cual ha realizado una importante labor de empaquetación
      de slash para Debian y ahora su instalación es tan sencilla como:
      <programlisting>
	apt-get install slash
      </programlisting>
      Para ello es necesario añadir dentro de las fuentes del gestor de paquetes
      Debian apt la línea:
      <programlisting>
	deb http://people.debian.org/~ericvb/slash potato main
      </programlisting>
      Además de para Debian Potato, también existe ya la versión de Debian Woody de
      este paquete, que se puede obtener de:
      <programlisting>
	deb http://people.debian.org/~jgb/soft/ debian
      </programlisting>
      No son aún paquetes oficiales, pero ayudan mucho en la instalación de slash.
      Vamos a continuación con la instalación sobre Debian 2.2, conocida como Potato.
      Si se siguen con cuidado los pasos de la misma, se terminará teniendo slash
      instalado dentro de nuestro sistema y funcionando de forma correcta.
      <programlisting>
	linex:/home/linex# apt-get install slash
	Reading Package Lists... Done
	Building Dependency Tree... Done
	The following extra packages will be installed:
	adduser apache-common apache-dev apache-perl expat libapache-dbi-perl
	...
	  mysql-common mysql-server slash 
	1 packages upgraded, 35 newly installed, 0 to remove and 8  not upgraded.
	Need to get 8261kB of archives. After unpacking 23.4MB will be used.
	Do you want to continue? [Y/n]
      </programlisting>
      Como se puede ver en este largo listado de paquetes, las dependencias de slash
      son muchas, por eso veremos luego la gran potencia que finalmente resulta de
      este software, pero gracias a este paquete Debian, todas nos son resueltas de
      forma automática.
    </para>
    <para>
      Tras un periódo de descarga de paquetes, pasaremos a configurar todo lo necesario
      para poner a slash en funcionamiento. Es muy importante ser cuidadosos con la
      instalación de slash, ya que tiene diversos parámetros que afectan mucho
      al resultado final de la instalación.
    </para>
    <para>
      En todo el proceso de instalación, hay un momento en el que se recibe un error.
      Para resolver hay que modificar el fichero /usr/sbin/adduser y modificar la
      primera línea del mismo poniendo:
      <programlisting>
	#!/usr/bin/perl -w -I/usr/share/perl5
      </programlisting>
    </para>
    <para>
      Tras corregir el fallo, volvemos a ejecutar
      <programlisting>
	apt-get install -f
      </programlisting>
      y transcurridos unos cuantos mensajes comenzaremos con la instalación de slash
      que comienza con la pregunta:
      <programlisting>
	Configurando slash (2.2.5-2potato1) ...
	Before running slash code, you'll have to create a web site on your
	system. I can do it for you now. If you are upgrading from a previous
	version of slash, you should answer 'no' to the next question. 
	Do you want me to install a slash site on your system ? [y/N]
      </programlisting>
      a que le deberemos de contestar que sí. Es una pena que aún no esté traducido
      al castellano los mensajes de la instalación así que quizá tengamos que
      tener a mano el manual de la lengua de Shakespeare. A esta primera pregunta
      habrá que contestar que "y" lo que provocará que se cree un sitio web
      en nuestra máquina para slash.
    </para>
    <para>
      La siguiente pregunta que nos formula el instalador es:
      <programlisting>
	In order for slash to function properly we need a mysql database. 
	You can do it by hand or let me do it now. If you already have the 
	database created you can safely answer no, of course. 
	Shall I create a new database now ? [Y/n]
      </programlisting>
      Slash para funcionar necesita una base de datos, MySQL, donde guardar toda la
      información. Debemos de contestar de forma afirmativa para que nos la cree
      el instalador. Pero para poderla crear, el instalador necesita un usuario
      con el que poder acceder a la base de datos.
      <programlisting>
	Provide a name for a virtual user of the Slash site.
	This name is used internally by slash and needn't be a
	real user of the system.
      </programlisting>
      Aquí hay que tener mucho ojo. Este usuario que se nos pide, es un usuario
      virtual que utiliza de forma interna slash, y no es ni un usuario del sistema
      ni un usuario de la base de datos. Es un usuario que utiliza el motor de slash
      para poder diferenciar unos sitios de otros. En este caso, supongamos que vamos
      a crear el portal de contenidos de Todo Linux por lo que a este usuario le vamos
      a llamar "todolinux".
    </para>
    <para>
      Lo siguiente que nos pide el instalar es el nombre de la base de datos
      <programlisting>
	How do you want the slash database of your site to be called ?
      </programlisting>
      para lo que no es mala idea utilizar el nombre "todolinux" de nuevo. Este nombre
      será el de la base de datos, mientras que el otro nombre es el del usuario
      del sistema slash. Vamos poco a poco avanzando.
      <programlisting>
	Provide root's password to mysql databases
	(if you previously created one) []:
      </programlisting>
      Ahora si que se nos pide el usuario con el que se va a acceder al motor de BD, en este
      caso MySQL. Si no teníamos instalado MySQL y se ha instalado de forma automática 
      durante la instalación de slash, el usuario para poder acceder es "root" y por
      defecto no tiene clave por lo que podemos pulsar simplemente a seguir (enter).
    </para>
    <para>
      Hemos introducido el nombre del superusuario para acceder a la base de datos
      pero es muy conveniente tener un usuario, con muchos menos permisos, que se use
      para acceder a la base de datos "todolinux". Este usuario es el que se nos pide a
      continuación:
      <programlisting>
	What user should be used by slash to access the database ? [root]
      </programlisting>
      Si no nos queremos complicar la vida, podemos dejar como usuario al mismo superusuario
      de la base de datos, pero en caso de trabajar con un sistema ya en producción
      y colgado en Internet, es muy recomendable tener usuarios diferentes. Vamos a
      utilizar como usuario de acceso a la base de datos "todolinux" el usuario
      "todobd". Para poder autenticar a este usuario necesitamos una clave:
      <programlisting>
	Provide the access password to the database
	for user todobd:
      </programlisting>
      en donde introduciremos la clave que creamos más conveniente, normalmente
      una combinación de letras y número difícil de deducir sin ninguna regla
      nemotécnica. Y con esto hemos acabado con la parte de la base de datos y pasamos
      ya a la configuración del slash en su parte web.
    </para>
    <para>
      <programlisting>
	In order for the slash code to function properly, we must 
	include the directives of slash in your actual apache config file. 
	Do you want me to do it automatically now ? [Y/n]
      </programlisting>
      En este momento, el instalador es capaz de modificar de forma automática el
      fichero de configuración de Apache para poder dar soporte al nuevo sitio slash. Para
      ello lo que hace es crear un nuevo sitio virtual de Apache, VirtualHost, que será
      el que controle el web slash que estamos añadiendo en este momento. Contestamos
      que "Y" a esta pregunta y llegamos a uno de los pasos más importantes de la 
      instalación:
      <programlisting>
	What is hostname of your Slash site
	(e.g., www.slashdot.org:80)? [linex]
      </programlisting>
      Es fundamental que el nombre que pongamos aquí se pueda resolver a una IP
      en la máquina en la que estemos instalando, y además, que a ser posible 
      sea un nombre nuevo específico para el nuevo sitio que estamos creando. Por
      ello, lo más adecuado para las pruebas iniciales es dar a la dirección local
      "127.0.0.1" que siempre existe en la máquina, el nombre que vayamos a dar
       a nuestro sitio, por ejemplo, "mislash". Con esta IP sólo se podrá acceder
      desde la máquina local al sitio slash, pero veremos que luego es sencillo
      cambiar esta configuración y es siempre válida en cualquier sistema en el
      que se instale slash. Por lo que el contenido del fichero /etc/hosts
      será parecido a
      <programlisting>
	127.0.0.1 linex localhost localhost.localdomain mislash
      </programlisting>
      donde en vez de "linex" aparecerá el nombre de la máquina donde se esté
      instalando slash.
      <programlisting>
	linex:/home/linex# ping mislash
	PING linex (127.0.0.1): 56 data bytes
	64 bytes from 127.0.0.1: icmp_seq=0 ttl=255 time=0.2 ms
	64 bytes from 127.0.0.1: icmp_seq=1 ttl=255 time=0.1 ms
	64 bytes from 127.0.0.1: icmp_seq=2 ttl=255 time=0.1 ms
      </programlisting>
      El "ping" nos muestra claramente que todo ha ido bien. Ahora ha llegado el momento
      de contestar a la anterior pregunta con la respuesta "mislash". Y con ello
      hemos pasado quizá el paso más importante de la instalación.
    </para>
    <para>
      <programlisting>
	What user would you like to run your Slash site as? [nobody]
      </programlisting>
      slash necesita realizar algunas funciones de actualización del sistema. El
      usuario que especifiquemos aquí el que se utilice para realizar dichas
      labores dentro del sistema. El usuario "nobody" en general es una opción
      correcta. A continuación se nos preguntará por el grupo de este usuario,
      que también es conveniente que sea "nogroup". Este grupo por defecto no
      existe en Debian por lo que necesitamos añadir este grupo antes de
      contestar a la siguiente pregunta:
      <programlisting>
	addgroup nogroup
      </programlisting>
      La siguiente pregunta que nos hace el instalador de slash es:
      <programlisting>
	What group would you like to run your Slash site under? [nogroup]
      </programlisting>
      que como hemos comentado, es el grupo correcto. Continuamos con la instalación
      y la pregunta siguiente es:
      <programlisting>
	OK, I am planning on user mislash as the unique name
	for the Slash site.  If this is not ok, you need to fill in
	something else here. [mislash]
      </programlisting>
      Como el nombre que nos muestra es correcto para nuestro sitio, pulsamos
      seguir (enter) para continuar con la siguiente pregunta.
    </para>
    <para>
      <programlisting>
	Which theme do you want to use?
	(*)1.	slashcode "Slashcode.com theme"      
	
	Skipping theme select since you only have one theme!
	Theme selected: slashcode
      </programlisting>
      Por defefecto en slash sólo viene un tema, el del sitio slashcode.com. Como
      veremos en posteriores entregas de esta serie, podemos crear nuestros propios
      temas, pero como en este momento sólo hay uno, se contesta de forma automática
      esta pregunta sin darnos opción.
    </para>
    <para>
      <programlisting>
	Please select which plugins you would like ('*' marks default).
	(*) 1. Admin - "Admin Interface"
	( ) 2. BunchaBlocks - This is a bunch of portald blocks you can add
	( ) 3. CheesyPortal - CheesyPortal is a script to get an overall look at portal boxes
	( ) 4. ForumZilla - "ForumZilla support"
	(*) 5. Hof - "High score stuff"
	(*) 6. Journal - "Journal system for users"
	(*) 7. Messages - "Messaging system"
	(*) 8. PubKey - "Just allows a user's pubkey to be displayed"
	(*) 9. Search - Slash Search is the default search engine for Slash.
	Hit 'a' to select all, otherwise select comma separated numbers or 'q' to quit
    </programlisting>
      Este es otro de los momentos importantes de la instalación aunque en este
      caso nos basta la configuración por defecto. Aquí se nos muestran el conjunto
      de extensiones (plugins) que vienen con slash por defecto. Por ahora vamos a instalar
      los plugins que vienen por defecto. Veremos en futuras entregas también como
      crear nuestros propios plugins y como instalarlos. Ya estamos muy cerca de finalizar
      la instalación. A esta pregunta nos basta con responder "q".
    </para>
    <para>
      Una de las características más potentes de slash es que permite tener varios sitios
      diferentes funcionando con el mismo código slash, el mismo motor de base de datos
      y el mismo servidor de web Apache. Además de esto, nos da la posibilidad de evitar
      el duplicar el código de los servlets (cgi's) Perl utilizando enlaces simbólicos,
      es decir, que en vez de tener una copia de todos los servlets en cada sitio, lo que
      hay en realidad son enlaces simbólicos a los originales. Esto es algo
      que logramos contestando de forma afirmativa a la siguiente pregunta.
      <programlisting>
	Would you like to install all the files as symlinks to the original?  
	(If not, each file will be copied to your Slash directories). [Y]
      </programlisting>
      Contestamos pues que "Y" y ya estamos a punto de terminar. Tan sólo nos resta 
      crear una cuenta inicial de administrador dentro del sistema web de slash.
      <programlisting>
	Create a name for the site's admin account (8 characters
	or less). [nobody] 
      </programlisting>
      Un buen nombre puede ser por ejemplo "admin". Y tras dar este nombre, se nos pedirá
      una clave para poder entrar en el sitio.
      <programlisting>
	Create a password for the site's admin account. ('QUIT' exits):
      </programlisting>
      Ponemos una clave que metemos con cuidado ya que no se nos va a pedir confirmación
      y está será la única cuenta desde la que tengamos permisos totales sobre el
      sitio.
    </para>
    <para>
      Y ha llegado el momento de contestar al última pregunta:
      <programlisting>
	What is the email address of the account?
      </programlisting>
      Es importante que esta cuenta de correo que se nos pide sea válida y que se pueda
      entregar un correo desde la máquina local que estamos instalando a ella.
    </para>
    <para>
      Tras unos instantes de configuración del sistema y de trabajo con el motor de la base
      de datos recibimos el mensaje:
      <programlisting>
	Unless any errors reported themself during the install you should now
	have a slashsite 
	...
	To restart apache do:

	/etc/init.d/apache restart

	Have fun with your new site. You should also consider registering it:

	http://slashcode.com/sites.shtml
      </programlisting>
      Lo que nos indica que todo ha sido instalado de forma correcta, que reiniciemos Apache
      para tener acceso al nuevo sitio y que si procede, registremos nuestro sitio slash
      dentro de la base de datos de sitios que funcionan con slash en 
      "http://slashcode.com/sites.shtml". Ha llegado el momento de acceder a 
      "http://mislash" y disfrutar de nuestro recién instalado slash. Para ello
      <programlisting>
	linex:/usr/lib/perl5/5.005/XML# /etc/init.d/apache start
	Starting web server: apache.
	/usr/sbin/apachectl start: httpd started
      </programlisting>
      La captura de pantalla de nuestro nuevo sitio debería de quedar similar a la siguiente:
      <figure>
	<title>Pantalla de entrada a slash</title>
	<graphic fileref="img/slash.png" format="png"></graphic>
      </figure>      
    </para>
  </sect1>
  <sect1>
    <title>Conclusiones</title>
    <para>
      En esta primera entrega se ha mostrado los conceptos que rodean al
      servidor de contenidos slash, se han descrito sus características
      principales y se ha analizado con detalle el proceso de instalación.
    </para>
    <para>
      Sin duda, algo necesario, pero mucho menos entretenido que lo que vamos a 
      poder hacer a partir de la próxima entrega. No dejéis de leer la serie.
    </para>
  </sect1>
</article>
<!--  LocalWords:  sect workflow variablelist termlength varlistentry
 -->
<!--  LocalWords:  term term listitem ulink url slashdot org webs Slashcode NET
 -->
<!--  LocalWords:  class registered EE trade Zope Midgard itemizedlist plugins
 -->
<!--  LocalWords:  mod perl FIXME seclevel RSS templates Blocks sites Rich Site
 -->
<!--  LocalWords:  Summary
 -->
