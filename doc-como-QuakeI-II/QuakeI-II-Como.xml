<?xml version="1.0" encoding="iso-8859-1" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<article>

<articleinfo>

<title>Quake I&amp;II Mini Como</title>

<author>
<firstname>Álvaro Villalba Poncet, <ulink
url="mailto:alvarovp@mad.servicom.es"
>alvarovp@mad.servicom.es</ulink
></firstname>
</author>

<pubdate>ver 0.7, 22 de Enero de 1999.</pubdate>

<abstract>

<para>
Guia para configurar el Quake I y el II en linux. 
</para>

</abstract>

</articleinfo>

<sect1>
<title>Introducción.</title>

<para>
Actualmente no hay muchos juegos "populares" portados a linux, de hecho 
solo está el doom, el quake (en todas sus versiones) y el InnerWorlds,
pero todo se andará (actualmente hay fabricantes que han dicho que nunca
portarán sus juegos a linux, algún día se comerán sus palabras ... :) ). 
El quake en linux funciona perfectamente, incluso más rápido que en 
windows, además si se quiere montar un server de quake es la plataforma
perfecta, el único problema que puede haber es con las tarjetas de video 
modernas (especialmente con las 3dfx de última generación), ya que no 
todas tienen drivers para linux (pero cada vez son más las soportadas).
</para>

</sect1>

<sect1>
<title>Requisitos.</title>

<sect2 id="soft">
<title>Software.</title>

<para>
Nos hacen falta los ejecutables para linux. Se pueden encontrar en muchos 
sitios , el principal es en idsoftware (<literal remap="tt"><ulink
url="ftp://ftp.idsoftware.com"
>ftp.idsoftware.com</ulink
></literal>) pero este 
server va muy lento, el mejor sitio para bajarse todo lo necesario es la 
página de quake en linux (<literal remap="tt"><ulink
url="http://captured.com/threewave/linux/index.html"
>captured.com/threewave/linux/index.html</ulink
></literal>). Ahí se puede bajar
todo lo necesario sin tener que sumergirse en los oscuros directorios de
idsoftware ... Otro sitio sobre el Quake y Linux es <ulink
url="http://quake.medina.net"
>quake.medina.net</ulink
>. Otros sitios donde se 
puede obtener casi todo el software necesario para el quake son:
</para>

<para>

<itemizedlist>
<listitem>

<para>
<literal remap="tt"><ulink
url="ftp://ftp.cdrom.com"
>ftp.cdrom.com</ulink
></literal>
(muy lento, es mejor el mirror que hay en <literal remap="tt"><ulink
url="ftp://ftp.doc.ic.ac.uk"
>ftp.doc.is.ac.uk</ulink
></literal>).

</para>
</listitem>
<listitem>

<para>
<literal remap="tt"><ulink
url="ftp://ftp.sci.com/quake"
>ftp.sci.com/quake</ulink
></literal>.

</para>
</listitem>
<listitem>

<para>
<literal remap="tt"> <ulink
url="http://www.quake2.com"
>www.quake2.com</ulink
></literal>

</para>
</listitem>

</itemizedlist>

</para>

<para>
Para descomprimir un fichero <literal remap="tt">tgz</literal> o <literal remap="tt">tar.gz</literal> ponemos <literal remap="tt">tar
zxfv nombre_del_fichero</literal>.
</para>

</sect2>

<sect2>
<title>Hardware:</title>

<para>
Los que pide el propio juego, osea, una tarjeta de video y un Pentium a 90
(yo he visto el quake corriendo en un 486 bajo linux y funcionaba, así que
todo es cuestión de probar ;) ). 
</para>

<sect3 id="video">
<title>Configuración de la tarjeta de video.</title>

<para>
Se puede jugar al quake desde las X o desde la SVGA, recomiendo la SVGA
porque es mas rápida, pero si es un servidor con varios usuarios
recomiendo la versión de las X (principalmente porque para correr la
versíon SVGA hace falta que el ejecutable sea setuid root, con los
consiguientes riesgos de seguridad que esto conlleva), pero cada uno que
use la que más le guste ...
</para>

<para>
Si vas a jugar en las X tendrá que tenerlas configuradas (cualquier
duda sobre cómo hacerlo mirela en el XFree86-Como)
</para>

<para>
Para la SVGA normalmente no hay que tocar nada, el archivo de 
configuración está en <literal remap="tt">/etc/vga/libvga.config</literal> (En RedHat) o en
<literal remap="tt">/etc/libvga.config </literal> (Slack). Si algo no va bien con la vga tendrá
que editar el fichero y poner los parámetros de su tarjeta (tipo de
chipset, RamDac, etc) y del monitor (mírelas en los manuales del
ordenador).
</para>

</sect3>

<sect3 id="i-3dfx">
<title>Configuración de tarjetas aceleradoras.</title>

<para>
Lo primero que necesitaremos es una tarjeta aceleradora; hasta la fecha solo
están soportadas las basadas en el chip <literal remap="tt">3dfx</literal> (en el momento de escribir
esto estaban portando los drivers para la <literal remap="tt">banshee</literal>). Para poder usar una
3dfx necesitaremos bajarnos los siguientes ficheros:

<itemizedlist>
<listitem>

<para>
<literal remap="tt">glide</literal> son las librerías que acceden directamente a la tarjeta, se
pueden obtener de <ulink
url="http://glide.xxedgexx.com/3DfxRPMS.html"
>http://glide.xxedgexx.com/3DfxRPMS.html</ulink
> , ahí podemos encontrar
versiones en formato <literal remap="tt">rpm</literal> (para RedHat, OpenLinux, SuSe) así como para
glibc (RedHat 5.X, debian 2.X, SuSe 6.X) o, libc5. En esta página se puede
obtener tambien información sobre las tarjetas soportadas. Necesitaremos como
mínimo dos archivos:

<orderedlist>
<listitem>

<para>
<literal remap="tt">Glide2x_SDK-2.1</literal> es el kit de desarrollo de la librería glide.
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">Glide</literal> son las librerías propiamente dichas, dependiendo del tipo de
3dfx que tengamos necesitaremos:

<orderedlist>
<listitem>

<para>
<literal remap="tt">Glide_VG-2.46</literal> para las tarjetas <literal remap="tt">voodoo 1</literal>.
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">Glide_VR-2.46</literal> para las tarjetas <literal remap="tt">voodoo rush</literal>.
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">Glide_V2-2.51</literal> para las tarjetas <literal remap="tt">voodoo 2</literal>.
</para>
</listitem>

</orderedlist>

</para>
</listitem>

</orderedlist>

</para>
</listitem>
<listitem>

<para>
<literal remap="tt">Mesa</literal> es la versión <emphasis remap="it">free</emphasis> de las librerías <literal remap="tt">OpenGL</literal>, se pueden 
obtener de <ulink
url="http://www.ssec.wisc.edu/~brianp/Mesa.html"
>http://www.ssec.wisc.edu/~brianp/Mesa.html</ulink
>. La última versión estable
es la 3.0 y de desarrollo la 3.1, es recomendable bajarse la última estable
(en este caso la 3.0). De ahí cojeremos dos ficheros:

<orderedlist>
<listitem>

<para>
<literal remap="tt">MesaLib</literal> las librerías propiamente dichas.
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">MesaDemos</literal> demos de la librería.
</para>
</listitem>

</orderedlist>

Existen binarios de las librerías en todos los formatos, pero en este caso
necesitaremos los fuentes porque las tenemos que recompilar.
</para>
</listitem>

</itemizedlist>

</para>

<para>
Una vez obtenidos los ficheros necesarios lo primero que instalaremos son las
<literal remap="tt">glide</literal>, si nos las hemos bajado en rpm lo haremos con 

<screen>
[root@unsCAred][~]# rpm -Uhv Glide_V[tipo de tarjeta]-[versión].rpm
 
</screen>

Si no disponemos del programa rpm podemos usar la utilidad <literal remap="tt">rpm2cpio</literal> de la
siguiente manera (desde el directorio / para que nos cree bien los directorios
necesarios):

<screen>
[root@unsCAred][/]# cd /
[root@unsCAred][/]# rpm2cpio archivo.rpm | cpio -i --make-directories
[root@unsCAred][/]# ldconfig
</screen>

Para comprobar que las librerías están correctamente instaladas ejecutamos en
el shell el comando:

<screen>
[root@unsCAred][~]# ldconfig -p|grep libglide
[root@unsCAred][~]# ldconfig -p|grep libtexus
</screen>

</para>

<para>
Ahora instalamos el fichero <literal remap="tt">Glide2x_SDK-2.1</literal>, del que solo necesitamos los
includes
Si tenemos rpm ponemos 

<screen>
[root@unsCAred][~]# rpm -Uhv Glide2x_SDK-2.1-3.i386.rpm
</screen>

Si no disponemos de rpm usamos nuevamente el rpm2cpio de la siguiente manera:

<screen>
[root@unsCAred][~]# cd /tmp
[root@unsCAred][/tmp]# rpm2cpio Glide2x_SDK-2.1-3.i386.rpm | cpio -i --make-directories
[root@unsCAred][/tmp]# cd /usr/local/
[root@unsCAred][/usr/local]# mkdir glide
[root@unsCAred][/usr/local]# cd glide
[root@unsCAred][/usr/local/glide]# mkdir include
[root@unsCAred][/usr/local/glide]# cd include
[root@unsCAred][/usr/local/glide/include]# cp /tmp/include/* .
[root@unsCAred][/usr/local/glide/include]# ls
3dfx.h      glidesys.h  gump.h      sst1vid.h
glide.h     glideutl.h  linutil.h   texus.h
</screen>

En caso de haber usado el rpm tenemos que hacer un enlace simbólico ya que las
librerías Mesa buscarán la librería <literal remap="tt">libglide</literal> en <literal remap="tt">/usr/local/glide/lib</literal>, lo hacemos con lo siguiente:

<screen>
[root@unsCAred][~]#cd /usr/local/glide
[root@unsCAred][/usr/local/glide]# mkdir lib
[root@unsCAred][/usr/local/glide]# cd lib
[root@unsCAred][/usr/local/glide/lib]# ln -s /usr/lib/libglide2x.so .
[root@unsCAred][/usr/local/glide/lib]# ls
libglide2x.so@
</screen>

</para>

<para>
Ahora que ya hemos instalado correctamente las librerías glide nos vamos a por
las Mesa. Haremos lo siguiente:

<screen>
[root@unsCAred][~]# cd /tmp
[root@unsCAred][/tmp]# tar zxfv MesaLib*
[···]
[root@unsCAred][/tmp]# tar zxfv MesaDemos*
[···]
[root@unsCAred][/tmp]# cd Mesa-3.0
[root@unsCAred][/tmp/Mesa-3.0]# make realclean
</screen>

Ahora es cuando nos leemos el README que viene con las librerías, una vez
hecho eso las compilamos, dependiendo del tipo de tarjeta aceleradora que
tengamos pondremos lo siguiente:

<itemizedlist>
<listitem>

<para>
<literal remap="tt">make linux-386-opt-glide</literal> si tenemos una voodoo 1.
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">make linux-386-opt-V2-glide</literal> si tenemos una voodoo 2.
</para>
</listitem>
<listitem>

<para>
 si tenemos una voodoo rush podemos hacer uno de estos tres:

<orderedlist>
<listitem>

<para>
<literal remap="tt">make linux-glide</literal> para linux glide.
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">make linux-386-glide</literal> para micros i386.
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">make linux-386-glide-mits</literal> micros i386 con multiproceso.
</para>
</listitem>

</orderedlist>

</para>
</listitem>

</itemizedlist>

Despues de un rato y si no hemos tenido ningun problema las librerías ya
estarán compiladas, ahora lo único que queda es instalarlas. Si ya las
teníamos instaladas antes lo único que tenemos que hacer es copiar la librería
nueva que hemos generado, para eso hacemos:

<screen>
[root@unsCAred][/tmp/Mesa-3.0]# cd lib
[root@unsCAred][/tmp/Mesa-3.0/lib]# cp -a * /usr/lib
</screen>

He puesto el <literal remap="tt">/usr/lib</literal> porque es donde las tenía yo instaladas, si ya
las teníamos en <literal remap="tt">/usr/local/lib</literal> las copiaremos ahí.
Si no las teníamos instaladas antes lo hacemos poniendo: 

<screen>
[root@unsCAred][/tmp/Mesa-3.0]# make install
</screen>
 
</para>

<para>
Para concluir, ejecutamos como root el comando <literal remap="tt">ldconfig</literal> y ya tendremos
todo lo necesario para que funcione la 3dfx (bueno, aún nos faltan los
ejecutables para el quake, el quakeworld y el quake2).
</para>

</sect3>

<sect3 id="raton">
<title>Configuración del ratón.</title>

<para>
Para que funcione el ratón tenemos que editar otra vez el fichero de
configuración de la vga (ver <xref linkend="video"/>) y poner el tipo de ratón que tenemos. Es necesario
tener el <literal remap="tt">gpm</literal> funcionando, que es el que se encarga de controlar el
ratón en la consola. Si usa el <literal remap="tt">gpm</literal> con el parámetro <literal remap="tt">-R</literal> es
recomendable cambiarlo antes de jugar con un script o algo parecido, ya
que se nota bastante la velocidad de respuesta del mouse. 
</para>

<para>
En el quake se puede especificar el dispositivo en el que se encuentra el
ratón mediante los parámetros <literal remap="tt">-mdev &lsqb;device&rsqb;</literal> y la velocidad 
con <literal remap="tt">-mrate &lsqb;speed&rsqb;</literal>. Los parámetros por defecto son 
<literal remap="tt">/dev/mouse</literal> para el <literal remap="tt">-mdev</literal> y <literal remap="tt">1200</literal> para el <literal remap="tt">-mrate</literal>. 
</para>

<para>
Lo errores con el ratón normalmente se deben a fallos en la configuración 
del gpm o porque no se ha especificado el tipo de ratón en el
<literal remap="tt">libvga.config</literal>. Además es muy común que cuando se está jugando al
quake y se cambia a otra consola el ratón deje de responder, esto se puede
arreglar de dos maneras:
</para>

<para>

<itemizedlist>
<listitem>

<para>
 Reiniciando el gpm (en RedHat con <literal remap="tt">/etc/rc.d/init/gpm restart</literal>)
</para>
</listitem>
<listitem>

<para>
 Poniendo <literal remap="tt">echo "*n" &#62;/dev/mouse</literal> en una consola.
</para>
</listitem>

</itemizedlist>

</para>

<para>
Para cualquier duda o problema con un ratón de tres botones es recomendable 
consultar el <literal remap="tt">Raton_3_botones-Como</literal>.
</para>

</sect3>

<sect3>
<title>Configuración de la tarjeta de sonido.</title>

<para>
No es extrictamente necesaria, pero jugar al quake sin sonido es como una 
primavera sin flores ;) . Para configurar la tarjeta de sonido consultar
el <literal remap="tt">Sonido-Como</literal>.) Para jugar sin sonido ponemos el parámetro 
<literal remap="tt">-nosound</literal>. Además de este hay otros parametrós que son:
</para>

<para>

<itemizedlist>
<listitem>

<para>
<literal remap="tt">sndbits</literal> &lsqb;8 or 16&rsqb;
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">sndspeed &lsqb;speed&rsqb;</literal> (8000, 11025, 22051 and 44100), por
defecto 11025.
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">sndmono</literal>.
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">sndstereo</literal> (por defecto, siempre que sea posible).

</para>
</listitem>

</itemizedlist>

</para>

<para>
En el quake2 he experimentado problemas con el OSS y el driver para mi
tarjeta (una AWE32), ya que cuando se reinicia el sistema de sonido deja 
de funcionar (esto no ocurre con el driver normal del kernel). El problema
estaba en el compilador, si está usando el <literal remap="tt">OSS</literal>, el <literal remap="tt">egcs</literal> o el
<literal remap="tt">pgcc</literal> como compilador y un kernel de la serie <literal remap="tt">2.0.X</literal> puede que tenga
problemas, la solución pasa por instalarse el gcc-2.7.2.3 y recompilar el
sndconfig con él (además los kernels de esa versión es recomnedable
compilarlos con el <literal remap="tt">gcc</literal> y no con el <literal remap="tt">egcs/pgcc</literal>).
</para>

</sect3>

</sect2>

</sect1>

<sect1>
<title>Quake :</title>

<para>
Bueno, se acabaron las configuraciones, ahora toca jugar :)
</para>

<para>
Necesitamos los archivos <literal remap="tt">pak0.pak</literal> (para la share) y el <literal remap="tt">pak0.pak</literal>
y <literal remap="tt">pak1.pak</literal> para la registrada. Si tenemos el quake ya instalado en 
otra partición (por ejemplo en windows) no hace falta copiarlos a la 
partición linux, podemos usar enlaces simbólicos, lo único que tenemos que 
hacer es montar la particion de windows, por ejemplo en <literal remap="tt">/mnt/dos</literal>. 
</para>

<para>
Vamos a instalar el quake en <literal remap="tt">/usr/local/games/quake</literal> (se puede
instalar en cualquier sitio). 
</para>

<para>

<itemizedlist>
<listitem>

<para>
Lo primero es crear ese directorio (<literal remap="tt">mkdir /usr/local/games/quake</literal>). Un vez hecho eso creamos el directorio 
<literal remap="tt">id1</literal> (a partir de ahora todos los directorios van referenciados al
<literal remap="tt">/usr/local/games/quake</literal>) dentro del directorio quake.

</para>
</listitem>
<listitem>

<para>
Copiamos el <literal remap="tt">pak0.pak</literal> y el <literal remap="tt">pak1.pak</literal> al directorio <literal remap="tt">id</literal>
(si lo hacemos con enlaces simbólicos, y suponiendo que tenemos la
partición donde está el <literal remap="tt">pak0.pak</literal> y el <literal remap="tt">pak1.pak</literal> montada en
<literal remap="tt">/mnt/dos</literal> ponemos como root:


<screen>
ln -s /mnt/dos/&lsqb;ruta_al_quake&rsqb;/quake/id/pak* /usr/local/games/quake/id
</screen>


</para>
</listitem>
<listitem>

<para>
Descomprimimos el ejecutable para linux en
<literal remap="tt">/usr/local/games/quake</literal>.

</para>
</listitem>
<listitem>

<para>
Y ahora ... a jugar, ya no hace falta nada más ... vamos al 
directorio <literal remap="tt">/usr/local/games/quake</literal> y ponemos <literal remap="tt">./squake</literal> (o 
<literal remap="tt">xquake</literal> si estamos en las X) y cruzamos los dedos. Si todo a ido bien 
ya está funcionando el quake. Si usamos una tarjeta aceleradora ejecutaremos 
<literal remap="tt">./glquake</literal>.
</para>
</listitem>

</itemizedlist>

</para>

<para>
Para cambiar la resolución de la pantalla se usan dos comandos, nos 
ponemos en la consola del quake y ponemos <literal remap="tt">vid_describemodes</literal> que nos 
da una descripción de todos los modos de video posible (cada uno con un
número).
</para>

<para>
Ahí luego ponemos <literal remap="tt">vid_mode N</literal> siendo <literal remap="tt">N</literal> el número que corresponde
a la resolución que queremos. Esto no funciona con las tarjetas aceleradoras,
para cambiar la resolución en ellas hay que especificarlo en el arranque
mediate los parámetros <literal remap="tt">-width ANCHO -height ALTO</literal>, sino arrancará por
defecto en 640x480 (otra resolución muy utilizada es 512x384).
</para>

<para>
Si queremos medir los <emphasis remap="it">fps</emphasis> a una resolución podemos hacerlo con
<literal remap="tt">timedemo demo1</literal> desde consola, que intenta ejecutar lo más rápido
posible la <literal remap="tt">demo1</literal> y nos dice los <emphasis remap="it">fps</emphasis>.
</para>

<para>
Si queremos comprobar los <emphasis remap="it">fps</emphasis> durante el juego lo podemos hacer
con <literal remap="tt">timerefresh</literal> (pero depende de la parte de la fase en la que 
nos encontremos).
</para>

<sect2>
<title>Principales problemas:</title>

<para>
Pueden ser:
</para>

<para>

<itemizedlist>
<listitem>

<para>
 La tarjeta de sonido no está configurada y hemos intentado arrancar 
con sonido. Solución: arrancamos con <literal remap="tt">./squake -nosound</literal>.

</para>
</listitem>
<listitem>

<para>
 No tenemos puesto el <literal remap="tt">HOSTNAME</literal>. Solución: editamos el fichero 
<literal remap="tt">/etc/hosts</literal> y añadimos el nombre de nuestra máquina, por ejemplo:


<screen>
127.0.0.1       localhost	localhost.localdomain 	     unsCAred
</screen>


y nos aseguramos de que en <literal remap="tt">/etc/HOSTNAME</literal> pone unsCAred (en mi 
caso claro ;) )

</para>
</listitem>
<listitem>

<para>
<literal remap="tt">can't get I/O permisions</literal>. El squake necesita ser
<emphasis remap="it">setuid root</emphasis> , ejecutamos como root 


<screen>
chown root.root squake
chmod 4755 squake/ 
</screen>


(No me responsabilizo de nada que pase por tener el ejecutable 
<emphasis remap="it">setuid</emphasis>) (No se asuste!!!, esto tiene problemas de seguridad, si es la
máquina de casa no se te va a romper el ordenador ni nada parecido,
simplemente, la svga no es muy segura en cuanto a <emphasis remap="it">seguridad del 
sistema</emphasis> se refiere).

</para>
</listitem>
<listitem>

<para>
No nos arranca en las X. Solución arrancamos el servidor a 8 bits de
profundidad de color con (<literal remap="tt">startx -bpp 8</literal>).

</para>
</listitem>

</itemizedlist>

</para>

</sect2>

<sect2>
<title>Juego en Red (Quake World).</title>

<para>
El quake es un buen juego, pero cuando de verdad sorprende y crea adicción 
es cuando se juega en red. No es lo mismo matar a un monstruo en mitad de 
un nivel que a tu amigo <emphasis remap="it">pukka</emphasis> (con lo segundo disfrutas ;) ).
</para>

<para>
Cambia totalmente tu visión del juego y la manera de jugar, los 
movimientos se aceleran en un 200%. Para jugar en red lo único que
necesita es una conexión a internet o a una LAN. 
</para>

<para>
En la página de quake en linux ( ver <xref linkend="soft"/>) se 
puede encontrar un ejecutable que se llama <literal remap="tt">qwcl</literal>. Esto es el cliente
de QuakeWorld, que no es más que una mejora de la engine de red del quake 
(solo sirve para jugar en red) con algunos añadidos, como el poder 
"cambiar" de piel o uniforme.
</para>

<para>
Se puede jugar en red con el quake normal, pero la mejora con el <emphasis remap="it">qw</emphasis> es 
muy notable, de hecho, es muy raro encontrar servers de quake normal en 
internet, lo normal es que sean de quakeworld. 
</para>

<para>
Una herramienta muy útil para jugar en internet es el <literal remap="tt">qspy</literal> o el 
<literal remap="tt">quickspy</literal> (para consola) que consiste en un programa que localiza 
servers de quake world y nos dice cuantas personas hay, el ping, etc. 
</para>

<para>
Hace poco ha salido el <literal remap="tt">xqf</literal> que es un magnífico interface para el
<literal remap="tt">qspy</literal> hecho con gtk (para las X), se puede bajar de <literal remap="tt"><ulink
url="http://www.botik.ru/~roma/quake"
>www.botik.ru/~roma/quake</ulink
></literal>
</para>

<para>
Para instalar el qw lo único que hay que hacer es descomprimir el archivo 
<literal remap="tt">qwcl</literal> en el directorio <literal remap="tt">/usr/local/games/quake</literal> y poner 
<literal remap="tt">./qwcl +connect IP</literal> siendo IP la dirección en donde queremos jugar
(ver <xref linkend="servers"/>).
</para>

<para>
Lo mejor es tener la última versión del qw (actualmente la 2.30) y la 
anterior ya que algunos server no se han actualizado aún.
</para>

<para>
Si se tiene una tarjeta aceleradora necesitará el <literal remap="tt">glqwcl</literal>. Para indicarle
la resolución de pantalla se hace como en el <literal remap="tt">glquake</literal> mediante los
parámetros <literal remap="tt">-width ANCHO -height ALTO</literal>.
</para>

<para>
El parámetro <literal remap="tt">rate XXXX</literal> controla el numero de <emphasis remap="it">bps</emphasis> que recibimos 
del servidor además del número de <emphasis remap="it">fps</emphasis>. Para un modem de 33.6 el 
parámetro óptimo es de 3000, para un 28.8 de 2500. 
</para>

</sect2>

<sect2 id="ads">
<title>Añadidos al quake.</title>

<para>
Uno de los principales factores que han hecho al quake un juego "de culto" 
es ademas de su excelente modo de red el que se le puedan añadir 
variaciones fácilmente. 
</para>

<para>
Puede añadirle nuevas armas, nuevos montruos, nuevos niveles, incluso 
nuevos "juegos". El más popular es el <literal remap="tt">Capture the Flag</literal>, que divide a
todos los jugadores en dos equipos (es para jugar en red) y le da a cada
uno una bandera y una base, la misión de cada equipo es capturar la
bandera del otro y llevarla a su base, siempre y cuando no lo capturen la
suya. La mayoría de los patches o modificaciones se instalan igual.
Supongamos el ctf. Los pasos para instalarlo son.
</para>

<para>

<orderedlist>
<listitem>

<para>
Se crea el directorio <literal remap="tt">/usr/local/games/quake/ctf</literal>
</para>
</listitem>
<listitem>

<para>
Se descomprimen los ficheros del ctf en ese directorio.

</para>
</listitem>
<listitem>

<para>
Desde el directorio quake se pone <literal remap="tt">./squake -game ctf</literal>.
</para>
</listitem>

</orderedlist>

</para>

<para>
Sin duda alguna la mejor variación que se ha hecho del quake son los bots, 
osea robots dotados de inteligencia artificial para simular el juego en 
red con <emphasis remap="it">humanos</emphasis>. Los mejores son el omicron (por lo menos es el que
más me gusta a mi ;) ) y el reaperbot (una lista completa de los bots, con
puntuaciones a cada uno y comentarios se puede encontrar en <literal remap="tt"><ulink
url="http://www.ionet.net/&#732;mimpchnk"
>www.ionet.net/&#732;mimpchnk</ulink
></literal>)
</para>

<para>
Otra variación muy interesante es el <literal remap="tt">Team Fortress</literal> que se puede 
encontrar en <literal remap="tt"><ulink
url="http://www.planetfortress.com/teamfortress/"
>www.planetfortress.com/teamfortress</ulink
>&#62;</literal>. Es básicamente el
<literal remap="tt">ctf</literal> solo que podemos elegir distintos <emphasis remap="it">caracteres</emphasis> cada uno con
funciones y armas diferentes. En este mod es donde menos importa las
diferencias de ping y donde más se juega en equipo.
</para>

<para>
El <literal remap="tt">Rocket Arena</literal> es otra variación del quake, el argunmento es muy simple,
<emphasis remap="it">dos entran, uno sale</emphasis>, osea, son combates uno contra uno en mapas
especiales, los dos jugadores salen con todas las armas y armaduras y el que
mate al otro se queda y sigue jugando contra el siguiente contrincante.
Tambien se pueden configurar los servidores para poder jugar por equipos. Se
puede obtener de <ulink
url="http://www.planetquake.com/servers/arena/"
>http://www.planetquake.com/servers/arena/</ulink
>.
</para>

</sect2>

</sect1>

<sect1>
<title>Quake II</title>

<para>
Para jugar al quake2 lo único que hace falta es el cd y el ejecutable,
osea que aunque tu disco duro esté lleno con un poco más de 800k que es lo
que ocupa el ejecutable puedes jugar. Lo único que hay que hacer es lo 
siguiente:
</para>

<para>

<itemizedlist>
<listitem>

<para>
Lo primero, creamos un directorio <literal remap="tt">/usr/local/games/quake2</literal>
(por ejemplo) y dentro de este un directorio <literal remap="tt">baseq2</literal>.

</para>
</listitem>
<listitem>

<para>
Copiamos el fichero <literal remap="tt">/mnt/cdrom/Install/Data/baseq2/pak0.pak</literal>
a este directorio. Si se quiere jugar sin copiarlo se hace un enlace
simbólico con 


<screen>
ln -s /mnt/cdrom/Install/Data/baseq2/pak0.pak /usr/local/games/quake2/baseq2
</screen>


Atención que el <emphasis remap="it">ficherito</emphasis> sólo ocupa 160 megas ;).

</para>
</listitem>
<listitem>

<para>
Luego creamos el directorio <literal remap="tt">players</literal> dentro del <literal remap="tt">baseq2</literal>
y los directorios <literal remap="tt">male</literal> y <literal remap="tt">female</literal> dentro de este (osea que queda
algo así:


<screen>
	quake2---|-baseq2---|-players---|-male
					|-female
</screen>

</para>
</listitem>
<listitem>

<para>
Compiamos todos los ficheros que hay en 
<literal remap="tt">/mnt/cdrom/Install/Data/baseq2/players/male</literal> en <literal remap="tt">male</literal> y los
del <literal remap="tt">female</literal> en <literal remap="tt">female</literal>.

</para>
</listitem>
<listitem>

<para>
Descomprimimos el <literal remap="tt">quake2-3.20-i386-unknown-linux2.0.tar.gz</literal> en
el directorio <literal remap="tt">quake2</literal>.
</para>
</listitem>

</itemizedlist>

</para>

<para>
Y listo, ya podemos jugar. 
</para>

<para>
Si no tiene la librerías <literal remap="tt">MesaGL</literal> instaladas tendrá que copiar la que
viene con el ejecutable a <literal remap="tt">/usr/local/lib</literal> (por ejemplo) y poner
<literal remap="tt">ldconfig</literal> como root (tiene que ser la version 2.6beta3 como mínimo) e
instalar las librerias <literal remap="tt">glide</literal> si va a usar una 3dfx (ver <xref linkend="i-3dfx"/>). 
</para>

<para>
Si se va a jugar en la svga el fichero <literal remap="tt">quake2</literal> tiene que estar
<literal remap="tt">setuid root</literal> (con el ejecutable vienen un script para poner bien los
permisos), simplemente ponemos <literal remap="tt">./fixperms.sh</literal> como root en el
directorio <literal remap="tt">quake2</literal>).
</para>

<para>
Para arrancarlo usamos:
</para>

<para>

<screen>
	./quake2 +set vid_ref soft (para la svga)
        ./quake2 +set vid_ref softx (para las X)
	./quake2 +set vid_ref gl (para jugar con 3dfx)
	./quake2 +set vid_ref xgl (soporte para OpenGL,solo funciona en las X)
	./quake2.3dfxgl (para usar el mini-port del OpenGL, solo en sistemas
con glibc, es decir RedHat 5.X o debian 2.0)
</screen>

Eso solo se hace la primera vez, luego con poner <literal remap="tt">./quake2</literal> sirve.
</para>

<sect2>
<title>Juego en Red</title>

<para>
Para jugar en red arrancamos el quake2, vamos al <literal remap="tt">menu multiplayer</literal> y
le damos a <literal remap="tt">join network game</literal>.
</para>

<para>
Hay dos opciones, <literal remap="tt">server list</literal>, <literal remap="tt">update server list</literal> y luego una
lista. Le damos a <literal remap="tt">server list</literal> y añadimos las direcciones de servers
que queramos , luego le damos a <literal remap="tt">update server list</literal> y nos saldrán los
servers con la información en la lista, colocado por ping, de menor a
mayor.
</para>

<para>
Tambien puedemos jugar poniendo <literal remap="tt">+connect IP</literal> desde la consola del
quake2 (que sale dandole a la tecla <literal remap="tt">º</literal>). Previamente habremos
configurado nuestro jugador en <literal remap="tt">player config</literal> (el nombre, el modelo,
la <emphasis remap="it">skin</emphasis>, el tipo de conexión y las opciones de descarga que se usan
para bajarse <emphasis remap="it">skins</emphasis>, mapas, sonidos y demás cosas de los servidores).
</para>

<para>
La mayoria de los servers usan lo mapas de deathmatch (q2dm*). En el quake 
venían en el cd, pero en el quake2 salieron después con lo que si queremos
jugar en internet estamos obligados a bajárnoslos.
</para>

<para>
Los mapas vienen en la versión 3.13, ocupan unos 10 megas, ver <xref linkend="soft"/>, que además del ejecutable traen un
<literal remap="tt">pak1.pak</literal> con los mapas de deathmatch).
</para>

<para>
Se instalan descomprimiendo el archivo en el directorio quake2, pero hay
que recordar que tenemos que instalar luego la versión 3.20 que es la que
usan los servidores (esta es la última versión que ha salido hasta la
fecha, es recomendable tener siempre la última versión y algunas veces
necesario :) ).
</para>

</sect2>

<sect2>
<title>Principales Problemas</title>

<para>
Aparte de los del quake uno (que tambien pasan aquí) un problema del quake
2 es:
</para>

<para>

<itemizedlist>
<listitem>

<para>
<literal remap="tt">Cuando juego como usuario y me conecto a un server el programa
termina ...</literal>. Este es un problema de permisos, con una mala solución ...
cuando juega en servers con modificaciones (como el <emphasis remap="it">ctf2</emphasis> o el
<emphasis remap="it">Lithium II</emphasis>) al conectar se reinicia el sistema de video, y si no esta
como root el quake2 "suelta" la id del root después de iniciar el sonido y
el vídeo y se produce el problema de I/O perm. La única manera de que esto
no pase es jugando como root o usando <literal remap="tt">sudo</literal>.

</para>
</listitem>

</itemizedlist>

Nota: para jugar al quake2 en red NO necesita tener el Cd del quake, sólo
tiene que tenerlo instalado (por supuesto, si está jugando desde el cd
tendrá que meterlo ;) ).
</para>

</sect2>

<sect2>
<title>Principales modificaciones.</title>

<para>
Al igual que para quake, para quake 2 hay muchas modificaciones, la más
extendida es el <emphasis remap="it">Lithium II</emphasis>, que añade nuevas funcionalidades al quake
(como runas que te dan distintos poderes o el "hook"), de hecho la mayor 
parte de los servidores usan el <emphasis remap="it">Lithium II</emphasis>, pero para jugar en ellos
no hace falta ningun fichero extra. 
</para>

<para>
Si queremos usar bots como en el quake los únicos que conozco que 
funcionen en linux son los eraser (ver la url que hay en <xref linkend="ads"/>) pero consumen muchos recursos (aún así se
pueden usar).
</para>

<para>
Otra modificación que está sustituyendo al ctf2 es el lmctf que es una
variación de este con mapas más grandes.
</para>

<para>
El equivalente al <literal remap="tt">Team Fortress</literal> del quake2 se llama <literal remap="tt">Weapons Factory</literal>,
que se puede obtener de <ulink
url="http://www.captured.com/weaponsfactory/"
>http://www.captured.com/weaponsfactory/</ulink
>.
</para>

<para>
El <literal remap="tt">Rocket Arena 2</literal> tambien está disponible y se puede bajar de la misma
página que el <literal remap="tt">Rocket Arena</literal> para quake (ver <xref linkend="ads"/>.
</para>

</sect2>

</sect1>

<sect1>
<title>Cómo montar un server dedicado.</title>

<para>
Si tiene una conexión permanente a Internet, ¡¡¡contribuya a la causa y
monte un server de quake !!!
</para>

<sect2>
<title>Quake</title>

<para>
Para montar un server de quake dedicado solo necesitamos los pak's y por 
supuesto el ejecutable (que se llama
<literal remap="tt">unixded-1.0-i386-unknown-linux2.0.tar.gz</literal>). Lo ejecutamos (se 
recomienda usar el <literal remap="tt">screen</literal> y ponerlo en una consola <emphasis remap="it">detached</emphasis>) y
listo.
</para>

<para>
El <literal remap="tt">screen</literal> lo puede encontrar en <literal remap="tt"><ulink
url="ftp://prep.ai.mit.edu/pub/gnu"
>prep.ai.mit.edu/pub/gnu</ulink
></literal>
Lo único que sale al arrancar un server dedicado es una consola de texto.
</para>

</sect2>

<sect2>
<title>QuakeWorld.</title>

<para>
Para montar un server de quake world necesitamos el fichero
<literal remap="tt">qwsv2.30-i386-unknown-linux2.0.tar.gz</literal>&#62;.
</para>

<para>
Una modificación muy interesante para montar un servidor es el <literal remap="tt">Kombat
Teams</literal>, que ofrece una serie de posibilidades a los usuarios como poder
cambiar el mapa, fijar el tiempo, el límite de frags, etc. Se puede bajar de 
<ulink
url="http://www.demolition.org/k/"
>http://www.demolition.org/k/</ulink
>.
</para>

</sect2>

<sect2>
<title>Quake 2</title>

<para>
Aquí no necesitamos nada nuevo, solamente poner <literal remap="tt">./quake2 +set
dedicated 1 +exec server.cfg</literal>. En <literal remap="tt">server.cfg</literal> ponemos los mapas
que queremos cargar y demás cosas, recordar que si no ponemos la linea
<emphasis remap="it">map q2dm1</emphasis>, (por ejemplo) no se cargará ningun mapa. Igualmente se
recomienda se usar el <literal remap="tt">screen</literal>.
</para>

</sect2>

</sect1>

<sect1>
<title>Problemas con las tarjetas aceleradoras.</title>

<para>
Hay una página con una faq muy completa sobre las 3dfx en <ulink
url="http://www.voodooextreme.com/3Fingers"
>www.voodooextreme.com/3Fingers</ulink
>.
Tambien hay un programa llamado <literal remap="tt">GlideControl</literal> disponible en <ulink
url="http://www.ling.ed.ac.uk/~oliphant/gc"
>http://www.ling.ed.ac.uk/~oliphant/gc</ulink
> muy útil para configurar los
parámetros de las 3dfx.
Los problemas más comunes suelen ser:
</para>

<para>

<itemizedlist>
<listitem>

<para>
 Los usuarios no pueden usar la tarjeta aceleradora: Esto se puede
solucionar instalando el <emphasis remap="it">Device3Dfx</emphasis>, que es un paquete que nos crea un
dispositivo <literal remap="tt">/dev/3dfx</literal> y mediante la inserción de un módulo en el
kernel (<literal remap="tt">3dfx</literal>) permite que los usuarios puedan acceder a la tarjeta
aceleradora. Asegurese si lo instala de que los permisos de <literal remap="tt">/dev/3dfx</literal>
están correctamente puestos ( ejecute <literal remap="tt">chmod  666 /dev/3dfx </literal> ). Este
paquete se puede encontrar en <ulink
url="http://glide.xxedgexx.com/3DfxRPMS.html"
>http://glide.xxedgexx.com/3DfxRPMS.html</ulink
>.
</para>
</listitem>
<listitem>

<para>
 Cuando ejecuto el glquake me da un <emphasis remap="it">core dump</emphasis>:. El quake2 y el
glqwcl están disponibles para glibc, sin embargo el glquake no, esto crea
bastantes problemas a la hora de hacerlo funcionar. Si tiene una voodoo2 en
principio no debería tener problemas porque el propio paquete del Glide_V2
trae además de las versiones de las librerías para glibc las de libc5 (que se
instalan en <literal remap="tt">/usr/i486-linux-libc5/lib</literal>), sin embargo el paquete de la
voodoo 1 no las trae, con lo que puede que tenga que bajarse la versión para
libc5, extraer las librerías (si está en rpm con el <literal remap="tt">mc</literal> es muy sencillo
hacerlo, sino tendrá que usar el <literal remap="tt">rpm2cpio</literal> o el <literal remap="tt">rpmget</literal> ya que si lo
instala directamente con el <literal remap="tt">rpm</literal> sobrescribirá las de la versión para
glibc) e instalarlas (en <literal remap="tt">/usr/i486-linux-libc5/lib</literal>). Además asegurese
de que en el fichero <literal remap="tt">/etc/ld.so.conf</literal> aparece el directorio
<literal remap="tt">/usr/i486-linux-libc5/lib</literal> y de que tiene instalado el paquete de
compatibilidad con la libc5 (libc-5.3.X-Y en redhat).

<screen>
¡asegurese si se baja este paquete de que lo está cogiendo de una versión de
RedHat 5.X o del directorio /libc6 en caso de que lo esté cogiendo del contrib
de RedHat, sino le sobreescribirá las antiguas librerías y no funcionará el
sistema!
</screen>

Otra posible causa de error es que falte alguna librería en la ruta de
búsqueda del ejecutable, esto se puede comprobar mediante el comando <literal remap="tt">ldd
fichero</literal>. Si por ejemplo al hacer <literal remap="tt">ldd glquake</literal> le sale alguna librería
seguida de la linea <emphasis remap="it">Not Found</emphasis> ahí estará el problema, asegurese de que
tiene esa librería instalada y que el directorio en el que está dicha librería
aparece en el fichero <literal remap="tt">/etc/ld.so.conf</literal>, si no lo está añada el
directorio y ejecute luego como root <literal remap="tt">ldconfig</literal>.

</para>
</listitem>
<listitem>

<para>
 Cuando ejecuto el glquake me da el error <literal remap="tt">glquake: can't resolve symbol
'__register_frame_info'</literal>. El glquake necesita las <literal remap="tt">MesaGL-2.6</literal>, si no las
tenía (vienen con el ejecutable del quake2) consulte la dirección de las
librerias en <xref linkend="soft"/>, instalelas y ejecute ldconfig.

</para>
</listitem>
<listitem>

<para>
 El glquake/glqwcl/quake2 se ve muy oscuro. Ajuste el contraste de la
tarjeta, esto se hace mediante la variable de entorno <literal remap="tt">SST_GAMMA</literal> en una
voodoo 1 y <literal remap="tt">SSTV2_GAMMA</literal> en las voodoo 2, por ejemplo poniendo :

<screen>
[unscared][~]$ export SSTV2_GAMMA=1.70
</screen>

Otra opción es bajarse el programa <literal remap="tt">GlideControl</literal> mencionado anteriormente
con el que puede cambiar la <emphasis remap="it">gamma</emphasis> de la tarjeta además de otros
parámetros.

</para>
</listitem>
<listitem>

<para>
 Al jugar en linux obtengo menos fps que en windows: Bueno, las Mesa no
están todavía lo suficientemente optimizadas, y en procesadores <emphasis remap="it">lentos</emphasis> no
dan un buen rendimiento. Una opción es probar el port de opengl que han
incluido los autores del quake como opción a las librerías Mesa (se llama
<literal remap="tt">lib3dfxgl.so</literal>). Para usarlo creese un fichero llamado glquake.3dfxgl y
meta en él lo siguiente:

<screen>
#!/bin/sh
LD_PRELOAD=./lib3dfxgl.so ./glquake $*
</screen>

Para el quake world puede usar el <literal remap="tt">glqwcl.3dfxgl</literal> que viene con el
<literal remap="tt">glqwcl</literal> y en el quake2 puede especificar el miniport en las opciones de
video.
Otra opción es asegurarse de que la <literal remap="tt">libMesaGL.so.2</literal> es un enlace a la
<literal remap="tt">libMesaGL.so.3</literal>. La versión 3 está bastante más optimizada que la 2.6 y el
rendimiento aumenta bastante, el problema es que el glquake necesita la
versión 2.6. Una solución <emphasis remap="it">chapucera</emphasis> es hacer lo siguiente; lo primero
vemos donde están las librerías y los ejecutables:

<screen>
[root@unsCAred][/usr/local/games/quake2]# ls -la libMesaGL.so*
lrwxrwxrwx  1 root  root     14 ene 18 19:30 libMesaGL.so -&#62; libMesaGL.so.2
lrwxrwxrwx  1 root  root     16 ene 18 19:30 libMesaGL.so.2 -&#62; libMesaGL.so.2.6
-rwxr-xr-x  1 root  root 897135 dic 26 14:43 libMesaGL.so.2.6
[root@unsCAred][~]# ls -la /usr/lib/libMesaGL.so.2
lrwxrwxrwx  1 root  root     12 ene 13 20:01 /usr/lib/libMesaGL.so.2 -&#62; libMesaGL.so
[root@unsCAred][~]# ls /usr/local/games/quake/glquake*
/usr/local/games/quake/glquake         /usr/local/games/quake/glquake.mesa
/usr/local/games/quake/glquake.3dfxgl
</screen>

ahora hacemos un script que borre el enlace de la libMesaGl.so.2,que  añada en
el <literal remap="tt">path</literal> de búsqueda el directorio /usr/local/games/quake2, que ejecute el
glquake y que deje todo como estaba.
Para usar las MesaGL:

<screen>
[root@unsCAred][~]# cat /usr/local/games/quake/glquake.mesa
#!/bin/sh
# Movemos la libreria para que no la carge:
mv /usr/lib/libMesaGL.so.2 /usr/lib/libMesaGL.so.2.tmp
# Añadimos el directorio del quake2 a la ruta de búsqueda
LD_LIBRARY_PATH_OLD = $LD_LIBRARY_PATH
LD_LIBRARY_PATH=/usr/local/games/quake2
# Ejecutamos el glquake
./glquake $*
# Dejamos todo como estaba.
mv /usr/lib/libMesaGL.so.2.tmp /usr/lib/libMesaGL.so.2
LD_LIBRARY_PATH= $LS_LIBRARY_PATH_OLD
</screen>

Para el miniport de 3dfx:

<screen>
[root@unsCAred][~]# cat /usr/local/games/quake/glquake.3dfxgl 
#!/bin/sh

# This script preloads the lib3dfxgl.so library which overrides the functions
# present in libMesaGL.so.  This allows glquake to run using 3DFX's miniport
# and without Mesa 3-D.  Glide and X11 libraries have to be installed tho, 
# even tho GLQuake doesn't use X11, it's linked against it because Mesa 3-D
# requires them.
mv /usr/lib/libMesaGL.so.2 /usr/lib/libMesaGL.so.2.tmp

LD_LIBRARY_PATH_OLD= $LS_LIBRARY_PATH
LD_LIBRARY_PATH=/usr/local/games/quake2
LD_PRELOAD=./lib3dfxgl.so ./glquake $*
mv /usr/lib/libMesaGL.so.2.tmp /usr/lib/libMesaGL.so.2
LD_LIBRARY_PATH= $LS_LIBRARY_PATH_OLD
</screen>


El problema de hacer esto es que el script se tiene que ejecutar como root.
Una opción para hacer lo mismo pero sin necesidad de ser root es eliminar la 
<literal remap="tt">libMesaGL.so.2</literal> de la ruta de búsqueda del ldconfig y ponerla en otro
directorio (por ejemplo en <literal remap="tt">/usr/local/lib/MesaGL</literal>). Para que nos
funcionen los programas que necesitan las Mesa lo único que tenemos que hacer
es añadir la linea <literal remap="tt"> export LD_LIBRARY_PATH=/usr/local/lib/MesaGL</literal> en
el fichero <literal remap="tt">&tilde;/.bashrc</literal> si usamos el <emphasis remap="it">bash</emphasis> como shell o la linea
<literal remap="tt"> setenv LD_LIBRARY_PATH /usr/local/lib/MesaGL</literal> en el .cshrc/.tcsh si
usamos <emphasis remap="it">csh/tcsh</emphasis>. Haciendo esto tendríamos lo siguiente:

<screen>
[root@unsCAred][~]# cd /usr/local/lib/MesaGL/
[root@unsCAred][/usr/local/lib/MesaGL]# ls -la libMesaGL.so.2 
lrwxrwxrwx   1 root  root 23 ene 22 21:19 libMesaGL.so.2 -&#62; /usr/lib/libMesaGL.so.3
</screen>

Ahora ya podemos eliminar las lineas que llevan un <emphasis remap="it">mv</emphasis> de los scripts 
<literal remap="tt">glquake.mesa</literal> y <literal remap="tt">glquake.3dfx</literal> con lo que ya no es necesario ser 
root para que funcione.


</para>
</listitem>
<listitem>

<para>
 No me funciona el ratón: Las <literal remap="tt">3dfx</literal> y el <literal remap="tt">gpm</literal> no se llevan bien
, en el README viene bastante claro que para que funcione el ratón con las
tarjetas aceleradoras hay que matár el gpm antes. Para hacerlo solo que
ejecutar un <literal remap="tt">killall gpm</literal> como root (o un <literal remap="tt">gpm -k</literal>&#62;. Tambien se puede
hacer mediante la orden <literal remap="tt">/etc/rc.d/init.d/gpm stop</literal> y reiniciarlo con
<literal remap="tt">/etc/rc.d/inid.d/gpm start</literal> (esto para redhat, en otras distribuciones
puede variar ligeramente el directorio <literal remap="tt">stat.d</literal> ); Este sistema es el más
recomendable. 

</para>
</listitem>

</itemizedlist>

</para>

</sect1>

<sect1 id="servers">
<title>Servidores españoles de quake.</title>

<para>
He aquí una lista de algunos servidores de quake en España. 
</para>

<para>

<itemizedlist>
<listitem>

<para>
QuakeWorld:

<itemizedlist>
<listitem>

<para>
<literal remap="tt">GODS</literal>	147.83.7.151
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">NPM</literal> 194.74.94.4:27500
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">IBK</literal> 161.72.161.72:27500
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">Spain</literal> 194.179.72.11
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">FragZone Stockholm</literal> 194.14.204.119:27500
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">Axes4All</literal> 194.109.6.220:27500
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">quake.arrakis.es</literal> 195.5.65.162:27500
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">&lsqb;LPB&rsqb;</literal> 147.96.20.220:27500
</para>
</listitem>

</itemizedlist>
	     

</para>
</listitem>
<listitem>

<para>
Quake 2:

<itemizedlist>
<listitem>

<para>
<literal remap="tt">NPM</literal> 194.74.94.9:27910 Deathmatch
</para>
</listitem>
<listitem>

<para>
194.74.94.9:27920 Capture the flag
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">MaTaDoR-Q2</literal> 158.109.8.88:27910 Deathmatch
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">NOKLAN-Q2</literal> 194.224.96.59:27910 Deathmatch
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">VAMP-Q2</literal> 158.53.204.155:27910 Capture the flag
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">ARRAKIS</literal> 195.5.65.162:27910 Deathmatch
</para>
</listitem>
<listitem>

<para>
195.5.65.165:29000 Capture the flag
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">&lsqb;QU&rsqb;-Q2</literal> 194.179.71.92:27910 Deathmatch
</para>
</listitem>
<listitem>

<para>
<literal remap="tt">quake.ctv.es</literal>	195.57.143.92:27910 Deathmatch
</para>
</listitem>

</itemizedlist>

</para>
</listitem>

</itemizedlist>

</para>

</sect1>

<sect1>
<title>Agradecimientos:</title>

<para>
A todos los habituales del canal #linux del irc hispano por
soportarme, y en especial a aquellos que me han enseñado las maravillas
del quake (<literal remap="tt">pukka</literal>, <literal remap="tt">wait_man</literal>, <literal remap="tt">Al</literal> y alguno que me dejo ...),
además de a todos los que contribuyen a la expansión del linux. 
</para>

<para>
A <literal remap="tt">Graffic</literal> por el 3Dfx-COMOR del que he sacado casi toda la información
sobre las 3dfx.
</para>

<para>
A <literal remap="tt">Satch</literal> <literal remap="tt">Sky-Man</literal> y <literal remap="tt">Devan</literal> por las correcciones y añadidos.
</para>

<para>
A <emphasis remap="it">Id Software</emphasis> por hacer el quake, y lo más importante, por portarlo
a Linux.
</para>

</sect1>

<sect1 id="Grupos">
<title>Anexo: El INSFLUG </title>

<para>
El <emphasis>INSFLUG</emphasis> forma parte del grupo internacional <emphasis remap="it">Linux
Documentation Project</emphasis>, encargándose de las traducciones al castellano de
los Howtos (Comos), así como la producción de documentos originales en
aquellos casos en los que no existe análogo en inglés. 
</para>

<para>
En el <emphasis remap="bf">INSFLUG</emphasis> se orienta preferentemente a la traducción de
documentos breves, como los <emphasis>COMOs</emphasis> y <emphasis>PUFs</emphasis> (<emphasis remap="bf">P</emphasis>reguntas de
<emphasis remap="bf">U</emphasis>so <emphasis remap="bf">F</emphasis>recuente, las <emphasis remap="it">FAQs</emphasis>. <literal remap="tt">:)</literal> ), etc. 
</para>

<para>
Diríjase a la sede del INSFLUG para más información al respecto.
</para>

<para>
En la sede del INSFLUG encontrará siempre las <emphasis remap="bf">últimas</emphasis> versiones de
las traducciones:  <literal remap="tt"><ulink
url="http://www.insflug.org"
>www.insflug.org</ulink
></literal>. Asegúrese de comprobar cuál es la última
versión disponible en el Insflug antes de bajar un documento de un
servidor réplica. 
</para>

<para>
Se proporciona también una lista de los servidores réplica (<emphasis remap="it">mirror</emphasis>)
del Insflug más cercanos a Vd., e información relativa a otros recursos en
castellano. 
</para>

<para>
Francisco José Montilla, <literal remap="tt"><ulink
url="mailto:pacopepe@insflug.org"
>pacopepe@insflug.org</ulink
></literal>. 
</para>

</sect1>

</article>
