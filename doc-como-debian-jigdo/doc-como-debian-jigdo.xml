<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<article lang="es">

	<articleinfo>
		<title>mini-CÓMO de Debian Jigdo</title>
		<titleabbrev>CÓMO-DJ</titleabbrev>

		<author>
			<firstname>Peter</firstname>
			<othername role='middle'>Jay</othername>
			<surname>Salzman</surname>
			<affiliation>
				<address><email>p@dirac.org</email></address>
			</affiliation>
		</author>

		<pubdate>v0.104, 2002-07-24</pubdate>

		<copyright>
			<year>2001</year>
			<holder>Peter Jay Salzman</holder>
		</copyright>

		<legalnotice>
			<para><email>p@dirac.org</email> / <systemitem role="url">www.dirac.org/p</systemitem>.</para>
			<para>Distribuído sujeto a la Licencia Pública General GNU, versión 2.</para>
		</legalnotice>

		<abstract>
			<title>Introducción</title>

			<para>
				Obtener ISOs de Debian siempre ha sido un proceso penoso, lento y
				soberanamente ineficiente. Jidgo es una nueva herramienta para obtener ISOs
				de Debian en forma fácil, rápida y muy eficiente. Este CÓMO describe porque
				deberías usar jidgo, un poco sobre como funciona y como usarlo para obtener
				y actualizar ISOs de Debian.
			</para>

			<para>
				Jidgo es una herramienta muy general y no está atada específicamente a
				ISOs de Debian. Las herramientas jidgo pueden usarse para crear cualquier
				ISO disponible para descargar de la misma forma fácil, rápida y eficiente
				con la cual son usados para ISOs de Debian. Este CÓMO cubrirá ésto también
				pero nos concentraremos principalmente en la descarga de ISOs de Debian.
			</para>
		</abstract>
	</articleinfo>

	<sect1 id="administrata">
		<title>Administrata</title>

		<sect2 id="acknowledgements">
			<title>Agradecimientos</title>

			<para>
				Originalmente, iba a agradecer al autor de jidgo, <ulink url="mailto:atterer@debian.org">Richard
				Atterer</ulink>, sólo por escribir jidgo. Cualquiera que haya
				tratado de usar el PIK de Debian (o peor, que haya descargado ISOs
				enteros de Debian) sabrá porque. Sin embargo, mis agradecimientos
				tienen que ir más lejos. Este CÓMO comenzó como algunas páginas web
				que escribí sobre mi experiencia con jidgo. Richard se tomó el
				tiempo de enviarme por email extensas correcciones, aclaraciones y
				respuestas a dudas que yo tenía con jidgo todavía. En el proceso de
				actualización de las páginas web y su transformación en un CÓMO, él
				ya había leído mi trabajo muchas veces. Richard es obviamente un
				desarrollador que no sólo se preocupa por su trabajo, sino que se
				preocupa sobre la gente que lo usa. Tristemente, ésto es algo que se
				está haciendo menos común en éste ajetreado mundo en el que vivimos.
				Gracias, Richard, y continúa el excelente trabajo.
			</para>	

		</sect2>
		
		<sect2 id="version">
			<title>Última Versión Y Traducciones</title>

			<para>
				No existen traduccions todavía. Si quieres traducir éste CÓMO
				a otro lenguaje, por favor contáctame en  <email><ulink url="mailto:p@dirac.org">p@dirac.org</ulink></email>.
				Al 24 de Julio de 2002, existen traducciones al Alemán y al
				Portugués en progreso, pero no están disponibles aún.
			</para>

			<para>
				La última versión estable se encuentra en el Proyecto de
				Documentación Linux: <ulink
				url="http://linuxdoc.org/docs.html">http://linuxdoc.org/docs.html</ulink> en la sección mini-HOWTO. 
				Si quieres ver el trabajo en progreso (puede ser bastante feo si me
				atrapas antes de usar un corrector de ortografía) puedes descargar
				la versión "bleeding edge" de éste documento de mis propias páginas
				en <ulink
				url="http://www.dirac.org/linux/debian/jigdo">http://www.dirac.org/linux/debian</ulink>.
			</para>
		</sect2>
		
		<sect2 id="authorship">
			<title>Autoría y Copyright</title>

			<para>
				Éste documento es copyright (c) 2001 Peter Jay Salzman, <email><ulink
				url="mailto:p@dirac.org">p@dirac.org</ulink></email>.  
				Se otorga permiso para copiar, distribuir y/o modificar éste
				documento bajo los términos de la GNU Free Documentation License,
				Version 1.1, excepto por las cláusulas que enumero en el siguiente
				párrafo. Detesto los CÓMOS que incluyen la licencia; es un asesino de
				árboles. Puedes leer la GNU FDL en <ulink
				url="http://www.gnu.org/copyleft/fdl.html">http://www.gnu.org/copyleft/fdl.html</ulink>.
			</para>

			<para>
				Si quieres crear un trabajo derivado o publicar éste CÓMO con
				propósitos comerciales, contáctame primero. Ésto me dará la
				oportunidad de darte la versión más reciente. También apreciaría ya
				sea una copia de lo que sea que estés haciendo o una espinaca, ajo,
				hongo, feta de queso y una pizza de cogollo de alcaucil.
			</para>
		</sect2>
	</sect1>

	<sect1 id="whyjigdo">
		<title>¿Por qué jigdo?</title>
		
		<sect2>
			<title>¿Cómo Obtiene Uno Un Juego De Imágener ISO De Debian?</title>

			<para>
				Si quieres tu propio juego de CDs de Debian existen muchas
				formas de obtenerlos. Una forma s comprándoselos a <ulink
				url="http://www.debian.org/CD/vendors/">vendedores</ulink> que vendan CDs de Debian. 
				Ésto tiene algo de mérito ya que algunos de los vendedores donan
				dinero al proyecto Debian. Tus donaciones ayudan a que Debian esté
				en la vuelta por un largo tiempo.
			</para>

			<para>
				Otra forma de obtener un juego de CDs de Debian es quemar tu
				propio juego. Ésto implica primero obtener una imágen ISO y luego
				quemar ésa imágen ISO en un CD vírgen. Antes de jidgo, habían dos
				formas de crear CDs de Debian:
			</para>
			
			<orderedlist>
				<listitem><para>Descargar el ISO entero</para></listitem>
				<listitem><para>Usar el juego de seudo-imágen (PIK = Pseudo-Image
				Kit)</para></listitem>
			</orderedlist>

			<para>
				Éste documento es sobre la nueva y mejor forma de obtener
				imágenes ISO de Debian, usando una herramienta llamada jidgo. De
				hecho, el uso de PIK es ahora desaprobado. El método canónico de
				obtener imágenes ISO de Debian es con jidgo.
			</para>
		</sect2>
		
		<sect2 id="whynotdownloadthewholeisoimage">
			<title>¿Por Qué No Descargar La Imágen ISO Entera??</title>

			<para>
				Hay servidores de réplica (mirror) que ofrecen descargas http y
				ftp de ISOs de Debian. El problema es que existen muy pocos sitios
				de réplica, y su ancho de banda no puede soportar a cada uno que quiere
				ISOs de Debian. Por ejemplo, fsn.hu supuestamente ha saturado la
				conección de su proveedor. ¡El tráfico saliente alcanza unos pocos
				terabytes por mes!
			</para>

			<para>
				Además, Debian testing y Debian unstable se actualizan a
				menudo. Tus ISOs se desactualizarán el mismo día que los descargues
				a menos que encuentres alguna forma engañosa de actualizarlos como
				montar el ISO en un dispositivo loopback y usar rsync (que es lo que
				hace PIK). Así que si quieres imágenes ISO actualizadas, debes
				descargar un nuevo juego de imágenes ISO cada día. Claramente, ¡ésta
				no es la forma con la que quieres obtener ISOs de Debian!
			</para>

			<para>
				Incluso si quieres descargar las imágenes ISO estables, aún
				así ellas se actualizan cada algunos meses. Descargar las imágenes
				ISO te dará imágenes actualizadas por algunos meses, pero cada vez
				que una nueva revisión de Debian stable es liberada, tendrás que
				recorrer el penoso proceso de descargar el kit de ISOs completo
				desde cero. Éste no es un buen uso de tu tiempo y de los recursos
				del servidor de réplica.
			</para>

		</sect2>
		
		<sect2 id="whynotusethewholepik">
			<title>¿Por Qué No Usar El Pseudo Image Kit (PIK)?</title>
	
			<para>
				El PIK soluciona los problemas de la descarga de imágenes ISO
				enteras. Las descargas son rápidas, y el PIK usa rsync para
				actualizar sólo aquellas porciones de una imágen ISO que tienen que
				ser actualizadas, así que es una forma eficiente de mantener tu
				juego de ISOs actualizado. Sin embargo, hay algunos problemas
				fuertes con el PIK:
			</para>

			<itemizedlist>
				<listitem><para>Es díficil de usar y no muy amigable con el usuario.</para></listitem>
				<listitem><para>No puedes usar el PIK para descargar juegos de ISOs de testing y unstables.</para></listitem>
				<listitem><para>El PIK confía en rsync el cual hace uso intensivo
					del CPU del servidor. Si demasiadas personas usan PIK con el mismo
					servidor, éste echaría humo. Incluso si el PIK es hecho más amigable
					para el usuario, es inaceptablemente no amigable para los servidores
					de réplica.</para></listitem>
				<listitem><para>El PIK usa rsync, el cual es bloqueado por muchos
					cortafuegos más estrictos. Así que incluso si quieres usar ésa bella
					y rápida red coporativa en el trabajo, puedes tener problemas al
					usar el PIK.</para></listitem>
				<listitem><para>Cada imágen tiene que ser almacenada en el servidor.
					Ésto era correcto en los viejo buenos días de potato, cuando las 28
					imágenes de CD tomaban "sólo"  17 GB. Comenzando con woody, los 96
					CDs necesitan 57 GB más o menos. Ahora imagina que queremos ofrecer también
					DVDs y ésa cifra se duplica.</para></listitem>
			</itemizedlist>
		</sect2>

		<sect2 id="whatisjigdo">
			<title>¿Qué Es Jigdo?</title>

			<para>
				Jigdo (que proviene de "Jigsaw Download") fué escrito por 
				<ulink url="mailto:atterer@debian.org">Richard
				Atterer</ulink> y es liberado bajo la GNU GPL. Es una herramienta
				que permite la descarga y actualización eficiente de una imágen ISO.
				Cualquier imágen ISO. Jidgo no es específico de Debian, sin embargo
				Debian lo ha elegido como el método preferido para descargar
				imágenes ISO. La herramienta jidgo viene con dos utilidades:
				jidgo-file la cual prepara una imágen ISO para su descarga y
				jidgo-lite la cual se usa para descargar imágenes ISO que fueron
				preparadas por jidgo-file.
			</para>
				
			<para>
				Jigdo no crea imágenes ISO. Sólo las prepara para su descarga
				y también las descarga. La imágen ISO tiene que ser creada antes, y
				éso es hecho usualmente con mkisofs o debian-cd.
			</para>
			
			<para>
				Jigdo soluciona todos los problemas con los otros dos métodos
				para obtener imágenes ISO de Debian:
			</para>

			<itemizedlist>
				<listitem><para>Es mucho más rápido que descargar toda la imágen ISO.</para></listitem>
				<listitem><para>A diferencia de descargar toda la imágen ISO, puede
					tomar una imágen de CD desactualizada (o una imágen ISO
					desactualizada montada por loop), descargar <emphasis>sólo</emphasis> 
					los archivos que han cambiado desde que el CD (o la imágen ISO) fue
					creado y crear un nuevo ISO actualizado. Muy similar a como uno usa
					cvs para actualizar el código fuente.</para></listitem>
				<listitem><para>jigdo-lite es mucho más fácil de usar que el PIK.</para></listitem>
				<listitem><para>jigdo-lite usa wget que por defecto usa http para
					transferir archivos. El PIK usa rsync. Mientras que rsync puede ser
					bloqueado por algunos cortafuegos, los únicos cortafuegos que
					bloquean http son aquellos desde los cuales no deberías estar usando
					jidgo en primer lugar. Casi nunca tendrás problemas de cortafuegos
					con jidgo-lite.</para></listitem>
			</itemizedlist>

			<para>Claramente, jigdo es el mejor método para obtener imágenes ISO de Debian.</para>

		</sect2>
	</sect1>
	<sect1 id="howjigdoworks">
		<title>¿Cómo Funciona Jigdo? (opcional)</title>

		<para>
			No tienes que saber éste material para usar jidgo, pero éste puede
			ayudar a desmitificar lo que jidgo hace. Si no estás interesado en los
			detalles, avanza rápidamente a <xref linkend="downloadingyourfirstimage" />, 
			"¿Cómo Uso Jidgo?".
		</para>

		<para>Existen dos componentes de jidgo:</para>

		<itemizedlist>
			<listitem><para>jigdo-file: Prepara un ISO para su descarga (usado por la persona que ofrece el ISO)</para></listitem>
			<listitem><para>jigdo-lite: Descarga el ISO (usado por la persona que descarga el ISO)</para></listitem>
		</itemizedlist>
		
		<sect2 id="preparingtheisofordownload">
			<title>Preparando El ISO Para Descargar</title>

			<para>
				Una imágen de CD es un sistema de archivos llamado iso9660,
				pero para ésta discusión podemos seguramente hablar sobre una imágen
				de cd como siendo un gran archivo llamado "imágen ISO" (más o menos
				650M) que contiene archivos en varios offsets. Por ejemplo, si un CD
				contiene un archivo de 567 bytes llamado  LÉEME, la imágen ISO puede
				contener el contenido del archivo LÉEME entre los offsets 20480000 y 
				20480567.  Puedes visualizar una imágen de CD como:
			</para>
<screen>
              --------------------------------------------------------------------
Imágen ISO:   |xxxx| archivo-0 |xx| archivo-1 |xxx| archivo-2 |x| archivo-3 |xxxx|
              --------------------------------------------------------------------
</screen>

			<para>
				Las áreas "x" de la imágen contiene cosas como información de
				directorio, relleno de ceros, nombre de disco, bloque de inicio,
				etc.
			</para>

			<para>
				jidgo-file toma dos cosas como entrada: la imágen completa del
				CD (así que el ISO ya tiene que haber sido creado) y un conjunto de
				archivos que pueden o no estar en la imágen. Aquí está una
				visualización de la entrada de jidgo-file:
			</para>

<screen>
              --------------------------------------------------------------------
Imagen ISO:   |xxxx| archivo-0 |xx| archivo-1 |xxx| archivo-2 |x| archivo-3 |xxxx|
              --------------------------------------------------------------------

                    -------------  -------------     -------------    -------------
Archivos Ordinarios | archivo-0 |  | archivo-1 |     | archivo-3 |    | archivo-4 |
                    -------------  -------------     -------------    -------------
</screen>

			<para>
				Mediante magia, jidgo-file averigüa cuales de los archivos
				ordinarios están contenidos en la imágen ISO y sus offsets dentro del
				archivo ISO. jidgo-file genera dos archivos: un archivo ".template"
				y un archivo ".jidgo".
			</para>

		</sect2>
		
		<sect2 id="the.templatefile">
			<title>El Archivo .template</title>

			<para>
				Dados una imágen ISO  y un conjunto de archivos que pueden o
				no estar en la imágen ISO, como entrada, jidgo-file genera un
				archivo .template para ésa imágen ISO. Así es como luce el archivo
				.template:
			</para>

<screen>
              --------------------------------------------------------
.template:    |xxxx| md5-0  |xx| md5-1  |xxx|cccccccc|x| md5-3  |xxxx|
              --------------------------------------------------------
</screen>

			<para>
				jidgo-file encontró que los archivos <filename>archivo-0</filename>,
				<filename>archivo-1</filename> y <filename>archivo-3</filename> estaban
				contenidos en la imágen ISO. Eliminó el contenido de ésos archivos y
				los reemplazó con el checksum md5 de cada archivo.
			</para>

			<para>
				Los datos "<literal remap="bf">x</literal>" (información de
				directorio, relleno de ceros, etc) dentro de la imágen ISO son
				comprimidos y escritos en el archivo .template. Finalmente, todos
				los archivos dentro de la imágen ISO que no fueron provistos como
				archivos ordinarios (como <filename>archivo-2</filename>) son también
				comprimidos y escritos al archivo .templae. Ésto se muestra como
				datos "<literal remap="bf">c</literal>" en la visualización del
				archivo .template.
			</para>

			<para>
				Los archivos ordinarios que fueron provistos a jidgo-file que no se
				hallados en la imágen ISO (como <filename>archivo-4</filename>) son
				ignorados.
			</para>
   
		</sect2>
		
		<sect2 id="the.jigdofile">
			<title>El Archivo .jigdo</title>

			<para>
				Dados una imágen ISO y un conjunto de archivos ordinarios que
				pueden o no estar en la imágen ISO, como entrada, jidgo-file genera
				un archivo .jidgo para ésa imágen ISO. Los archivos .jidgo de Debian
				están comprimidos con gzip, así que tienes que usar zcat o zless para
				verlos. Así es como luce el archivo .jidgo cuando lo descomprimes
				con gunzip:
			</para>

<screen>
md5-0=http://algunareplica.org/file-0
md5-1=http://algunareplica.org/file-1
md5-2=http://algunareplica.org/file-2
md5-3=http://algunareplica.org/file-3
</screen>

			<para>
				El archivo .jidgo simplemente provee una correspondencia entre
				el md5sum de un archivo dentro de la imágen ISO y el URL de descarga
				de ése archivo. Hay algunas otras cosas dentro del archivo .jidgo, y
				si miras dentro de él, verás que el archivo .jidgo tiene el mismo
				formato que un archivo ".ini". Debería ser auto explicativo, pero si
				quieres los detalles de la esencia, consulta la documentación de
				jidgo.
			</para>
   
			<para>
				El formato mostrado arriba no es realmente lo que verías en un
				archivo .jidgo típico, pero es muy similar. Si miras la sección
				[Servers] en la parte inferior del archivo .jidgo, verás exactamente
				cual es la diferencia entre lo que mostré y un archivo .jidgo real.
			</para>

		</sect2>
		
		<sect2 id="downloadingtheimage">
			<title>Descargando La Imágen</title>

			<para>
				Una vez utilices jidgo-file para preparar el ISO para
				descargar, cualquiera puede usar jidgo-lite para descargar el ISO.
				jidgo-lite descarga todos los archivos de un ISO de Debian usando
				wget, los agrupa y forma un ISO al vuelo.
			</para>
		</sect2>
	</sect1>
	
	<sect1 id="downloadingyourfirstimage">
		<title>Descargando Tu Primer Imágen (En 5 Fáciles Pasos)</title>

		<para>
			Asumiremos que estás comenzando desde cero y que no tienes ningún ISO
			de Debian a mano. Una vez quemes tu primer juego de ISOs, podrás usar
			jidgo-lite posteriormente para actualizarlo. Cubriremos la actualización de
			tus ISOs en la siguiente sección.
		</para>
		
		<sect2>
			<title>Instalar Jigdo</title>

			<para>Primero instala el paquete jidgo-file:</para>

<screen>
# apt-get install jigdo-file
</screen>

			<para>
				Jidgo está bajo un agresivo desarrollo. Arreglos de bugs y
				mejoras son constantes, así que si estás usando stable o testing,
				descarga desde unstable en <ulink url= "http://packages.debian.org/unstable/utils/jigdo-file.html">
				http://packages.debian.org/unstable/utils/jigdo-file.html</ulink>.
				Al 19 de Julio de 2002 está en la versión 0.6.8. Ésta es la versión
				utilizada para los ejemplos de éste CÓMO.
			</para>
		</sect2>

		<sect2 id="downloadthe.templateand.jigdofiles">
			<title>Descargar Los Archivos .template Y .jidgo</title>

			<para>
				Para cada imágen ISO que quieras descargar necesitarás dos
				archivos:
			</para>

	 		<itemizedlist>
				<listitem><para>El archivo .jidgo para la imágen de disco que
					quieres descargar.</para></listitem>
				<listitem><para>El archivo .template para la imágen de disco que
					quieres descargar.</para></listitem>
			</itemizedlist>

			<para>
				Ejemplo: Woody tiene 8 imágenes, así que tienes que descargar
				8 archivos .jidgo y 8 archivos .template. Pueden ser descargar desde 
				<ulink url="http://www.debian.org/CD/jigdo-cd/" >http://www.debian.org/CD/jigdo-cd/</ulink>
				y se llaman <filename>woody-i386-1.iso.jigdo</filename>, <filename>woody-i386-1.iso.template</filename>,
				<filename>...</filename>, y <filename>woody-i386-8.iso.template</filename>.
			</para>

			<para>
				Alternativamente, en lugar de descargar un archivo .jidgo y
				uno .template para cada imágen ISO, puedes darle a jidgo-file un URL
				que apunta al archivo .jidgo que necesites, como <literal>http://a.mirror/woody-i386-1.jigdo</literal>.
				jigdo-lite descarga los archivos .jidgo y .template al vuelo.
				Sin embargo, si estás un poco nervioso al usar jidgo-lite por
				primera vez, sólo descarga los archivos y recorreré contigo el
				proceso.
			</para>
		</sect2>

		<sect2 id="runjigdo-lite">
			<title>Ejecutar jigdo-lite</title>

			<para>
				Ejecuta jidgo-lite y dále el archivo .jidgo de la imágen que
				quieres descargar. Usand Woody como ejemplo:
			</para>

			<screen>
$ jigdo-lite woody-i386-1.iso.jigdo
			</screen>
   
			<para>
				Alternativamente, si estás trabajando con un URL al archivo
				.jidgo en lugar de una copia del archivo .jidgo en tu disco duro,
				ejecuta jidgo-lite con un argumento de la URL:
			</para>

			<screen>
$ jigdo-lite http://una.réplica/woody-i386-1.jigdo
			</screen>

			<para>Verás algo como:</para>

			<screen>
 -----------------------------------------------------------------
 Jigsaw Download "lite"
 Copyright 2001-2002 by Richard Atterer &lt;jigdo@atterer.net&gt;
 Getting mirror information from /etc/apt/sources.list
 -----------------------------------------------------------------
 Images offered by `woody-i386-1.iso.jigdo':
   1: woody-i386-1.iso
 
 -----------------------------------------------------------------
If you already have a previous version of the CD you are
downloading, jigdo can re-use files on the old CD that are also
present on the new image, and you do not need to download them
again. Mount the old CD ROM and enter the path it is
mounted under (e.g. `/mnt/cdrom'). Alternatively, just press
enter if you want to start the download of any remaining files.
Files to scan:
			</screen>

			<para>
				Si olvidas pasarle a jidgo-lite un archivo .jidgo, él te
				pedirá uno (o un URL que apunta a uno).
			</para>

			<para>
				Si suspendiste jidgo-lite con cntrl-z (no hagas ésto; te diré
				que verías) e hiciste un <command>ls</command>, encontrarás un nuevo
				archivo en el directorio llamado <filename>woody-i386-1.iso.jigdo.unpacked</filename>.
				Éste archivo es sólo una versión comprimida con gzip del archivo
				.jidgo.
			</para>

			<para>
				Ahora, jidgo-lite nos está diciendo que si teníamos una
				versión desactualizada del CD, entonces proveamos la ruta al CD. Ya
				que estamos asumiendo que estás comenzando desde cero y que no
				tienes ISOs de Debian todavía, entonces no tenemos nada para
				explorar (cubriremos ésto en <xref linkend="updatingyourimage" />).
				Así que sólo presiona &lt;ENTER&gt;.
			</para>
		</sect2>

		<sect2 id="specifyamirror">
			<title>Especifica Una Réplica</title>

			<para>Verás:</para>

			<screen>
   -----------------------------------------------------------------
The jigdo file refers to files stored on Debian mirrors. Please
   choose a Debian mirror as follows: Either enter a complete URL
   pointing to a mirror (in the form
   `ftp://ftp.debian.org/debian/'), or enter any regular expression
   for searching through the list of mirrors (try a two-letter
   country code such as `de', or a country name like `United
   States', or a server name like `sunsite'):
   Debian mirror [http://linux.csua.berkeley.edu/debian//]: 
			</screen>

			<para>
				jidgo-lite lo suficientemente inteligente para usar la réplica
				que usas para tus actualizaciones de Debian mirando el archivo 
				<filename>/etc/apt/sources.list</filename> (puedes ver que uso
				<filename>linux.csua.berkeley.edu</filename> para mis
				actualizaciones). Si querías usar una réplica diferente,
				especificarías un réplica aquí. Si éste es la réplica que quieres
				usar, presiona &lt;ENTER&gt;. Jidgo-file entonces escribirá un
				archivo <filename>.jigdo-lite</filename> en tu directorio home.
			</para>

			<para>
				A continuación, si el archivo .jidgo que estás usando
				referencia a un paquete que tiene que descargarse de un server Non-US
				(software obstaculizado por restricciones de exportación en US),
				jidgo-lite te pedirá un servidor Non-US. El mensaje mostrado (y tu
				respuesta) será muy similar al diálogo de la réplica descrito en
				párrafo anterior. La única diferencia es que tienes que especificar
				(o aceptar el valor por defecto) un servidor Non-US. Si la imágen
				ISO que vas a descargar contiene software Non-US, verás:

				<screen>
-----------------------------------------------------------------
The jigdo file also refers to the Non-US section of the Debian
archive. Please repeat the mirror selection for Non-US. Do not
simply copy the URL you entered above; this does not work because
the path on the servers differs!
Debian non-US mirror [http://linux.csua.berkeley.edu/debian-non-US//]: 
				</screen>
			</para>

			<para>
				y jidgo-lite escribirá tu elección a tu archivo 
				<filename>$HOME/.jigdo-lite</filename>. Sin embargo, si la imágen
				que vas a descargar no contiene software Non-US no verás éste
				diálogo.
			</para>
			
			<para>
				Observa que puedes redefinir las réplicas que jidgo usa para
				tus futuras descargas en el archivo <filename>$HOME/.jigdo-lite</filename>
				con las siguientes líneas:
			</para>

			<screen>
debianMirror='http://some-mirror-to-use/debian/'
nonusMirror='http://some-other-mirror/debian-non-US/'
			</screen>
		</sect2>
		
		<sect2 id="downloadingoftheiso">
			<title>Descarga Del ISO</title>

			<para>
				Después de especificar la(s) réplica(s), jidgo-lite buscará el
				archivo .template. Si no puede encontrar uno, él descargará un
				archivo .template desde la réplica. Después que encuentre el archivo
				.template (o después de que descargue uno), verás:
			</para>

			<screen>
-----------------------------------------------------------------
Merging parts from `file:' URIs, if any...
Found 0 of the 1224 files required by the template
Will not create image or temporary file - try again with different input files
--13:38:08--  http://linux.csua.berkeley.edu/debian/pool/main/b/bind9/
      lwresd_9.2.1-2.woody.1_i386.deb => `lwresd_9.2.1-2.woody.1_i386.deb'
Resolving linux.csua.berkeley.edu... done.
Connecting to linux.csua.berkeley.edu[128.32.247.238]:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 157,318 [application/x-debian-package]

30% [==========>                          ] 47,418       113.22K/s    ETA 00:00
...
			</screen>

			<para>
				Después que el archivo .template fue hallado (o después de que
				fue descargado), jidgo-lite comienza a poner paquetes en tu disco
				duro. Habrá un montón de mensajes flotando en tu pantalla. Si éso es
				confuso para tí, mira <xref	linkend="wgetoptions" />. Mientras
				jidgo-lite es descargando los paquetes, cámbiate a otra consola (o
				abre otra xterm) y haz un <command>ls</command> en el directorio
				donde estás corriendo jidgo-lite. Ahora deberían haber 6 archivos en
				el directorio:
			</para>

			<itemizedlist>
				<listitem><para><filename>jigdo-file-cache.db</filename></para></listitem>
				<listitem><para><filename role="directory">tmp/</filename></para></listitem>
				<listitem><para><filename>woody-i386-1.iso.jigdo</filename></para></listitem>
				<listitem><para><filename>woody-i386-1.iso.jigdo.unpacked</filename></para></listitem>
				<listitem><para><filename>woody-i386-1.iso.list</filename></para></listitem>
				<listitem><para><filename>woody-i386-1.iso.template</filename></para></listitem>
				<listitem><para><filename>woody-i386-1.iso.tmp</filename></para></listitem>
			</itemizedlist>

			<para>
				<filename>woody-i386-1.iso.tmp</filename> no aparecerá
				siempre. Es una versión temporal del archivo ISO que se escribe con
				mucha frecuencia.
			</para>

			<para>
				<filename>jigdo-file-cache.db</filename> es un archivo
				Berkeley DB que contiene md5sums de todos los archivos leídos cuando
				especificas un directorio en el prompt <literal>Files to scan:</literal> prompt.
				Es descrito más detalladamente en <xref linkend="jigdo-file-cache" />.
			</para>
			
			<para>
				<filename role="direcotry">tmp/</filename> es un directorio
				que contiene archivos de paquetes Debian que se descargan. Por
				ejemplo, cuando escribo ésto, contiene:
			</para>

			<screen>
$ ls tmp/
alsa-headers-0.5_0.5.12a-2_all.deb  tkdiff_3.08-3_all.deb
alsa-utils-0.4_0.4.1-9.1_i386.deb   xfonts-intl-chinese-big_1.2-2.1_all.deb
gnuserv_3.12.4-3_i386.deb           xmanpages-ja_4.1.0.20011224-1_all.deb
pilot-link_0.9.5.0-8_i386.deb       xscreensaver_3.34-3_i386.deb
smpeg-plaympeg_0.4.4-8_i386.deb
			</screen>

			<para>
				Con mucha frecuencia el directorio es vaciado y los archivos
				son agregado a <filename>woody-i386-1.iso.tmp</filename>.
			</para>

			<para>
				En éste punto, ve a jugar Quake III porque ésto tomará algo de
				tiempo (tal vez quieras jugar en una máquina diferente porque jidgo
				es muy intensivo con el disco cuando arma el archivo ISO). En algún
				punto, la descarga terminará y estarás mirando lo siguiente:
			</para>

			<screen>
   FINISHED --13:32:58--
   Downloaded: 7,469,872 bytes in 9 files
   Found 9 of the 9 files required by the template                              
   Successfully created `woody-i386-3.raw'
   
   -----------------------------------------------------------------
   ¡Terminado!
   El hecho de que hallas llegado hasta aquí es una fuerte indicación de que 
`woody-i386-3.raw' fue generado correctamente. Realizaré una verificación
adicional final, la cual puede interrumpir sin ningún problema con Ctrl-C
si no quieres esperar.
   
   OK: Checksums match, image is good!   
   $
			</screen>
		</sect2>
	</sect1>
<!--

			<orderedlist>
			<listitem><para>If you have an outdated copy of the CD:  Mount it and give jigdo-lite the path to your CD.  On Debian,
				this is most likely <filename role="directory">/cdrom</filename>.</para></listitem>
			<listitem><para>If you have an outdated copy of the ISO file:  Currently, jigdo-lite can't scan an outdated ISO image
				file (it's on the TODO list), but you can employ a trick to use your ISO file.  ISO files are actually filesystems, just
				like the filesystems on your hard drive, but their contained in a file rather than a partition on your drive.  Linux
				can mount these files just as if they were filesystems on a partition.  Mount the ISO file as a loop device
				using <command>mount -o loop /path/to/iso/outdated-iso.iso /mnt</command>.  If you look at <filename
				role="directory">/mnt</filename>, you'll see the CD image.  Then give the directory <filename
				role="directory">/mnt</filename> to jigdo-lite and it will scan your outdated ISO file.</para></listitem>
			</orderedlist>
-->
	<sect1 id="updatingyourimage">
		<title>Actualizando Tu Imágen</title>

		<para>
			Presumiblemente, has leído la última sección, has seguido las
			instrucciones, has quemado tu archivos ISO recién creados al CD y te sientes
			efusivo y confuso. Tarde o temprano, algunos paquetes serán actualizado y
			ahora quieres donar tus viejos CDs a algún principiante en la fiesta de
			instalación de tu LUG local y que quemar tu mismo un juego de CDs
			actualizados. Ya que estás bien en el camino de convertire en un gurú de
			jidgo, no entraremos en los detalles penosos como lo hicimos en la última
			sección.
		</para>

		<para>
			El primer paso es descargar los archivos .jidgo y .template, de nuevo,
			para las imágenes que quieres actualizar. Te puedes preguntar porque tienes
			que descargarlos por segunda vez. La razón es que la imágen actualizada que
			quieres bajar ha cambiado. Pueden haber sido agregados o eliminados algunos
			archivos, pero incluso si ése no es el caso, los paquetes o archivos
			actualizados tendrán un checksum diferente del checksum listado en los
			archivos .jidgo y .template que usaste cuando descargaste la imágen por
			primera vez.
		</para>

		<para>
			En éste punto, estás ya sea sosteniendo un CD de Debian en tu mano o
			tienes la imágen ISO actualizada del CD en tu disco duro. Recorramos los
			pasos para obtener un archivo ISO actualizado. Si tienes un Cd, colócalo en
			tu lectora de CD y móntalo:
		</para>

		<screen>
$ mount /cdrom
		</screen>

		<para>
			Por otro lado, si tienes un archivo ISO que quieres actualizar,
			móntalo como un dispositivo loop (tal vez tengas que ser root para hacer
			ésto). Actualizaré mi imágen de Woody, ya que noté que Woody tubo algunas
			actualizaciones de seguridad:
		</para>

		<screen>
# mount -o loop woody-i386-1.iso /mnt
		</screen>

		<para>Ahora ejecuta jigdo-lite con el archivo .jigo como argumento.</para>

<!-- good for 0.6.8-1 -->
		<screen>
$ jigdo-lite woody-i386-1.jigdo 

-----------------------------------------------------------------
Jigsaw Download "lite"
Copyright 2001-2002 by Richard Atterer &lt;jigdo@atterer.net&gt;
Loading settings from `/home/p/.jigdo-lite'

-----------------------------------------------------------------
Images offered by `woody-i386-1.jigdo':
  1: Debian GNU/Linux 3.0 r0 Woody - Official i386 Binary-1 CD (debian-30r0-i386-binary-1.iso)

Further information about `debian-30r0-i386-binary-1.iso':
Generated on Thu, 18 Jul 2002 14:34:12 +0100

-----------------------------------------------------------------
If you already have a previous version of the CD you are
downloading, jigdo can re-use files on the old CD that are also
present on the new image, and you do not need to download them
again. Mount the old CD ROM and enter the path it is mounted under
(e.g. `/mnt/cdrom'). Alternatively, just press enter if you want
to start the download of any remaining files.

You can also enter a single digit from the list below to
select the respective entry for scanning:
  1: /mnt
Files to scan:
		</screen>

		<para>
			jigdo-lite nos está pidiendo que le demos la ubicación de tu CD
			montado (si estás actualizando un CD) o tu archivo ISO montado por loop (si
			estás usando el archivo ISO). Estoy usando un archivo ISO montado por loop
			en <filename role="directory">/mnt</filename>, así que ingresaré 
			<literal>/mnt</literal>. Si estás actualizando un Cd, ingresa el directorio
			de montaje de tu CD, el cual probablemnte sea <literal>/cdrom</literal>.
			En cualquier caso, jidgo-lite explorará el directorio de tu medio montado,
			determinará cuales archivos tienen que actualizarse y reusará los archivos
			que no tienen que ser actualizados. Tal vez veas algo como: 
		</para>

<!-- good for 0.6.8-1 -->
		<screen>
Files to scan: /mnt/other

Not downloading .template file - `woody-i386-1.template' already present
jigdo-file: Output file `debian-30r0-i386-binary-1.iso' already exists - delete
it or use --force
jigdo-file failed with code 3 - aborting.
		</screen>


		<para>
			¿Qué sucedió? En realidad, quería mostrarte ésto porque chocarás con
			ésto tarde o temprano. Estoy actualizando un archivo ISO, pero el archivo
			imágen desactualizado está en el mismo direcotorio en el cual estoy
			trabajando. Jigdo-lite quiere generar un archivos <filename>woody-i386-1.iso</filename> 
			pero ya existe un archivo con ése nombre en el directorio actual (la imágen
			desactualizada). Jigdo-lite no quiere destruir ése archivo, así que salta y
			me hace saber que puedeo ya sea borrar ése archivo o usar <literal>--force</literal> 
			para sobreescribir el archivo. También podrías renombrar o mover el archivo,
			pero adivino que jigdo-lite asume que ya sabemos éso. &nbsp;  :-)
		</para>
	
		<para>
			No te intimides sobre mover o renombrar el archivo imágen por el hecho
			de que esté montado por loop. El sistema de archivos usa inodos bajo la
			capa, e incluso si mueves o renombras el archivo, el inodo sigue siendo el
			mismo. No dañarás el sistema de archivos montado bajo <filename role="directory">/mnt</filename>.
			Sobre borrar el archivo ISO, éso no dañará el sistema de archivos montado tampoco. 
			Un inodo de archivo es desalojado sólo cuando el contador de referencia del
			inodo cae a cero. Montar la imágen ISO eleva el contador de referencia, así
			que el archivo es eliminado sólo después que se haga <command>rm</command>
			al archivo <emphasis>y</emphasis> se desmonte el dispositivo loop.
			Todos ustedes que están actualizando el CD no tienen de que preocuparse de
			nada de ésto.  :-)
		</para>

		<para>
			Renombraré el archivo ISO a <filename>woody-i386-1.iso.old</filename>
			y ejecutaré jigdo-lite de nuevo. Probemos de nuevo:
		</para>

		<screen>
$ jigdo-lite woody-i386-1.iso.jigdo

-----------------------------------------------------------------
Jigsaw Download "lite"
Copyright 2001-2002 by Richard Atterer &lt;jigdo@atterer.net&gt;
Loading settings from `/home/p/.jigdo-lite'

-----------------------------------------------------------------
Images offered by `woody-i386-1.iso.jigdo':
  1: Debian GNU/Linux 3.0 r0 Woody - Official i386 Binary-1 CD
       (debian-30r0-i386-binary-1.iso)

Further information about `debian-30r0-i386-binary-1.iso':
Generated on Thu, 18 Jul 2002 14:34:12 +0100

-----------------------------------------------------------------
If you already have a previous version of the image you are
downloading, jigdo can re-use files on the old image that are also
present on the new image, and you do not need to download them
again. Mount the old CD ROM and enter the path it is mounted under
(e.g. `/mnt/cdrom'). Alternatively, just press enter if you want
to start the download of any remaining files.
You can also enter a single digit from the list below to
select the respective entry for scanning:
  1: /mnt
Files to scan: /mnt
Not downloading .template file - `woody-i386-1.template' already present
...
Found 1200 of the 1224 files required by the template                          
...
		</screen>

		<para>
			jigdo-lite recuerda que yo quería explorar <filename role="directory">/mnt</filename>
			y me dice que puedo ya sea tipear <literal>1</literal> para explorar ése
			directorio o ingreso el directorio de nuevo. Ya que soy una persona
			perversa, ingreso el nombre del directorio de nuevo.
		</para>

		<para>
			La elipsis representa un texto que cambia rápidamente. La primer
			elipsis es una lista dinámica de aquellos archivos que jigdo-lite está
			explorando. La segundo elipsis denota progreso en la escritura de 
			<filename>woody-i386-1.iso.tmp</filename>. Una vez jigdo-lite termina de
			explorar los archivos y de escribir el archivo temporal ISO, imprime:
		</para>
			
		<screen>
Copied input files to temporary file `woody-i386-1.iso.tmp'
   - repeat command and supply more files to continue

-----------------------------------------------------------------
If you already have a previous version of the image you are
downloading, jigdo can re-use files on the old image that are also
present on the new image, and you do not need to download them
again. Mount the old CD ROM and enter the path it is mounted under
(e.g. `/mnt/cdrom'). Alternatively, just press enter if you want
to start the download of any remaining files.
You can also enter a single digit from the list below to
select the respective entry for scanning:
  1: /mnt
Files to scan: 
		</screen>

		<para>
			Ya que normalmente no tienes otra fuente de archivos para explorar
			que no sea tu archivo ISO montado por loop (o tu CD), presiona 
			&lt;ENTER&gt;.  Jigdo-lite preguntará entonces cuales réplicas quieres usar,
			justo como lo hizo cuando descargaste tu ISO por primera vez. Ya has
			respondido ésas preguntas anteriormente, pero si verdaderamente no las
			recuerdas, tal vez quieras leer de nuevo <xref linkend="specifyamirror" />.
		</para>

		<para>
			En éste punto, verás a jigdo-lite trabajar con su magia. Ahora, ¿no te
			dije que era fácil?
		</para>
	</sect1>
	
	<sect1>
		<title>Preguntas Muy Frecuentes</title>

		<sect2>
			<title>¿Como puedo hacer que jigdo use un proxy?</title>

			<para>
				Ésto se describe en <ulink url="http://debian.org/CD/jigdo-cd/">http://debian.org/CD/jigdo-cd/</ulink>
				así como en el archivo <filename>README</filename> del paquete tar de jigdo-lite.
			</para>
		</sect2>

		<sect2 id="interrupted">
			<title>¿Qué hago si mi descarga con jigdo se interrumpe?</title>

			<para>
				Si tu descarga se interrumpe, todo lo tienes que hacer es
				reiniciar jigdo-lite y presionar &lt;ENTER&gt; en todos los prompts
				de pregunta. Jigdo-lite comenzará donde quedó.
			</para>
		</sect2>

		<sect2>
			<title>Mi descarga con jigdo no se completará porque el archivo
				.jigdo está roto. Cuando descargo un archivo .jigdo nuevo y arreglado,
				¿tengo que descargar todos los datos de nuevo?
			</title>

			<para>
				Tal vez encuentres que el archivo .jigdo que descargaste está
				roto. Es muy poco común, pero sucede de vez en cuando cuando se
				mueven destinos como Debian testing o unstable.
			</para>
			
			<para>
				Si encuentras que tu archivo .jigdo está roto, tendrás que
				descargar un archivo .jigdo nuevo (cuando uno arreglado esté
				disponible), pero <emphasis>no</emphasis> tendrás que descargar
				todos los datos ISO de nuevo.
			</para>

			<para>
				Puedes usar el mismo truco de montar por loop que usamos
				cuando actualizamos una imágen ISO. La diferencia es que no hay un
				archivo .iso terminao para comenzar con él, pero el arcivo .iso.tmp
				es una imágen ISO también y puede usarse para terminar la descarga
				sin tener que descargar de nuevo todos los datos que fueron
				descargados antes que se rompiera el archivo .jigdo haciendo que
				jigdo-lite se detuviera. Simplemente monta el archivo .tmp.iso 
				por loop en <filename role="directory">/tmp</filename> y cuando
				ejecutes jigdo-lite con el archivo .jigdo arreglo, le dices a
				jigdo-lite que expore <filename role="directory">/tmp</filename>.
				No olvides renombrar o mover el archivo .tmp.iso de forma que no
				interfiera con jigdo-lite el cual creará un archivo .tmp.iso nuevo.
			</para>
		</sect2>

		<sect2>
			<title>¿Puedo usar jigdo para descargar imágenes para DVD?</title>

			<para>
				Absolutamente; el proceso es idéntico a la descarga de
				imágenes de CD. Lo único que tienes que hacer diferentes es la
				descarga de los archivos .jigdo y .template para DVD en lugar de
				CDs. Puedes encontrar los archivos .jigdo y .template para DVD en 
				<ulink url="http://www.debian.org/CD/jigdo-cd/">http://www.debian.org/CD/jigdo-cd/</ulink>.
			</para>
		</sect2>

		<sect2>
			<title>¿Puedo quemar el archivo <filename>.iso.tmp</filename> a un CD?</title>

			<para>
				No hemos probado aún, pero debería ser posible. Probablemente
				encontrarías algunos archivos rellenos con "0". Si alguien lo
				intenta, por favor contácteme en <email><ulink url="mailto:p@dirac.org">p@dirac.org</ulink></email>
				y cuéntame que sucedió.
			</para>

			<para>Pero lo que es más importante, ¿por qué querrías hacer éso? &nbsp; :-)</para>
		</sect2>

		<sect2>
			<title>
				¿Por qué jigdo no funciona? Descarga alguns paquetes y
				luegos los borra. Sé que no los escribe al archivo <filename>iso.tmp</filename>
				porque el tamaño del archivo ¡no cambia!
			</title>

			<para>
				Jigdo está funcionando bien - el archivo .iso.tmp es creado al
				comienzo con su tamaño final, pero relleno de bytes cero.
				Posteriormente, partes de él son sobreescritas con los datos
				descargados.
			</para>

			<para>
				Puedes darte cuenta de que jigdo está progresando mirando los
				mensajes "<literal>Found X of the Y files required by
				the template</literal>" que son mostrados de vez en cuando. El
				segundo valor "<literal>Y</literal>" debería disminuir.
				Cuando llegue a cero, la descarga terminó.
			</para>
		</sect2>

		<sect2>
			<title>Tengo problemas para que jigdo-easy funciones</title>

			<para>Consulta <xref linkend="jigdo-easy" />.</para>
		</sect2>

		<sect2 id="wgetoptions">
			<title>Jigdo-lite es demasiado detallada. ¿Cómo	puede suprimir algunos o todos sus mensajes?</title>

			<para>
				Jigdo-lite usa wget y la salida de wget puede ser bastante
				detallada. Si ésto es molesto, puedes hacer que wget sea menos
				detallado agregando <literal>--non-verbose</literal> al switch 
				<literal>wgetOpts</literal> en tu archivo <filename>~/.jigdo-lite</filename>.
				Si quieres que wget no muestre ningún mensaje, usa <literal>--quiet</literal>
				en el switch <literal>wgetOpts</literal> switch.
			</para>
		</sect2>
	</sect1>

	<sect1 id="errata">
		<title>Errata</title>

		<sect2 id="jigdo-easy">
			<title>jigdo-easy</title>

			<para>
				Jigdo-easy, de Anne Bezemer, es una derivación de jigdo-lite
				que es portable a una gran variedad de sistemas, incluyendo Windows.
				Desafortunadamente está desactualizado ahora y no funciona con los
				archivos jigdo de Debian. La autora parece haber perdido interés en
				jigdo-easy y éste proyecto parece estar muerto.
			</para>

			<para>
				No deberías usar jigdo-easy. Sin embargo, jigdo-lite ha sido
				portado a Windows y puede descargarse desde el sitio principal de
				jigdo (<xref linkend="resources" />).
			</para>
		</sect2>

		<sect2>
			<title>Interfaz Gráfica</title>

			<para>
				Actualmente se está trabajando en una interfaz GTK+ para jigdo.
				No es completamente funcional todavía, pero estará disponible en
				algún momento. Habrá un cliente gráfico para Linux así como para Windows.
			</para>
		</sect2>

		<sect2 id="jigdo-file-cache">
			<title>jigdo-file-cache.db</title>
	
			<para>
				El cache contiene las md5sums de los archivos leídos cuando
				provees un directorio en el prompt <literal>Files to scan:</literal>
				si has explorado con jigdo-file el mismo directorio por segunda vez,
				la exploración será muy rápida.
			</para>

			<para>
				Ésto podría ser útil en el siguiente caso: rev0 se actualiza a
				rev1. Con las imágenes de CD de rev1, tal vez algunos paquetes hayan
				sido movidos del CD <literal>n</literal> al CD <literal>n+1</literal>,
				o viceversa. Si posees una conección particularmente lenta (por
				ejemplo un módem), intentarás evitar descargar ésos paquetes de
				nuevo. Por ésta razón, cuando se descargue la nueva versión del CD 
				<literal>n</literal>, tienes que dejar que jigdo-lite explore los
				tres CDs <literal>n-1</literal>, <literal>n</literal> y <literal>n+1</literal>
				(o incluso todos los 8 CDs si quieres estar 100% seguro).
			</para>

			<para>
				Si haces que jigdo-lite explore los mismos CDs una y otra vez
				mientras actualizas cada uno de las 8 imágenes de CD, el cache
				impedirá que sean lean muchas veces todos los datos en los CDs.
			</para>

			<para>
				El cache es mucho más importante cuando se <emphasis>generan</emphasis>
				archivos jigdo, porque no querrás que jigdo-file lea toda tu réplica
				de Debian con 50 GB para cada archivo jigdo generado.
			</para>
		</sect2>

		<sect2 id="resources">
			<title>Recursos</title>

			<para>
				Éste CÓMO está llegando a su fin, pero creo que te dejaré
				algunos enlaces y referencias para aprender más sobre las utilidades
				jigdo y como funcionan.
			</para>

			<variablelist>
				<varlistentry><term><ulink url="http://atterer.net/jigdo">http://atterer.net/jigdo</ulink></term>
					<listitem>
						<para>
							Éste es el sitio de jigdo. Definitivamente
							deberías navegar éste sitio; un montón de información sobre
							portes, clientes gráficos y todo lo que hay bajo el sol sobre
							jigdo.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<ulink url="http://cdimage.debian.org/~costar/jigdo">http://cdimage.debian.org/~costar/jigdo</ulink>
					</term>
					<listitem><para>La página Debian de jigdo-easy. Mira<xref linkend="jigdo-easy" /></para></listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<ulink url="http://www.debian.org/CD/jigdo-cd">http://www.debian.org/CD/jigdo-cd</ulink>
					</term>
					<listitem><para>La página principal de Debian para jigdo.</para></listitem>
				</varlistentry>
			</variablelist>
		</sect2>
	</sect1>
</article>
<!--
vim: tw=128
-->
<!-- don't run as root -->
