<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
              "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article lang="es" id="art-dantonio-req-cliente">
  <articleinfo>
    <title>Clientes Donantonio</title>
    <subtitle>Especificación de requisitos software</subtitle>
    <author>
      <firstname>Juan José</firstname>
      <surname>Amor</surname>
    </author>
    <author>
      <firstname>David</firstname>
      <surname>Escorial</surname>
    </author>
    <author>
      <firstname>Ismael</firstname>
      <surname>Olea</surname>
    </author>
    <pubdate>$Id: doc-ers_ieee830-donantonio-cliente.xml,v 1.5 2002/11/17 15:06:16 manuelcanales Exp $</pubdate>
  </articleinfo>
  <sect1>
    <title>Introducción</title>
    <para>
Este documento es una Especificación de Requisitos Software (ERS) para el
subsistema cliente del sistema bibliográfico de publicación
distribuida automática Donantonio. Todo su contenido ha sido
elaborado teniendo en cuenta las necesidades observadas 
en la experiencia de los autores en publicación en Internet. Esta
especificación se ha estructurado inspirándose en las directrices dadas por
el estándar IEEE <emphasis remap="it">Recommended Practice for Software Requirements
Specification ANSI/IEEE 830 1998</emphasis>.
</para>
    <sect2>
      <title>Propósito </title>
      <para/>
      <para>
El objeto de la especificación es definir de manera clara y precisa todas
las funcionalidades y restricciones del sistema que se desea construir. El
documento va dirigido tanto al equipo de desarrollo, como a los integrantes de
los proyectos de documentación libre y a la comunidad de posibles usuarios
finales. Este documento será el canal de comunicación entre las partes
implicadas, tomando parte en su confección miembros de cada parte. Esta
especificación está sujeta a revisiones por las partes implicadas,
especialmente por los potenciales usuarios, que se recogerán por medio de
sucesivas versiones del documento, hasta alcanzar su aprobación. Una vez
aprobado servirá de base al equipo de desarrollo para la construcción del
nuevo sistema.
</para>
    </sect2>
    <sect2>
      <title>Ámbito del sistema</title>
      <para>
Este sistema es requerido a raíz de la creciente complicación de las
labores de publicación de documentación del software libre.
</para>
      <para>
Se ha constatado la necesidad de un sistema informático que automatice
las labores de publicación de documentos en Internet, de tal forma que
se garantice la fácil localización de los mismos y una rápida puesta a
disposición a los usuarios.
</para>
      <para>
Usando normas bibliográficas puede generalizarse el uso y aplicación del
sistema a cualquier tipo de información susceptible de ser clasificada.
</para>
      <para>
El ámbito del sistema desarrollado llega hasta la realización de
los clientes de Donantonio; prefiriéndose el diseño de un
sistema que pueda ser empotrado en otras aplicaciones afines para que éstas
puedan a su vez ser aplicaciones compatibles con otros módulos Donantonio.
</para>
    </sect2>
    <sect2>
      <title>Definiciones, acrónimos y abreviaturas</title>
      <sect3>
        <title>Definiciones</title>
        <para>
          <variablelist>
            <varlistentry>
              <term>Recurso</term>
              <listitem>
                <para>
Elemento accesible a través de una URL
susceptible de ser clasificado bibliográficamente.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Esquema</term>
              <listitem>
                <para>
Describe la sintaxis de una descripción.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Descripción</term>
              <listitem>
                <para>
Instancia de un esquema que identifica
mediante metadatos, de manera inequívoca a un recurso.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Biblioteca</term>
              <listitem>
                <para>
Colección de descripciones.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Servidor</term>
              <listitem>
                <para>
Nodo que atiende consultas donantonio.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Cliente</term>
              <listitem>
                <para>
Nodo que genera consultas donantonio.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Consulta</term>
              <listitem>
                <para>
Petición de un subconjunto de descripciones
expresada en un lenguaje  normalizado.
</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </para>
      </sect3>
      <sect3>
        <title>Acrónimos</title>
        <para>
          <variablelist>
            <varlistentry>
              <term>ERS</term>
              <listitem>
                <para>
Documento de Especificación de Requisitos Software.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>GFDL</term>
              <listitem>
                <para>
Licencia para Documentación Libre de GNU.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>GPL</term>
              <listitem>
                <para>
Licencia para Software Libre de GNU.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>RDF</term>
              <listitem>
                <para>
Resource Description Framework, estándar del
consorcio de World Wide Web (W3C) para la codificación y manejo
de metadatos usando el lenguaje de marcas XML.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>URL</term>
              <listitem>
                <para>
Uniform Resource Locator, esquema utilizado para
la localización de un recurso en Internet.
</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>XML</term>
              <listitem>
                <para>
eXtended Markup Language. Lenguaje de marcas
estructuradas, estándar del W3C.
</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </para>
      </sect3>
      <sect3>
        <title>Abreviaturas</title>
        <para>
No se han definido.
</para>
      </sect3>
    </sect2>
    <sect2>
      <title>Referencias</title>
      <para>
        <itemizedlist>
          <listitem>
            <para>
IEEE Recommended Practice for Software Requirements
Specification. ANSI/IEEE std. 830, 1998.

</para>
          </listitem>
          <listitem>
            <para>
Donantonio: sistema bibliográfico de publicación distribuida
automática. Especificación de requisitos software. J.J. Amor,
D. Escorial e I. Olea, 2000.

</para>
          </listitem>
          <listitem>
            <para>
Servidores Donantonio. Especificación de requisitos software. J.J. Amor,
D. Escorial e I. Olea, 2000.
</para>
          </listitem>
        </itemizedlist>
      </para>
    </sect2>
    <sect2>
      <title>Visión general del documento</title>
      <para>
Este documento consta de tres secciones. Esta sección es la
Introducción y proporciona una visión general de la ERS. En la Sección
2 se da una descripción general del sistema, con el fin de conocer las
principales funciones que debe realizar, los datos asociados y los
factores, restricciones, supuestos y dependencias que afectan al
desarrollo, sin entrar en excesivos detalles. En la sección 3 se
definen detalladamente los requisitos que debe satisfacer el sistema.
</para>
    </sect2>
  </sect1>
  <sect1>
    <title>Descripción general</title>
    <sect2>
      <title>Perspectiva del producto</title>
      <para>
El cliente donantonio interactuará con servidores, mediante un
protocolo que deberá definirse.
</para>
    </sect2>
    <sect2>
      <title>Funciones del sistema</title>
      <sect3>
        <title>Acceso a recursos</title>
        <para>
El cliente podrá obtener de los servidores donantonio la información que
su administrador determine, en forma de conjuntos de descripciones de
recursos (metadatos).
</para>
        <para>
Los metadatos que obtienen los clientes describen el recurso, y éste
no se encontrará necesariamente localizado en el servidor que
proporcionó la descripción.
</para>
      </sect3>
      <sect3>
        <title>Biblioteca local</title>
        <para>
El cliente mantendrá, con las descripciones obtenidas de los
servidores, una biblioteca local que se ajusta a los requisitos del
administrador del cliente.
</para>
      </sect3>
      <sect3>
        <title>Consulta y replicación de descripciones</title>
        <para>
Los clientes donantonio incluirán mecanismos o protocolos para
realizar una réplica total o parcial de las descripciones almacenadas
en un servidor.
</para>
        <para>
Los clientes, para este fin, elaborarán consultas en un determinado
lenguaje que deberá definirse. El lenguaje de consulta permitirá
obtener como respuesta una o más descripciones, en función del patrón
de consulta utilizado.
</para>
      </sect3>
      <sect3>
        <title>Acceso del usuario a recursos</title>
        <para>
El cliente o la biblioteca del cliente deberá aceptar también
consultas de información que interactivamente efectúe un usuario, a
través de una aplicación tipo <emphasis remap="it">interfaz de usuario donantonio</emphasis>.
</para>
      </sect3>
      <sect3>
        <title>Acceso del usuario a configuración</title>
        <para>
El cliente podrá ser configurado desde una interfaz de usuario. Por
configurar un cliente se entiende establecer de qué servidores va a
obtener la información, y cómo (mediante qué consultas).
</para>
      </sect3>
    </sect2>
    <sect2>
      <title>Características de los usuarios</title>
      <para>
Las interfaces de usuario que puedan requerirse para esta aplicación
deberán ser de manejo intuitivo, fácil de aprender y sencillo de
manejar. El sistema deberá presentar un alto grado de usabilidad.
</para>
    </sect2>
    <sect2>
      <title>Restricciones</title>
      <para>
El sistema será software libre (de acuerdo con la licencia GNU-GPL o
similar) y deberán ser libres aquellos componentes que reutilice.
</para>
      <para>
El sistema se diseñará según un modelo cliente/servidor.
</para>
      <para>
El sistema basará sus comunicaciones en protocolos estándar de
Internet.
</para>
      <para>
Los distintos subsistemas deberán tener un diseño e implementación
sencillos, independientes de la plataforma o el lenguaje de
programación.
</para>
      <para>
        <emphasis remap="it">Nota: El requisito «Los clientes deben ser capaces de atender a
varias peticiones de usuario simultáneamente» parece más que un
requisito actual una interesante mejora...</emphasis>
      </para>
    </sect2>
    <sect2>
      <title>Suposiciones y dependencias</title>
      <sect3>
        <title>Suposiciones </title>
        <para>
 
Se asume que los requisitos descritos en este documento son estables una vez
que sea aprobado por el equipo de diseño atendiendo sugerencias de la
comunidad. Cualquier petición de cambios en la especificación debe ser
aprobada por el equipo de diseño y gestionada por el mismo.
</para>
      </sect3>
      <sect3>
        <title>Dependencias</title>
        <para>
El cliente Donantonio requiere comunicarse con servidores para
mantener su biblioteca. Por tanto hay una dependencia de la
funcionalidad que ofrezcan éstos.
</para>
      </sect3>
    </sect2>
  </sect1>
  <sect1>
    <title>Requisitos específicos</title>
    <para>
En este apartado se presentan los requisitos funcionales que deberán
ser satisfechos por el sistema. Todos los requisitos aquí expuestos
son ESENCIALES, es decir, no sería aceptable un sistema que no
satisfaga alguno de los requisitos aquí presentados. Estos requisitos
se han especificado teniendo en cuenta, entre otros, el criterio de
demostrabilidad : dado un requisito, debería ser fácilmente demostrable
si es satisfecho o no por el sistema.
</para>
    <para>
      <emphasis remap="it">Nota: Es conveniente hacer la «matriz de requisitos», que
confronta los requisitos con el método de verificación.</emphasis>
    </para>
    <sect2>
      <title>Requisitos funcionales</title>
      <sect3>
        <title>REQ01: Selección de descripciones</title>
        <para>
Todo cliente donantonio implementará mecanismos de consulta que permitan
acceder en un servidor a un conjunto de las descripciones que éste dispone.
</para>
      </sect3>
      <sect3>
        <title>REQ02: Replicación de descripciones</title>
        <para>
Todo cliente donantonio podrá replicar un conjunto de descripciones
obtenidas desde un servidor donantonio mediante un criterio de
selección de los definidos en REQ01.
</para>
      </sect3>
      <sect3>
        <title>REQ03: Almacenamiento de descripciones</title>
        <para>
Todo cliente tendrá una biblioteca local donde almacenará las
descripciones que obtenga mediante consultas de los servidores.
</para>
      </sect3>
      <sect3>
        <title>REQ04: Unicidad de las descripciones</title>
        <para>
Las descripciones deberán ser únicas en la biblioteca de cada cliente.
</para>
      </sect3>
      <sect3>
        <title>REQ05: Programación de consultas</title>
        <para>
Todo cliente almacenará internamente las diferentes consultas que
realizará periódicamente para actualizar el contenido de su
biblioteca. La programación de consultas consistirá en ajustar toda la
información necesaria para ejecutarlas (la propia consulta, el
servidor contra el que se ejecuta y cuándo se ejecuta).
</para>
      </sect3>
    </sect2>
    <sect2>
      <title>Requisitos de interfaces externos</title>
      <sect3>
        <title>Interfaces de usuario</title>
        <sect4>
          <title>REQ06: Interfaz de usuario.</title>
          <para>
El cliente donantonio podrá configurar todas sus funciones mediante
una interfaz de usuario sencilla de utilizar.
</para>
        </sect4>
      </sect3>
      <sect3>
        <title>Interfaces hardware</title>
        <para>
No se han definido.
</para>
      </sect3>
      <sect3>
        <title>Interfaces software</title>
        <sect4>
          <title>REQ07: Comunicación con otros módulos</title>
          <para>
La comunicación de los clientes donantonio con los servidores se
realizará mediante protocolos basados en estándares que permitan
cumplir los demás requisitos del sistema.
</para>
        </sect4>
      </sect3>
      <sect3>
        <title>Interfaces de comunicación</title>
        <sect4>
          <title>REQ08: Protocolos estándares en Internet</title>
          <para>
Los servidores, clientes y aplicaciones donantonio se comunicarán
entre sí mediante protocolos estándares en Internet, siempre que sea
posible. Por ejemplo, para transferir ficheros (recursos o bloques de
descripciones) deberán utilizarse protocolos existentes (FTP u otro
conveniente).
</para>
        </sect4>
      </sect3>
    </sect2>
    <sect2>
      <title>Requisitos de rendimiento</title>
      <sect3>
        <title>REQ09: Tiempo de respuesta</title>
        <para>
Los tiempos de respuesta a las consultas de la biblioteca local
procedentes de un interfaz de usuario deberán ser reducidos.
</para>
      </sect3>
    </sect2>
    <sect2>
      <title>Requisitos de desarrollo</title>
      <sect3>
        <title>REQ10: Ciclo de vida.</title>
        <para>
El ciclo de vida elegido para desarrollar el sistema será el de
prototipo evolutivo, de manera que se puedan incorporar fácilmente
cambios y nuevas funciones.
</para>
      </sect3>
    </sect2>
    <sect2>
      <title>Requisitos tecnológicos</title>
      <sect3>
        <title>REQ11: Normas bibliográficas</title>
        <para>
Los esquemas bibliográficos a usar en el sistema estarán expresados en RDF.
</para>
      </sect3>
    </sect2>
    <sect2>
      <title>Atributos</title>
      <sect3>
        <title>REQ12: Software libre</title>
        <para>
El sistema será software libre y, por tanto, cualquier componente software que
reutilice también deberá ser libre.
</para>
      </sect3>
      <sect3>
        <title>REQ13: Portabilidad</title>
        <para>
El sistema será diseñado portable. Deberá ser posible implantar
aplicaciones donantonio en diversos lenguajes y plataformas.
</para>
      </sect3>
      <sect3>
        <title>REQ14: Mantenibilidad</title>
        <para>
El sistema es susceptible de ser ampliado. Por tanto deberá
diseñarse fácilmente mantenible, aplicando para su desarrollo las
metodologías que para ello sean precisas.
</para>
      </sect3>
    </sect2>
    <sect2>
      <title>Otros requisitos</title>
      <para/>
    </sect2>
  </sect1>
  <sect1>
    <title>Apéndices</title>
    <sect2>
      <title>Licencia</title>
      <para>
Donantonio: Especificación de Requisitos Software
</para>
      <para>
Copyright (C) 2000 Juan J. Amor, David Escorial e Ismael Olea.
</para>
      <para>
Se otorga permiso para reproducir total o parcialmente este
documento, siempre y cuando se cite la fuente. Cualquier
modificación de este documento deberá ser aprobada por los autores. 
</para>
    </sect2>
  </sect1>
</article>
