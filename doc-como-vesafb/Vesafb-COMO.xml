<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article lang="es">
<articleinfo>
	<!--
	Para maquetar el documento he usado en vez de <IT> <emphasis> y en vez de <TT>
	<prompt>
	-->
        <title>Vesafb Mini-COMO</title>
                <author>
                         <firstname>Alex</firstname>
		         <surname>Buell</surname>
		         <affiliation>
			        <address><email>alex.buell@tahallah.demon.co.uk</email></address>
		        </affiliation>
                        <contrib>Autor</contrib>
                </author>
                <author>
		        <firstname>Jesús</firstname>
		        <surname>Martínez Mateo</surname>
		        <affiliation>
			        <address><email>jmartinez@sportec.es</email></address>
		        </affiliation>
		        <contrib>Traductor</contrib>
	</author>

        <revhistory>
			<revision>
				<revnumber>v0.5</revnumber>
				<date>2 de Agosto de 1998</date>

			</revision>
	                <revision>
				<revnumber>v0.5</revnumber>
				<date>28 de Noviembre de 1999.</date>
                                <revremark>Traducción</revremark>
			</revision>

        </revhistory>

        <abstract>
                <para>
                        Este documento describe cómo usar el dispositivo vesafb bajo Linux con una
                        tarjeta gráfica compatible VESA 2.0 en plataformas Intel.
                </para>
        </abstract>
</articleinfo>
<!--Toc-->

<sect1>
        <title>Aportaciones</title>
        <para></para>
        <para>
                Gracias a todas las personas nombradas a continuación por su ayuda en la
                mejora de este documento (Vesafb Mini-HOWTO).
        </para>
        <para>
                <itemizedlist>
                        <listitem>
				<para>
				<emphasis>Jeff Noxon </emphasis><email>jeff@planetfall.com</email>
				</para>
                	</listitem>

                	<listitem>
				<para>
				<emphasis>Francis Devereux </emphasis><email>f.devereux@cs.ucl.ac.uk</email>
                		</para>
			</listitem>

                	<listitem>
				<para>
				<emphasis>Andreas Ehliar </emphasis><email>ehliar@futurniture.se</email>
				</para>
			</listitem>

                	<listitem>
				<para>
				<emphasis>Martin McCarthy </emphasis><email>marty@ehabitat.demon.co.uk</email>
                		</para>
			</listitem>

                	<listitem>
				<para>
				<emphasis>Simon Kenyon </emphasis><email>simon@koala.ie</email>
                		</para>
			</listitem>

                	<listitem>
				<para>
				<emphasis>David Ford </emphasis><email>david@kalifornia.com</email>
                		</para>
			</listitem>

                	<listitem>
				<para>
				<emphasis>Chris Negro </emphasis><email>cblack@cmpteam4.unil.ch</email>
                		</para>
			</listitem>

                	<listitem>
				<para>
				<emphasis>N Becker </emphasis><email>nbecker@fred.net</email>
                		</para>
			</listitem>

                	<listitem>
				<para>
				<emphasis>Bob Tracy </emphasis><email>rct@gherkin.sa.wlk.com</email>
                		</para>
			</listitem>

                	<listitem>
				<para>
				<emphasis>Marius Hjelle</emphasis><email> marius.hjelle@roman.uib.no</email>
                		</para>
			</listitem>

                	<listitem>
				<para>
				<emphasis>Aaron Tiensivu </emphasis><email>tiensivu@pilot.msu.edu</email>
                		</para>
			</listitem>
                </itemizedlist>
        </para>
        <para>
                y por supuesto los autores de los dispositivos framebuffer:
        </para>
        <para>
                <itemizedlist>
                        <listitem>
				<para>
				<emphasis>Gerd Knorr </emphasis><email>kraxel@cs.tu-berlin.de</email>
                        	</para>
			</listitem>

                        <listitem>
				<para>
				<emphasis>Geert Uytterhoeven </emphasis><email>Geert.Uytterhoeven@cs.kuleuven.ac.be</email>
				</para>
			</listitem>

                        <listitem>
				<para>
				<emphasis>Martin Mares </emphasis><email>mj@ucw.cz</email>
                        	</para>
			</listitem>
                </itemizedlist>
        </para>
        <para>
                Y a todas aquellas personas que deberían aparecer en este documento y no
                aparecen. :o)
        </para>
        <para></para>
</sect1>
<sect1>
        <title> ¿Qué es vesafb? </title>
        <para></para>
        <para>
                Vesafb es un controlador framebuffer para la arquitectura Intel que
                trabaja con las tarjetas gráficas compatibles con la norma VESA 2.0.
                Este <emphasis>driver</emphasis> se encuentra estrechamente relacionado dentro
                del núcleo con los controladores de dispositivo para framebuffer.
        </para>
        <para>
                Vesafb es un <emphasis> drivera</emphasis> de pantalla que habilita el uso de modos
                gráficos en la plataforma Intel para las consolas de texto mediante
                mapas de bits(<emphasis>bitmapping</emphasis>). También permite desplegar un logotipo que
                probablemente es la razón principal por la que quiere usar vesafb <!--TT-->:o)
        </para>
        <para>
                Desgraciadamente, no puede usar vesafb con las tarjetas que soportan la
                norma VESA 1.2. Esto es debido a que estas tarjetas no usan <emphasis>framebufferinga</emphasis>.
                Puede ser que alguien decida escribir un driver de dispositivo (<prompt>vesafb12</prompt>) para
                estas tarjetas, pero esto usaría la preciada memoria del núcleo. <prompt>:o(</prompt>
        </para>
        <para>
                Sin embargo, existe la posibilidad de habilitar extensiones VESA 2.0 para
                tarjetas VESA 1.2.
        </para>
        <para>
                Puede conseguir un tipo de programa TSR que se ejecutarí desde DOS, y
                usado en conjunción con loadlin, puede ayudar a configurar la tarjeta para
                los modos gráficos de consola apropiados.
        </para>
        <para>
                Tenga en cuenta que esto no siempre funcionará, por ejemplo algunas
                tarjetas como la serie VLB 54xx de Cirrus Logic son mapeadas en un rango
                de direcciones de memoria (por ejemplo, dentro del rango 15MB-16MB) que
                exigen al sistema tener más de 32MB de memoria para funcionar.
        </para>
        <para>
                (Hay una manera de solucionar esto, si tiene una opción en la BIOS para
                dejar un hueco de memoria en el rango 15MB-16MB, podría funcionar, pero me
                han dicho que Linux no soporta esto). Si desea experimentar con esta
                opción, hay un completo repertorio de programas TSR disponibles (un
                ejemplo de ellos es UNIVBE) que pueden encontrarse en Internet.
        </para>
        <para></para>
</sect1>
<sect1>
        <title> ¿Qué es un dispositivo framebuffer? </title>
        <para></para>
        <para>
                Un dispositivo framebuffer es una abstracción para el hardware gráfico.
                Representa un buffer de imagen para el hardware de vídeo, y permite a las
                aplicaciones software acceder al hardware gráfico a través de una interfaz
                bien definida, de manera que el software no necesita saber nada sobre la
                interfaz de bajo nivel (Tomado de <prompt>/Documentation/fb/framebuffer.txt</prompt>
                de Geert Uytterhoeven en las fuentes del kernel de linux).
        </para>
        <para></para>
</sect1>
<sect1>
        <title> ¿Cómo activo los drivers vesafb? </title>
        <para></para>
        <para>
                (nota: La información esta basada en lo que sé y he logrado usando el
                núcleo de Linux <prompt>2.1.112</prompt> en un P75+ con una tarjeta gráfica ATI
                VideoExpress 2MB. No dude en enviarme un e-mail con información o casos
                especiales para tarjetas gráficas diferentes).
        </para>
        <para>
                Asumiendo que usa <prompt> menuconfig</prompt> necesitará realizar los siguientes
                pasos:
        </para>
        <para>
                Entre en la sección <emphasis>Code Maturity Level</emphasis> del menú,
                y habilite la opción para desarrollo y/o drivers incompletos (<emphasis>
                Development and/or Incomplete Drivers</emphasis>)
                (nota: esto puede cambiar para núcleos futuros -cuando esto suceda,
                este HOWTO será revisado).
        </para>
        <para>
                Entre en el sub-menú de dispositivos de consola (<emphasis>Console Drivers</emphasis>),
                y habilite lo siguiente:
        </para>
        <para>
                <itemizedlist>

                        <listitem>
				<para>
                                <emphasis>VGA Text Console</emphasis>
                        	</para>
			</listitem>

                        <listitem>
				<para>
                                <emphasis>Video Selection Support</emphasis>
                        	</para>
			</listitem>

                        <listitem>
                        	<para>
				<emphasis>Support for frame buffer devices (experimental)</emphasis>
                        	</para>
			</listitem>

                        <listitem>
                        	<para>
				<emphasis>VESA VGA Graphic console</emphasis>
                        	</para>
			</listitem>

                        <listitem>
                                <para>
				<emphasis>Advanced Low Level Drivers</emphasis>
				</para>
			</listitem>

                        <listitem>
				<para>
                                <emphasis>Select Mono, 2bpp, 4bpp, 8bpp, 16bpp, 24bpp y 32bpp packed</emphasis>
                        	</para>
			</listitem>

			<listitem>
				<para>
                                <emphasis>Pixel drivers</emphasis>
                        	</para>
			</listitem>

                        <listitem>
				<para>
				<emphasis>VGA character/attributes support</emphasis>
                        	</para>
			</listitem>
                </itemizedlist>
        </para>
        <para>
                <emphasis>VGA Chipset Support (text only)</emphasis>
                (<prompt>vgafb</prompt>) era parte de la lista anterior, pero ha
                sido eliminado ya que está obsoleto y no será soportado. Se eliminará
                en breve. Use <emphasis>VGA Text Console</emphasis> en su lugar.
        </para>
        <para>
                Asegúrese de que <emphasis>Mac variable bpp packed pixel support</emphasis>
                no está habilitado (A partir del <prompt>2.1.111</prompt>, esto parece
                habilitarse si los <emphasis>Advanced Low Level Drivers</emphasis> son seleccionados
                inicialmente). Asegúrese de que no sean módulos (No es seguro que sea posible compilarlos
                todavía como módulos; por favor corríjame si me equivoco en esto).
        </para>
        <para>
                A continuación, recompile el núcleo, modifique el fichero <prompt>
                /etc/lilo.conf</prompt> de modo que incluya el parámetro <prompt>VGA=ASK</prompt>,
                y ejecute (instalando) <prompt>lilo</prompt>, esto permitirá seleccionar el
		modo deseado en el momento de arrancar.
	</para>
	<para>
		Reinicie, y como prueba, introduzca la entrada <prompt>0301</prompt> tras la
		solicitud VGA (esto le dará una resolución de 640x480 a 256 colores), y
		deberá verse un logotipo con un pequeño Pinggüino durante el arranque.
	</para>
	<para>
		Una vez que pueda ver esto funcionando, puede explorar los distintos modos
		VESA (ver abajo) y decidir cuál es el que más le gusta, fije el parámetro
		"<prompt>VGA=x</prompt>" en el fichero <prompt>/etc/lilo.conf</prompt>. Cuando haya
		escogido el que más le guste, consulte el valor decimal equivalente de las
		tablas siguientes y use el número decimal correspondiente (es decir, para
		una resolución de 1280x1024 a 256 colores, debe usar el valor "<prompt>VGA=775</prompt>"),
		y re-ejecutar <prompt>lilo</prompt>. !Esto es todo!.
	</para>
	<para>
		Para referencias más extensas, leer los documentos relacionados con
		LoadLin y LILO.
	</para>
	<para></para>
</sect1>
<sect1>
	<title>¿Qué modos VESA están disponibles? </title>
	<para></para>
	<para>
		Esto realmente depende del tipo de tarjeta gráfica compatible con la
		norma VESA 2.0 que tenga en su sistema, y de la cantidad de memoria
		de vídeo disponible. El procedimiento anterior es sólo una manera de
		comprobar qué modos funcionan mejor con su tarjeta gráfica.
	</para>
	<para>
		La siguiente tabla muestra los números de los modos que puede utilizar
		en la solicitud del parámetro VGA (realmente, a estos modos se le han
		sumado el valor 0x200 para facilitar su referencia en la tabla):
	</para>
	<para>
	<table frame="all">
      		<title>Parámetros VGA</title>
      		<tgroup cols="6">
		<thead>
          		<row>
            			<entry>Colores</entry>
            			<entry>640x480</entry>
				<entry>800x600</entry>
				<entry>1024x768</entry>
				<entry>1280x1024</entry>
				<entry>1600x1200</entry>
          		</row>
        	</thead>
		<tbody>
			<row>
            			<entry>256</entry>
            			<entry>0301</entry>
				<entry>0303</entry>
				<entry>0305</entry>
				<entry>0307</entry>
				<entry>031C</entry>
          		</row>
			<row>
            			<entry>32,768</entry>
            			<entry>0310</entry>
				<entry>0313</entry>
				<entry>0316</entry>
				<entry>0319</entry>
				<entry>031D</entry>
          		</row>
			<row>
            			<entry>65,536</entry>
            			<entry>0311</entry>
				<entry>0314</entry>
				<entry>0317</entry>
				<entry>031A</entry>
				<entry>031E</entry>
          		</row>
			<row>
            			<entry>16.8M</entry>
            			<entry>0312</entry>
				<entry>0315</entry>
				<entry>0318</entry>
				<entry>031B</entry>
				<entry>031F</entry>
          		</row>
		</tbody>
		</tgroup>
	</table>
	</para>
	<para>La misma tabla expresada en términos decimales:</para>

	<para>
	<table frame="all">
      		<title>Parámetros VGA</title>
      		<tgroup cols="6">
		<thead>
          		<row>
            			<entry>Colores</entry>
            			<entry>640x480</entry>
				<entry>800x600</entry>
				<entry>1024x768</entry>
				<entry>1280x1024</entry>
				<entry>1600x1200</entry>
          		</row>
        	</thead>
		<tbody>
			<row>
            			<entry>256</entry>
            			<entry>769</entry>
				<entry>771</entry>
				<entry>773</entry>
				<entry>775</entry>
				<entry>796</entry>
          		</row>
			<row>
            			<entry>32,768</entry>
            			<entry>784</entry>
				<entry>787</entry>
				<entry>790</entry>
				<entry>793</entry>
				<entry>797</entry>
          		</row>
			<row>
            			<entry>65,536</entry>
            			<entry>785</entry>
				<entry>788</entry>
				<entry>791</entry>
				<entry>794</entry>
				<entry>798</entry>
          		</row>
			<row>
            			<entry>16.8M</entry>
            			<entry>786</entry>
				<entry>789</entry>
				<entry>792</entry>
				<entry>795</entry>
				<entry>799</entry>
          		</row>
		</tbody>
		</tgroup>
	</table>
	</para>


	<tip>
		<para>
			(El autor estaría agradecido si le pudiera proporcionar los
			identificadores <prompt>03xx</prompt> para los modos adicionales,
			esto es, 1152x900)
		</para>
	</tip>

</sect1>

<sect1>
	<title>¿Hay algún driver X11 para vesafb?</title>
	<para></para>
	<para>
		Sí, lo hay. Necesitará usar el driver <prompt>XF86&lowbar;FBdev</prompt> 
		si por alguna razón su driver X11 actual no es compatible con 
		<prompt>vesafb</prompt>. Vaya a la página <ulink url="http://www.xfree86.org">
		http://www.xfree86.org</ulink>, y baje el archivo <prompt>X332servonly.tgz</prompt>, 
		desempaquételo, configúrelo revisando <prompt>xc/config/cf/xf86site.def</prompt>, y 
		active el <prompt>&num;define</prompt> para <prompt>XF68FBDevServer</prompt>. No se 
		preocupe por la referencia m68k, esta soporta plataformas Intel. Recompílelo todo 
		- tardará un tiempo considerable en función del tamaño del código fuente.
	</para>
	<para>
		Todavía hay algo más, no hay disponible ningún <prompt>XF86&lowbar;FBdev</prompt> binario
		precompilado, pero creo que Debian puede estar trabajando en esto; y ellos podrán producir 
		las dos variantes, <emphasis>libc5</emphasis> y <prompt>glibc2</prompt>.
	</para>
	<para>
		Ha habido informes de que X11 no funciona con ciertas tarjetas gráficas si esta característica 
		vesafb está habilitada, si esto le ocurre, pruebe el nuevo driver <prompt>XF86&lowbar;FBdev</prompt> 
		para X11.
	</para>
	<para>
		Este driver, junto con el <prompt>vesafb</prompt> también puede ayudar a ejecutar X11
		en resoluciones gráficas mayores con algunos chipsets gráficos que no son soportados por los drivers 
		X11 actuales. Algunos ejemplos son MGA G-200 y similares.
	</para>
	<para>
		Afortunadamente se solucionarán los problemas de X11 con el soporte de
		estas tarjetas gráficas en futuras versiones.
	</para>
	<para></para>
</sect1>
<sect1>
	<title>¿Puedo compilar vesafb como módulo? </title>
	<para></para>
	<para>
		A partir del núcleo <prompt>2.1.112</prompt>, los vesafb no pueden ser modularizados,
		aunque con el tiempo, algún desarrollador de <prompt>vesafb</prompt> puede decidir
		modificar los fuentes para permitir la modularización. Tenga en cuenta que
		incluso si fuera posible la modularización, durante el arranque no podría
		ver nada en la pantalla hasta que el driver <prompt>vesafb</prompt> fuera cargado (vía
		<prompt>modprobe</prompt> o mediante una imagen <prompt>initrd</prompt>). Por esta
		razón, es una decisión inteligente dejarlo en el núcleo, para aquellos casos en los que
		existan problemas de arranque.
	</para>
	<para></para>
</sect1>
<sect1>
	<title>Miscelánea y Advertencias </title>
	<para></para>
	<para>
		Esto sólo es válido para versiones del núcleo <prompt>2.1.112</prompt>. Este COMO
		será continuamente actualizado siguiendo los progresos de desarrollo del
		núcleo. No dude en mandarme un email con información o críticas <prompt>:o)</prompt>
	</para>
	<para>
		Otro asunto es que el <emphasis>scrollback buffering</emphasis> no funciona todavía. 
		Puede que sea solucionado en futuras versiones.
	</para>
	<para></para>
</sect1>
<sect1>
	<title>Traducción</title>
	<para></para>
	<para>
		Este documento ha sido traducido por el grupo <emphasis>Linux-Kfe</emphasis>. Puede
		visitar nuestra página en la siguiente dirección:
		<ulink url="http://members.es.tripod.de/linuxkfe">http://members.es.tripod.de/linuxkfe
		</ulink>(también puede utilizar el enlace:
		<ulink url="http://go.to/linuxkfe">http://go.to/linuxkfe</ulink>).
	</para>
	<para>
		Actualmente gestionamos este grupo las siguientes personas:
	</para>


	<para>
	<itemizedlist>
		<listitem>
			<para>Director del Proyecto:</para>
			<para>
				Jesús Martínez Mateo
			</para>
			<para>
				<email>jmartinez@sportec.es</email>
			</para>
			<para>
				<email>kfetro@cajamurcia.es</email>
			</para>
		</listitem>
		<listitem>
			<para>Coordinador:</para>
			<para>Juan José Roldán Guerrero </para>
			<para>
				<email>jroldan@sportec.es</email>
			</para>
		</listitem>
		<listitem>
			<para> Coordinador</para>
			<para>
				Pedro Ruiz Maldonado
			</para>
			<para>
				<email>bigplac@newmail.net</email>
			</para>
		</listitem>
	</itemizedlist>
	</para>

	<para>
		Si desea colaborar con nosotros en futuras traducciones y distintos
		proyectos relacionados con el mundo de Linux (o si simplemente desea
		realizar alguna aportación, crítica o sugerencia), envíe un e-mail a la
		siguiente dirección: <email>linuxkfe@lycosmail.com</email>.
	</para>
	<para>
		Procuraremos atenderle lo antes posible, de todas formas, si lo cree
		conveniente puede dirigirse de forma directa a cualquiera de los
		coordinadores nombrados anteriormente.
	</para>
	<para>
		Traducción: Jesús Martínez Mateo.
	</para>
		<para>Versión: 0.1</para>
		<para>Fecha: 28 de Noviembre 1999</para>



</sect1>

</article>
