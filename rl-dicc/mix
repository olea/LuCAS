#!/usr/bin/awk -f
# mix
# mezcla los varios ficheros de diccionario y glosario
# debe usarse:
# ./mix arch1 arch2 ...
#
# $Id: mix,v 1.2 2000/11/17 04:11:07 cballard Exp $
# Copyright (C) 2000 César Ballardini
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# 
#
function registrar(item){
	print item >> bitacora;
}
function mangle(s,     salida){
	salida=s;
	gsub(espacio, "_", salida);
	gsub("/", "_", salida);
	gsub("\015", "", salida);
	return salida;
}
function pc850toiso88591(s1,       s2,i){
	s2="";
	limite=sprintf("%c", 128);
	for (i=1; i<=length(s1); i++)
	{
		viejo=substr(s1,i,1);
		if (viejo < limite)
			s2=s2 viejo;
		else {
			nuevo=trad[viejo];
			if (nuevo != nil)
				s2=s2 nuevo;
			else
				s2=s2"[["viejo"]]";
		}
	}

	return s2;
}
function instala_tr(orig,sustituto){
	caracter=sprintf("%c",orig);
	trad[caracter]=sprintf("%c",sustituto);
	
}
function instala_850to88591(){
	instala_tr("\200","\307"); # 0x80	0xc7	# C cedilla
	instala_tr("\201","\374"); # 0x81	0xfc	# u umlaut
	instala_tr("\202","\351"); # 0x82	0xe9	# e acute

	instala_tr("\203","\342"); # 0x83	0xe2	# a circumflex
	instala_tr("\204","\344"); # 0x84	0xe4	# a umlaut
	instala_tr("\205","\340"); # 0x85	0xe0	# a grave

	instala_tr("\206","\345"); # 0x86	0xe5	# a ring
	instala_tr("\207","\347"); # 0x87	0xe7	# c cedilla
	instala_tr("\210","\352"); # 0x88	0xea	# e circumflex

	instala_tr("\211","\353"); # 0x89	0xeb	# e umlaut
	instala_tr("\212","\350"); # 0x8a	0xe8	# e grave
	instala_tr("\213","\357"); # 0x8b	0xef	# i umlaut

	instala_tr("\214","\356"); # 0x8c	0xee	# i circumflex
	instala_tr("\215","\354"); # 0x8d	0xec	# i grave
	instala_tr("\216","\304"); # 0x8e	0xc4	# A umlaut

	instala_tr("\217","\305"); # 0x8f	0xc5	# A ring
	instala_tr("\220","\311"); # 0x90	0xc9	# E acute
	instala_tr("\221","\346"); # 0x91	0xe6	# ae ligature

	instala_tr("\222","\306"); # 0x92	0xc6	# AE ligature
	instala_tr("\223","\364"); # 0x93	0xf4	# o circumflex
	instala_tr("\224","\366"); # 0x94	0xf6	# o umlaut

	instala_tr("\225","\362"); # 0x95	0xf2	# o grave
	instala_tr("\226","\373"); # 0x96	0xfb	# u circumflex
	instala_tr("\227","\371"); # 0x97	0xf9	# u grave

	instala_tr("\230","\377"); # 0x98	0xff	# y umlaut (ij ligature)
	instala_tr("\231","\326"); # 0x99	0xd6	# O umlaut
	instala_tr("\232","\334"); # 0x9a	0xdc	# U umlaut
#	instala_tr("\233","\");	# 0x9b	????

	instala_tr("\234","\243"); # 0x9c	0xa3	# pound sign
	instala_tr("\235","\245"); # 0x9d	0xa5	# yen sign
#	instala_tr("\236","\");	# 0x9e	????

#	instala_tr("\237","\");	# 0x9f	????
	instala_tr("\240","\341"); # 0xa0	0xe1	# a acute
	instala_tr("\241","\355"); # 0xa1	0xed	# i acute

	instala_tr("\242","\363"); # 0xa2	0xf3	# o acute
	instala_tr("\243","\372"); # 0xa3	0xfa	# u acute
	instala_tr("\244","\361"); # 0xa4	0xf1	# n tilde

	instala_tr("\245","\321"); # 0xa5	0xd1	# N tilde
	instala_tr("\246","\252"); # 0xa6	0xaa	# feminine ordinal indicator
	instala_tr("\247","\272"); # 0xa7	0xba	# masculine ordinal indicator

	instala_tr("\250","\277"); # 0xa8	0xbf	# inverted ?
#	instala_tr("\251","\");	# 0xa9	????
	instala_tr("\252","\254"); # 0xaa	0xac	# not sign

	instala_tr("\253","\275"); # 0xab	0xbd	# fraction one-half
	instala_tr("\254","\274"); # 0xac	0xbc	# fraction one-quarter
	instala_tr("\255","\241"); # 0xad	0xa1	# inverted !
	instala_tr("\256","\253"); # 0xae	0xab	# angle quotation mark left
	instala_tr("\257","\273"); # 0xaf	0xbb	# angle quotation mark right

	instala_tr("\262","\247"); # 0xb2	0xa7	# 0xb2 used for section symbol to avoid clash with ^U
	instala_tr("\341","\337"); # 0xe1	0xdf	# sharp ss
	instala_tr("\346","\265"); # 0xe6	0xb5	# micro sign
	instala_tr("\355","\330"); # 0xed	0xd8	# O slash
	instala_tr("\361","\261"); # 0xf1	0xb1	# plus/minus sign
	instala_tr("\366","\367"); # 0xf6	0xf7	# divide operator
	instala_tr("\370","\260"); # 0xf8	0xb0	# degree sign
	instala_tr("\372","\267"); # 0xfa	0xb7	# middle dot
	instala_tr("\375","\262"); # 0xfd	0xb2	# superscript 2
}
function ltrim(s,     i){
	i=index(s, espacio);

	return substr(s, i+1);
}
function rtrim(s,          i){
	largo=length(s);
	for (i=largo; (i>0) && (substr(s,largo,1) == espacio); i--) ;

	return substr(s,1,largo);
}
function trim(s){
	return rtrim(ltrim(s));
}
function escribe_castellano(c,s){
	printf("\t<transl domain=\"\">\n\t\t<text>%s</text>\n\t\t<!--<comment></comment>\n\t\t<ref relation=\"Vea además\" target=\"\">-->\n\t</transl>\n", c) >> s;
}
function escribe_ingles(i,m,s){
	gsub("_", "", m);
	gsub("\\(", "", m);
	gsub("\\)", "", m);
	gsub(",", "", m);
	gsub("\\.", "", m);
	m=substr(m,1,44);
	printf("<article word=\"%s\" id=\"%s\">\n", i, m) >> s;
}
function escribe_dic(d,s){
	printf("\t<transl domain=\"\">\n\t\t<text>%s</text>\n\t\t<!--<comment></comment>\n\t\t<ref relation=\"Vea además\" target=\"\">-->\n\t</transl>\n", pc850toiso88591(d)) >> s;
}
function escribe_glo(g,s){
	printf("\t<transl domain=\"\">\n\t\t<text><!--<glos>-->%s<!--</glos>--></text>\n\t</transl>\n", pc850toiso88591(g)) >> s;
}
function escribe_fin(s){
	printf("\n<!-- Revisado: %s Cesar Ballardini (automatico) -->\n</article>\n\n", strftime()) >> s;
}
function item(ingles, castellano, dic, glo,        arch,m,directorio,salida){
	m=mangle(ingles);
	arch=m".dic";
	directorio=DIR_SALIDA"/"tolower(substr(arch,1,1));
	system(sprintf("[ -d \"%s\" ] || mkdir -p %s\n", directorio, directorio));
	salida=directorio"/"tolower(arch);
	escribe_ingles(ingles, m, salida);
	escribe_castellano(castellano, salida);

	if ( (length(dic) != 0) && 
		(!index(dic,
			"Vocablo definido únicamente para el Diccionario")))
		escribe_dic(dic,salida);

	if (length(glo) != 0)
		escribe_glo(glo, salida);

	escribe_fin(salida);
	close(salida);

	registrar(ingles);
	
}
BEGIN {
	espacio=" ";
	nil="";
	DIR_SALIDA="./glodic";
	bitacora="./mix.log";

	instala_850to88591();
}

/^@@ING/ { ING=trim(substr($0,6)); }
/^@@CAS/ { CAS=trim(substr($0,6)); }
/^@@DIC/ { DIC=trim(substr($0,6)); }
/^@@GLO/ { GLO=GLO"\n"trim(substr($0,6)); }
/^@@FIN/ { 
		item( ING, CAS, DIC, GLO );
		ING=""; CAS=""; DIC=""; GLO="";
         }
END { close(bitacora); }
# EOF mix
