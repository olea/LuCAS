       <sect2>
        <title>Sección [x11drv]</title>
        <variablelist>
          <varlistentry>
            <term>Gestión</term>
            <listitem>
              <para>
                Wine permite que los marcos de windows los gestione
		tu gestor de ventanas.Puedes predeterminar
		esta opción.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Escritorio</term>
            <listitem>
              <para>
                Crea una ventana de tamaño específico
		para visualizar las aplicaciones de windows.
		El tamaño puede ser por ejemplo de "800x600".
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>DXGrab</term>
            <listitem>
              <para>
                Si no utilizas DGA, puedes querer una forma
		alternativa para lograr que el ratón permanezca
		en la ventana  de juego. Esta opción lo hace.
		Desde luego si Wine se cuelga, como DGA, tendrás
		problemas (aunque no tantos como con DGA, dado
		que todavía tienes el teclado para salir de X).
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Uso de DGA</term>
            <listitem>
              <para>
                Aquí se concreta si deseas DirectDraw para usar la
		<firstterm>Arquitectura de gráficos directas</firstterm>
		de XFree86 (DGA), que está capacitado para soportar
		la visualización completa y de correr el juego en
		pantalla completa y a máxima velocidad.
		(Con DGA1 (XFree86 3.x) se tiene aún que
		configurar el servidor X de acuerdo con
		las necesidades del juego, pero con DGA2
		(XFree86 4.x) es posible el cambio de profundidad,
		en tiempo de ejecución de acuerdo con la capacidad
		de la controladora). Pero ten en cuenta que si
		Wine se cuelga mientras está en modo DGA, no
		será posible recuperar el control
		sobre la máquina sin reiniciarla. Normalmente DGA
		necesita los privilegos root o acceso
		de lectura/escritura a <filename>/dev/mem</filename>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>UseXShm</term>
            <listitem>
              <para>
	      	Si no deseas usar DirectX para DGA, se pueden utilizar
		las extensiones de memoria compartida X (XShm).
		Es más lento que DGA ya que app no tiene acceso
		directo a la memoria buffer física, pero si se
		utiliza memoria compartida para dibujar el marco
		resulta al final más rápido que enviar los datos a
		través del zócalo estándard x11, aunque es sabido que
		el soporte XShm de wine todavía se cuelga.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>DesktopDoubleBuffered</term>
            <listitem>
              <para>
		Aplicar solo si se utiliza el comando en la
		línea de opción <parameter>--escritorio</parameter>
		para correr en una ventana de escritorio.
		Especifica si se crea la ventana de escritorio
		con un buffer doble, los juegos necesitarán algo
		más que el OpenGl para funcionar correctamente.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>AllocSystemColors</term>
            <listitem>
              <para>
	 	Aplicar solo si se tiene una visualización basada en
	      	paleta,por ejemplo si fijas el servidor X a una
	      	profundidad de 8 bpp,y no has solicitado el mapa
	      	de colores personalizado. Especifíca el número máximo
	      	de celdillas del mapa de colores compartido (entradas
	      	de paleta) que Wine ocuparía. El más alto valor, los
	      	colores menores estarán disponibles para otras aplicaciones..
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Mapa de Colores Personalizado</term>
            <listitem>
              <para>
	      	Aplicar solo si tienes una visualización basada
		en paleta, por ejemplo si fijas el servidor X a
		una profundidad de 8 bpp.Especificia que no deseas
		usar el mapa de colores compartido, sino uno personalizado,
		donde están disponibles los 256 colores. La desventaja
		es que el mapa de colores de wine solo se ve mientras
		que el puntero del ratón está en una ventana de wine,
		así que los colores apagados y los parpadeos psicodélicos
		pueden convertirse una costumbre si usas mucho el ratón.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Sincrónico</term>
            <listitem>
              <para>
                Utilizar en operaciones de depuración del X11. Si
		wine se cuelga con un error del X11, entonces deberías
		utilizar el modo sincrónico y desabilitar el X11 para
		asegurarte de que el error de x11 sucede directamente
		tras la aparición de la correspondiente llamada al X11
		en el fichero de registro. !Relentizará la llamada al
		X11¡
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ScreenDepth</term>
            <listitem>
              <para>
                Aplicar sólo a visualizaciones de multi intensidad.
		Especifica cual de las intensidades debe utilizar wine 
		(y le dices a Windows que la aplique)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Visualización</term>
            <listitem>
              <para>
	        Especifica que visualización de x11 utilizar, y
		si lo especificas, anularás la variable de entorno
		<envar>DISPLAY</envar>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>PerfectGraphics</term>
            <listitem>
              <para>
                Esta opción solo determina si las rutinas rápidas de
		x11 o exactamente las rutinas de Wine se utilizarán
		para ciertos códigos ROP en operaciones blit. La
		mayoría de los usuarios no notarán ninguna diferencia.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>TextCP</term>
            <listitem>
              <para>
	        Página de códigos para ser usada en la renderización del
		texto en la salida del X11. Algunos valores de muestra
		serían 437 (EEUU, Canadá), 850 (U.E), 852 (Europa Central
		y Oriental) 855 (Cirílico). Para valores adicionales,
		véase por ejemplo la página de  configuración de códigos
		del kernel de Linux Codepage.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>
    </sect1>

    &registry;

    <sect1 id="windows-versions">

      <title>Configuración de los valores de las versiones de windows y DOS
      que van a ejecutar los programas</title>
      <para>
        Escrito por &name-andreas-mohr; <email>&email-andreas-mohr;</email>
        Oct 18 2002
      </para>

      <para>
        Las ventanas y la versión de DOS valoran lo que un programa
	capta, por ejemplo al llamar a la función de Windows Get
	Version() juega un papel importante: Si por cualquier motivo
	tu instalación 	de wine fallase en proporcionar al programa
	los valores correctos de la versión que se espera, entonces
	el programa puede asumir algún error y fallar (!En el peor
	de los casos incluso silenciosamente¡)

        Afortunadamente Wine dispone de algoritmos de adivinación de
	versiones de windows más o menos inteligentes que tratarán de
	adivinar la versión de windows que el programa espera y
	pasársela.

	Así que <emphasis>no</emphasis> deberías configurar a la ligera el valor de una versión, de ser un valor "forzado", el encender sería una función más bien dañina que una operación adecuada. En otras palabras: poner los valores de una versión de windows solo en el caso de que la detección por parte de wine sea incapaz de proporcionar la versión correcta de windows y el
programa falle.
      </para>

      <sect2>
        <title>Como configurar los valores de las versiones de windows y
	dos que debe devolver wine.</title>

	<para>
	Los valores de versiones se pueden configurar en el archivo
	de configuración de wine en la sección [versión].
	</para>

	<variablelist>
	  <varlistentry>
	    <term>"Windows" = "&lt;version string&gt;"</term>
	    <listitem>
	      <para>
	        por defecto: ninguna; elegida por el mecanismo de
		detección semiinteligente basado en el entorno DLL.
		Usado para concretar la versión de Windows que debe
		responder a los programas (!los valores forzados
		anulan el mecanismo estandar de detección¡).
		Son valores predeterminados "win31", "win95",
		"win98", "win2k", "Winxp".
		También válido como un:
		<link linked="appdefaults-section">AppDefaults</link>predeterminado
		(uso recomendado/preferente).
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>"DOS"="&lt;version string&gt;"</term>
	    <listitem>
	      <para>
	        Usado para concretar la versión de DOS que debe responder
		a los programas. Sólo tendrá efecto en el caso de que Wine
		actúe como la versión de Windows "win31". La versiones de DOS
		predeterminadas incluyen 6.22, 6,20, 6,00, 5.00, 4.00, 3.30, 3.10.
		También válido como un:
		<link linked="appdefaults-section">AppDefaults</link>
		predeterminado (uso recomendado/preferente)
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>
    </sect1>

    <sect1 id="cdrom-labels">
      <sect1info>
        <authorgroup>
          <author>
            <firstname>Petr</firstname>
            <surname>Tomasek</surname>
            <affiliation>
              <address><email>&email-petr-tomasek;</email></address>
            </affiliation>
            <contrib>Nov 14 1999</contrib>
          </author>
          <author>
            <firstname>Andreas</firstname>
            <surname>Mohr</surname>
            <affiliation>
              <address><email>&email-andreas-mohr;</email></address>
            </affiliation>
            <contrib>Jan 25 2000</contrib>
          </author>
        </authorgroup>
      </sect1info>

      <title>Etiquetas de control y números de serie con wine</title>
      <para>
        Escrito por &name-petr-tomasek; <email>&email-petr-tomasek;</email>
        Nov 14 1999
      </para>
      <para>
        Cambiado por &name-andreas-mohr; <email>&email-andreas-mohr;</email>
        Jan 25 2000
      </para>
      <para>
        (Extraído de <filename>wine/documentation/cdrom-labels</filename>)
      </para>
      <para>
      	Hasta ahora, tu única posibilidad de especificar las etiquetas de
	volumenes de control y números de serie era predeterminarlas
	manualmente en el archivo config de wine. Ahora, wine también puede
	leerlas directamente desde el dispositivo. Esto se puede utilizar para
	bastantes juegos de Win9x o para los programas de instalación distribuídos
	en CD-ROM que buscan la etiqueta de volumen.
      </para>

      <sect2>
        <title>¿Qué es lo que se soporta?</title>

        <informaltable frame="todo">
          <tgroup cols="3">
            <thead>
              <row>
                <entry>File System</entry>
                <entry>Types</entry>
                <entry>Comment</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>FAT systems</entry>
                <entry>hd, floppy</entry>
                <entry>leer etiquetas y números de serie</entry>
              </row>
              <row>
                <entry>ISO9660</entry>
                <entry>cdrom</entry>
                <entry>leer etiquetas y números de serie (¡CD de modo mixto No!)</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

      </sect2>

      <sect2>
        <title>¿Cómo instalar?</title>
        <para>
          La lectura de las etiquetas y de los números de serie funciona
	  automáticamente si se específica una línea en <literal>Device=</literal>
	  en la sección [Drive x] en <filename>~/.wine/config</filename>.
	  Nota que si se hace así el dispositivo ha de salir y ser accesible.
        </para>
        <para>
          De no hacer eso, deberás corregir las entradas
	  <literal>"etiqueta"=</literal> o
	  <literal>"serial"=</literal> en el archivo
	  <filename>~/.wine/config</filename>, wine
	  devuelve estas líneas si no aparece un dispositivo.
	  De no existier, entonces wine devolvería los valores por
	  defecto (etiqueta <literal>Drive X</literal>
	  y de serie <literal>12345678</literal>).
        </para>
        <para>
          Si quieres dar <emphasis>solo</emphasis> entradas a
	  <literal>"Dispositivo"=</literal> para acceder al
	  sector libre de control, sin leer la información de
	  volumen del dispositivo (por ejemplo si quieres
	  una etiqueta preconfigurada <emphasis>fijada</emphasis>),
	  necesitas especificar <literal>"ReadVolInfo"="0"</literal>
	  para decirle a Wine que se salte la etiqueta de volumen.
        </para>
      </sect2>

      <sect2>
        <title>EJEMPLOS</title>
        <para>
          He aquí un simple ejemplo de un CD-ROM y una disquetera;
	  se leeran las etiquetas desde el dispositivo en ambos
	  casos; el número de serie solo en la disquetera:
        </para>
        <screen>
[Drive A]
"Path" = "/mnt/floppy"
"Type" = "floppy"
"Device" = "/dev/fd0"
"Filesystem" = "msdos"

[Drive R]
"Path" = "/mnt/cdrom"
"Type" = "cdrom"
"Device" = "/dev/hda1"
"Filesystem" = "win95"
        </screen>
        <para>
          He aquí un ejemplo de anulación de la etiqueta del CD-ROM:
        </para>
        <screen>
[Drive J]
"Path" = "/mnt/cdrom"
"Type" = "cdrom"
"Label" = "X234GCDSE"
;nota que aquí no es necesario el dispositivo ya que tenemos fijada la etiqueta
"Device" = "/dev/cdrom"
"Filesystem" = "msdos"
        </screen>
      </sect2>

      <sect2>
        <title>Todo / Open Issues</title>
        <itemizedlist>
          <listitem> <para>
              La etiqueta del CD-ROM solo se puede leer si la pista de
	      datos del disco se encuentra en la primera pista y el cdrom es
	      iso9660.
            </para> </listitem>
          <listitem> <para>
              Mejor buscar el superbloque FAT (ahora solo busca
	      un byte). </para>
          </listitem>
          <listitem> <para>
              Soporte para los números de serie/etiqueta WRITING.
            </para> </listitem>
          <listitem> <para>
              ¿Puede la etiqueta tener más  de 11 carácteres?
	      (iso9660 tiene 32 carácteres).
            </para> </listitem>
          <listitem> <para>
              ¿Qué sucede con la lectura de la etiqueta de volumen ext2?..
            </para> </listitem>
        </itemizedlist>
      </sect2>
    </sect1>

    <sect1 id="dll-config">
      <title>Configuración de DLL</title>
      <sect2 id="dll-overrides">
        <title>Redefinición de DLL</title>

        <para>
          Escrito por &name-ove-kaaven; <email>&email-ove-kaaven;</email>
        </para>
        <para>
          (Extraido de <filename>wine/documentation/dll-overrides</filename>)
        </para>

        <para>
          Las directrices [DllDefaults] y [DllOverrides] del fichero de
	  configuración de Wine son objeto de cierta confusión. El propósito
	  general de  la mayoría de estas directivas son bastante claras,
	  aunque -dada una opción, ¿Debe wine usar sus propios archivos
	  DLL o debe utilizar los archivos <filenames>.DLL</filenames>
	  que se encuentran en la instalación de windows? Este documento
	  explica como funciona.
        </para>

        <sect3>
          <title>Tipos de DLL</title>
          <variablelist>
            <varlistentry>
              <term>nativo</term>
              <listitem> <para>
                  Un DLL "nativo" es un fichero <filename>.DLL</filename>
		  escrito para el Microsoft Windows real.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>incorporado</term>
              <listitem> <para>
                  Un DLL "incorporado" es un DLL de Wine. Este puede ser
		  parte de un <filename>libwine.so</filename>, o más
		  recientemente un archivo especial <filename>.so</filename>
		  que cuando se solicita Wine es capaz de cargar.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>so</term>
              <listitem> <para>
                  Se carga un fichero unix nativo <filename>.so</filename>,
		  que llama al convenio de conversión thunks generado al vuelo
		  como libreria. Esto es más útil para librerías tales
		  como "glide" que tienen exacamente los mismos API tanto
		  en Windows como en Unix.
                </para> </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3>
          <title>La sección [DllDefaults]</title>
          <variablelist>
            <varlistentry>
              <term>Orden de carga por defecto</term>
              <listitem> <para>
                  Este especifíca en qué orden debe Wine buscar los tipos
		  de DLL disponibles, si no se encontrara el DLL en
		  cuestión en la sección [DllOverrides].
                </para> </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3>
          <title>La sección [DllPairs]</title>
          <para>
            En un tiempo hubo una sección llamada [DllPairs] en el
	    archivo de configuración por defecto, pero esto ha llegado
	    a resultar obsoleto ya que la información aparejada no se
	    había empotrado en el Wine. (El propósito de esta sección
	    era simplemente que fuera capaz de lanzar avisos si el
	    usuario intentaba emparejar  DLL 16-bit/32-bit 
	    interdependientes de diferentes tipos). Si aún se tiene
	    esto en <filename>~/.wine/config 
	    </filename> o en <filename>wine.conf</filename>, se debe
	    de borrar por seguridad.
          </para>
        </sect3>

        <sect3>
          <title>La sección [DllOverrides]</title>
          <para>
            Esta sección especifíca cómo quieres concretar los DLL
	    que se van a manejar, en concreto si deseas  los DLL
	    "nativos" o no, si tienes algo de una configuración real
	    de windows. Por no mezclar DLL nativos con los incluídos,
	    algunas dependencias pueden dar problemas, pero workarounds
	    existe en Wine para algunas configuraciones DLL muy
	    populares. Mira también las páginas de estado WNN
	    para comprender como se implementa en Wine un DLL.
          </para>
          <para>
            También es posible redefinir una configuración predeterminada
	    por una explicita usando la opción <parameter>--dll</parameter>
	    en la línea de comandos (para más detalles ayuda). Algunos
	    consejos para una configuración correcta (listado para el par
	    DLL 16/32 bit):
          </para>
          <variablelist>
            <varlistentry>
              <term>krnl386, kernel32</term>
              <listitem> <para>
                  Las versiones nativas de estos nunca funcionarán, ni lo
		  intentes. Déja <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>gdi, gdi32</term>
              <listitem> <para>
                  Interface de Dispositivos Gráficos. No se ha hecho
		  ningún esfuerzo para que corra GDI nativo. Déja
		  <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>user, user32</term>
              <listitem> <para>
                  Gestión de ventana y control estándar. En algunos
		  puntos es posible utilizar la versión
		  <literal>nativa</literal> de win95 (si todos
		  los demás DLL que dependen de ello, tales como
		  comcl32 y comdlg32, están también corriendo en
		  <literal>nativa</literal>). No obstante, esto
		  no es posible después de Separación de Espacios
		  de Dirección (Address Space Separation), así que
		  se deja en <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>ntdll</term>
              <listitem> <para>
                  NT Kernel  API. Aunque malamente documentada, la
		  versión <literal>nativa</literal> de esto nunca
		  funcionará. Se deja <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>w32skrnl</term>
              <listitem> <para>
                  Win32 (para Win3x). La versión
		  <literal>nativa</literal> probablemente
		  nunca funcionará. Déjalo en
		  <literal>incluído</literal>
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>wow32</term>
              <listitem> <para>
                  Librería de apoyo Win 16 para NT.
		  Probablemente nunca funcionará la
		  versión <literal>nativa</literal>. Déjalo
		  en <literal>incluído</literal>
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>sistema</term>
              <listitem> <para>
                  Contenido del kernel Win 16.
		  <literal>nativa</literal> nunca funcionará.
		  Déjalo en <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>Visualización</term>
              <listitem> <para>
                  Controladora de visualización. Déjalo en
		  <literal>incluído</literal>
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>Herramienta de ayuda</term>
              <listitem> <para>
                  Rutina de herramientas de ayuda. Raramente es
		  fuente de problemas. Déjalo
		  <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>ver, version</term>
              <listitem> <para>
                  Versiones. No es muy útil enredarse con esto.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>advapi32</term>
              <listitem> <para>
                  Características de registro y seguridad. Al
		  probar la versión <literal>nativa</literal>
		  de esto, puede que funcione o que no.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>commdlg, comdlg32</term>
              <listitem> <para>
                  Diálogos comunes, tales como selección de color,
		  fuente de diálogo, diálogo de impresión, diálogo
		  de abrir/grabar, etc. Tienes libertad de probar
		  <literal>nativa</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>commctrl, comctl32</term>
              <listitem> <para>
                  Controles Comunes. Esto es la barra de herramientas,
		  barras de estatus, control de listas, trabajos.
		  Tienes libertad de probar <literal>nativa</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>shell, shell32</term>
              <listitem> <para>
                  Interface del shell (escritorio, sistema de
		  archivos, etc). Siendo  uno de los elementos
		  mas faltos de documentación de windows, has
		  de tener suerte con la versión 
		  <literal>nativa</literal>, la necesitarás.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>winsock, wsock32</term>
              <listitem> <para>
                  Conexión de windows. La versión
		  <literal>nativa</literal> no funcionará
		  bajo Wine, así que déjalo en
		  <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>icmp</term>
              <listitem> <para>
                  Rutinas ICMP para wsock32. Como con wsock32,
		  déjalo en <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>mpr</term>
              <listitem> <para>
                  La versión <literal>nativa</literal> puede que no
		  funcione debido a las versiones de thunking.
		  Déjalo en <literal>incluídos</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>lzexpand, lz32</term>
              <listitem> <para>
                  Descomprensión Lempel-Ziv. La versión
		  <literal>incluída</literal> de wine debe
		   trabajar bien.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>winaspi, wnaspi32</term>
              <listitem> <para>
                  Interface periférico Avanzado de SCSI. La versión
		  <literal>nativa</literal> probablemente nunca
		  funcionará. Déjalo en <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>crtdll</term>
              <listitem> <para>
                  Libreria C Runtime. Por esta vez la versión
		  <literal>nativa</literal> trabajará mejor
		  que la de wine..
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>winspool.drv</term>
              <listitem> <para>
                  Cola de impresión. No es probable que
		  tengas mejor suerte con la versión
		  <literal>nativa</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>ddraw</term>
              <listitem> <para>
                  DirectDraw/Direct3D. Ya que Wine no ejecuta
		  Direct HAL, la versión <literal>nativa</literal>
		  no funcionará esta vez.DirectDraw/Direct3D.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>dinput</term>
              <listitem> <para>
                  DirectInput. Ejecutanto <literal>nativa</literal>
		  puede que funcione o que no.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>dsound</term>
              <listitem> <para>
                  DirectSound. Es posible que funcione
		  <literal>nativa</literal>, pero no
		  cuentes con ello.DirectSound.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>dplay/dplayx</term>
              <listitem> <para>
                  DirectPlay. La versión <literal>nativa</literal>
		  debería funcionar mejor que esta , si es que lo hace.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>mmsystem, winmm</term>
              <listitem> <para>
                  Sistema de Multimedia. La versión <literal>nativa</literal>
		  probablemente no va a funcionar. Déjalo en
		  <literal>incluído</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>msacm, msacm32</term>
              <listitem> <para>
                  Gestor de Compresión de Audio. La versión
		  <literal>incluída</literal> trabaja mejor,
		  si predeterminas msacm.drv.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>msvideo, msvfw32</term>
              <listitem> <para>
                  Video para Windows. Es seguro (y recomendable)
		  intentar la <literal>nativa</literal>.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>mcicda.drv</term>
              <listitem> <para>
                  CD Audio MCI driver.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>mciseq.drv</term>
              <listitem> <para>
                  MIDI Sequencer MCI driver (<filename>.MID</filename>
                  playback).
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>mciwave.drv</term>
              <listitem> <para>
                  Wave audio MCI driver (<filename>.WAV</filename> playback).
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>mciavi.drv</term>
              <listitem> <para>
                  Controladora MCI de AVI (<filename>.AVI</filename>
		  rebobinado de video). Mejor usar <literal>nativa</literal>
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>mcianim.drv</term>
              <listitem> <para>
                  Controladora de Animación MCI.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>msacm.drv</term>
              <listitem> <para>
                  Gestor de Comprensión de Audio. Poner el mismo como msacm32.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>midimap.drv</term>
              <listitem> <para>
                  Asignación de MIDI.
                </para> </listitem>
            </varlistentry>
            <varlistentry>
              <term>wprocs</term>
              <listitem> <para>
                  Esto es un pseudo DLL utilizado por Wine
		  con propósitos thunking. No existe una
		   versión <literal>nativa</literal>
		   de esto.
                </para> </listitem>
            </varlistentry>
          </variablelist>
        </sect3>
      </sect2>
      <sect2 id="dll-missing">
        <title>DLLs no encontrados</title>

        <para>
          Escrito por &name-andreas-mohr; <email>&email-andreas-mohr;</email>
        </para>

        <para>
	  Si Wine demandara un DLL no encontrado, deberás buscar
	  un DLL disponible público o uno de cliente perteneciente
	  al programa (se busca en internet por su nombre).
	  Si consigues  el DLL, deberás asegurarte de que Wine es
	  capaz de encontrarlo y cargarlo.
	  Los DLL normalmente se cargan de acuerdo con el mecanismo
	  de la función SearchPath().
	  Esta función busca directorios en el siguiente orden:
          <orderedlist>
            <listitem>
              <para>
	        El directorio desde el que el programa  fue lanzado.
              </para>
            </listitem>
            <listitem>
              <para>
	        Directorio actual.
              </para>
            </listitem>
            <listitem>
              <para>
	        Directorio de sistema de windows.
              </para>
            </listitem>
            <listitem>
              <para>
	        Directorio de Windows.
              </para>
            </listitem>
            <listitem>
              <para>
	        Directorios de la variable TRAYECTORIA.
              </para>
            </listitem>
          </orderedlist>

	  Para abreviar: o bien se pone el DLL requerido en el
	  directorio de su aplicación (puede resultar peligroso),
	  o generalmente se pondrá en el directorio de sistema
	  de windows. Se encuentra el directorio echando un
	  vistazo en el archivo Config de Wine en la variable
	  "System" (que indica la localización del directorio
	  de sistema de windows) y la entrada de control asociada.
	  Advierte que normalmente no se usaría NT-DLL basados
	  en nativa, ya que los apoyo API de NT para wine son
	  más débiles que su apoyo API para Win9X (!así que nos
	  encaminamos a una peor compatibilidad con los DLL de
	  NT que con una instalación  no-windows¡), así que mejor
	  utilizar DLL nativos de Win9x en lugar de no nativos.
        </para>
      </sect2>
      <sect2 id="dll-windows">
        <title>Buscando DLL nativos de un CD de Windows</title>

        <para>
          Escrito por &name-andreas-mohr; <email>&email-andreas-mohr;</email>
        </para>

        <para>
	La utilidad <command>cabextract</command> de Linux se puede
	utilizar para extraer archivos .dll nativos de windows de
	archivos .cab que se encuentran en muchos CD de instalación
	de windows.
        </para>
      </sect2>
    </sect1>

    &fonts;
    &printing;

    <sect1 id="win95look">
      <title>Win95/98 Look</title>
      <para>
        Escrito por &name-david-cuthbert; <email>&email-david-cuthbert;</email>
      </para>
      <para>
        (Extraído de <filename>wine/documentation/win95look</filename>)
      </para>
      <para>
        Se introduce el código de interface de win95/win98.
      </para>
      <para>
        En lugar de compilar Wine para Win3.1 contra Win95 utilizando
	cambios <constant>#definido</constant>, el código ahora busca
	en una sección especial [Tweak.Layout] de
	<filename>~/.wine/config</filename> para una entrada
	<literal>"Winelook"="Win95"</literal> o
	<literal>"Winelook"="Win98"</literal>
      </para>
      <para>
        Se han añadido unas cuantas nuevas secciones y un número de
	entradas al archivo <filename>~/.wine/config</filename>
	 -- solo son para depurar los errores de Win95 y !se pueden
	 quitar en una descarga futura¡ Estas entradas/secciones son:
      </para>
      <programlisting>
[Tweak.Fonts]
"System.Height" = "&lt;point size>"    # Fijar el tamaño del carácter del sistema
"System.Bold" = "[true|false]"      # Si la fuente del sistema fuera negrita
"System.Italic" = "[true|false]"    # Si la fuente del sistema fuera cursiva
"System.Underline" = "[true|false]" # Si la fuente del sistema fuera subrayada
"System.StrikeOut" = "[true|false]" # Si la fuente del sistema fuera tachada
"OEMFixed.xxx"                  # Los mismos parámetros para tipografía fijada OEM
"AnsiFixed.xxx"                 # Los mismos parámetros para tipografía fijada Ansi
"AnsiVar.xxx"                   # Los mismos parámetros para tipografía variable Ansi
"SystemFixed.xxx"               # Los mismos parámetros para tipografía fijada del sistema

[Tweak.Layout]
"WineLook" = "[Win31|Win95|Win98]"  # Cambia la apariencia de Wine y experimenta
      </programlisting>
    </sect1>

    <sect1 id="keyboard">
      <title>Teclado</title>

      <para>
        Escrito por &name-ove-kaaven; <email>&email-ove-kaaven;</email>
      </para>
      <para>
        (Extraído de <filename>wine/documentation/keyboard</filename>)
      </para>

      <para>
        Ahora Wine necesita saber la composición de tu
	teclado. Este requisito viene de la necesidad que
	tienen algunos apps de tener el oportuno código de
	registro disponible, ya que lo van a leer directamente,
	en lugar de coger los carácteres devueltos por el
	servidor X. Esto significa que ahora  Wine  necesita
	asignar desde las teclas X a los códigos digitalizados
	que estas aplicaciones esperan.
      </para>
      <para>
        Al arrancar, Wine intentará reconocer el trazador
	activo de X viendo si encaja con alguna de los
	teclados definidos. Si es así, todo va bien. Lo
	contrario sería que tendrías que definirlo.
      </para>
      <para>
        Para hacer esto, abre el archivo
	<filename>dlls/x11drv/keyboard.c</filename>
	y echa una mirada a los teclados que salen.
	Haz una copia de seguridad de esto,
	espacialmente si no usas CVS.
      </para>
      <para>
        Lo que realmente tienes que hacer, es encontrar
	que código necesita generar cada tecla. Se
	encuentra en <function>main_key_scan</function>,
	que es más o menos así:
      </para>
      <programlisting>
static const int main_key_scan[MAIN_LEN] =
{
/*este es mi teclado disponible (102 teclas), lo siento si no  coincide con el tuyo*/
   0x29,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,
   0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,
   0x1E,0x1F,0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x2B,
   0x2C,0x2D,0x2E,0x2F,0x30,0x31,0x32,0x33,0x34,0x35,
   0x56 /*la tecla 102 (a la derecha de l-mayúsculas)*/
};
      </programlisting>
      <para>
        A continuación se asigna a cada código el carácter
	impreso en el teclado seleccionado. Es del tipo
	de teclado US de 101 teclas, que puedes encontrar
	casi al principio en el archivo
	<filename>keyboard.c</filename>. También nos indics
	que si no hay una tecla 102, entonces te lo
	puedes saltar.
      </para>
      <para>
        No obstante, para teclados más internacionales de 102
	teclas, te lo hemos puesto fácil. La composición
	digitalizada encaja de maravilla con la composición
	física que aparece en <function>main_key_scan</function>,
	así que todo lo que necesitas hacer es coger todas las
	teclas que generan caracteres en tu teclado principal
	(excepto la barra espaciadora), y rellena esto en una
	teclado apropiado. La única excepción es que la tecla 102,
	que normalmente está a la izquierda de la primera tecla
	de la última línea (normalmente <keycap>Z</keycap>),
	se ha de situar en una línea separada después de la última
	línea.
      </para>
      <para>
        Por ejemplo, mi teclado noruego aparece así
      </para>
      <screen>
§  !  "  #  ¤  %  &  /  (  )  =  ?  `  Back-
|  1  2@ 3£ 4$ 5  6  7{ 8[ 9] 0} +  \´ space

Tab Q  W  E  R  T  Y  U  I  O  P  Å  ^
                                     ¨~
                                        Enter
Caps A  S  D  F  G  H  J  K  L  Ø  Æ  *
Lock                                  '

Sh- > Z  X  C  V  B  N  M  ;  :  _  Shift
ift &lt;                      ,  .  -

Ctrl  Alt       Spacebar       AltGr  Ctrl
      </screen>
      <para>
        Nóta que la tecla 102, que es la tecla <keycap>&lt;></keycap>,
	a la izquierda de <keycap>Z</keycap>. El carácter a la
	derecha de el carácter principal es el caracter generado por
	<keycap>AltGr</keycap>.
      </para>
      <para>
        Este teclado se define como sigue:
      </para>
      <programlisting>
static const char main_key_NO[MAIN_LEN][4] =
{
 "|§","1!","2\"@","3#£","4¤$","5%","6&","7/{","8([","9)]","0=}","+?","\\´",
 "qQ","wW","eE","rR","tT","yY","uU","iI","oO","pP","åÅ","¨^~",
 "aA","sS","dD","fF","gG","hH","jJ","kK","lL","øØ","æÆ","'*",
 "zZ","xX","cC","vV","bB","nN","mM",",;",".:","-_",
 "&lt;>"
};
      </programlisting>
      <para>
        Con la excepción de que " e \ los tienes que pulsar con
	contrabarra y que la tecla 102 está en una linea separada,
	es bastante sencillo.
      </para>
      <para>
        Después de que has escrito el teclado necesitas añadirlo
	a los teclados indexados existentes
	<function>main_key_tab[]</function>.Aparecerá algo así:
      </para>
      <programlisting>
static struct {
 WORD lang, ansi_codepage, oem_codepage;
 const char (*key)[MAIN_LEN][4];
} main_key_tab[]={
...
...
 {MAKELANGID(LANG_NORWEGIAN,SUBLANG_DEFAULT),  1252, 865, &amp;main_key_NO},
...
      </programlisting>
      <para>
        Después de que has añadido tu teclado, recompila
	Wine y prueba a ver si funciona. Si falla en
	la detección de tu teclado, intenta correrlo
      </para>
      <screen>
wine -- +key,+keyboard >& key.log
      </screen>
      <para>
        y mira en el archivo resultante <filename>key.log</filename>
	para encontrar el mensaje de error que da.
      </para>
      <para>
        Nóta que las definiciones <constant>LANG_*</constant>
	y <constant>SUBLANG_*</constant> están en
	<filename>include/winnls.h</filename>, que
	necesitarías saber para encontrar que número
	se le asigna a tu lengua, y encontrarlo en la
	salida del mensaje de depuración. El número sería
	<literal>(SUBLANG*0X400+LANG)</literal>, así, por
	ejemplo la combinación <literal>LANG_NORWEGIAN(0x14)</literal>
	y <literal>SUBLANG_DEFAULT(0X1)</literal> sería
	(en exadecimal) <literal>14+1*400=414</literal>, así
	que ya que soy noruego puedo mirar a ver si se encuentra
	el siguiente mensaje <literal>0414</literal> en la salida
	de mensaje de depuración y así ver que mi teclado no ha sido
	detectado.
      </para>
      <para>
        Una vez en funcionamiento, comunícalo al proyecto Wine.
	Si utilizas CVS, tendrás que hacerlo.
      </para>
      <screen>
cvs -z3 diff -u dlls/x11drv/keyboard.c > layout.diff
      </screen>
      <para>
        desde tu directorio principal de Wine, envía
	<filename>layout.diff</filename> a 
	<email>wine-patches@winehq.com</email> con
	una breve nota de explicación de lo que es.
      </para>
      <para>
        Si no utilizas CVS, necesitas hacer
      </para>
      <screen>
diff -u the_backup_file_you_made dlls/x11drv/keyboard.c > layout.diff
      </screen>
      <para>
        y ponerte en contacto como se dice un poco más arriba.
      </para>
      <para>
        Si lo haces correctamente, se incluirá en la próxima
	versión de wine, y todas las aplicaciones con problemas
	(especialmente las aplicaciones de control-remoto) y
	juegos que utilizan códigos de escaneo utilizarán
	felizmente tu definición de teclado y no volverás
	a ver esos fastidiosos mensajes de error.
      </para>
      <para>
        Buena suerte.
      </para>
    </sect1>

    <sect1 id="odbc">
      <title>Usando ODBC</title>
      <para>
        Esta sección describe cómo funciona ODBC con Wine
	y como configurarlo para que haga lo que quieras
	(si puede hacer lo que tu quieras).
      </para>
      <para>
        Se diseña ODBC en Wine, como con el sistema
	de impresión, para conectar Unix a un
	alto nivel. Antes de asegurarte de que todos los
	códigos de windows funcionan bajo wine utiliza
	un proveedor apropiado de ODBC de Unix, como
	UnixODBC. Así que si configuras Wine para usar
	el odbc32.dll incluído que el dll de wine
	entrelazará a tu paquete ODBC de Unix y le permitirá
	hacer el trabajo, mientras que si configuras Wine
	para usar el paquete odbc32.dll nativo intentará
	utilizar la controladora ODBC32 nativa, etc.
      </para>
      <sect2>
        <title>Utilizando un sistema ODBC Unix con Wine</title>
        <para>
          El primer paso para usar un sistema ODBC Unix con Wine
	  es, desde luego, estar ejecutando el sistema ODBC Unix.
	  Esto conlleva bajarse los códigos o los rpm etc. Se
	  encuentran disponibles varios sistemas ODBC Unix; el
	  que el autor está utilizando es unixODBC (con la
	  controladora IBM DB2). Normalmente tales sistemas
	  incluyen una herramienta, como isql, que te permitirá
	  acceder a los datos desde la línea de comandos así que
	  podrás comprobar que el sistema está funcionando.
        </para>
        <para>
          El siguiente paso es acoplar la librería ODBC de Unix
	  al odbc32.dll incluído de wine. El odbc32.dll incluído
	  (generalmente) busca en la variable ambiental
	  <emphasis>LIB_ODBC_DRIVER_MANAGER</emphasis> el nombre
	  de la librería odbc. Por ejemplo en el archivo .bashrc
	  del autor la linea es:
        </para>
        <programlisting>
export LIB_ODBC_DRIVER_MANAGER=/usr/lib/libodbc.so.1.0.0
        </programlisting>
        <para>
          Si no encontrase esa variable ambiental buscaría una
	  libreria llamada libodbc.so y así puedes añadir un
	  vínculo simbólico para equipararlo con tu propia
	  libreria. Por ejemplo como root puedes ejecutar
	  los comandos:
        </para>
        <programlisting>
ln -s libodbc.so.1.0.0 /usr/lib/libodbc.so
/sbin/ldconfig
        </programlisting>
        <para>
          El último paso en la configuración es asegurarse de
	  que Wine se arranca al correr la versión incluida
	  de odbc32.dll, al modificar la configuración DLL.
	  Este dll incluído funciona como una matriz entre
	  el código llamado y la librería de Unix ODBC.
        </para>
        <para>
          Si tienes algún problema entonces has de usar odbc32
	  mensajes de depuración para encontrar lo que está sucediendo.
	  Una palabra de advertencia. Algunos programas hacen
	  un poco de trampa y evitan la libreria odbc. Por
	  ejemplo el motor Crystal Reports va a a librería a
	  probar el DSN. La solución a esto es documentarse en
	  una dirección unixODBC donde hay una sección usando
	  unixODBC con Wine.
        </para>
      </sect2>
      <sect2>
        <title>Usando controladoras ODBC de Windows</title>
        <para>
          ¿Alguien tiene experiencia con esto y algo que
	  añadir?
        </para>
      </sect2>
    </sect1>

  </chapter>

<!-- Manten este comentario al final del archivo
variables Locales:
mode: sgml
sgml-parent-document:("wine-doc.sgml" "set" "book" "chapter" "")
Fin:
-->
