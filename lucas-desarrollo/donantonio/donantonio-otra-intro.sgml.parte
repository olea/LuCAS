<Article lang="es" id="art-donantonio-otraitro">

<ArtHeader>

<Title>Sistema distribuido automático de publicación. (era "Donantonio, an universal indexer architecture (draft)")</Title>
    <AUTHOR>
            <FirstName>Ismael</firstname> <surname>Olea</surname>
    </author>
<PubDate> $Id: donantonio-otra-intro.sgml.parte,v 1.1 2001/06/05 18:26:06 olea Exp $</PubDate>

<Abstract>

<Para>
<note>
	<title>Este documento está «de aquella manera»</title>
	<para>Esto está bastante guarrete, pero lo pongo aquí porque parece que tiene cosas importantes, pero en cualquier caso hay que limpiarlo de polvos y de pajas.</para>
</note>
The very basic ideas for an architecture for publishing and
maintaining  all kind e-libraries using known standards as XML, RDF,
Dublin Core, etc.
</Para>

</Abstract>

</ArtHeader>

<Sect1>
<Title>Sistema automático de publicación</Title>

<Para>
Actualmente estoy trabajando en la especificación de los
requerimientos a exigir  a esta clase de tecnologías.  Es lo que he
llamado la  «arquitectura <Emphasis remap="bf">Donantonio</Emphasis>».
</Para>

<Para>
Los planteamientos básicos de <Emphasis remap="bf">Donantonio</Emphasis> son:
</Para>

<Para>

<ItemizedList>
<ListItem>

<Para>
Basado en soft libre, preferiblemente GPL o compatible.
</Para>
</ListItem>
<ListItem>

<Para>
Especificaciones abiertas y perfectamente documentadas.
</Para>
</ListItem>
<ListItem>

<Para>
Basado en verdaderos estándares abiertos como RFC, W3C e ISO.
</Para>
</ListItem>
<ListItem>

<Para>
Sencillez, modularidad y flexibilidad.
</Para>
</ListItem>

</ItemizedList>

</Para>

<Para>
Los objetivos del diseño son:
</Para>

<Para>
Los objetivos del diseño son:
</Para>

<Para>

<ItemizedList>
<ListItem>

<Para>
publicación automática;
</Para>
</ListItem>
<ListItem>

<Para>
publicación topológicamente distribuida;
</Para>
</ListItem>
<ListItem>

<Para>
responsabilidad distribuida de la publicación;
</Para>
</ListItem>
<ListItem>

<Para>
organización de vistas --de usuario y de sistema-- automáticas y programables;
</Para>
</ListItem>
<ListItem>

<Para>
facilidades de replicación;
</Para>
</ListItem>
<ListItem>

<Para>
facilidades de actualización automática;
</Para>
</ListItem>
<ListItem>

<Para>
relaciones flexibles entre agentes <Emphasis remap="bf">Donantonio</Emphasis>.
</Para>
</ListItem>

</ItemizedList>

</Para>

<Para>
Elementos necesarios (entre otros):
</Para>

<Para>

<ItemizedList>
<ListItem>

<Para>
declaración de metadatos conforme a un esquema normalizado (descripción);
</Para>
</ListItem>
<ListItem>

<Para>
el fichero como unidad atómica de transferencia de datos;
</Para>
</ListItem>
<ListItem>

<Para>
protocolos de transferencia de ficheros internet;
</Para>
</ListItem>
<ListItem>

<Para>
mecanismo de consulta sencillo y flexible (por ahora, SQL).
</Para>
</ListItem>

</ItemizedList>

</Para>

</Sect1>

<Sect1>
<Title>Sistema automático de publicación.</Title>

<Para>
En la actualidad estoy diseñando el borrador de una arquitectura para
el diseño y operación de esta clase de sistemas. Además participo en
el diseño de una aplicación bibliográfica que asista a la publicación
de recursos en <Emphasis remap="bf">Metalab</Emphasis> con la vista puesta en un diseño basado en <Emphasis remap="bf">Donantonio</Emphasis>.
</Para>

<Para>
También tengo previsto que este esfuerzo, junto a otros que al menos partirán
inicialmente de la comunidad hispana, forme parte del próximo proyecto LuCAS&nbsp;I+D.
</Para>

<Para>
Por lo pronto ya están en desarrollo los siguientes trabajos:
</Para>

<Para>
<VariableList>

<VarListEntry>
<Term>LDP-core,</Term>
<ListItem>
<Para>
esquema bibliográfico para clasificar los documentos del LDP. <ULink
URL="TACATACA"
>TACATACA</ULink
>.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>ldpCoreMetaML.dtd,</Term>
<ListItem>
<Para>
LDP-core expresado como DTD XML. <ULink
URL="http://casbah.org/cgi-bin/cvsweb.cgi/XML/DTDs/ldpCoreMetaML.dtd"
>ldpCoreMetaML.dtd</ULink
>
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Donantonio,</Term>
<ListItem>
<Para>
una arquitectura para publicación distribuida automática.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</Para>

<Para>
&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;
</Para>

<Para>
Otra nota: No olvidar lo de &num;&num;&num;&num;An automatic distributed publishing system (with facilities of
information searching/retrieval).&num;&num;&num;&num;&num;&num;
</Para>

<Para>
&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;&num;
</Para>

</Sect1>

<Sect1>
<Title>Introducción: al principio era LuCAS </Title>

<Para>
 
</Para>

<Para>
Una de las conclusiones más claras obtenidas de la experiencia en el mantenimiento y coordinación del proyecto LuCAS (http://lucas.hispalinux.es) y a lo largo de las relaciones con el resto de proyectos tipo LDP-es es que el mantenimiento de un sistema "clásico" de publicación basado en web es del todo inmanejable en cuanto el volumen de documentación alcanza cierto volumen. 
</Para>

<Para>
A primera vista parece adecuado el tratamiento de la información mediante técnicas de bases de datos. Sin embargo este autor no cree que sea la mejor aproximación: el desarrollo  actuales de las tecnologías de documentación han posible la puesta en marcha de sistemas "documentalmente más naturales". No se descarta el uso de técnicas de bases de datos en estos sistemas. Más al contrario: parece necesario el uso a nivel interno de las mismas pero siempre como un medio y no como un fin.
</Para>

<Para>
A lo largo de este documento se expondrá el sistema Donantonio, una serie de técnicas y convenios, basados en normas abiertas, para construir sistemas de publicación de nueva generación.
</Para>

</Sect1>

<Sect1>
<Title>Requeriments for an automatic distributed publishing
architecture</Title>

<Para>
 
</Para>

<Para>
Inside my own vision of software engineering it must be accordant to the
next rules: 

<ItemizedList>
<ListItem>

<Para>
free software, with a GPL license if it's possible;
</Para>
</ListItem>
<ListItem>

<Para>
open, its api's must be clearly document for all;
</Para>
</ListItem>
<ListItem>

<Para>
based on true standards as RFC's, ISO and 3WC standards.
</Para>
</ListItem>
<ListItem>

<Para>
modular and flexible to become the layer for distributed applications
</Para>
</ListItem>

</ItemizedList>

</Para>

</Sect1>

<Sect1>
<Title>Architecture versus application.</Title>

<Para>
This paper is focused in architecture only. The idea is to design a set of 
conventions and rules to build a working environment to develop applied 
publishing tools.
</Para>

<Para>
For this cause I'll try not to say too much about the Metalab/LDP publishing
system. Indeed, the designing work for these appliances will help to refine
Donantonio to get a true multi purpose and generalized architecture.
</Para>

</Sect1>

<Sect1>
<Title>Donantonio vocabulary</Title>

<Sect2>
<Title>Elements</Title>

<Para>
<VariableList>

<VarListEntry>
<Term>Resource</Term>
<ListItem>
<Para>
file or a document located via an URL.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Description</Term>
<ListItem>
<Para>
a RDF file meta-data, located via an URL.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Resource instance</Term>
<ListItem>
<Para>
Por definir
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Description intance</Term>
<ListItem>
<Para>
por definir	
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Repository</Term>
<ListItem>
<Para>
collection of resources or collection of  resources' instances.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Library</Term>
<ListItem>
<Para>
collection of descriptions or collection of descriptions' instances.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</Para>

</Sect2>

<Sect2>
<Title>Agent tasks</Title>

<Para>
These tasks aren't completely defined yet.
<VariableList>

<VarListEntry>
<Term>Server</Term>
<ListItem>
<Para>
software server 
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Client</Term>
<ListItem>
<Para>
software client
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Proxy</Term>
<ListItem>
<Para>
Proxy between two servers or between a server and a client
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</Para>

</Sect2>

<Sect2>
<Title>Actions</Title>

<Para>
These are the "atomic actions":
</Para>

<Para>
<VariableList>

<VarListEntry>
<Term>Resource download</Term>
<ListItem>
<Para>
the act of downloading a resource referred by
an URL via an Internet transfer protocol.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Resource mirroring</Term>
<ListItem>
<Para>
the act of mirroring (and sincronicing) a
resource referred by an URL via an Internet transfer protocol.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Description download</Term>
<ListItem>
<Para>
the act of downloading a description
referred by an URL via an Internet transfer protocol.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Description mirroring</Term>
<ListItem>
<Para>
the act of mirroring (and sincronicing)
a description referred by an URL via an Internet transfer protocol.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Query</Term>
<ListItem>
<Para>
an SQL ask from something acting as a client to
something acting as a server.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</Para>

<Para>
And these are the "composed actions"
<VariableList>

<VarListEntry>
<Term>Library mirroring</Term>
<ListItem>
<Para>
TACA
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Repository mirroring</Term>
<ListItem>
<Para>
TACA
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Distributed query</Term>
<ListItem>
<Para>
TACA
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</Para>

</Sect2>

<Sect2>
<Title>Relations</Title>

<Para>
<VariableList>

<VarListEntry>
<Term>Projection</Term>
<ListItem>
<Para>
relational representation in SQL language of a RDF schema.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Query</Term>
<ListItem>
<Para>
SQL query to a projection.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Petition</Term>
<ListItem>
<Para>
a query on a transport layer (mime+http??).
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>Answer</Term>
<ListItem>
<Para>
of a query on a transport layer (mime+http??). It can contains a view.
</Para>
</ListItem>
</VarListEntry>
<VarListEntry>
<Term>View</Term>
<ListItem>
<Para>
a set of one or more description Urls.
</Para>
</ListItem>
</VarListEntry>
</VariableList>
</Para>

</Sect2>

</Sect1>

<Sect1>
<Title>The Donantonio metaphor</Title>

<Sect2>
<Title>The astral metaphor</Title>

<Para>
An incomplete metaphor of the things Donantonio could support is the 
"astral metaphor".
</Para>

<Para>
If we believe to some astrologists, the physical body has an astral body 
(the soul). In some circumstances the soul can travel without its physical 
body. But soul and body are linked with a silver bow. The astral body (the
soul) can travel to any place of the world and ever is linked to his body,
which is still sleeping somewhere on the Earth. But if the silver bow get 
broken, the soul is not linked to its body anymore. It's the death for its 
body.
</Para>

</Sect2>

<Sect2>
<Title>Equivalence between Donantonio metaphor and the astral metaphor</Title>

<Para>
For Donantonio thinking, documents are the body, descriptions are the astral 
bodies of its documents and are linked to it by a URL. If the link get broken
the description lost all is usefulness and the documents die forgotten in somebody
hard disk.
</Para>

<Para>
The principal idea is that while resources are sleeping in some place, their souls 
are traveling along the world, being processed and shared between Donantonio 
appliances. Donantonio add the ubiquity faculty letting several duplicated souls 
for a only resource
</Para>

</Sect2>

<Sect2>
<Title>Practical consequences</Title>

<Para>

<ItemizedList>
<ListItem>

<Para>
Resources had fixed publishing points (one or many) referenced
by a URL.

</Para>
</ListItem>
<ListItem>

<Para>
A resource never travel across the net.

</Para>
</ListItem>
<ListItem>

<Para>
A resource can be downloaded. The downloaded resource is an
instance of the resource and it hasn't bibliographic relevance.

</Para>
</ListItem>
<ListItem>

<Para>
Descriptions had a one and only fixed publishing point
referenced by a URL.

</Para>
</ListItem>
<ListItem>

<Para>
Descriptions instances can travel across the net to by archived
or processed. A description instance has bibliographic relevance
while they had a valid link with their master description.

</Para>
</ListItem>
<ListItem>

<Para>
A repository can be a Donantonio repository while all its
resources had its description in a Donantonio application somewhere
in the net.

</Para>
</ListItem>
<ListItem>

<Para>
A Donantonio library is a true library while all its
descriptions or descriptions instances are valid (they refer to their
own resources).

</Para>
</ListItem>
<ListItem>

<Para>
It's too easy to replicate libraries only replicating its
descriptions files. A way to distribute load distributing server
accesses.

</Para>
</ListItem>
<ListItem>

<Para>
The way for building indexing clusters or indexing servers
trees is distributing the descriptions their self between the
servers. An information petition on one of the servers (the cluster
case) or in the main server (the tree case) is distributed to the
others with a Donantonio query. Them, the systems acts as one only
server.

</Para>
</ListItem>
<ListItem>

<Para>
Descriptions can be grouped into views with SQL queries and
explicit Urls.

</Para>
</ListItem>
<ListItem>

<Para>
A distributed/monolithic library can be replicated with only a
query (a view) into a monolithic mirror or with several well designed
queries (several views) into a net of servers.

</Para>
</ListItem>
<ListItem>

<Para>
The resources referenced by a library (or many libraries) can
be instanced locally (cached) with views and URL downloads.

</Para>
</ListItem>

</ItemizedList>

</Para>

</Sect2>

</Sect1>

<Sect1>
<Title>Who's Don Antonio?</Title>

<Para>
Don Antonio is the librarian of the high school were I had my
bachelor degree.
</Para>

<Para>
I like this name because it's different and sounds funny :-9
</Para>

</Sect1>

<Sect1>
<Title>Change-log</Title>

<Para>

<ItemizedList>
<ListItem>

<Para>
1999-09-18 v0.0, first release in English
</Para>
</ListItem>
<ListItem>

<Para>
2000-03-19 v0.02, revisión y fusión con el proyecto de Bibliotecas electrónicas.
</Para>
</ListItem>

</ItemizedList>

</Para>

</Sect1>

</Article>
