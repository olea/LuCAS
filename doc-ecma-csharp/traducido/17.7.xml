<?xml version="1.0"?>
<clause number="17.7" title="Eventos">
  <paragraph>Un evento es un miembro que habilita que un objeto o clase
	  proporcione notificaciones. Clientes pueden unir código ejecutables para eventos al suministrar manejadores de eventos. </paragraph>
  <paragraph>Eventos son declarados usando declaración-de-eventos: <grammar_production><name><non_terminal where="17.7">declaración-de-evento</non_terminal></name> : <rhs><non_terminal where="24.2">atributos</non_terminal><opt/><non_terminal where="17.7">modificadores-de-evento</non_terminal><opt/><keyword>event</keyword><non_terminal where="11">tipo</non_terminal><non_terminal where="17.4">declaradores-de-eventos</non_terminal><terminal>;</terminal></rhs><rhs><non_terminal where="24.2">atributos</non_terminal><opt/><non_terminal where="17.7">modificadores-de-evento</non_terminal><opt/><keyword>event</keyword><non_terminal where="11">tipo</non_terminal><non_terminal where="17.6">nombre-del-miembro</non_terminal><terminal>{</terminal><non_terminal where="17.7">declaraciones-de-accesores-de-evento</non_terminal><terminal>}</terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.7">modificador-de-evento</non_terminal>s</name> : <rhs><non_terminal where="17.7">modificador-de-evento</non_terminal></rhs><rhs><non_terminal where="17.7">modificadores-de-evento</non_terminal><non_terminal where="17.7">modificador-de-evento</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.7">modificador-de-evento</non_terminal></name> : <rhs><keyword>new</keyword></rhs><rhs><keyword>public</keyword></rhs><rhs><keyword>protected</keyword></rhs><rhs><keyword>internal</keyword></rhs><rhs><keyword>private</keyword></rhs><rhs><keyword>static</keyword></rhs><rhs><keyword>virtual</keyword></rhs><rhs><keyword>sealed</keyword></rhs><rhs><keyword>override</keyword></rhs><rhs><keyword>abstract</keyword></rhs><rhs><keyword>extern</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="17.7">declaraciones-de-accesores-de-evento</non_terminal></name> : <rhs><non_terminal where="17.7">declaración-de-accesor-agregador</non_terminal><non_terminal where="17.7">declaración-de-accesor-removedor</non_terminal></rhs><rhs><non_terminal where="17.7">declaración-de-accesor-removedor</non_terminal><non_terminal where="17.7">declaración-de-accesor-agregador</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.7">declaración-de-accesor-agregador</non_terminal></name> : <rhs><non_terminal where="24.2">atributos</non_terminal><opt/><terminal>add</terminal><non_terminal where="15.2">bloque</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.7">declaración-de-accesor-removedor</non_terminal></name> : <rhs><non_terminal where="24.2">atributos</non_terminal><opt/><terminal>remove</terminal><non_terminal where="15.2">bloque</non_terminal></rhs></grammar_production></paragraph>
  <paragraph>Una <non_terminal where="17.7">declaración-de-evento</non_terminal> puede incluir un juego de atributos (<hyperlink>24</hyperlink>) y una combinación valida de cuatro modificadores de acceso, los modificadores (<hyperlink>17.2.3</hyperlink>), new (<hyperlink>17.2.2</hyperlink>), static (<hyperlink>17.5.2</hyperlink>, <hyperlink>17.7.3</hyperlink>), virtual (<hyperlink>17.5.3</hyperlink>, <hyperlink>17.7.4</hyperlink>), override (<hyperlink>17.5.4</hyperlink>, <hyperlink>17.7.4</hyperlink>), sealed (<hyperlink>17.5.5</hyperlink>), abstract (<hyperlink>17.5.6</hyperlink>, <hyperlink>17.7.4</hyperlink>), y extern. </paragraph>
  <paragraph>Declaraciones de evento están sujetos a las mismas reglas que las declaraciones de métodos (<hyperlink>17.5</hyperlink>) con respecto a combinaciones validas de modificadores. </paragraph>
  <paragraph>El tipo de una declaración de evento debe ser un <non_terminal where="11.2">tipo-delegado</non_terminal> (<hyperlink>11.2</hyperlink>), y ese <non_terminal where="11.2">tipo-delegado</non_terminal> debe ser al menos accesible como el accesible como el mismo evento (<hyperlink>10.5.4</hyperlink>). </paragraph>
  <paragraph>Una declaración de evento puede incluir <non_terminal where="17.7">declaraciones-de-accesores-de-evento</non_terminal>. De cualquier forma, si no se incluye, para eventos no-extern, no-abstract, el compilador debe suministrarlos automáticamente (<hyperlink>17.7.1</hyperlink>); para eventos extern, los accesores son provistos externamente. </paragraph>
  <paragraph>Una declaración de evento que omite <non_terminal where="17.7">declaraciones-de-accesores-de-evento</non_terminal> define uno o mas eventos, uno para cada de los <non_terminal where="17.4">declaradores-de-variable</non_terminal>. Los atributos y modificadores aplican para todos los miembros declarados por una <non_terminal where="17.7">declaración-de-evento</non_terminal>. </paragraph>
  <paragraph>Es un error en tiempo de compilación para una <non_terminal where="17.7">declaración-de-evento</non_terminal> incluir ambos modificadores y las <non_terminal where="17.7">declaraciones-de-accesores-de-evento</non_terminal> delimitadas por llaves ({). </paragraph>
  <paragraph>Cuando una declaración de evento incluye un modificador extern, se dice que el evento es un evento extern. Debido a que un declaración de evento extern no provee una implementación actual, es un error incluir ambos modificadores y <non_terminal where="17.7">declaraciones-de-accesores-de-evento</non_terminal>. </paragraph>
  <paragraph>Un evento puede ser usado como un operador de lado izquierdo de los operadores += y -= (<hyperlink>14.13.3</hyperlink>). Esos operadores son usados, respectivamente, para unir los manejadores de eventos, o para remover manejadores de eventos de un evento, los modificadores de acceso del evento controla los contextos en los cuales dichas operaciones son permitidas. </paragraph>
  <paragraph>Debido a que += y -= son los únicas operaciones que son permitidas en un evento fuera del tipo que declaran el evento, código externo puede agregar o remover manejadores para un evento, pero no pueden en cualquier otra forma obtener o modificar la lista fundamental de los manejadores de eventos. </paragraph>
  <paragraph>En una operación de la forma x += y o x -= y, cuando x es un evento y la referencia toma lugar fuera del tipo que contiene la declaración de x, el resultado de la operación tiene tipo <keyword>void</keyword> (como el opuesto al que tiene el tipo de x, con el valor de x después de la asignación). Esta regla prohibe código externo de examinación indirecta del delegado fundamental de un evento. </paragraph>
  <paragraph>
    <example>[Ejemplo: El siguiente muestra como los manejadores de eventos son unidos para instancias de la clase Button: <code_example><![CDATA[
public delegate void EventHandler(object sender, EventArgs e);  
public class Button: Control  
{  
   public event EventHandler Click;  
}  
public class LoginDialog: Form  
{  
   Button OkButton;  
   Button CancelButton;  
   public LoginDialog() {  
      OkButton = new Button(...);  
      OkButton.Click += new EventHandler(OkButtonClick);  
      CancelButton = new Button(...);  
      CancelButton.Click += new EventHandler(CancelButtonClick);  
   }  
   void OkButtonClick(object sender, EventArgs e) {  
      // Maneja evento OkButton.Click
   }  
   void CancelButtonClick(object sender, EventArgs e) {  
      // Maneja evento CancelButton.Click
   }  
}  
]]></code_example></example>
  </paragraph>
  <paragraph>
    <example>Aquí, cuando el constructor de instancia LoginDialog crea dos instancias de Button y une los manejadores de evento a los eventos. fin ejemplo]</example>
  </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
