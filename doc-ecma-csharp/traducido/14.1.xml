<?xml version="1.0"?>
<clause number="14.1" title="Clasificaciones de expresiones">
  <paragraph>Una expresión es clasificada como una de las siguientes:<list><list_item> Un valor. 
Cada valor tiene un tipo asociado. </list_item><list_item> Una variable. Cada variable tiene un tipo asociado, es decir el tipo declarado de la variable. </list_item><list_item> Un espacio de nombres. Una expresión con esta clasificación puede únicamente aparecer en el lado-izquierdo de un <non_terminal where="14.5.4">acceso-al-miembro</non_terminal> (<hyperlink>14.5.4</hyperlink>). En cualquier otro contexto, una expresión clasificada como un espacio de nombres causa un error en tiempo de compilación.</list_item><list_item> Un tipo. Una expresión con esta clasificación puede únicamente aparecer como el lado izquierdo de un <non_terminal where="14.5.4">acceso-al-miembro</non_terminal> (<hyperlink>14.5.4</hyperlink>), o como un operando para el operador as (<hyperlink>14.9.10</hyperlink>), el operador is (<hyperlink>14.9.9</hyperlink>), o el operador typeof (<hyperlink>14.5.11</hyperlink>). En cualquier otro contexto, una expresión clasificada como un tipo causa un error en tiempo de compilación. </list_item><list_item> Un grupo de métodos, el cual es un juego de métodos resultantes de una búsqueda de miembro (<hyperlink>14.3</hyperlink>). Un grupo de métodos puede tener una expresión de instancia asociada. Cuando un método de instancia es invocado, el resultado de evaluar la expresión de instancia se convierte en la instancia representada por this (<hyperlink>14.5.7</hyperlink>). Un grupo de métodos se permite únicamente en una <non_terminal where="14.5.5">expresión-de-invocación</non_terminal> (<hyperlink>14.5.5</hyperlink>) o una <non_terminal where="14.5.10.3">expresión-de-creación-de-delegado</non_terminal> (<hyperlink>14.5.10.3</hyperlink>). En cualquier otro contexto, una expresión clasificada como un grupo de método causa un error en tiempo de compilación. </list_item><list_item> Un acceso a un propiedad. Cada acceso a una propiedades tiene un tipo asociado, es decir el tipo de la propiedad. Además, un acceso a un propiedad puede tiene una expresión de instancia asociada. Cuando un accesor (el bloque get o set) de un acceso de propiedad de instancia es invocado, el resultado de la evaluar la expresión de instancia se convierte en la instancia representada por this (<hyperlink>14.5.7</hyperlink>). </list_item><list_item> Un acceso a un evento. Cada acceso a evento tiene un tipo asociado, es decir el tipo de un evento. Además, un acceso de evento puede tiene una expresión de instancia asociada. Un acceso de evento puede aparecer como el operando del lado izquierdo de los operadores += y -= (<hyperlink>14.13.3</hyperlink>). En cualquier otro contexto, una expresión clasificada como un acceso de evento causa un error en tiempo de compilación. </list_item><list_item> Un acceso a un indexador. Cada acceso a un indexador tiene un tipo asociado, es decir el tipo del elemento del indexador. Además, un acceso al indexador tiene una expresión de instancia asociada y una lista de argumentos asociadas. Cuando un accesor (el bloque get o set) de una acceso a un indexador es invocada, el resultado de evaluacion la expresión de instancia se convierte en la instancia representada por this (<hyperlink>14.5.7</hyperlink>), y el resultado de evaluar la lista de argumentos se convierte en la lista de parámetros de la invocación. </list_item><list_item> Nada. Esto ocurre cuando la expresión es una invocación de un método con un tipo de retorno <keyword>void</keyword>. Una rexpresión clasificada como nada es únicamente valida en el contexto de <non_terminal where="15.6">expresión-de-la-sentencia</non_terminal> (<hyperlink>15.6</hyperlink>). </list_item></list></paragraph>
  <paragraph>El resultado final de una expresión es nunca un espacio de nombres, tipo, grupo de métodos, o acceso a un evento. En vez de eso, como se noto arriba, esas categorías de expresiónes son construcciones intermedias que son unicamente permitidas en contextos determinados. </paragraph>
  <paragraph>Un acceso a un propiedad o un acceso a un indexador es siempre reclasificado como un valor al realizar una invocación del accesor-get o el accesor-set. El accesor particular esta determinado por el contexto del acceso a la propiedad o indexador: Si el acceso es el objetivo de una asignación, el accesor-set es invocado para asignar un nuevo valor (<hyperlink>14.13.1</hyperlink>). De otra forma, el accesor-get es invocado para obtener el actual valor (<hyperlink>14.1.1</hyperlink>). </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
