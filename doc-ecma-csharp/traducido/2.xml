<?xml version="1.0" encoding="utf-8"?>
<clause number="2" title="Conformidad">
  <paragraph>Este texto puede ser de interés a las siguientes personas: 
  <list>
  <list_item> Aquellos que estén diseñando o manteniendo implementaciones de C# . </list_item>
  <list_item> Entidades que quieran adquirir una implementación de C# </list_item>
  <list_item> Organizaciones que quieran que sus aplicaciones sean conformes al estándar C#. </list_item>
  <list_item> Programadores que deseen portar código de una implementación a otra </list_item>
  <list_item> Educadores que quieran enseñar C#. </list_item>
  <list_item> Autores que quieran escrin¡bir acerca de C# </list_item>
  </list>
  </paragraph>  
  
  <paragraph>Puesto que la conformidad al estándar es muy importante, una gran parte de este estándar 
  ECMA está dedicado a especificar las características que hacen que algunas implementaciones o programas 
  en C# sean conformes. </paragraph>
  
  <paragraph>El texto en este estándar ECMA especifica los requerimientos considerados normativos. 
  Todos los demás textos son de caracter informativo; esto es, únicamente con fines informativos. A 
  menos que se indique lo contrario, este texto es normativo. El texto normativo está además dividido 
  en las categorías, requerido y condicional. El texto normativo condicional especifica los requerimientos 
  para una determinada característica, de modo que si esa característica está presente, su semántica y
  sintaxis debe ser exactamente como se ha especificado 
  </paragraph>
  
  <paragraph>Si cualquier requerimiento de este estándar ECMA es incumplido, el comportamiento puede ser 
  indefinido. En cualquier otra ocasión este comportamiento se indica en el estándar ECMA con las palabras
  ''comportamiento indefinido'' o por la omisión de cualquier definición explícita de comportamiento.
  No hay diferencias en estas tres definiciones, todas describen ''comportamiento que no está definido''
  .</paragraph>
  
  <paragraph>Un programa estrictamente conforme sólo debe usar aquellas características del lenguaje especificadas
  en este estándar ECMA como requeridas. ( Esto implica que un programa estrictamente conforme no puede usar 
  ninguna característica normativa condicional ). No debe producir una salida que dependa de una implementación 
  no especificada, indefinida, o dependiente según la especificación.
  </paragraph>
  
  <paragraph>Una implementación conforme de C# debe aceptar cualquier programa estrictamente conforme 
  </paragraph> 
  
  <paragraph>Una implementación conforme de C# debe proporcionar y soportar todos los tipos, 
  valores, objetos, propiedades, métodos, y sintaxis de programas descritos en este estándar ECMA 
  </paragraph>
  
  <paragraph>Una implementación conforme de C# debe interpretar caracteres de acuerdo con es estándar 
  Unicode, versión 3.0 o posterior, y ISO/IEC 10646-1. Implementaciones conformes deben aceptar 
  ficheros código fuente con codificación UTF-8. 
  </paragraph>
  
  <paragraph>Una implementación conforme de C# no debe traducir fuentes que contengan una directiva 
  de preprocesador <symbol>#error</symbol> a menos que pertenezca a un grupo de compilación condicional. 
  </paragraph>

  <paragraph>Una implementación conforme de C# debe producir al menos un mensaje de diagnósitico si el código
  fuente no cumple alguna regla de sintaxis, o cualquier requisito negativo ( definido como un requisito de tipo
  &quot;debe&quot; ó &quot;no debe&quot; ó &quot;error&quot; ó &quot;advertencia&quot;  ), a menos que el 
  requisito esté marcado con las palabras &quot;no es requerido ningún diagnósitco&quot; </paragraph>
  
  <paragraph> Está permitido que una implementación conforme de C# proporcione tipos, objetos, propiedades 
  y métodos adicionales además de los descritos en esta norma ECMA, siempre y cuando no alteren el 
  comportamiento de cualquier prgrama estrictamente conforme. Las implementaciones conformes están 
  obligadas a diagnosticar programas que usen extensiones que no están bién formadas según esta norma. 
  Una vez hecho esto, pueden compilar y ejecutar dichos programas. 
  </paragraph><!--falta -->

  <paragraph>Una implementación conforme de C# debe estar acompañada de un documento que define todas 
  las características dependientes de la implementación, así como todas las extensiones 
  </paragraph>
  
  <paragraph>Una implementación conforme de C# debe soportar la librería de clases documentada en 
  <unicode>167</unicode>D. Esta librería viene incluida por referencia en este estándar ECMA 
  </paragraph>
  
  <paragraph>Una programa conforme es aquel que es aceptado por una implementación conforme. 
  ( Tal programa puede contener extensiones o características normativas condicionales. ) 
  </paragraph>
  
</clause>
