<?xml version="1.0"?>
<clause number="17.5" title="Métodos">
  <paragraph>Un método es un miembro que implementa una computación o acción que puede ser realizada por un objeto o clase. Métodos son declarados usando declaraciones de métodos:<grammar_production><name><non_terminal where="17.5">declaración-de-método</non_terminal></name> : <rhs><non_terminal where="17.5">cabecera-del-método</non_terminal><non_terminal where="17.5">cuerpo-del-método</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.5">cabecera-del-método</non_terminal></name> : <rhs><non_terminal where="24.2">atributos</non_terminal><opt/><non_terminal where="17.5">modificador-del-método</non_terminal><opt/><non_terminal where="17.5">tipo-de-retorno</non_terminal><non_terminal where="17.6">nombre-del-miembro</non_terminal><terminal>(</terminal><non_terminal where="17.5.1">lista-de-parámetros-formales</non_terminal><opt/><terminal>)</terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.5">modificadores-del-método</non_terminal></name> : <rhs><non_terminal where="17.5">modificador-del-método</non_terminal></rhs><rhs><non_terminal where="17.5">modificador-del-método</non_terminal><non_terminal where="17.5">modificador-del-método</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.5">modificador-del-método</non_terminal></name> : <rhs><keyword>new</keyword></rhs><rhs><keyword>public</keyword></rhs><rhs><keyword>protected</keyword></rhs><rhs><keyword>internal</keyword></rhs><rhs><keyword>private</keyword></rhs><rhs><keyword>static</keyword></rhs><rhs><keyword>virtual</keyword></rhs><rhs><keyword>sealed</keyword></rhs><rhs><keyword>override</keyword></rhs><rhs><keyword>abstract</keyword></rhs><rhs><keyword>extern</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="17.5">tipo-de-retorno</non_terminal></name> : <rhs><non_terminal where="11">tipo</non_terminal></rhs><rhs><keyword>void</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="17.6">nombre-del-miembro</non_terminal></name> : <rhs><non_terminal where="9.4.2">identificador</non_terminal></rhs><rhs><non_terminal where="11.2">tipo-interfaz-type</non_terminal><terminal>.</terminal><non_terminal where="9.4.2">identificador</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.5">cuerpo-del-método</non_terminal></name> : <rhs><non_terminal where="15.2">bloque</non_terminal></rhs><rhs><terminal>;</terminal></rhs></grammar_production></paragraph>
  <paragraph>Una <non_terminal where="17.5">declaración-de-método</non_terminal> puede incluir un juego de atributos (<hyperlink>24</hyperlink>) y una combinación valida de los cuatro modificadores de acceso l modificadores (<hyperlink>17.2.3</hyperlink>), new (<hyperlink>17.2.2</hyperlink>), static (<hyperlink>17.5.2</hyperlink>), virtual (<hyperlink>17.5.3</hyperlink>), override (<hyperlink>17.5.4</hyperlink>), sealed (<hyperlink>17.5.5</hyperlink>), abstract (<hyperlink>17.5.6</hyperlink>), y extern (<hyperlink>17.5.7</hyperlink>). </paragraph>
  <paragraph>Una declaración tiene una combinación validad de modificadores si todos los siguiente es verdadero: <list><list_item> La declaración incluye una combinación valida de modificadores de acceso (<hyperlink>17.2.3</hyperlink>). </list_item><list_item> La declaración no incluye el mismo modificador múltiples ocasiones. </list_item><list_item> La declaración incluye como máximo uno de los siguientes modificadores: static, virtual, y override. </list_item><list_item> La declaración incluye como máximo uno de los siguientes modificadores: new y override. </list_item><list_item> Si la declaración incluye el modificador abstract, entonces la declaración no incluye cualquiera de los siguientes modificadores: static, virtual, o extern. </list_item><list_item> Si la declaración incluye el modificador private, entonces la declaración no incluye cualquiera de los siguientes modificadores: virtual, override, o abstract. </list_item><list_item> Si la declaración incluye el modificador sealed, entonces la declaración incluye el modificador override. </list_item></list></paragraph>
  <paragraph>El <non_terminal where="17.5">tipo-de-retorno</non_terminal> de una declaración de método específica el tipo del valor computado y regresado por el método. El <non_terminal where="17.5">tipo-de-retorno</non_terminal> es <keyword>void</keyword> si el método no regresa un valor. </paragraph>
  <paragraph>El <non_terminal where="17.6">nombre-del-miembro</non_terminal> especifica el nombre del método. A menos que el método sea una implementación de miembro de interfaz explicita (<hyperlink>20.4.1</hyperlink>), el <non_terminal where="17.6">nombre-del-miembro</non_terminal> es simplemente un identificador. Para la implementación de miembro de interfaz explicita, el <non_terminal where="17.6">nombre-del-miembro</non_terminal> consiste de un <non_terminal where="11.2">tipo-de-interfaz</non_terminal> seguido por un &quot;.&quot; y un identificador. </paragraph>
  <paragraph>La opcional <non_terminal where="17.5.1">lista-de-parámetros-formales</non_terminal> especifica los parámetros del método (<hyperlink>17.5.1</hyperlink>). </paragraph>
  <paragraph>El <non_terminal where="17.5">tipo-de-retorno</non_terminal> y cada de los tipos referenciados en la <non_terminal where="17.5.1">lista-de-parámetros-formales</non_terminal> de un método debe ser al menos accesible como el método en si mismo (<hyperlink>10.5.4</hyperlink>). </paragraph>
  <paragraph>Para métodos abstract y extern, el <non_terminal where="17.5">cuerpo-del-método</non_terminal> consiste simplemente de un punto y coma. Para todos los otros métodos, el <non_terminal where="17.5">cuerpo-del-método</non_terminal> consiste de un bloque, el cual especifica las sentencias a ejecutar cuando el método es invocado. </paragraph>
  <paragraph>El nombre y la lista de parámetros formales de un método define la firma (<hyperlink>10.6</hyperlink>) del método. Específicamente, la firma del método consiste de su nombre y el número, modificadores, y tipos de sus parámetros formales. El tipo de retorno no es parte de la firma del método, tampoco son los nombres de los parámetros formales. </paragraph>
  <paragraph>El nombre de un método debe diferenciarse de los nombres de otros no-métodos declarados en la misma clase. En adición, la firma del método debe diferenciarse de las firmas de otros métodos declarados en la misma clase. </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
