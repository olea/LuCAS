<?xml version="1.0"?>
<clause number="14.5.9" title="Operadores de incremento y decremento posfijos">
  <paragraph>
    <grammar_production><name><non_terminal where="14.5.9">expresión-posfija-de-incremento</non_terminal></name> : <rhs><non_terminal where="14.5">expresión-primaria</non_terminal><terminal>++</terminal></rhs></grammar_production>
    <grammar_production><name><non_terminal where="14.5.9">expresión-posfija-de-decremento</non_terminal></name> : <rhs><non_terminal where="14.5">expresión-primaria</non_terminal><terminal>--</terminal></rhs></grammar_production>
  </paragraph>
  <paragraph>El operando de una operación de incremento o decremento posfija debe ser una expresión clasificada como una variable, un acceso a propiedad, o un acceso a indexador. El resultado de la operación es un valor del mismo tipo que el operando. </paragraph>
  <paragraph>Si el operando de una operación de incremento o decremento posfijo es un acceso a propiedad o indexador, la propiedad o indexador debe tener accesadores get y set. Si esto no es el caso, un error en tiempo de compilación ocurre. </paragraph>
  <paragraph>Resolución de operador unario (<hyperlink>14.2.3</hyperlink>) es aplicada para seleccionar una implementación de operador especifica. Operadores predefinidos ++ y -- existen para ambos tipos: <keyword>sbyte</keyword>, <keyword>byte</keyword>, <keyword>short</keyword>, <keyword>ushort</keyword>, <keyword>int</keyword>, <keyword>uint</keyword>, <keyword>long</keyword>, <keyword>ulong</keyword>, <keyword>char</keyword>, <keyword>float</keyword>, <keyword>double</keyword>, <keyword>decimal</keyword>, y cualquier tipo enum. Los operadores predefinidos ++ regresan el valor producido al agregar 1 al operando, y los valores predefinidos -- regresan el valor producido al sustraer 1 del operando. </paragraph>
  <paragraph>El procesamiento en tiempo de ejecución de una operación incremento posfijo o decremento posfijo de la forma x++ o x-- consiste de los siguientes pasos: <list><list_item> Si x es clasificado como una variable: </list_item><list><list_item> x es evaluado para producir la variable. </list_item><list_item> El valor de x es salvado.  </list_item><list_item> El operador seleccionado es invocado con el valor salvado de x como su argumento. </list_item><list_item> El valor regresado por el operador es almacenado en la localidad dada por la evaluación de x. </list_item><list_item> El valor salvado de x se convierte en el resultado de la operación. </list_item></list><list_item> Si x es clasificado como un acceso a propiedad o indexador: </list_item><list><list_item> La expresión de instancia (si x no es estático) y la lista de argumentos (si x es un acceso a indexador) asociada con x son evaluadas, y los resultados son usados en las invocaciones subsecuentes de get y set. </list_item><list_item>El accesor get de x es invocada y el valor resultante es salvado. </list_item><list_item> El operador seleccionado es invocado con el valor salvado de x y su argumento. </list_item><list_item> El accesor set de x es invocado con el valor regresado por el operador y su argumento de valor. </list_item><list_item> El valor salvado por x se convierte en el resultado de la operación. </list_item></list></list></paragraph>
  <paragraph>Los operadores ++ y  -- también soportan notación prefija (<hyperlink>14.6.5</hyperlink>). El resultado de x++ o  x-- es el valor de x antes de la operación, donde el resultado de ++x o --x es el valor de x después de la operación. En cualquier caso, x en si tiene el mismo valor después de la operación. </paragraph>
  <paragraph>Una implementación de operador ++ u operador -- puede ser invocado usando ya sea notación prefija o posfija. No es posible tener implementaciones separadas de las dos notaciones. </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
