<?xml version="1.0"?>
<clause number="22" title="Delegados">
  <paragraph>
    <note>[Nota: Los Delegados permiten escenarios que otros lenguajes-por ejemplo C++, 
    Pascal, y Modula tratan con punteros a función.Al contrario que los punteros a función de C++, 
    los delegados son completamente orientados a objeto, y también diferentes de los punteros a funciones 
    miembro de C++, los delegados encapsulan tanto una instancia de objeto como un método. Fin Nota]</note>
  </paragraph>
  <paragraph>Un declaración de delegado define una clase que está derivada de la clase System.Delegate. Un instancia de delegado encapsula uno o mas métodos, cada uno de los cuales es referido como una entidad invocable. Para métodos de instancias, una entidad invocable consiste de una instancia y un método en esa instancia. Para métodos estáticos, una entidad invocable consiste de sólo un método. Dando a instancia de delegado, un conjunto apropiado de argumentos, se pueden invocar a todos los métodos de esa instancia de delegado con ese conjunto de parámetros. </paragraph>
  <paragraph>Una propiedad interesante y útil de una instancia de delegado es que no conoce o le importan las clases de los métodos encapsulados; todo lo que importa es que esos métodos sean compatibles (<hyperlink>22.1</hyperlink>) con el tipo de delegado. Esto hace delegados perfectamente convenientes para invocaciones &quot;anónimas&quot;. </paragraph>
</clause>
