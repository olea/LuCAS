<?xml version="1.0"?>
<clause number="8.2.2" title="Conversiones" informative="true">
  <paragraph>Los tipos predefinidos también tienen conversiones predefinidas. Por ejemplo, existen
    conversiones entre los tipos  <keyword>int</keyword> y <keyword>long</keyword>. C# diferencia 
    entre dos tipos de conversiones: conversiones implícitas y explícitas. Las conversiones implícitas
    sirven para hacer conversiones en las que no se pierde información. Por ejemplo, la conversión de
    <keyword>int</keyword> a <keyword>long</keyword> es implícita. Este tipo de
    conversiones simpre tienen éxito. El siguiente ejemplo <code_example>
    <![CDATA[
using System;  
class Test  
{  
   static void Main() {  
      int intValue = 123;  
      long longValue = intValue;  
      Console.WriteLine("{0}, {1}", intValue, longValue);  
   }  
}
]]></code_example>convierte implícitamente un <keyword>int</keyword> a un <keyword>long</keyword>.</paragraph>
  <paragraph>Como contraste , las conversiones explícitas deben hacerse con una expresión de conversión. 
  El ejemplo<code_example><![CDATA[
using System;  
class Test  
{  
   static void Main() {  
      long longValue = Int64.MaxValue;  
      int intValue = (int) longValue;  
      Console.WriteLine("(int) {0} = {1}", longValue, intValue);  
   }  
}  
]]></code_example>usa una conversión explícita para convertir un <keyword>long</keyword> en un
  <keyword>int</keyword>. La salida es: <code_example>
  <![CDATA[
(int) 9223372036854775807 = -1  
]]>
</code_example>
  porque ocurre un desbordamiento. Las expresiones de conversión permiten usar ambos tipos de conversión.
</paragraph>
</clause>

	<!-- traducción Fabian Seoane, fseoane@wanadoo.es -->
