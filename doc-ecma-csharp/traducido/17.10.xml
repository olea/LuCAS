<?xml version="1.0"?>
<clause number="17.10" title="Constructores de instancia">
  <paragraph>Un constructor de instancia es un miembro que implementa las acciones requeridas para inicializar una instancia de una clase. Constructores de instancia son declarados usando declaraciones-de-constructor:  <grammar_production><name><non_terminal where="17.10">declaración-de-constructor</non_terminal></name> : <rhs><non_terminal where="24.2">atributos</non_terminal><opt/><non_terminal where="17.10">modificadores-de-constructor</non_terminal><opt/><non_terminal where="17.10">declarador-de-constructor</non_terminal><non_terminal where="17.10">cuerpo-del-constructor</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.10">modificadores-de-constructor</non_terminal></name> : <rhs><non_terminal where="17.10">modificador-de-constructor</non_terminal></rhs><rhs><non_terminal where="17.10">modificadores-de-constructor</non_terminal><non_terminal where="17.10">modificador-de-constructor</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.10">modificador-de-constructor</non_terminal></name> : <rhs><keyword>public</keyword></rhs><rhs><keyword>protected</keyword></rhs><rhs><keyword>internal</keyword></rhs><rhs><keyword>private</keyword></rhs><rhs><keyword>extern</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="17.10">declarador-de-constructor</non_terminal></name> : <rhs><non_terminal where="9.4.2">identificador</non_terminal><terminal>(</terminal><non_terminal where="17.5.1">lista-de-parámetros-formales</non_terminal><opt/><terminal>)</terminal><non_terminal where="17.10">inicializador-de-constructor</non_terminal><opt/></rhs></grammar_production><grammar_production><name><non_terminal where="17.10">inicializador-de-constructor</non_terminal></name> : <rhs><terminal>:</terminal><keyword>base</keyword><terminal>(</terminal><non_terminal where="14.4.1">lista-de-argumentos</non_terminal><opt/><terminal>)</terminal></rhs><rhs><terminal>:</terminal><keyword>this</keyword><terminal>(</terminal><non_terminal where="14.4.1">lista-de-argumentos</non_terminal><opt/><terminal>)</terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.10">cuerpo-del-constructor</non_terminal></name> : <rhs><non_terminal where="15.2">bloque</non_terminal></rhs><rhs><terminal>;</terminal></rhs></grammar_production></paragraph>
  <paragraph>Una <non_terminal where="17.10">declaración-de-constructor</non_terminal> puede incluir un juego de atributos (<hyperlink>24</hyperlink>), una combinación valida de cuatro modificadores de acceso (<hyperlink>17.2.3</hyperlink>), y un modificador extern (<hyperlink>17.5.7</hyperlink>). Una declaración de constructor no permite incluir el mismo modificador múltiples ocasiones. </paragraph>
  <paragraph>El identificador de un <non_terminal where="17.10">declarador-de-constructor</non_terminal> debe nombrar la clase en la cual el constructor de instancia es declarado. Si otro nombre es especificador, un error en tiempo de compilación ocurre.</paragraph>
  <paragraph>La opcional <non_terminal where="17.5.1">lista-de-parámetros-formales</non_terminal> de un constructor de instancia es sujeto a las misma reglas que la <non_terminal where="17.5.1">lista-de-parámetros-formales</non_terminal> de un método (<hyperlink>17.5</hyperlink>). La lista de parámetros formales definen la firma (<hyperlink>10.6</hyperlink>) de un constructor de instancia y gobierna el proceso donde la resolución sobrecargada (<hyperlink>14.4.2</hyperlink>) selecciona un constructor de instancia particular en una invocación. </paragraph>
  <paragraph>Cada de los tipos referenciados en la <non_terminal where="17.5.1">lista-de-parámetros-formales</non_terminal> de un constructor de instancia debe ser al menos accesible como el constructor mismo (<hyperlink>10.5.4</hyperlink>). </paragraph>
  <paragraph>El <non_terminal where="17.10">inicializador-de-constructor</non_terminal> opcional especifica otro constructor de instancia para invocar antes de ejecutar las sentencia dadas en el <non_terminal where="17.10">cuerpo-del-constructor</non_terminal> de un constructor de instancia. Esto esta descrito mas adelante en <hyperlink>17.10.1</hyperlink>. </paragraph>
  <paragraph>Cuando una declaración de constructor incluye un modificador extern, el constructor un constructor externo. </paragraph>
  <paragraph>Porque una declaración de constructor externo no provee una implementación actual, su <non_terminal where="17.10">cuerpo-del-constructor</non_terminal> consiste de un punto y coma. Para otros constructores, el <non_terminal where="17.10">cuerpo-del-constructor</non_terminal> consiste en un bloque, que especifica las sentencias para inicializar una nueva instancia de la clase. Esto corresponde exactamente al juego de métodos de instancia con un tipo de retorno <keyword>void</keyword> (<hyperlink>17.5.8</hyperlink>). </paragraph>
  <paragraph>Constructores de instancia no se heredan. De esta forma, una clase no tiene otros constructores de instancia que esos que actualmente son declarados por la clase. Si una clase no contiene declaraciones de constructor de instancia, un constructor de instancia por defecto es automáticamente provisto (<hyperlink>17.10.4</hyperlink>). </paragraph>
  <paragraph>Constructores de instancia son invocados por <non_terminal where="14.5.10.1">expresiones-de-creación-de-objetos</non_terminal> (<hyperlink>14.5.10.1</hyperlink>) y a través de <non_terminal where="17.10">inicializadores-de-constructor</non_terminal>. </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
