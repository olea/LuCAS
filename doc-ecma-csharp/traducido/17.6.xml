<?xml version="1.0"?>
<clause number="17.6" title="Propiedades">
  <paragraph>Una propiedad es un miembro que provee acceso a un atributo de un objeto de una clase. Ejemplos de propiedades incluyen la longitud de una cadena, el tamaño de una fuente, la leyenda de una ventana, el nombre de un cliente, y más. Propiedades son extensiones naturales de campos, ambos llamados miembros con tipos asociados, y la sintaxis para accesar campos y propiedades es la misma. De cualquier forma, distinto a los campos, propiedades no denotan localidades de almacenamiento. En vez de eso, propiedades tienen accesores que especifican las sentencias a ser ejecutadas cuando sus valores son leídos o escritos. Propiedades de esta forma proveen un mecanismo para asociar acciones con la lectura y escritura de atributos del objeto; además, permiten que dichos atributos san computados. </paragraph>
  <paragraph>Propiedades son declarados usando una declaración-de-propiedades: <grammar_production><name><non_terminal where="17.6">declaración-de-propiedad</non_terminal></name> : <rhs><non_terminal where="24.2">atributos</non_terminal><opt/><non_terminal where="17.6">modificador-de-propiedades</non_terminal><opt/><non_terminal where="11">tipo</non_terminal><non_terminal where="17.6">nombre-del-miembro</non_terminal><terminal>{</terminal><non_terminal where="17.6.2">declaraciones-de-accesores</non_terminal><terminal>}</terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.6">modificador-de-propiedad</non_terminal>s</name> : <rhs><non_terminal where="17.6">modificador-de-propiedad</non_terminal></rhs><rhs><non_terminal where="17.6">modificadores-de-propiedad</non_terminal><non_terminal where="17.6">modificador-de-propiedad</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.6">modificador-de-propiedad</non_terminal></name> : <rhs><keyword>new</keyword></rhs><rhs><keyword>public</keyword></rhs><rhs><keyword>protected</keyword></rhs><rhs><keyword>internal</keyword></rhs><rhs><keyword>private</keyword></rhs><rhs><keyword>static</keyword></rhs><rhs><keyword>virtual</keyword></rhs><rhs><keyword>sealed</keyword></rhs><rhs><keyword>override</keyword></rhs><rhs><keyword>abstract</keyword></rhs><rhs><keyword>extern</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="17.6">nombre-del-miembro</non_terminal></name> : <rhs><non_terminal where="9.4.2">identificador</non_terminal></rhs><rhs><non_terminal where="11.2">tipo-interfaz</non_terminal><terminal>.</terminal><non_terminal where="9.4.2">identificador</non_terminal></rhs></grammar_production></paragraph>
  <paragraph>Una <non_terminal where="17.6">declaración-de-propiedad</non_terminal> puede incluir un juego de atributos (<hyperlink>24</hyperlink>) y una combinación valida de cuatro modificadores de acceso (<hyperlink>17.2.3</hyperlink>),  new (<hyperlink>17.2.2</hyperlink>), static (<hyperlink>17.6.1</hyperlink>), virtual (<hyperlink>17.5.3</hyperlink>, <hyperlink>17.6.3</hyperlink>), override (<hyperlink>17.5.4</hyperlink>, <hyperlink>17.6.3</hyperlink>), sealed (<hyperlink>17.5.5</hyperlink>), abstract (<hyperlink>17.5.6</hyperlink>, <hyperlink>17.6.3</hyperlink>), y extern. </paragraph>
  <paragraph>Declaraciones de propiedades son sujetas a las mismas reglas que las declaraciones de métodos (<hyperlink>17.5</hyperlink>) en lo que se refiere a combinaciones de modificadores. </paragraph>
  <paragraph>El tipo de una declaración de propiedad especifica el tipo de la propiedad introducida por la declaración, y el <non_terminal where="17.6">nombre-del-miembro</non_terminal> especifica el nombre de la propiedad. A menos que la propiedad sea una implementación miembro de interfaz explícita, el <non_terminal where="17.6">nombre-del-miembro</non_terminal> es simplemente un identificador. Para una implementación de miembro de interfaz explicita (<hyperlink>20.4.1</hyperlink>), el <non_terminal where="17.6">nombre-del-miembro</non_terminal> consiste de un <non_terminal where="11.2">tipo-interfaz</non_terminal> seguido por una &quot;.&quot; y un identificador. </paragraph>
  <paragraph>El tipo de una propiedad debe ser al menos accesible como la propiedad en si misma (<hyperlink>10.5.4</hyperlink>). </paragraph>
  <paragraph>Las <non_terminal where="17.6.2">declaraciones-del-accesor</non_terminal>, las cuales deben ser cerradas en símbolos &quot;{&quot; y &quot;}&quot;, declaran los accesores (<hyperlink>17.6.2</hyperlink>) de la propiedad. Los accesores especifican las sentencias ejecutables asociadas con la lectura y escritura de la propiedad. </paragraph>
  <paragraph>Inclusive la sintaxis para accesar una propiedad es la misma que para un campo, una propiedad no es clasificada como una variable. De esta forma, no es posible pasar una propiedad como un argumento ref u out. </paragraph>
  <paragraph>Cuando una declaración de propiedad incluye un modificador externo (extern), se dice que la propiedad es una propiedad externa. Debido a que una declaración de propiedad externa no provee implementación actual, cada de sus <non_terminal where="17.6.2">declaraciones-de-accesor</non_terminal> consiste de un punto y coma. </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
