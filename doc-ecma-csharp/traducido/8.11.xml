<?xml version="1.0"?>
<clause number="8.11" title="Enumeraciones" informative="true">
  <paragraph>La declaración de un tipo enumeración define un nombre de tipo para un grupo relacionado de constantes simbólicas. Las enumericiones son usadas para escenários de &quot;elección múltiple&quot;, el los que se realiza una decisión en tiempo de ejecución sobre un número fijo de elecciones que son conocidas en tiempo de compilación</paragraph>
  <paragraph>El ejemplo <code_example><![CDATA[
enum Color   
{  
   Rojo,  
   Azul,  
   Verde  
}  
class Figura  
{  
   public void Rellena(Color color) {  
      switch(color) {  
         case Color.Rojo:  
         ...  
         break;  
         case Color.Azul:  
         ...  
         break;  
         case Color.Verde:  
         ...  
         break;  
         default:  
         break;  
      }  
   }  
}  
]]></code_example>muestra una enumeración Color y un método que usa esta enumeriación. La firma del método Rellena deja claro que Figura puede ser Rellenado con uno de los colores dados </paragraph>

  <paragraph>El uso de enumeraciones es mejor que el uso de constantes enteras ( como es común en lenguajes sin enumeraciones ), porque su uso hace el código más claro y autodocumentado. La naturaliza autodocumentada del código también hace posible para la erramienta de desarrollo asistir al progrmador con estcritura de código y otras actividades &quot;de diseño&quot;. Por ejemplo, el uso de Color más bien que <keyword>int</keyword> para un tipo de parámetro permite a los editores de texto potentes sugerir valores de Color. </paragraph>
</clause>

<!--Traducción Fabian Seoane fseoane@wanadoo.es -->
