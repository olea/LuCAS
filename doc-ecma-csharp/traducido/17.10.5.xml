<?xml version="1.0"?>
<clause number="17.10.5" title="Constructores privados">
  <paragraph>Cuando una clase declara solo constructores de instancias privadas, no es posible para otras clases derivar de desa clase o crear instancias de esa clase (una excepción dentro de clases anidadas dentro de esa clase).<example>[Ejemplo: Constructores de instancias privadas son comúnmente usados en clases que contienen solo métodos estáticos. Por ejemplo: <code_example><![CDATA[
public class Trig  
{  
   private Trig() {}   // Instanciación preventiva
   public const double PI = 3.14159265358979323846;  
   public static double Sin(double x) {...}  
   public static double Cos(double x) {...}  
   public static double Tan(double x) {...}  
}  
]]></code_example></example></paragraph>
  <paragraph><example>La clase Trig agrupa métodos relacionados y constantes, pero no es intencionada a que se pueda inicializar. Por lo tanto, declara un constructor de instancia privado sencillo y vacío. fin ejemplo]</example> Al menos un constructor de instancia debe ser declarado para suprimir la generación automática del constructor por defecto. </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
