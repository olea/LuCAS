<?xml version="1.0"?>
<clause number="14.2" title="Operadores">
  <paragraph>Las expresiones son construidas de operandos y operadores. Los operadores de una expresión indican que operaciones se aplican a los operandos. Ejemplos de operadores incluyen +, -, *, /, y new. Ejemplos de operandos incluyen literales, campos, variables locales, y expresiones. </paragraph>
  <paragraph>Hay tres tipos de operadores: <list><list_item> Operadores Unarios. Los operadores unarios toman un operando y usan ya sea notación prefija (como --x) o notación postfija (como x++). </list_item><list_item> Operadores Binarios. Los operadores binarios toman dos operandos y usan operación infija (como x + y). </list_item><list_item> Operador Ternario. Solo existe un operador ternario, ?:, toma tres operandos y usa notación infija (c ? x : y). </list_item></list></paragraph>
  <paragraph>El orden de evaluación de operadores en una expresión esta determinado por la procedencia y asociatividad de los operadores (<hyperlink>14.2.1</hyperlink>). </paragraph>
  <paragraph>El orden en el cual operandos en una expresión son evaluados, es de izquierda a derecha. <example>[Ejemplo: Por ejemplo, en F(i) + G(i++) * H(i), método F es llamado usando el valor viejo de i, luego método G es llamado con el valor viejo de i, y, finalmente, método H es llamado con nuevo valor de i. Esto es separado y sin relación con la precedencia del operador. fin ejemplo]</example> Algunos operadores pueden estar sobrecargados. La sobrecarga de operadores permite implementaciones de operadores definidas por el usuario para operaciones donde uno o mas de los operandos son clases o tipos de estructura que usuario definió (<hyperlink>14.2.2</hyperlink>). </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
