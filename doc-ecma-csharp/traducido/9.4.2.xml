<?xml version="1.0"?>
<clause number="9.4.2" title="Identificadores">
  <paragraph>Las reglas para identificadores dadas en esta sección corresponden exactamente a esas recomendadas por el Anexo 15 del Estándar Unicode excepto que el guión-bajo esta permitido como caracter inicial (como es tradicional en el lenguaje de programación C), caracteres de escape Unicode son permitidos como identificadores, y el caracter &quot;@&quot; es permitido como un prefijo para habilitar palabras reservadas como identificadores. <grammar_production><name>identificador</name> :: <rhs><non_terminal where="9.4.2">identificador-disponible</non_terminal></rhs><rhs><terminal>@</terminal><non_terminal where="9.4.2">identificador-o-palabra-reservada</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">identificador-disponible</non_terminal></name> :: <rhs>Un <non_terminal where="9.4.2">identificador-o-palabra-reservada</non_terminal> que no es una una <non_terminal where="9.4.3">palabra-reservada</non_terminal> </rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">identificador-o-palabra-reservada</non_terminal></name> :: <rhs><non_terminal where="9.4.2">caracter-de-inicio-del-identificador</non_terminal><non_terminal where="9.4.2">caracteres-parte-de-identificador</non_terminal><opt/></rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">caracter-de-inicio-del-identificador</non_terminal></name> :: <rhs><non_terminal where="9.4.2">caracter-de-letra</non_terminal></rhs><rhs>_ (el caracter guión-bajo U+005F) </rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">caracter-parte-del-identificador</non_terminal>s</name> :: <rhs><non_terminal where="9.4.2">caracter-parte-del-identificador</non_terminal></rhs><rhs><non_terminal where="9.4.2">caracteres-parte-de-identificador</non_terminal><non_terminal where="9.4.2">caracter-parte-del-identificador</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">caracter-parte-del-identificador</non_terminal></name> :: <rhs><non_terminal where="9.4.2">caracter-de-letra</non_terminal></rhs><rhs><non_terminal where="9.4.2">caracter-de-dígito-decimal</non_terminal></rhs><rhs><non_terminal where="9.4.2">caracter-de-conexión</non_terminal></rhs><rhs><non_terminal where="9.4.2">caracter-de-combinación</non_terminal></rhs><rhs><non_terminal where="9.4.2">caracter-de-formateo</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">caracter-de-letra</non_terminal></name> :: <rhs>Un caracter Unicode de clases Lu, Ll, Lt, Lm, Lo, o Nl </rhs><rhs>A <non_terminal where="9.4.1">secuencia-de-escape-unicode</non_terminal> representa un caracter de clases Lu, Ll, Lt, Lm, Lo, o Nl </rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">caracteres-de-combinación</non_terminal></name> :: <rhs>Un caracter Unicode de clases Mn o Mc </rhs><rhs>A <non_terminal where="9.4.1">secuencia-de-escape-unicode</non_terminal> representa un caracter de clases Mn o Mc </rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">caracter-de-dígito-decimal</non_terminal></name> :: <rhs>Un caracter Unicode de la clase Nd </rhs><rhs>A <non_terminal where="9.4.1">secuencia-de-escape-unicode</non_terminal> representa un caracter de la clase Nd </rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">caracter-de-conexión</non_terminal></name> :: <rhs>Un caracter Unicode de la clase Pc </rhs><rhs>A <non_terminal where="9.4.1">secuencia-de-escape-unicode</non_terminal> representa un caracter de la clase Pc </rhs></grammar_production><grammar_production><name><non_terminal where="9.4.2">caracter-de-formateo</non_terminal></name> :: <rhs>Un caracter Unicode de la clase Cf </rhs><rhs>Una <non_terminal where="9.4.1">secuencia-de-escape-unicode</non_terminal> representa un caracter de la clase Cf </rhs></grammar_production></paragraph>
  <paragraph>
    <note>[Nota: Para información de las clases de caracteres Unicode mencionados anteriormente, mire el Estándar Unicode, Versión 3.0, 4-5. fin nota]</note>
  </paragraph>
  <paragraph>
    <example>[Ejemplo: Ejemplos de identificadores validos incluyen &quot;identificador1&quot;, &quot;_identificador2&quot;, y &quot;@if&quot;. fin ejemplo]</example>
  </paragraph>
  <paragraph>Un identificador en un programa debe estar en el formato canónico definido por la Forma C de Normalización Unicode, definida por el Anexo 15 del Estándar Unicode. El comportamiento cuando se encuentra un identificador que no esta en Forma C de la Normalización es una implementación definida; de cualquier forma, un diagnostico no es requerido.</paragraph>
<paragraph> El prefijo &quot;@&quot; habilita el uso de palabras reservadas como identificadores, el cual es útil cuando se hacen interfaces con otros lenguajes de programación. El caracter @ no es actualmente parte del identificador, así que el identificador puede ser visto en otros lenguajes como un identificador normal, sin el prefijo. Un identificador con un prefijo @ es llamado identificador literal. <note>[Nota: El uso del prefijo @ para identificadores no son palabras reservadas es permitido, pero es fuertemente no aconsejado como forma de estilo. fin nota]</note> </paragraph>
  <paragraph>
    <example>[Ejemplo: El ejemplo: <code_example><![CDATA[
class @class  
{  
   public static void @static(bool @bool) {  
      if (@bool)  
      System.Console.WriteLine("verdadero");  
      else  
      System.Console.WriteLine("falso");  
   }    
}  
class Class1  
{  
   static void M() {  
      cl\u0061ss.st\u0061tic(true);  
   }  
}  
]]></code_example>define una clase llamada &quot;class&quot; con un método estático llamado &quot;static&quot; que toma un parámetro llamado &quot;bool&quot;. Note que debido a que los escapes Unicode no están permitidas como palabras reservadas, el símbolo &quot;cl\u0061ss&quot; es un identificador, y es el mismo identificador como &quot;@class&quot;. fin ejemplo]</example>
  </paragraph>
  <paragraph>Dos identificadores son consideramos los mismos si ellos son idénticos si después de las transformaciones siguientes son aplicadas, en el orden: <list><list_item> El prefijo &quot;@&quot;, si es usado, es removido. </list_item><list_item> Cada <non_terminal where="9.4.1">secuencia-de-escape-unicode</non_terminal> es transformada en su caracter correspondiente Unicode. </list_item><list_item> Cualquier <non_terminal where="9.4.2">caracter-de-formateo</non_terminal> es removido. </list_item></list></paragraph>
  <paragraph>Identificadores que contengan dos caracteres guión bajo (U+005F) consecutivos son reservados para uso de implementación; de cualquier forma, no hay diagnostico requerido si dicho identificador es definido. <note>[Nota: Por ejemplo, un implementación debe proveer palabras reservadas que comiencen con dos guiones bajos. fin nota]</note> </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
