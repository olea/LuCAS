<?xml version="1.0"?>
<clause number="17.10.4" title="Constructores por defecto">
  <paragraph>Si una clase no contiene declaraciones de constructores de instancia, un constructor de instancia por defecto es automáticamente provisto. Ese constructor por defecto simplemente invoca al constructor sin parámetros de la clase base directa. Si la clase base directa no tiene un constructor sin parámetros accesible, un error en tiempo de compilación ocurre. Si la clase es abstracta entonces la accesibilidad declarada para el constructor por defecto es protegida (protected). De otra forma, la accesibilidad declarada para el constructor por defecto es publico. <note>[Note: De esta manera, el constructor por defecto es siempre de la forma <code_example><![CDATA[
protected C(): base() {}  
]]></code_example>o <code_example><![CDATA[
public C(): base() {}  
]]></code_example>donde C es el nombre de la clase. fin nota]</note> </paragraph>
  <paragraph>
    <example>[Ejemplo: EN el ejemplo <code_example><![CDATA[
class Message  
{  
   object sender;  
   string text;  
}  
]]></code_example>un constructor por defecto es provisto porque la clase no contiene declaraciones de constructores de instancia. De esta manera, el ejemplo es precisamente equivalente a <code_example><![CDATA[
class Message  
{  
   object sender;  
   string text;  
   public Message(): base() {}  
}  
]]></code_example>fin ejemplo]</example>
  </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
