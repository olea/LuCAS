<?xml version="1.0"?>
<clause number="8.8" title="Estructuras" informative="true">
  <paragraph>La lista de similaridades entre clases y estructuras es largo: las
  estructuras pueden implmentar interfaces, y pueden tener el mismo tipo de
  miembros que las clases. Sin embargo, las estructuras difieren de las clases
  en algunos puntos importantes: las estructuras son tipos por valor en lugar de
  tipos por referencia, y no permiten la herencia. Los valores de las
  estructuras quedan almacenados &quot;en la pila&quot; o &quot;alíneados&quot;.
  Los programadores cuidadosos pueden a veces mejorar el rendimiento mediante un
  uso meditado de las estructuras.</paragraph>
  
  <paragraph>Por ejemplo, el uso de una estructura más bien que una clase para un Punto puede producir una gran diferencia en el número de asignaciones producias en memoria en tiempo de ejecución. El siguiente programa crea e inicializa un arreglo de 100 puntos. Con Punto implementado como clase, 101 objetos separados son inicializados ( uno para el vector y uno para cada uno de los 100 elementos )<code_example><![CDATA[
class Punto  
{  
   public int x, y;  
   public Punto(int x, int y) {  
      this.x = x;  
      this.y = y;  
   }  
}  
class Test  
{  
   static void Main() {  
      Punto[] Puntos = new Punto[100];  
      for (int i = 0; i < 100; i++)  
      Puntos[i] = new Punto(i, i*i);  
   }  
}  
]]></code_example></paragraph>
  <paragraph>Si Punto fuera implementado como una estructura, como en <code_example><![CDATA[
struct Punto  
{  
   public int x, y;  
   public Punto(int x, int y) {  
      this.x = x;  
      this.y = y;  
   }  
}  
]]></code_example>únicamente un objeto es inicializado: el elemento del
arreglo. Las instancias de Punto son almacenan de forma alíneada en el arreglo.
Esta optimización puede ser mal usada. Usar estructuras en lugar de clases
también puede hacer que una aplicación funcione más lento o utilice más
memoria, pués pasar una instancia de estructura por valor provoca una que una
copia de esa estructura sea creada.</paragraph>
</clause>

<!-- Traducción Fabian Seoane fabian@fseoane.net --> 
