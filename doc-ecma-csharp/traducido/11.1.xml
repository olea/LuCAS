<?xml version="1.0"?>
<clause number="11.1" title="Tipos por valor">
  <paragraph>Un tipo por valor es ya sea un tipo estructura o enumeración. C# provee un juego tipos de estructura predefinidos llamados tipos simples. Los tipos simples son identificados a través de palabras reservadas. <grammar_production><name><non_terminal where="11.1">tipo-por-valor</non_terminal></name> : <rhs><non_terminal where="11.1">tipo-estructura</non_terminal></rhs><rhs><non_terminal where="11.1">tipo-enumeración</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="11.1">tipo-estructura</non_terminal></name> : <rhs><non_terminal where="10.8">nombre-del-tipo</non_terminal></rhs><rhs><non_terminal where="11.1">tipo-simple</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="11.1">tipo-simple</non_terminal></name> : <rhs><non_terminal where="11.1">tipo-numérico</non_terminal></rhs><rhs><keyword>bool</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="11.1">tipo-numérico</non_terminal></name> : <rhs><non_terminal where="11.1">tipo-entero</non_terminal></rhs><rhs><non_terminal where="11.1">tipo-punto-flotante</non_terminal></rhs><rhs><keyword>decimal</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="11.1">tipo-entero</non_terminal></name> : <rhs><keyword>sbyte</keyword></rhs><rhs><keyword>byte</keyword></rhs><rhs><keyword>short</keyword></rhs><rhs><keyword>ushort</keyword></rhs><rhs><keyword>int</keyword></rhs><rhs><keyword>uint</keyword></rhs><rhs><keyword>long</keyword></rhs><rhs><keyword>ulong</keyword></rhs><rhs><keyword>char</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="11.1">tipo-punto-flotante</non_terminal></name> : <rhs><keyword>float</keyword></rhs><rhs><keyword>double</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="11.1">tipo-enumeración</non_terminal></name> : <rhs><non_terminal where="10.8">nombre-del-tipo</non_terminal></rhs></grammar_production></paragraph>
  <paragraph>Todos los valores son implícitamente heredados de la clase object. No es posible para cualquier tipo derivar desde un tipo por valor, y los tipos por valor son de esta forma implícitamente sellados (<hyperlink>17.1.1.2</hyperlink>). </paragraph>
  <paragraph>Una variable de tipo por valor siempre contiene un valor de ese tipo. Nada parecido a los tipos por referencia, no es posible que un valor de un tipo por valor sea nulo, o la referencia aun objeto de un tipo mas derivado. </paragraph>
  <paragraph>Asignación a una variable de tipo por valor crea una copia de un valor que esta siendo asignado. Este se difiere a la asignación de la variable de referencia por tipo, el cual copia la referencia pero no el objeto identificado por la referencia. </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
