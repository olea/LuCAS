<?xml version="1.0"?>
<clause number="14.6.5" title="Operadores de incremento y decremento prefijos">
  <paragraph>
    <grammar_production><name><non_terminal where="14.6.5">expresión-de-pre-incremento</non_terminal></name> : <rhs><terminal>++</terminal><non_terminal where="14.6">expresión-unaria</non_terminal></rhs></grammar_production>
    <grammar_production><name><non_terminal where="14.6.5">expresión-de-pre-decremento</non_terminal></name> : <rhs><terminal>--</terminal><non_terminal where="14.6">expresión-unaria</non_terminal></rhs></grammar_production>
  </paragraph>
  <paragraph>El operando de un prefijo de una operación de incremento o decremento debe ser una expresión clasificada como una variable, un acceso a propiedad, o un acceso a indexador. El resultado de la operación es un valor del mismo tipo que el operando. </paragraph>
  <paragraph>Si el operando de una operación de incremento o decremento prefijo es un acceso a propiedad o indexador, la propiedad o indexador debe tener un accesor get y set. Si este no es el caso, un error en tiempo de compilación ocurre. </paragraph>
  <paragraph>La resolución de sobrecarga de operador unario (<hyperlink>14.2.3</hyperlink>) es aplicada para seleccionar una implementación de operador específica. Operadores predefinidos ++ y -- existen para los siguientes tipos: <keyword>sbyte</keyword>, <keyword>byte</keyword>, <keyword>short</keyword>, <keyword>ushort</keyword>, <keyword>int</keyword>, <keyword>uint</keyword>, <keyword>long</keyword>, <keyword>ulong</keyword>, <keyword>char</keyword>, <keyword>float</keyword>, <keyword>double</keyword>, <keyword>decimal</keyword>, y cualquier tipo enum. Los operadores predefinidos ++ regresan el valor producido al agregar 1 al operando, y los operadores predefinidos -- regresan el valor producido al sustraer 1 del operando. </paragraph>
  <paragraph>El procesamiento en tiempo de ejecución de una operación de prefijo de incremento o decremento de la forma ++x o --x consiste de los siguientes pasos: <list><list_item> Si x esta clasificado como una variable: </list_item><list><list_item> x es evaluado para producir la variable. </list_item><list_item> El operador seleccionado es invocado con el valor de x como su argumento. </list_item><list_item> El valor regresado por el operador es almacenado en la localidad dada por la evaluación de x. </list_item><list_item> El valor regresado por el operador se convierte en el resultado de la operación. </list_item></list><list_item> Si x esta clasificado como un acceso a propiedad o indexador: </list_item><list><list_item> La expresión de instancia (si x no es estático) y la lista de argumentos (si x no es acceso a indexador) asociada con x son evaluadas, y los resultados son usados en las invocaciones de accesores set y get. </list_item><list_item> El accesor get de x es invocado. </list_item><list_item> El operador seleccionado es invocado con el valor retornado por el accesor get como su argumento. </list_item><list_item> El accesor set de x es invocado con el valor retornado por el operador como su argumento de valor. </list_item><list_item> El valor retornado por el operador se convierte en el resultado de la operación. </list_item></list></list></paragraph>
  <paragraph>Los operadores ++ y -- también soportan notación postfija (<hyperlink>14.5.9</hyperlink>). El resultado de x++ o x-- es el valor de x antes de la operación. En cualquier caso, x por si misma tiene el mismo valor después de la operación. </paragraph>
  <paragraph>Una implementación de operador ++ u operador -- puede ser invocada usando ya sea una notación postfija o prefija. No es posible tener implementaciones de operador separadas para las dos notaciones. </paragraph>
</clause>
<!-- Traducido por Mario Carrión, mario.carrion@gmail.com -->
