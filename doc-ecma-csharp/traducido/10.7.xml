<?xml version="1.0"?>
<clause number="10.7" title="Alcances">
  <paragraph>El ámbito de un nombre es la región de un texto de programa en el que 
es posible hacer referencia a la entidad declarada por el nombre sin utilizar la 
calificación del nombre. Los ámbitos pueden estar anidados, y en un ámbito
interior se puede redeclarar el significado de un nombre en un ámbito exterior
  <note>[Nota: de todas formas, esto no quita la restricción impuesta por <hyperlink>10.3</hyperlink> que dice que dentro de un bloque anidado no es posible declarar una variable local con el mismo nombre que una variable local en el bloque superior. fin nota]</note> Se dice entonces que el nombre del ámbito del nivel superior queda escondido en la región del texto de programa cubiertas por el ámbito interior, y el acceso al nombre exterior solo es posible a través de un nombre cualificado. 
<list>
<list_item> El ámbito de un espacio de nombres declarado por una <non_terminal where="16.4">declaración-de-miembros-de-un-espacio-de-nombres</non_terminal> (<hyperlink>16.4</hyperlink>) que no están contenidos en ninguna <non_terminal where="16.2">declaración-de-espacio-de-nombres</non_terminal> es todo el texto del programa. </list_item>
<list_item> El ámbito de un miembro de un espacio de nombres declarado por una
<non_terminal
where="16.2">declaración-de-miembros-de-un-espacio-de-nombres</non_terminal>
dentro de una <non_terminal
where="16.2">declaración-de-espacio-de-nombres</non_terminal> cuyo nombre
completa cualificado es N, es el <non_terminal
where="16.2">cuerpo-de-espacio-de-nombres</non_terminal> de cada <non_terminal
where="16.2">declaración-de-espacio-de-nombres</non_terminal> cuyo nombre
completo cualificado es N o comienza por N, seguido de un periodo. </list_item>

<list_item> El ámbito de un nombre definido o importado por una <non_terminal
where="16.3">directiva-using</non_terminal> (<hyperlink>16.3</hyperlink>) se
extiende a lo largo de la <non_terminal
where="16.4">declaración-de-miembros-del-espacio-de-nombres</non_terminal> de la
<non_terminal where="16.1">unidad-de-compilación</non_terminal> o <non_terminal
where="16.2">cuerpo-de-espacio-de-nombres</non_terminal> en el que la tiene
lugar la <non_terminal where="16.3">directiva-using</non_terminal>. Una
<non_terminal where="16.3">directiva-using</non_terminal> puede abarcar cero o
más espacios de nombres o nombres de tipos disponibles dentro de una concreta
<non_terminal where="16.1">unidad-de-compilación</non_terminal> o <non_terminal
where="16.2">cuerpo-de-espacio-de-nombres</non_terminal>, pero no añade ningún
nuevo miembro al espacio de declaración subyacente. En otras palabras, una <non_terminal
where="16.3">directiva-using</non_terminal> no es transitiva, sino que más bien,
afecta solamente en la <non_terminal
where="16.1">unidad-de-compilación</non_terminal> o en el 
<non_terminal where="16.2">cuerpo-de-espacio-de-nombres</non_terminal> en el que
tiene lugar.
</list_item>

<list_item> El ámbito de un miembro declarado por una <non_terminal
where="17.2">declaración-de-miembros-de-clase</non_terminal>
(<hyperlink>17.2</hyperlink>) es el <non_terminal
where="17.1.3">cuerpo-de-la-clase</non_terminal> en el que tiene lugar la
declaración. Además, el ámbito de un miembro de la clase se extiende al
<non_terminal where="17.1.3">cuerpo-de-la-clase</non_terminal> de aquellas
clases derivadas que quedan incluidas en el dominio de accesibilidad
(<hyperlink>10.5.2</hyperlink>) del miembro. </list_item>

<list_item> El ámbito declarado por una <non_terminal
where="18.2">declaración-de-miembro-de-estructura</non_terminal>
(<hyperlink>18.2</hyperlink>) es el <non_terminal
where="18.1.3">cuerpo-de-la-estructura</non_terminal> en el que la declaración
tiene lugar.
</list_item>

<list_item> El ámbito de un miembro declarado en una <non_terminal
where="21.3">declaración-de-miembros-de-una-enumeración</non_terminal>
(<hyperlink>21.3</hyperlink>) es el <non_terminal
where="21.1">cuerpo-de-la-enumeración</non_terminal> en el que la tiene lugar la
declaración.
</list_item> 

<list_item> El ámbito de un parámetro declarado en una <non_terminal
where="17.5">declaración-de-métodos</non_terminal> (<hyperlink>17.5</hyperlink>)
es el <non_terminal where="17.5">cuerpo-de-método</non_terminal> de dicha  <non_terminal
where="17.5">declaración-de-método</non_terminal>. </list_item>

<list_item> El ámbito de un parámetero declarado en una <non_terminal
where="17.8">declación-de-indexador</non_terminal> (<hyperlink>17.8</hyperlink>)
son las <non_terminal where="17.6.2">declaraciones-de-accesores</non_terminal>
de dicha <non_terminal where="17.8">declaración-de-indexador</non_terminal>. </list_item>

<list_item> El ámbito de un parámetro declarado en una <non_terminal
where="17.9">declaración-de-operador</non_terminal>
(<hyperlink>17.9</hyperlink>) es el bloque de dicha  <non_terminal
where="17.9">declaración-de-operador</non_terminal>. </list_item>

<list_item> El ámbito de un parámetro declarado en una <non_terminal
where="17.10">declaración-de-constructor</non_terminal>
(<hyperlink>17.10</hyperlink>) es el <non_terminal where="17.10">inicializador
del constructor</non_terminal> y el bloque de la <non_terminal
where="17.10">declaración-de-constructor</non_terminal>. </list_item>

<list_item> El ámbito de una etiqueta declarada en una <non_terminal
where="15.4">sentencia-etiquetada</non_terminal> (<hyperlink>15.4</hyperlink>)
es el bloque en el que la declaración tiene lugar. </list_item>

<list_item> El ámbito de una variable local declarada una <non_terminal
where="15.5.1">declaración-de-variable-local</non_terminal>
(<hyperlink>15.5.1</hyperlink>) es el bloque en el que tiene lugar la
declaración. </list_item>

<list_item> El ámbito de una variabel local declarada en un <non_terminal
where="15.7.2">bloque-switch</non_terminal> de una sentencia switch
(<hyperlink>15.7.2</hyperlink>) es el <non_terminal where="15.7.2">bloque-switch</non_terminal>. </list_item>

<list_item> Al ámbito de una variable local declarada en un <non_terminal
where="15.8.3">inicializador-for</non_terminal> de una sentencia for
(<hyperlink>15.8.3</hyperlink>) es el <non_terminal
where="15.8.3">inicializador-for</non_terminal>, la <non_terminal
where="15.8.3">condición-for</non_terminal>, el <non_terminal
where="15.8.3">iterador-for</non_terminal>, y la sentencias contenidas en la
sentencia for. </list_item>

<list_item> El ámbito de una constante local declarada en una <non_terminal
where="15.5.2">declaración-local-de-constantes</non_terminal>
(<hyperlink>15.5.2</hyperlink>) es el bloque en el que tiene lugar la
declaración. Es un error en tiempo de compilación el referirse a una constante
local en una posición textual que preceda a su <non_terminal
where="17.3">declaración-de-constante</non_terminal>. </list_item></list></paragraph>
  
  <paragraph>Dentro del ámbito de un espacio de nombres, clase, estructura o
  miembro de enumeración es posible referirse a un miembro situado en una
  posición textual que precede la declaración del miembro. <example>[Ejemplo:
  Por ejemplo <code_example><![CDATA[
class A  
{  
   void F() {  
      i = 1;  
   }  
   int i = 0;  
}  
]]></code_example></example></paragraph>
  <paragraph>
    <example>Aquí, es valido para F referirse a i antes de ser declarado. fin
    ejemplo]</example>
  </paragraph>
  <paragraph>Dentro del ámbito de una variable local, es un error en tiempo de
  compilación el referirse a variables locales en una posición textual que
  preceda la <non_terminal
  where="15.5.1">declaración-de-variables-locales</non_terminal> de la variable
  local. <example>[Ejemplo:Por ejemplo <code_example><![CDATA[
class A  
{  
   int i = 0;  
   void F() {  
      i = 1;      // Error  
      int i;  
      i = 2;  
   }  
   void G() {  
      int j = (j = 1);    // Valido  
   }  
   void H() {  
      int a = 1, b = ++a;  // Valido  
   }  
}  
]]></code_example></example></paragraph>
  <paragraph>
    <example>En el método F mostrado anteriormente, le primera asignación que se
    hace a i no se refiere específicamente al campo declarado en el ámbito
    superior. Más bien, se refiere a la variable local y produce un error en
    tiempo de compilación porque precede textualmente la declaración de la
    variable. En el método G, el uso de j en el inicializador para la
    declaración de h es válido porque el uso no precede a la <non_terminal
    where="15.5.1">declaración-local-de-variable</non_terminal>. En el método H,
    la correspondiente <non_terminal
    where="15.5.1">declaración-local-de-variables</non_terminal> se refiere
    correctamente a una variable local declarada en un <non_terminal
    where="15.5.1">declarador-local-de-variables</non_terminal> anterior,
    dentro de la misma <non_terminal
    where="15.5.1">declaración-local-de-variables</non_terminal>. fin ejemplo]</example>
  </paragraph>
  <paragraph>
    <note>[Nota: las reglas sobre el ámbito para variables locales están
    diseñadas para garantizar que el significado de un nombre usado en el
    contexto de una expresión siempre es el mismo dentro de un bloque. Si el
    ámbito de una variable local se extendiera solamente desde su declaración
    hasta el final del bloque, entonces en el ejemplo antes mencionado, la
    primera asignación asignaria a la variable instancia y la segunda asignación
    asignaría a la variable local. En algunas situaciones, pero no en el ejemplo
    anterior, esto podría provocar un error en tiempo de compilación si las
    expresiones del bloque tuvieran que ser reordenadas posteriormente. fin nota]</note> 
  </paragraph>
  <paragraph>
    <note>El significad de un nombre dentro de un bloque puede diferir
    dependiendo del contexto en el que es usado. En el ejemplo <code_example><![CDATA[
using System;  
class A {}  
class Test  
{  
   static void Main() {  
      string A = "hola mundo";  
      string s = A;         // contexto de expresión  
      Type t = typeof(A);       // contexto de tipo  
      Console.WriteLine(s);      // imprime "hola mundo"  
      Console.WriteLine(t.ToString());  // imprime "Type: A"  
   }  
}  
]]></code_example>el nombre A es usado en el contexto de una expresión para
referirse a la variable local A y en el contexto de un tipo para referirse a la
calse. fin nota]</note>
  </paragraph>
</clause>
