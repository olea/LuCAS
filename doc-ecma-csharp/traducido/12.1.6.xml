<?xml version="1.0"?>
<clause number="12.1.6" title="Parámetros de salida">
  <paragraph>Un parámetro declarado con modificador out es un parámetro de salida. </paragraph>
  <paragraph>Un parámetro de salida no crea una nueva ubicación de almacenamiento. En cambio, un parámetro de salida representa la misma ubicación de almacenamiento que la variable dada como argumento en la invocación de la función miembro. Así, el valor de un parámetro de salida es siempre el mismo que su variable subyacente. </paragraph>
  <paragraph>Las siguientes reglas de asignación definitiva se aplican a los parámetros de salida. <note>[Nota: Las reglas para los parámetros de referencia son diferentes, y son descritas en <hyperlink>12.1.5</hyperlink>. fin de nota]</note> <list><list_item> Una variable no necesita ser asignada antes de que pueda ser pasada como un parámetro de salida en una invocación de la función miembro. </list_item><list_item> Después de la finalización normal de una invocación de una función miembro, cada variable que fue pasada como un parámetro de salida es considerada asignada en ese camino de ejecución. </list_item><list_item> Dentro de una función miembro, un parámetro de salida en considerado inicialmente no asignado. </list_item><list_item> Normalmente, todo parámetro de salida de una función miembro tiene que ser asignada (<hyperlink>12.3</hyperlink>) antes de que la función miembro produzca devoluciones. </list_item></list></paragraph>
  <paragraph>Dentro de un constructor instancia de tipo estructura, la palabra reservada this se comporta exactamente como un parámetro de salida del tipo estructura (<hyperlink>14.5.7</hyperlink>). </paragraph>
</clause>

<!-- traducción Carlos Parra, carlox_parra@yahoo.es -->
