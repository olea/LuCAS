<?xml version="1.0"?>
<clause number="14.5.10.1" title="Expresiones de creación de objeto">
  <paragraph>Una <non_terminal where="14.5.10.1">expresión-de-creación-de-objeto</non_terminal> es usada para crear una nueva instancia de un <non_terminal where="11.2">tipo-clase</non_terminal> o un <non_terminal where="11.1">tipo-por-valor</non_terminal>. <grammar_production><name><non_terminal where="14.5.10.1">expresión-de-creación-de-objeto</non_terminal></name> : <rhs><keyword>new</keyword><non_terminal where="11">tipo</non_terminal><terminal>(</terminal><non_terminal where="14.4.1">lista-de-argumentos</non_terminal><opt/><terminal>)</terminal></rhs></grammar_production></paragraph>
  <paragraph>El tipo de una <non_terminal where="14.5.10.1">expresión-de-creación-de-objeto</non_terminal> debe ser un <non_terminal where="11.2">tipo-clase</non_terminal> o un <non_terminal where="11.1">tipo-por-valor</non_terminal>. El tipo no puede ser abstracto <non_terminal where="11.2">tipo-clase</non_terminal>. </paragraph>
  <paragraph>La <non_terminal where="14.4.1">lista-de-argumentos</non_terminal> opcional (<hyperlink>14.4.1</hyperlink>) es permitida únicamente si el tipo es un <non_terminal where="11.2">tipo-clase</non_terminal> o un <non_terminal where="11.1">tipo-estructura</non_terminal>. </paragraph>
  <paragraph>El procesamiento en tiempo de compilación de una <non_terminal where="14.5.10.1">expresión-de-creación-de-objeto</non_terminal> de la forma new T(A), donde T es un <non_terminal where="11.2">tipo-clase</non_terminal> o un <non_terminal where="11.1">tipo-por-valor</non_terminal> y A es <non_terminal where="14.4.1">lista-de-argumentos</non_terminal> opcional, consiste de los siguientes pasos: <list><list_item> Si T es un <non_terminal where="11.1">tipo-por-valor</non_terminal> y A no esta presente: </list_item><list><list_item> La <non_terminal where="14.5.10.1">expresión-de-creación-de-objeto</non_terminal> es la invocación de constructor por defecto. El resultado de la <non_terminal where="14.5.10.1">expresión-de-creación-de-objeto</non_terminal> es un valor del tipo T, es decir el valor por defecto para T esta definido en <hyperlink>11.1.1</hyperlink>. </list_item></list><list_item> De otro forma, si T es un <non_terminal where="11.2">tipo-clase</non_terminal> o un tipo estructura: </list_item><list><list_item> Si T es un <non_terminal where="11.2">tipo-clase</non_terminal> abstracto, un error en tiempo de compilación ocurre. </list_item><list_item>El constructor de instancia para invocar es determinado usando las reglas de resolución de sobrecarga de <hyperlink>14.4.2</hyperlink>. El juego de constructores de instancia candidatos de todos los constructores de instancia accesibles declarados en T. Si el juego de constructores de instancia candidatos esta vacío, o si el mejor constructor de instancia sencillo no puede ser identificado, un error en tiempo de compilación ocurre. </list_item><list_item> El resultado de la <non_terminal where="14.5.10.1">expresión-de-creación-de-objeto</non_terminal> es un valor de tipo T, es decir el valor producido al invocar el constructor de instancia determinado en el paso anterior. </list_item></list><list_item> De otra forma la <non_terminal where="14.5.10.1">expresión-de-creación-de-objeto</non_terminal> es invalida, un error en tiempo de compilación ocurre. </list_item></list></paragraph>
  <paragraph>El procesamiento en tiempo de ejecución de una <non_terminal where="14.5.10.1">expresión-de-creación-de-objeto</non_terminal> de la forma new T(A), donde T es <non_terminal where="11.2">tipo-clase</non_terminal> o un <non_terminal where="11.1">tipo-estructura</non_terminal> y A es una <non_terminal where="14.4.1">lista-de-argumentos</non_terminal> opcional, consiste de los siguientes pasos: <list><list_item> Si T es tipo-clase: </list_item><list><list_item> Una nueva instancia de clase T es asignada. Si no hay suficiente memoria disponible para asignar la nueva instancia, una System.OutOfMemoryException es lanzada y no se realizan más pasos. </list_item><list_item> Todos los campos de la nueva instancia son inicializados a sus valores por defecto (<hyperlink>12.2</hyperlink>). </list_item><list_item> El constructor de instancia es invocado de acuerdo a las reglas de invocación de miembro de función (<hyperlink>14.4.3</hyperlink>). Una referencia a la recien instancia asignada es automáticamente pasada al constructor de instancia y la instancia puede ser accesada desde dentro ese constructor como this. </list_item></list><list_item> Si T es un tipo estructura: </list_item><list><list_item>Una instancia de tipo T es creada al asignar un variable local temporal. Debido a que un constructor de instancia de un <non_terminal where="11.1">tipo-estructura</non_terminal> es requerido para definitivamente asignar un valor para cada campo de la instancia recién creada, no es necesaria la inicialización de la variable temporal. </list_item><list_item> El constructor de instancia es invocado de acuerdo a las reglas de invocación de miembro función (<hyperlink>14.4.3</hyperlink>). Una referencia a la recen creada instancia de asignación es automáticamente pasada al constructor de instancia y la instancia puede ser accesada desde dentro este constructor como this. </list_item></list></list></paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
