<?xml version="1.0"?>
<clause number="14.4.2.1" title="Miembro de función aplicable">
  <paragraph>Un miembro función se dice que es un miembro función aplicable con respecto a una lista de argumentos A cuando todo de lo siguiente es verdadero: <list><list_item> El número de argumentos en A es idéntico al número de parámetros en la declaración del miembro función.</list_item><list_item> Para cada argumento en A, el modo de pasar parámetros de el argumento (por ejemplo, value, ref o out) es idéntico al modo de pasar parámetros del correspondiente parámetro, y </list_item><list><list_item> para un parámetro por valor o un parámetro como arreglo, una conversión implícita (<hyperlink>13.1</hyperlink>) existe desde el tipo del argumento hacia el tipo del parámetro correspondiente, o </list_item><list_item> para un parámetro ref o out, el tipo del argumento es idéntico a el tipo del correspondiente parámetro. <note>[Nota: Después de todo, un parámetro ref o out es un alias para el argumento pasado. fin nota]</note> </list_item></list></list></paragraph>
  <paragraph>Para un miembro función que incluye un parámetro como arreglo, si el miembro función es aplicable por las siguientes reglas, se dice que es aplicable en su forma normal. Si un miembro función que incluye un parámetro como arreglo no es aplicable en su forma normal, el miembro función puede en vez ser aplicable en su forma expandida: <list><list_item> La forma expandida es construida al reemplazar el parámetro como arreglo en la declaración de miembros función con cero o más parámetros por valor del tipo de elemento del parámetro como arreglo como el número de argumentos en la lista de argumentos A concuerda al total de número de parámetros. Si A tiene menos argumentos que el número de argumentos establecidos en la declaración del miembro de función, la forma expandida del miembro función no puede ser construida y no es aplicable. </list_item><list_item> Si la clase, estructura, o interfaz en la cual el miembro función declarado ya contiene otro miembro función aplicable con la misma firma que la forma expandida, la forma expandida no es aplicable.</list_item><list_item> Por otro lado, la forma expandida es aplicable si para cada argumento en A el modo de pasar parámetros del argumento es idéntico al modo de pasar parámetros del correspondiendo parámetro, y </list_item><list><list_item> para un valor de parámetro fijo o un parámetro de valor creado por la expansión, una conversión implícita (<hyperlink>13.1</hyperlink>) existe del tipo del argumento hacia el tipo del parámetro correspondiente, o </list_item><list_item> para un parámetro ref o out, el tipo del argumento es idéntico al tipo del parámetro correspondiente. </list_item></list></list></paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
