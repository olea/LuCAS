<?xml version="1.0"?>
<clause number="20.4.4" title="Re-implementación de interfaces">
  <paragraph>A una clase que hereda una implementación de interfaz se le permite re-implementar la interfaz mediante su inclusión en la lista de clases base. </paragraph>
  <paragraph>Una re-implementación de una interfaz sigue exactamente las mimas reglas de correlación que un implementación de interfaz inicial. Por tanto, la correlación de interfaz heredada no tiene ningún efecto en la correlación de interfaz establecida para la re-implementación de la interfaz. <example>[Ejemplo: Por ejemplo, en las declaraciones <code_example><![CDATA[
interface IControl  
{  
   void Paint();  
}  
class Control: IControl  
{  
   void IControl.Paint() {...}  
}  
class MyControl: Control, IControl  
{  
   public void Paint() {}  
}  
]]></code_example>el hecho de que Control correlacione IControl.Paint con Control.IControl.Paint no afecta la re-implementación de MyControl, el cual correlaciona IControl.Paint con MyControl.Paint. fin del ejemplo]</example> </paragraph>
  <paragraph>Las declaraciones heredadas de miembros públicos y las declaraciones heredadas de miembros de interfaz participan en el proceso de correlación de interfaces para interfaces re-implementadas. <example>[Ejemplo: Por ejemplo <code_example><![CDATA[
interface IMethods  
{  
   void F();  
   void G();  
   void H();  
   void I();  
}  
class Base: IMethods  
{  
   void IMethods.F() {}  
   void IMethods.G() {}  
   public void H() {}  
   public void I() {}  
}  
class Derived: Base, IMethods  
{  
   public void F() {}  
   void IMethods.H() {}  
}  
]]></code_example></example></paragraph>
  <paragraph>
    <example>Aquí, la implementación de IMethods en Derived correlaciona los métodos de interfaz con Derived.F, Base.IMethods, Derived.IMethods, y Base.I. fin del ejemplo]</example>
  </paragraph>
  <paragraph>Cuando una clase implementa una interfaz, también implementa implícitamente todas las intefaces base de esa interfaz. De manera similar, una re-implementación de una interfaz es también implícitamente una re-implementación de todas las interfaces base de la interfaz. <example>[Ejemplo: Por ejemplo <code_example><![CDATA[
interface IBase  
{  
   void F();  
}  
interface IDerived: IBase  
{  
   void G();  
}  
class C: IDerived  
{  
   void IBase.F() {...}  
   void IDerived.G() {...}  
}  
class D: C, IDerived  
{  
   public void F() {...}  
   public void G() {...}  
}  
]]></code_example></example></paragraph>
  <paragraph>
    <example>Aquí, la re-implementación de IDerived también re-implementa IBase, correlacionando IBase.F con D.F. fin del ejemplo]</example>
  </paragraph>
</clause>
<!-- traducción Rodolfo Campero, rodolfo.campero@gmail.com -->
