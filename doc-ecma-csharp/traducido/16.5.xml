<?xml version="1.0"?>
<clause number="16.5" title="Declaraciones de tipos">
  <paragraph>Una <non_terminal where="16.5">declaración-de-tipo</non_terminal> (type-declaration) es una <non_terminal where="17.1">declaración-de-clase</non_terminal> (class-declaration) (<hyperlink>17.1</hyperlink>), una <non_terminal where="18.1">declaración-de-estructura</non_terminal> (struct-declaration) (<hyperlink>18.1</hyperlink>), una <non_terminal where="20.1">declaración-de-interfaz</non_terminal> (interface-declaration) (<hyperlink>20.1</hyperlink>), una <non_terminal where="21.1">declaración-de-enumeración</non_terminal> (enum-declaration) (<hyperlink>21.1</hyperlink>), o una <non_terminal where="22.1">declaración-de-delegado</non_terminal> (delegate-declaration) (<hyperlink>22.1</hyperlink>). <grammar_production><name><non_terminal where="16.5">declaración-de-tipo</non_terminal></name> : <rhs><non_terminal where="17.1">declaración-de-clase</non_terminal></rhs><rhs><non_terminal where="18.1">declaración-de-estructura</non_terminal></rhs><rhs><non_terminal where="20.1">declaración-de-interfaz</non_terminal></rhs><rhs><non_terminal where="21.1">declaración-de-enumeración</non_terminal></rhs><rhs><non_terminal where="22.1">declaración-de-delegado</non_terminal></rhs></grammar_production></paragraph>
  <paragraph>Una <non_terminal where="16.5">declaración-de-tipo</non_terminal> puede encontrarse como una declaración al nivel más alto en una unidad de compilación o como una declaración de miembro dentro de un espacio de nombres, clase o estructura. </paragraph>
  <paragraph>Cuando una declaración de tipo para un tipo T se encuentra en el nivel más alto de declaración en una unidad de compilación, el nombre completamente calificado del tipo recientemente creado es simplemente T. Cuando una declaración de tipo para un tipo T se encuentrad dentro de un espacio de nombres, clase o estructura, el nombre completamente calificado  del tipo recientemente declarado es N.T, donde N es el nombre completamente calificado del espacio de nombres, clase o estructura que lo contiene. </paragraph>
  <paragraph>Un tipo declarado dentro de una clase o estructura se llama tipo anidado (<hyperlink>17.2.6</hyperlink>). </paragraph>
  <paragraph>Los modificadores de acceso permitidos y el acceso por omisión para una declaración de tipo dependen del contexto en el cual ocurre la declaración (<hyperlink>10.5.1</hyperlink>): <list><list_item> Tipos declarados en unidades de compilación o espacios de nombres pueden tener acceso public (público) o internal (interno). El acceso por omisión es internal. </list_item><list_item> Los tipos declarados en clases pueden tener acceso public, protected internal, protected, internal o private access. Por omisión es private. </list_item><list_item> Los tipos declarados en estructuras pueden tener acceso public, internal, o private. El acceso por omisión es private. <table_line/>
</list_item></list></paragraph>
</clause>
