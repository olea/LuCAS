<?xml version="1.0"?>
<clause number="19.5" title="Covarianza de Arreglos">
  <paragraph>Para cualquiera dos <non_terminal where="11.2">tipos-referencia</non_terminal> A y B, si una referencia implícita de conversión (<hyperlink>13.1.4</hyperlink>) o referencia explícita de conversión (<hyperlink>13.2.3</hyperlink>) existe de A hacia B, entonces la misma referencia de conversión también existe del tipo arreglo A[R] hacia el tipo arreglo B[R], dónde R es cualquier <non_terminal where="19.1">especificador-de-rango</non_terminal> dado (pero el mismo para ambos tipos de arreglo). Esta relación es conocida como covarianza de arreglos. La covarianza de Arreglos, en particular, significa que el valor de un tipo arreglo A[R] puede actualmente ser una referencia a una instancia de un tipo arreglo B[R], proporcionando una referencia implícita de conversión existente de B hacia A. </paragraph>
  <paragraph>Debido a la covarianza de arreglos, las asignaciones a elementos referencia de tipos arreglo incluyen una verificación en tiempo-de-ejecución la cual asegura que los valores que son asignados a los elementos del arreglo son del tipo actualmente permitido (<hyperlink>14.13.1</hyperlink>). </paragraph>
  <paragraph>
    <example>[Ejemplo: Por Ejemplo: <code_example><![CDATA[
class Test  
{  
   static void Fill(object[] array, int index, int count, object value) {  
      for (int i = index; i < index + count; i++) array[i] = value;  
   }  
   static void Main() {  
      string[] strings = new string[100];  
      Fill(strings, 0, 100, "Undefined");  
      Fill(strings, 0, 10, null);  
      Fill(strings, 90, 10, 0);  
   }  
}  
]]></code_example></example>
  </paragraph>
  <paragraph>
    <example>La asignación hacia array[i] en el método Fill implícitamente incluye un verificación en tiempo-de-ejecución, la cual asegura que los objetos referenciados por el valor son diferentes de null o una instancia de un tipo que es compatible con el tipo de elementos del arreglo. En Main, las primeras dos invocaciones de Fill son correctas, pero la tercera invocación causa una excepción del tipo System.ArrayTypeMismatchException generada durante la ejecución de la primera asignación hacia array[i]. La excepción ocurre porque un enmarcado <keyword>int</keyword> no puede ser almacenado en un arreglo de cadena de caracteres. Fin Ejemplo]</example>
  </paragraph>
  <paragraph>La covarianza de arreglos específicamente no se aplica a arreglos de <non_terminal where="11.1">tipos-por-valor</non_terminal>. Por ejemplo, no existe conversión que permita a un int[] ser tratado como un object[]. </paragraph>
</clause>
<!-- Traducido por Gonzalo Antonio Sosa M - gonzaloantonio@gmail.com -->
