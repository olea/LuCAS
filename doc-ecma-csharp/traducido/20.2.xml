<?xml version="1.0" encoding="utf-8"?>
<clause number="20.2" title="Miembros de interfaz">
  <paragraph>Los miembros de una interfaz son los miembros heredados de las interfaces base y los miembros declarados por la misma interfaz. <grammar_production><name><non_terminal where="20.2">declaraciones-de-miembros-de-interfaz</non_terminal></name> : <rhs><non_terminal where="20.2">declaración-de-miembro-de-interfaz</non_terminal></rhs><rhs><non_terminal where="20.2">declaraciones-de-miembros-de-interfaz</non_terminal><non_terminal where="20.2">declaración-de-miembro-de-interfaz</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="20.2">declaración-de-miembro-de-interfaz</non_terminal></name> : <rhs><non_terminal where="20.2.1">declaración-de-método-de-interfaz</non_terminal></rhs><rhs><non_terminal where="20.2.2">declaración-de-propiedad-de-interfaz</non_terminal></rhs><rhs><non_terminal where="20.2.3">declaración-de-evento-de-interfaz</non_terminal></rhs><rhs><non_terminal where="20.2.4">declaración-de-indexador-de-interfaz</non_terminal></rhs></grammar_production></paragraph>
  <paragraph>Una declaración de interfaz puede declarar cero o más miembros. Los miembros de una interfaz deben ser métodos, propiedades, eventos o indexadores. Una interfaz no puede contener constantes, campos, operadores, constructores de instancias, destructores ni tipos, y tampoco puede contener miembros estáticos de ningún tipo. </paragraph>
  <paragraph>Todos los miembros de interfaz tienen implícitamente acceso público. Es un error en tiempo de compilación que las declaraciones de miembros de interfaz incluyan cualquier modificador. En particular, los miembros de interfaz no pueden declararse con los modificadores abstract, public, protected, internal, private, virtual, override, o static. </paragraph>
  <paragraph>
    <example>[Ejemplo: El ejemplo <code_example><![CDATA[
public delegate void StringListEvent(IStringList sender);  
public interface IStringList  
{  
   void Add(string s);  
   int Count { get; }  
   event StringListEvent Changed;  
   string this[int index] { get; set; }  
}  
]]></code_example>declara una interfaz que contiene cada uno de los posibles tipos de miembros: un método, una propiedad, un evento y un indexador. fin del ejemplo]</example>
  </paragraph>
  <paragraph>Una <non_terminal where="20.1">declaración-de-interfaz</non_terminal> crea un nuevo espacio de declaración (<hyperlink>10.3</hyperlink>), y las <non_terminal where="20.2">declaraciones-de-miembros-de-interfaz</non_terminal> inmediatamente contenidas por la <non_terminal where="20.1">declaración-de-interfaz</non_terminal> introduce nuevos miembros en este espacio de declaración. Las siguientes reglas se aplican a declaraciones-de-miembros-de-interfaz: <list>
<list_item> El nombre de un método debe diferir de los nombres de todas las propiedades y eventos declarados en la misma interfaz. Adicionalmente, la firma (<hyperlink>10.6</hyperlink>) de un método debe diferir de las firmas de todos los otros métodos declarados en la misma interfaz. </list_item>
<list_item> El nombre de una propiedad o evento debe diferir de los nombres de todos los otros miembros declarados en la misma interfaz. </list_item>
<list_item> La firma de un indexador debe diferir de todas las firmas de todos los otros indexadores declarados en la misma interfaz. </list_item>
</list></paragraph>
  <paragraph>Los miembros heredados de una interfaz específicamente no son parte del espacio de declaración de la interfaz. Así, está permitido declarar un miembro con el mismo nombre o firma que un miembro heredado. Cuando eso ocurre, el miembro de la interfaz derivada se dice que esconde al miembro de la interfaz base. Esconder un miembro heredado no se considera un error, pero causa que el compilador emita una advertencia. Para suprimir la advertencia, la declaración de la interfaz derivada debe incluir un modificador new para indicar que se pretende que el miembro derivado esconda al miembro base. Este tema se discute más en <hyperlink>10.7.1.2</hyperlink>. </paragraph>
  <paragraph>Si un modificador new se incluye en una declaración que no esconde un miembro escondido, se emite una advertencia al efecto. Esta advertencia se suprime removiendo el modificador new. </paragraph>
</clause>
<!-- traducción Rodolfo Campero, rodolfo.campero@gmail.com -->
