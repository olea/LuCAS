<?xml version="1.0"?>
<clause number="14.2.1" title="Precedencia de operadores y asociatividad">
  <paragraph>Cuando una expresión contiene múltiples operadores, la precedencia de los operadores controla el orden en el cual los operadores individuales son evaluados. <note>[Nota: Por ejemplo, la expresión x + y * z es evaluada como x + (y * z) porque el operador * tiene una precedencia mayor que el operador binario +. fin nota]</note> La precedencia de un operador es establecida por la definición de su producción de gramática asociada. <note>[Nota: Por ejemplo <non_terminal where="14.7">expresión-aditiva</non_terminal> consiste en una secuencia de  <non_terminal where="14.7">expresiones-multiplicativas</non_terminal> separadas por operadores + o -, dado que los operadores + y - tienen menor precedencia que los operadores *, /, y % . fin nota]</note> </paragraph>
  <paragraph>La siguiente taba sumariza todos los operadores en orden de precedencia del más alto al más bajo:
 <table_line>Sección Categoría Operadores </table_line>
<table_line>14.5 Primary x.y f(x) a[x] x++  x--new </table_line>
<table_line>typeof checked unchecked </table_line>
<table_line>14.6 Unario +  -! ~ ++x --x (T)x </table_line>
<table_line>14.7 Multiplicativo * / % </table_line>
<table_line>14.7 Aditivo +  </table_line>
<table_line>-14.8 Shift &lt;&lt; &gt;&gt; </table_line>
<table_line>14.9 Relacional y </table_line>
<table_line>type-testing </table_line>
<table_line>&lt; &gt; &lt;= &gt;= is as </table_line>
<table_line>14.9 Ecualidad == != </table_line>
<table_line>14.10 Lógico AND &amp; </table_line>
<table_line>14.10 Lógico XOR ^ </table_line>
<table_line>14.10 Lógico OR | </table_line>
<table_line>14.11 Condicional AND &amp;&amp; </table_line>
<table_line>14.11 Condicional OR || </table_line>
<table_line>14.12 Condicional ?: </table_line>
<table_line>14.13 Asignación = *= /= %= += -= &lt;&lt;= &gt;&gt;= &amp;= ^= |= </table_line> Cuando un operando ocurre entre dos operadores con la misma precedencia, la asociatividad del operador controla el orden en el cual las operaciones son realizadas: <list><list_item> Excepto por los operadores de asignación, todos los operadores binarios son asociativos a la izquierda, lo que quiere decir que las operaciones son realizadas de izquierda a derecha. <example>[Ejemplo: Por ejemplo, x + y + z es evaluado como (x + y) + z. fin ejemplo]</example> </list_item><list_item> Los operadores de asignación y el operador condicional (?:) son asociativos a la derecha, lo que quiere decir que las operaciones son realizadas de derecha a izquierda. <example>[Ejemplo: Por ejemplo, x = y = z es evaluado como x = (y = z). fin ejemplo]</example> </list_item></list></paragraph>
  <paragraph>La precedencia y a asociatividad pueden ser controladas usando paréntesis. <example>[Ejemplo: Por ejemplo, x + y * z primero multiplica y por z y luego suma el resultado a x, pero (x + y) * z primero suma x y y y luego multiplica el resultado por z. fin ejemplo]</example> </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
