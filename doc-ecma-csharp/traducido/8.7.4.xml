<?xml version="1.0"?>
<clause number="8.7.4" title="Propiedades" informative="true">
  <paragraph>Una propiedad es un miembro que proporciona acceso a una característica
  de un objeto o de una clase. Ejemplos de propiedades incluyen la longitud de una cadena de caracteres, 
  el tamaño de una letra, la longuitud de una ventana, el nombre de un cliente, etcétera. 
  Las propiedades son la extensión natural de los campos. Ámbos son miembros con nombre y tipos asociados, y la 
  sintaxis para acceder a los campos y a las propiedades es la misma. Sin embargo, al contrario que los campos, 
  las propiedades no denotan una localización de almacenamiento. Por el
  contrario, las propiedades tienen accesores
  que especifican las sentencias que deben ejecutarse cuando sus valores son leidos o escritos. </paragraph>
  
  <paragraph>Las propiedades de definene mediante declaraciones de propiedades. La primera parte de la declaración
  de una propiedad tiene un aspecto similar a la declaración de un campo. La segunda parte incluye un accesor get
  y/o un accesor set. En el siguiente ejemplo, la clase Boton define la propiedad Texto. <code_example><![CDATA[
public class Boton  
{  
   private string texto;  
   public string Texto {  
      get {  
         return texto;  
      }  
      set {  
         texto = value;  
         Redibujar();  
      }  
   }  
}  
]]></code_example></paragraph>

  <paragraph>Las propiedades que pueden ser tanto leidas como escritas, tales como Texto, incluyen
  tanto accesores set como get. El accesor get es llamado cuando el valor de la propiedad es leido: 
  el accesor get es llamado cuando el valor de una propiedad es escrito. En un accesor
  set, el nuevo valor para la propiedad se ha vuelto accesible via un parámetro implícito llamdo value. </paragraph>
  
  <paragraph>La declaración de propiedades es relativamente inmediata, pero es verdadero valor de las propiedades
  se aprecia cuando son usados. Por ejemplo, la propiedad Texto puede ser leida y escrita de la misma forma
  que los campos pueden ser leidos y escritos: <code_example><![CDATA[
Boton b = new Boton();  
b.Texto = "ABC";    // set; provoca redibujar  
string s = b.Texto;  // get  
b.Texto += "DEF";    // get & set; provoca redibujar  
]]></code_example></paragraph>
</clause>


<!-- Traducción Fabian Seoane fabian@fseoane.net -->
