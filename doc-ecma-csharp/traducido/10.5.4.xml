<?xml version="1.0"?>
<clause number="10.5.4" title="Restricciones de accesibilidad">
  <paragraph>Algunas construcciones de C# requieren que un tipo sea al menos tan
  accesible como un miembro de otro tipo. Un tipo T se dice que es al al menos
  tan accesible como un miembro de tipo M si el dominio de accesibilidad de T es
  un conjunto que contiene al dominio de accesibilidad de M. En otras palabras,
  T es al menos tan accesible como M si T es accesible en todos los contextos en
  los que M es accesible. 
  </paragraph>
  <paragraph>Existen las siguientes restricciones de accesibilidad:
  <list>
  <list_item> La clase base directa de un tipo de clase debe ser al menos tan
  accesibible como la propia clase. </list_item>
  <list_item>La interfaz base explícita de un tipo interfaz debe ser al menos
  tan accesible como el propio tipo interfaz. </list_item>
  <list_item> El tipo devuelto y los tipos parámetros de un tipo delegado
  deben de ser al menos tan accesibles como el propio tipo delegado. </list_item>
  <list_item> El tipo de una constante debe de ser al menos tan accesible como
  la propia constante. </list_item>
  <list_item> El tipo de un campo debe de ser al menos tan accesible como el
  propio campo. </list_item>
  <list_item> El tipo devuelto tipos parámetros de un método deben de ser al
  menos tan accesibles como el propio método. </list_item>
  <list_item> El tipo de una propiedad debe de ser al menos tan accesible como
  la propia propiedad. </list_item>
  <list_item> El tipo de un evento debe de ser al menos tan accesible como el
  propio evento. </list_item>
  <list_item> El tipo y los tipos parámetros de un indexador deben de ser al
  menos tan accesibles como el propio indexador. </list_item>
  <list_item> El tipo devuelto y los tipo parámetros de un operador deben de ser
  al menos tan accesibles como el propio operador. </list_item>
  <list_item> Los tipos parámetros de un constructor de instancia deben de ser
  al menos tan accesibles como el propio constructor de instancia. </list_item>
  </list></paragraph>
  <paragraph>
    <example>[Ejemplo: en el ejemplo <code_example><![CDATA[
class A {...}  
public class B: A {...}  
]]></code_example>la clase B produce un error en tiempo de compilación porque A
no es al menos tan accesible como B. fin ejemplo]</example>
  </paragraph>
  <paragraph>
    <example>[Ejemplo: De igual forma, en el ejemplo <code_example><![CDATA[
class A {...}  
public class B  
{  
   A F() {...}  
   internal A G() {...}  
   public A H() {...}  
}  
]]></code_example>El método H en B produce un error en tiempo de compilación
porque el tipo devuelto A no es al menos tan accesible como el método. fin
ejemplo]</example>
  </paragraph>
</clause>
