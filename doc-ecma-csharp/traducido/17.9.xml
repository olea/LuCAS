<?xml version="1.0"?>
<clause number="17.9" title="Operadores">
  <paragraph>Un operador es un miembro que define el significado de una expresión operador que puede ser aplicada a instancias de la clase. Operadores son declarados usando declaraciones-de-operador: <grammar_production><name><non_terminal where="17.9">declaración-de-operador</non_terminal></name> : <rhs><non_terminal where="24.2">atributos</non_terminal><opt/><non_terminal where="17.9">modificadores-de-operador</non_terminal><non_terminal where="17.9">declarador-de-operador</non_terminal><non_terminal where="17.9">cuerpo-del-operador</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.9">modificadores-del-operador</non_terminal></name> : <rhs><non_terminal where="17.9">modificador-del-operador</non_terminal></rhs><rhs><non_terminal where="17.9">modificadores-de-operador</non_terminal><non_terminal where="17.9">modificador-del-operador</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.9">modificador-del-operador</non_terminal></name> : <rhs><keyword>public</keyword></rhs><rhs><keyword>static</keyword></rhs><rhs><keyword>extern</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="17.9">declarador-de-operador</non_terminal></name> : <rhs><non_terminal where="17.9">declarador-unario-de-operador</non_terminal></rhs><rhs><non_terminal where="17.9">declarador-binario-de-operador</non_terminal></rhs><rhs><non_terminal where="17.9">declarador-de-conversión-de-operador</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.9">declarador-unario-de-operador</non_terminal></name> : <rhs><non_terminal where="11">tipo</non_terminal><keyword>operador</keyword><non_terminal where="17.9">operador-unario-sobrecargable</non_terminal><terminal>(</terminal><non_terminal where="11">tipo</non_terminal><non_terminal where="9.4.2">identificador</non_terminal><terminal>)</terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.9">operador-unario-sobrecargable</non_terminal></name> : uno de <rhs><terminal>+</terminal><terminal>-</terminal><terminal>!</terminal><terminal>~</terminal><terminal>++</terminal><terminal>--</terminal><keyword>true</keyword><keyword>false</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="17.9">declarador-binario-de-operador</non_terminal></name> : <rhs><non_terminal where="11">tipo</non_terminal><keyword>operador</keyword><non_terminal where="17.9">operador-binario-sobrecargable</non_terminal><terminal>(</terminal><non_terminal where="11">tipo</non_terminal><non_terminal where="9.4.2">identificador</non_terminal><terminal>,</terminal><non_terminal where="11">tipo</non_terminal><non_terminal where="9.4.2">identificador</non_terminal><terminal>)</terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.9">operador-binario-sobrecargable</non_terminal></name> : uno de <rhs><terminal>+</terminal><terminal>-</terminal><terminal>*</terminal><terminal>/</terminal><terminal>%</terminal><terminal>&amp;</terminal><terminal>|</terminal><terminal>^</terminal><terminal>&lt;&lt;</terminal><terminal>&gt;&gt;</terminal><terminal>==</terminal><terminal>!=</terminal><terminal>&gt;</terminal><terminal>&lt;</terminal><terminal>&gt;=</terminal><terminal>&lt;=</terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.9">declarador-de-conversión-de-operador</non_terminal></name> :  <rhs><keyword>implicit</keyword><keyword>operador</keyword><non_terminal where="11">tipo</non_terminal><terminal>(</terminal><non_terminal where="11">tipo</non_terminal><non_terminal where="9.4.2">identificador</non_terminal><terminal>)</terminal></rhs><rhs><keyword>explicit</keyword><keyword>operador</keyword><non_terminal where="11">tipo</non_terminal><terminal>(</terminal><non_terminal where="11">tipo</non_terminal><non_terminal where="9.4.2">identificador</non_terminal><terminal>)</terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.9">cuerpo-del-operador</non_terminal></name> : <rhs><non_terminal where="15.2">bloque</non_terminal></rhs><rhs><terminal>;</terminal></rhs></grammar_production></paragraph>
  <paragraph>Hay tres categorías de operadores sobrecargables: Operadores unarios (<hyperlink>17.9.1</hyperlink>), operadores binarios (<hyperlink>17.9.2</hyperlink>), y operadores de conversión (<hyperlink>17.9.3</hyperlink>). </paragraph>
  <paragraph>Cuando una declaración de operador incluye un modificador extern, se dice que el operador es un operador externo. Debido a que un operador externo no provee implementación actual, su <non_terminal where="17.9">cuerpo-del-operador</non_terminal> consiste un punto y coma. Para todos los otros operadores, el <non_terminal where="17.9">cuerpo-del-operador</non_terminal> consiste de un bloque, que especifica las sentencias par ejecutar cuando el operador es invocado. El bloque de un operador debe conformarse a las reglas para métodos que regresen valor descritos en <hyperlink>17.5.8</hyperlink>. </paragraph>
  <paragraph>Las siguientes reglas aplican a todas las declaraciones de operadores: <list><list_item> Un declaración de operador debe incluir un modificador public y uno static. </list_item><list_item> Los parámetros de un operador deben ser parámetros por valor. Es un error en tiempo de compilación para una declaración de operador especificar parámetros ref u out. </list_item><list_item> La firma de un operador (<hyperlink>17.9.1</hyperlink>, <hyperlink>17.9.2</hyperlink>, <hyperlink>17.9.3</hyperlink>) debe diferir de las firmas de todos los otros operadores declarados en la misma clase. </list_item><list_item> Todos los tipos referencias por una declaración de operador deben ser al menos accesibles como el mismo operador (<hyperlink>10.5.4</hyperlink>). </list_item><list_item> Es un error para el mismo modificador aparecer múltiples ocasiones en una declaración de operador. </list_item></list></paragraph>
  <paragraph>Cada categoría de operador impone restricciones adicionales, como esta descrito en las siguientes secciones. </paragraph>
  <paragraph>Como otros miembros, operadores declarados en la clase base son heredados por clases derivadas. Debido a que declaraciones de operador siempre requieren que la clase o estructura en cual el operador es declarado participar en la firma del operador, no es posible para un operador declarado en una clase derivada ocultar un operador declarado en una clase base. De esta manera, el modificador new nunca es requerido, y por lo tanto nunca permitido, en una declaración de operador. </paragraph>
  <paragraph>Información adicional de operadores unarios y binarios puede ser encontrada en  <hyperlink>14.2</hyperlink>. </paragraph>
  <paragraph>Información adicional en operadores de conversión puede ser encontrada en  <hyperlink>13.4</hyperlink>. </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
