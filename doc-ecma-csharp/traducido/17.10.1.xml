<?xml version="1.0"?>
<clause number="17.10.1" title="Inicializadores de constructores">
  <paragraph>Todas los constructores de instancia (excepto aquellos para la clase object) implícitamente incluyen una invocación de otra constructor de instancia inmediatamente antes del <non_terminal where="17.10">cuerpo-del-constructor</non_terminal>. La invocación del constructor es implicitamente determinada por el inicializador-del-constructor: <list><list_item> Un inicializador de constructor de instancia de la forma base(argumento-lista-opciones) causa un constructor de instancia para que invoque a la clase base. Ese constructor es seleccionado usando una <non_terminal where="14.4.1">lista-de-argumentos</non_terminal> y las reglas de resolución de sobrecarga de <hyperlink>14.4.2</hyperlink>. El juego de los constructores de instancia candidatos consisten de todos las instancias accesibles de constructores declarados en la clase base directa. Si este juego esta vacio, o si un mejor constructor de instancia no puede ser identificado, un error en tiempo de compilación ocurre. </list_item><list_item> Un inicializador de constructor de instancia de la forma this(argumento-lista-opciones) causa que una forma de constructor de la clase misma que sea invocado. El constructor es seleccionado usando <non_terminal where="14.4.1">lista-de-argumentos</non_terminal> y las reglas de resolución de sobrecarga de <hyperlink>14.4.2</hyperlink>. El juego de constructores de instancias candidatos consiste en todos los constructores de instancias accesibles declarados en la clase misma. Si el juego esta vacío, o si el mejor constructor de instancia no puede ser identificada, un error en tiempo de compilación ocurre. Si una declaración de constructor de instancia incluye un inicializador de constructor que invoca al mismo constructor, un error en tiempo de compilación ocurre. </list_item></list></paragraph>
  <paragraph>Si una instancia de constructor no tiene inicializador de constructor, un inicializador de constructor de la forma base() es implícitamente provisto. <note>[Nota: Debido a esto, una declaración de constructor de instancia de la forma <code_example><![CDATA[
C(...) {...}  
]]></code_example>es equivalente exactamente a <code_example><![CDATA[
C(...): base() {...}  
]]></code_example>fin nota]</note> </paragraph>
  <paragraph>El ámbito de los parámetros dados por la <non_terminal where="17.5.1">lista-formal-de-parámetros</non_terminal> de una declaración de constructor de instancia incluye el inicializador del constructor de esta declaración. Debido a esto, el inicializador del constructor permite el acceso a parámetros del constructor. <example>[Ejemplo: Por ejemplo: <code_example><![CDATA[
class A  
{  
   public A(int x, int y) {}  
}  
class B: A  
{  
   public B(int x, int y): base(x + y, x - y) {}  
}  
]]></code_example>fin ejemplo]</example> </paragraph>
  <paragraph>Una inicializador de constructor de instancia no puede accesar la instancia que esta siendo creada. Por los tanto es un error en tiempo de compilación referenciar este en una expresión de argumento del inicializador del constructor, como un es un error en tiempo de compilación para un expresión de argumento referenciar cualquier miembro de la instancia a través de un <non_terminal where="14.5.2">nombre-simple</non_terminal>. </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
