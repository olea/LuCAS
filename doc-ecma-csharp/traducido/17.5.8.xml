<?xml version="1.0"?>
<clause number="17.5.8" title="Cuerpo del método">
  <paragraph>El <non_terminal where="17.5">cuerpo-del-método</non_terminal> de una declaración de un método consiste ya sea un bloque o un punto y coma. </paragraph>
  <paragraph>Declaraciones de métodos abstractos (abstract) y externos (external) no proveen una implementación del método, asi que sus cuerpos de método simplemente consisten de un punto y coma. Para cualquier otro método, el cuerpo del método es un bloque (<hyperlink>15.2</hyperlink>) que contiene las sentencias a ejecutar cuando el método sea invocado. </paragraph>
  <paragraph>Cuando el tipo de retorno de un método es <keyword>void</keyword>, las sentencias de retorno  (<hyperlink>15.9.4</hyperlink>) en ese cuerpo de método no permiten especificar una expresión. Si la ejecución de un cuerpo de método de un método <keyword>void</keyword> se completa normalmente (esto es, el control fluye al final del cuerpo del método), ese método simplemente regresa a quien le llamo. </paragraph>
  <paragraph>Cuando el tipo de retorno de un método no es <keyword>void</keyword>, cada sentencia de retorno en ese cuerpo del método debe especificar una expresión de un tipo que es implícitamente convertible para el tipo de retorno. El punto final del cuerpo del método de un método que regrese un valor debe ser no alcanzable. En otras palabras, en un método con valor de retorno, el control no es permitido que fluya al final del cuerpo del método. </paragraph>
  <paragraph>
    <example>[Ejemplo: En el ejemplo <code_example><![CDATA[
class A  
{  
   public int F() {}     // Error, valor de retorno requerido
   public int G() {  
      return 1;  
   }  
   public int H(bool b) {  
      if (b) {  
         return 1;  
      }  
      else {  
         return 0;  
      }  
   }  
}  
]]></code_example>el método con valor de retorno F resulta en un error en tiempo de ejecución porque el control puede fluir al final del cuerpo del método. Los métodos G y H son correctos porque todas las rutas posibles de ejecución terminan en una sentencia de retorno que especifica un valor por retorno. fin ejemplo]</example>
  </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
