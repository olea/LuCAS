<?xml version="1.0"?>
<clause number="23" title="Excepciones">
  <paragraph>Las excepciones en C# proveen de una manera estructurada, uniforme, y segura a nivel de tipos de dato para manipular tanto condiciones de error a nivel del sistema como a nivel de la aplicación. <note>[Nota: Los mecanismos de manejo de excepciones en C# son bastante similares a los de C++, con algunas poca pero importantes diferencias: <list><list_item> En C#, todas las excepciones deben ser representadas por una instancia de una clase derivada de System.Exception. En C++, cualquier valor de cualquier tipo puede ser usado para representar una excepción. </list_item><list_item> En C#, un bloque finally (<hyperlink>15.10</hyperlink>) puede ser usado para escribir código de finalización que se ejecuta tanto en condiciones normales de ejecución como en condiciones de excepción. Este tipo de código es difícil de escribir en C++ sin duplicar código. </list_item><list_item> En C#, excepciones al nivel del sistema como un desbordamiento, una división-por-cero, y el seguimiento de punteros con valores nulos tienen clases de excepciones bien definidas a la par con condiciones de error a nivel de la aplicación. Fin de la nota]</list_item></list></note> </paragraph>
</clause>
<!-- Traducido por Antonio Ognio <aognio@gmail.com -->
