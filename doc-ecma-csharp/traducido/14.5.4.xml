<?xml version="1.0"?>
<clause number="14.5.4" title="Acceso a miembros">
  <paragraph>Un <non_terminal where="14.5.4">acceso-a-miembro</non_terminal> consiste de una <non_terminal where="14.5">expresión-primaria</non_terminal> o un <non_terminal where="14.5.4">tipo-predefinido</non_terminal>, seguido por un símbolo &quot;.&quot;, seguido por un identificador. <grammar_production><name><non_terminal where="14.5.4">acceso-a-miembro</non_terminal></name> : <rhs><non_terminal where="14.5">expresión-primaria</non_terminal><terminal>.</terminal><non_terminal where="9.4.2">identificador</non_terminal></rhs><rhs><non_terminal where="14.5.4">tipo-predefinido</non_terminal><terminal>.</terminal><non_terminal where="9.4.2">identificador</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="14.5.4">tipo-predefinido</non_terminal></name> : uno de <rhs><keyword>bool</keyword><keyword>byte</keyword><keyword>char</keyword><keyword>decimal</keyword><keyword>double</keyword><keyword>float</keyword><keyword>int</keyword><keyword>long</keyword></rhs><rhs><keyword>object</keyword><keyword>sbyte</keyword><keyword>short</keyword><keyword>string</keyword><keyword>uint</keyword><keyword>ulong</keyword><keyword>ushort</keyword></rhs></grammar_production></paragraph>
  <paragraph>Un <non_terminal where="14.5.4">acceso-a-miembro</non_terminal> de la forma E.I, donde E es una <non_terminal where="14.5">expresión-primaria</non_terminal> de aun<non_terminal where="14.5.4">tipo-predefinido</non_terminal> e I es un identificador, es evaluado y clasificado como sigue: <list><list_item> Si E es un espacio de nombres e I es el nombre de un miembro accesible de este espacio de nombres, entonces el resultado es que ese miembro y, dependiendo en el miembro, es clasificado como un espacio de nombres de un tipo. </list_item><list_item> Si E es un <non_terminal where="14.5.4">tipo-predefinido</non_terminal> o una <non_terminal where="14.5">expresión-primaria</non_terminal> clasificada como un tipo, y una búsqueda de miembro (<hyperlink>14.3</hyperlink>) de I en E produce una concordancia, entonces E.I es evaluado y clasificado como sigue: </list_item><list><list_item> Si I identifica un tipo, entonces el resultado es ese tipo. </list_item><list_item>Si I identifica uno o más métodos, entonces el resultado es un grupo de métodos sin expresiones de instancia asociadas. </list_item><list_item> Si I identifica una propiedad estática, entonces el resultado es una acceso a propiedad sin expresión de instancia asociada. </list_item><list_item> Si I identifica un campo estático: </list_item><list><list_item> Si el campo es sólo lectura y la referencia ocurre fuera del constructor estático de la clase o estructura en el cual el campo es declarado, entonces el resultado es un valor, es decir el valor de la campo estático I en E. </list_item><list_item> De otra forma, el resultado es una variable, es decir un campo es estático I en E. </list_item></list><list_item> Si I identifica un evento estático:</list_item><list><list_item> Si la referencia ocurre dentro de la clase o estructura en la cual el evento esta declarado, y el evento fue declarado sin <non_terminal where="17.7">declaraciones-de-accesores-de-evento</non_terminal> (<hyperlink>17.7</hyperlink>), entonces E.I es procesado exactamente como si I fuera un campo estático. </list_item><list_item> De otra forma, el resultado es un acceso a evento sin expresión de instancia asociada. </list_item></list><list_item> Si I identifica una constante, entonces el resultado es un valor, es decir el valor de esa constante. </list_item><list_item> Si I identifica un miembro enumeración, entonces el resultado es un valor, es decir el valor de ese miembro de enumeración. </list_item></list><list_item> Si E es un acceso a propiedad, acceso a indexador, variable, o valor, el tipo del cual es T, y una búsqueda de miembro (<hyperlink>14.3</hyperlink>) de I en T produce una concordancia, entonces E.I es evaluado y clasificado como sigue:</list_item><list><list_item> Primero, si E es una propiedad o acceso a indexador, entonces el valor de la propiedad o acceso a indexador es obtenido (<hyperlink>14.1.1</hyperlink>) y E es reclasificado como un valor. </list_item><list_item> SI I identifica uno o mas métodos, entonces el resultado es un grupo de métodos con una expresión de instancia asociada de E. </list_item><list_item> Si I identifica una propiedad de instancia, entonces el resultado es un acceso a propiedad con una expresión de instancia asociada de E. </list_item><list_item> Si T es un <non_terminal where="11.2">tipo-clase</non_terminal> e I identifica un campo de instancia de esa tipo-clase: </list_item><list><list_item> Si el valor de E es null, entonces una System.NullReferenceException es lanzada. </list_item><list_item> De otra forma, si el campo es sólo lectura y la referencia ocurre instancia, entonces el resultado es un valor, es decir el valor del campo I en el objeto referenciado por E.</list_item><list_item> De otra forma, el resultado es una variable, es decir el campo I en el objeto referenciado por E. </list_item></list><list_item> Si T es un  <non_terminal where="11.1">tipo-estructura</non_terminal>e I identifica un campo instancia de ese tipo-estructura:  </list_item><list><list_item> Si E es un valor, o si un campo es sólo lectura y la referencia ocurre fuera del constructor d instancia de la estructura en la cual el campo es declarado, entonces el resultado es un valor, es decir el valor del campo I en la instancia de la estructura dada por E. </list_item><list_item> De otra forma, el resultado es una variable, es decir el campo I en la instancia de la estructura dada por E. </list_item></list><list_item>Si I identifica un evento de instancia:</list_item><list><list_item> Si la referencia ocurre dentro de la clase o estructura en la cual el evento es declarado, y el evento fue declarado sin  <non_terminal where="17.7">declaraciones-de-accesores-de-evento</non_terminal> (<hyperlink>17.7</hyperlink>), entonces E.I es procesado exactamente como si I fuera un campo de instancia. </list_item><list_item> De otra forma, el resultado es un acceso a evento con una expresión de instancia asociada de E. </list_item></list></list><list_item> De otra forma, E.I es una referencia de miembro invalida, y un error en tiempo de compilación ocurre. </list_item></list></paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
