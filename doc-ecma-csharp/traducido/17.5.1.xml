<?xml version="1.0"?>
<clause number="17.5.1" title="Parámetros de los métodos">
  <paragraph>Los párametros de un método, si existe, son declarados por la <non_terminal where="17.5.1">lista-de-parámetros-formales</non_terminal> de los métodos. <grammar_production><name><non_terminal where="17.5.1">lista-de-parámetros-formales</non_terminal></name> : <rhs><non_terminal where="17.5.1">parámetros-fijos</non_terminal></rhs><rhs><non_terminal where="17.5.1">parámetros-fijos</non_terminal><terminal>,</terminal><non_terminal where="17.5.1">arreglo-como-parámetro</non_terminal></rhs><rhs><non_terminal where="17.5.1">arreglo-como-parámetro</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.5.1">parámetros-fijos</non_terminal></name> : <rhs><non_terminal where="17.5.1">parámetro-fijo</non_terminal></rhs><rhs><non_terminal where="17.5.1">parámetros-fijos</non_terminal><terminal>,</terminal><non_terminal where="17.5.1">parámetro-fijo</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.5.1">parámetro-fijo</non_terminal></name> : <rhs><non_terminal where="24.2">atributos</non_terminal><opt/><non_terminal where="17.5.1">modificador-de-parámetro</non_terminal><opt/><non_terminal where="11">tipo</non_terminal><non_terminal where="9.4.2">identificador</non_terminal></rhs></grammar_production><grammar_production><name><non_terminal where="17.5.1">modificador-de-parámetro</non_terminal></name> : <rhs><keyword>ref</keyword></rhs><rhs><keyword>out</keyword></rhs></grammar_production><grammar_production><name><non_terminal where="17.5.1">arreglo-como-parámetro</non_terminal></name> : <rhs><non_terminal where="24.2">atributos</non_terminal><opt/><keyword>params</keyword><non_terminal where="19.1">tipo-arreglo</non_terminal><non_terminal where="9.4.2">identificador</non_terminal></rhs></grammar_production></paragraph>
  <paragraph>La lista de parámetros formales consiste de uno o más parámetros separados por comas de los cuales unicamente el ultimo puede ser un <non_terminal where="17.5.1">arreglo-como-parámetro</non_terminal>. </paragraph>
  <paragraph>Un <non_terminal where="17.5.1">parámetro-fijo</non_terminal> consiste de un juego opcional de atributos(<hyperlink>24</hyperlink>), un modificador ref o out opcional, un tipo, y un identificador. Cada <non_terminal where="17.5.1">parámetro-fijo</non_terminal> declara un parámetro del tipo dado con el nombre dado. </paragraph>
  <paragraph>Un <non_terminal where="17.5.1">arreglo-como-parámetro</non_terminal> consiste de un juego opcional de atributos (<hyperlink>24</hyperlink>), un modificador params, un <non_terminal where="19.1">tipo-de-arreglo</non_terminal>, y un identificador. Un arreglo como parámetro declara un parámetro sencillo del tipo de arreglo dado con el nombre dado. El <non_terminal where="19.1">tipo-de-arreglo</non_terminal> de un arreglo como parámetro debe ser un tipo de arreglo de dimensión sencilla (<hyperlink>19.1</hyperlink>). En una invocación de método, un arreglo como parámetro permite ya sea un argumento sencillo del tipo de arreglo que sea especificado, o permite cero o mas argumentos del tipo del elemento arreglo que sea especificado. Arreglos como parámetro son descritos más adelante en <hyperlink>17.5.1.4</hyperlink>. </paragraph>
  <paragraph>Una declaración de método crea un espacio de declaración separada para parámetros y variables locales. Nombres son introducidos dentro de este espacio de declaración por la lista de parámetros formales del método y por declaraciones de variable locales en el bloque del método. Todos los nombres en el espacio de declaración de un método debe ser unico. De esta forma, es un error en tiempo de compilación para un parámetro o variable local tener el mismo nombre que otro parámetro o variable local.</paragraph>
  <paragraph>Una invocación de método (<hyperlink>14.5.5.1</hyperlink>) crea una copia, especifíca para esa invocación, de los parámetros formales y variables locales del método, y el la lista de argumentos de la invocación asigna valores o referencias de variable para los recien creados parámetros formales. Dentro del bloque de un método, parámetros formales puede ser referenciados por sus identificadores en expresiones de <non_terminal where="14.5.2">nombre-simple</non_terminal> (<hyperlink>14.5.2</hyperlink>). </paragraph>
  <paragraph>Hay cuatro tipos de parámetros formales: <list><list_item> Parámetros por valor, los cuales son declarados sin modificadores. </list_item><list_item> Parámetros por referencia, los cuales son declarados por el modificador ref. </list_item><list_item> Parámetros por salida, los cuales son declarados con el modificador out. </list_item><list_item> Arreglos como parámetros, los cuales son declarados con el modificador params. </list_item></list></paragraph>
  <paragraph>
    <note>[Nota: Como esta descrito en <hyperlink>10.6</hyperlink>, el modificador ref y out son parte de la firma del método, pero el modificador params no lo es. fin nota]</note>
  </paragraph>
</clause>
<!-- Traducido por Mario Carrión, marioc@unixmexico.org -->
