.\" Copyright 2001 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.TH LROUND 3  2001-05-31 "" "Linux Programmer's Manual"
.SH NAME
lround, lroundf, lroundl, llround, llroundf, llroundl \- round to nearest integer, away from zero
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "long int lround(double " x );
.br
.BI "long int lroundf(float " x );
.br
.BI "long int lroundl(long double " x );
.sp
.BI "long long int llround(double " x );
.br
.BI "long long int llroundf(float " x );
.br
.BI "long long int llroundl(long double " x );
.fi
.sp
Compile with -std=c99; link with \-lm.
.SH DESCRIPTION
These functions round their argument to the nearest integer value,
rounding away from zero, regardless of the current rounding direction.
If \fIx\fP is infinite or NaN, or if the rounded value is outside
the range of the return type, the numeric result is unspecified.
A domain error may occur if the magnitude of \fIx\fP is too large.
.SH "RETURN VALUE"
The rounded integer value.
Note that unlike
.BR round (3),
.BR ceil (3),
etc., the return type of these functions differs from
that of their arguments.
.SH ERRORS
.TP
.B EDOM
The magnitude of \fIx\fP is too large and
.I "(math_errhandling & MATH_ERRNO)"
is non-zero.
.SH "CONFORMING TO"
C99.
.SH "SEE ALSO"
.BR ceil (3),
.BR floor (3),
.BR lrint (3),
.BR nearbyint (3),
.BR rint (3),
.BR round (3)
