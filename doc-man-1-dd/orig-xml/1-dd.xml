<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!-- lifted from troff+man by doclifter -->
<refentry id='dd1'>
<!--  Copyright Andries Brouwer, Ragnar Hojland Espinosa and A. Wik, 1998. -->

<!--  This file may be copied under the conditions described -->
<!--  in the LDP GENERAL PUBLIC LICENSE, Version 1, September 1998 -->
<!--  that should have been distributed together with this file. -->

<refmeta>
<refentrytitle>DD</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='date'>1998-11</refmiscinfo>
<refmiscinfo class='source'>GNU fileutils 4.0</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>dd</refname>
<refpurpose>convert and copy a file</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<cmdsynopsis>
  <command>dd</command>    
    <arg choice='opt'>--help </arg>
    <arg choice='opt'>--version </arg>
    <arg choice='opt'><replaceable>if=file</replaceable></arg>
    <arg choice='opt'><replaceable>of=file</replaceable></arg>
    <arg choice='opt'><replaceable>ibs=bytes</replaceable></arg>
    <arg choice='opt'><replaceable>obs=bytes</replaceable></arg>
    <arg choice='opt'><replaceable>bs=bytes</replaceable></arg>
    <arg choice='opt'><replaceable>cbs=bytes</replaceable></arg>
    <arg choice='opt'><replaceable>skip=blocks</replaceable></arg>
    <arg choice='opt'><replaceable>seek=blocks</replaceable></arg>
    <arg choice='opt'><replaceable>count=blocks</replaceable></arg>
    <arg choice='opt'><arg choice='plain'><replaceable>conv=</replaceable></arg><arg choice='opt'><replaceable>ascii,ebcdic,ibm,block,unblock,lcase,ucase,swab,noerror,notrunc,sync</replaceable></arg></arg>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para><command>dd</command>
copies a file (from standard input to standard output, by
default) using specific input and output blocksizes,
while optionally performing conversions on it.</para>

<para>It reads the input one block at a time, using the specified input
block size (the default is 512 bytes).
If the
<emphasis remap='B'>bs=</emphasis><emphasis remap='I'>bytes</emphasis>
option was given, and no conversion other than
<emphasis remap='B'>sync</emphasis>, <emphasis remap='B'>noerror</emphasis>, or <emphasis remap='B'>notrunc</emphasis>
was specified, it writes the amount of data read (which could be smaller
than what was requested) in a separate output block. This output block
has precisely the same length as was read unless the
<emphasis remap='B'>sync</emphasis>
conversion was specified, in which case the data is padded with NULs
(or spaces, see below).</para>

<para>Otherwise, the input, read one block at a time, is processed
and the resulting output is collected and written in blocks
of the specified output block size. The final output block
may be shorter.</para>

<para>The numeric-valued options below (bytes and blocks) can be followed
by a multiplier: `k'=1024, `b'=512, `w'=2, `c'=1
(`w' and `c' are GNU extensions; `w' should never be used -
it means 2 in System V and 4 in 4.2BSD).
Two or more of such numeric expressions can be multiplied
by putting `x' in between.
The GNU fileutils-4.0 version also allows the following multiplicative suffixes
in the specification of blocksizes (in bs=, cbs=, ibs=, obs=):
M=1048576, G=1073741824, and so on for T, P, E, Z, Y.
A `D' suffix makes them decimal:
kD=1000, MD=1000000, GD=1000000000, etc.
(Note that for ls, df, du the size of M etc. is determined by environment
variables, but for dd it is fixed.)</para>
</refsect1>

<refsect1 id='options'><title>OPTIONS</title>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>if=</emphasis><emphasis remap='I'>file</emphasis></term>
  <listitem>
<para>Read from
<emphasis remap='I'>file</emphasis>
instead of standard input.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>of=</emphasis><emphasis remap='I'>file</emphasis></term>
  <listitem>
<para>Write to
<emphasis remap='I'>file</emphasis>
instead of standard output.  Unless
<emphasis remap='B'>conv=notrunc</emphasis>
is given,
<command>dd</command>
truncates
<emphasis remap='I'>file</emphasis>
to zero bytes (or the size specified with
<emphasis remap='B'>seek=</emphasis>).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>ibs=</emphasis><emphasis remap='I'>bytes</emphasis></term>
  <listitem>
<para>Read
<emphasis remap='I'>bytes</emphasis>
bytes at a time. The default is 512.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>obs=</emphasis><emphasis remap='I'>bytes</emphasis></term>
  <listitem>
<para>Write
<emphasis remap='I'>bytes</emphasis>
bytes at a time. The default is 512.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>bs=</emphasis><emphasis remap='I'>bytes</emphasis></term>
  <listitem>
<para>Both read and write
<emphasis remap='I'>bytes</emphasis>
bytes at a time.  This overrides
<emphasis remap='B'>ibs</emphasis>
and
<emphasis remap='B'>obs</emphasis>.
(And setting
<emphasis remap='B'>bs</emphasis>
is not equivalent with setting both
<emphasis remap='B'>ibs</emphasis>
and
<emphasis remap='B'>obs</emphasis>
to this same value, at least when no conversion other than
<emphasis remap='B'>sync</emphasis>,
<emphasis remap='B'>noerror</emphasis>
and
<emphasis remap='B'>notrunc</emphasis>
is specified, since it stipulates that each input block
shall be copied to the output as a single block
without aggregating short blocks.)</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>cbs=</emphasis><emphasis remap='I'>bytes</emphasis></term>
  <listitem>
<para>Specify the conversion block size for
<emphasis remap='B'>block</emphasis>
and
<emphasis remap='B'>unblock</emphasis>.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>skip=</emphasis><emphasis remap='I'>blocks</emphasis></term>
  <listitem>
<para>Skip
<emphasis remap='I'>blocks</emphasis>
<emphasis remap='B'>ibs</emphasis>-byte
blocks in the input file before copying.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>seek=</emphasis><emphasis remap='I'>blocks</emphasis></term>
  <listitem>
<para>Skip
<emphasis remap='I'>blocks</emphasis>
<emphasis remap='B'>obs</emphasis>-byte
blocks in the output file before copying.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>count=</emphasis><emphasis remap='I'>blocks</emphasis></term>
  <listitem>
<para>Copy
<emphasis remap='I'>blocks</emphasis>
<emphasis remap='B'>ibs</emphasis>-byte
blocks from the input file, instead of everything
until the end of the file.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>conv=</emphasis><emphasis remap='I'>CONVERSION</emphasis><emphasis remap='B'>[,</emphasis><emphasis remap='I'>CONVERSION</emphasis><emphasis remap='B'>]...</emphasis></term>
  <listitem>
<para>Convert the file as specified by the
<emphasis remap='I'>CONVERSION</emphasis>
argument(s).  (No spaces around any comma(s).)</para>
  <!-- .RS -->

<para>Conversions:</para>

    <variablelist remap='TP'>
      <varlistentry>
      <term><emphasis remap='B'>ascii</emphasis></term>
      <listitem>
<para>Convert EBCDIC to ASCII.</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>ebcdic</emphasis></term>
      <listitem>
<para>Convert ASCII to EBCDIC.</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>ibm</emphasis></term>
      <listitem>
<para>Convert ASCII to alternate EBCDIC.</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>block</emphasis></term>
      <listitem>
<para>For each line in the input, output
<emphasis remap='B'>cbs</emphasis>
bytes, replacing the input newline with a space and padding
with spaces as necessary.</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>unblock</emphasis></term>
      <listitem>
<para>Replace trailing spaces in each
<emphasis remap='B'>cbs</emphasis>-sized
input block with a newline.</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>lcase</emphasis></term>
      <listitem>
<para>Change uppercase letters to lowercase.</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>ucase</emphasis></term>
      <listitem>
<para>Change lowercase letters to uppercase.</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>swab</emphasis></term>
      <listitem>
<para>Swap every pair of input bytes.
If an odd number of bytes are read the last byte
is simply copied (since there is nothing to swap it with).
[POSIX 1003.2b, PASC interpretations 1003.2 #3 and #4]</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>noerror</emphasis></term>
      <listitem>
<para>Continue after read errors.</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>notrunc</emphasis></term>
      <listitem>
<para>Do not truncate the output file.</para>
      </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis remap='B'>sync</emphasis></term>
      <listitem>
<para>Pad every input block to size of
<emphasis remap='B'>ibs</emphasis>
with trailing zero bytes.</para>
      </listitem>
      </varlistentry>
    </variablelist>
  </listitem>
  </varlistentry>
</variablelist>
<!-- .RE -->
</refsect1>

<refsect1 id='gnu_standard_options'><title>GNU STANDARD OPTIONS</title>
<variablelist remap='TP'>
  <varlistentry>
  <term><option>--help</option></term>
  <listitem>
<para>Print a usage message on standard output and exit successfully.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>--version</option></term>
  <listitem>
<para>Print version information on standard output, then exit successfully.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>--</option></term>
  <listitem>
<para>Terminate option list.</para>
  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='environment'><title>ENVIRONMENT</title>
<para>The variables LANG, LC_ALL, LC_CTYPE and LC_MESSAGES have the
usual meaning.</para>
</refsect1>

<refsect1 id='conforming_to'><title>CONFORMING TO</title>
<para>POSIX 1003.2</para>
</refsect1>

<refsect1 id='example'><title>EXAMPLE</title>
<para>Often a tape drive will not accept arbitrarily sized blocks, and
<command>dd</command>
would get an I/O error for the last fragment of data that does not
fill an entire block. Use `dd if=myfile of=/dev/mytape conv=sync'
to get everything on tape. Of course, reading it back will now
produce a slightly larger file, with nulls added at the end.</para>
</refsect1>

<refsect1 id='bugs'><title>BUGS</title>
<para>Commands like `dd if=myfile of=/dev/fd0 bs=1k seek=172' fail
on some systems because
<command>dd</command>
tries to truncate the output file, but truncation of a block device
is not possible. In such cases, add the `conv=notrunc' option.</para>
</refsect1>

<refsect1 id='notes'><title>NOTES</title>
<para>This page describes
<command>dd</command>
as found in the fileutils-4.0 package;
other versions may differ slightly.</para>
</refsect1>
</refentry>

