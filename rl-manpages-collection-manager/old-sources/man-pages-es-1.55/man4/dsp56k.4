'\" t
.\" Copyright (c) 2000 lars brinkhoff <lars@nocrew.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Modified, Thu Jan 27 19:16:19 CET 2000, lars@nocrew.org
.\" Traducido por Miguel Pérez Ibars <mpi79470@alu.um.es> el 29-septiembre-2004
.\"
.TH DSP56K 4 "1 marzo 2000" "Linux" "Ficheros especiales"
.SH NOMBRE
dsp56k \- interfaz con el dispositivo DSP56001
.SH SINOPSIS
.nf
#include <asm/dsp56k.h>
.sp
.BI "ssize_t read(int " fd ", void *" data ", size_t " length );
.BI "ssize_t write(int " fd ", void *" data ", size_t " length );
.BI "int ioctl(int " fd ", \s-1DSP56K_UPLOAD\s+1, struct dsp56k_upload *" program );
.BI "int ioctl(int " fd ", \s-1DSP56K_SET_TX_WSIZE\s+1, int " wsize );
.BI "int ioctl(int " fd ", \s-1DSP56K_SET_RX_WSIZE\s+1, int " wsize );
.BI "int ioctl(int " fd ", \s-1DSP56K_HOST_FLAGS\s+1, struct dsp56k_host_flags *" flags );
.BI "int ioctl(int " fd ", \s-1DSP56K_HOST_CMD\s+1, int " cmd );
.fi
.SH CONFIGURACIÓN
El dispositivo dsp56k es un dispositivo de caracteres con número mayor 55 y
número menor 0.
.SH DESCRIPCIÓN
El Motorola DSP56001 es un procesador de señales digitales de 24 bits totalmente
programable que se encuentra en computadores compatibles con Atari Falcon030.
El fichero especial \fBdsp56k\fP se utiliza para controlar el DSP56001, y
para enviar y recibir datos usando el puerto de host bidireccional mediante
la técnica de handshaking.
.PP
Para enviar un flujo de datos al procesador de señales, utilice write()
con el dispositivo, y read() para recibir datos procesados. Los datos pueden
ser enviados o recibidos en cantidades de 8, 16, 24, o 32 bits por parte del host,
pero siempre serán interpretados como cantidades de 24 bits por el DSP56001.
.PP
Las siguientes llamadas
.IR ioctl (2)
pueden utilizarse para controlar el dispositivo
\fBdsp56k\fP:
.IP \fBDSP56K_UPLOAD\fP
reinicia el DSP56001 y carga un programa. El tercer argumento a ioctl()
debe ser un puntero a una estructura \fBdsp56k_binary\fP donde el miembro
\fBbin\fP apuntará a un programa binario DSP56001, y \fBlen\fP contendrá
la longitud del programa en palabras de 24 bits.
.IP \fBDSP56K_SET_TX_WSIZE\fP
establece el tamaño de la palabra de transmisión. Los valores permitidos
están en el intervalo de 1 a 4, y definen el número de bytes que serán
enviados al mismo tiempo al DSP56001. Estas cantidades de datos serán o bien
rellenadas con bytes cero, o truncadas para que se ajusten al formato nativo
de 24 bits del
DSP56001.
.IP \fBDSP56K_SET_RX_WSIZE\fP
establece el tamaño de la palabra de recepción. Los valores permitidos
están en el intervalo de 1 a 4, y definen el número de bytes que serán
recibidos al mismo tiempo del DSP56001. Estas cantidades de datos serán o bien
rellenadas con bytes cero, o truncadas para que se ajusten al formato nativo
de 24 bits del DSP56001.
.IP \fBDSP56K_HOST_FLAGS\fP
lee y escribe las banderas (flags) del host. Las banderas del host son
cuatro bits de propósito general que pueden ser leídos tanto por la máquina
anfitriona como por el DSP56001. Los bits 0 y 1 pueden ser escritos por el host,
y los bits 2 y 3 pueden ser escritos por el DSP56001.

Para acceder a estas banderas del host, el tercer argumento a ioctl() debe
ser un puntero a una estructura \fBdsp56k_host_flags\fP. Si el bit 0 o el bit 1
están activos en el miembro \fBdir\fP, el bit correspondiente en \fBout\fP será
escrito en las banderas del host. El estado de todas las banderas será devuelto
en los cuatro bits de orden inferior del miembro \fBstatus\fP.
.IP \fBDSP56K_HOST_CMD\fP
envía una orden de anfitrión. Los valores permitidos están en el intervalo de 0 a 31, 
y especifican una orden definida por el usuario que es manejado por el programa que
se ejecuta en el DSP56001.
.SH FICHEROS
/dev/dsp56k
.SH AUTORES
Fredrik Noring <noring@nocrew.org>, lars brinkhoff <lars@nocrew.org>,
Tomas Berndtsson <tomas@nocrew.org>.
.SH "VÉASE TAMBIÉN"
linux/include/asm-m68k/dsp56k.h,
linux/drivers/char/dsp56k.c,
http://dsp56k.nocrew.org/,
DSP56000/DSP56001 Digital Signal Processor User's Manual
