.\"  Copyright 2002 walter harms (walter.harms@informatik.uni-oldenburg.de)
.\"  Distributed under GPL
.\"  I had no way the check the functions out
.\"  be carefull
.TH KEY_SETSECRET 3 "18 julio 2002" "rpc seguro"
.SH NOMBRE
key_decryptsession, key_encryptsession, key_setsecret, key_gendes,
key_secretkey_is_set \- interfaces con el demonio servidor de claves de rpc
.SH SINOPSIS
.sp
.BR "#include <rpc/rpc.h>"
.sp
.BI "int key_decryptsession(const char *" remotename ,
.BI "des_block *" deskey );
.sp
.BI "int key_encryptsession(const char *" remotename ,
.BI "des_block *" deskey );
.sp
.BI "int key_gendes(des_block *" deskey );
.sp
.BI "int key_setsecret(const char *" key );
.sp
.B "int key_secretkey_is_set(void);"
.sp
.SH DESCRIPCIÓN
Estas funciones se usan dentro del mecanismo de autenticación segura 
de RPC (AUTH_DES). Los programas de usuario no debería utilizarlas.

La función
.BR  key_decryptsession () 
usa el nombre de red del servidor (remoto) y toma la clave DES 
para descifrar. Usa la clave pública del servidor y 
la clave privada asociada con el UID efectivo del proceso invocador.

La función
.BR key_encryptsession ()
es la inversa de
.BR key_decryptsession ().
Cifra las claves DES con la clave pública del servidor y
la clave privada asociada con el UID efectivo del proceso invocador.

La función
.BR key_gendes () 
se emplea para pedir al servidor de claves una clave de conversación segura.

La función
.BR key_setsecret () 
se emplea para establecer la clave del UID efectivo del proceso invocador.

La función
.BR key_secretkey_is_set ()
puede ser utilizada para determinar si se ha asignado
una clave para el UID efectivo del proceso invocador.

.SH NOTA
Por favor observe que hablamos de dos tipos encriptación. Uno es
asimétrico usando una clave pública y otra privada. El otro es simétrico,
el DES de 64 bits.
.br
Estas rutinas eran parte del proyecto linux/doors, abandonado hoy en día.

.SH "VALOR DEVUELTO"
Estas funciones devuelven 1 en caso de éxito y 0 si fallan.

.SH "VÉASE TAMBIÉN"
.BR crypt (3)
