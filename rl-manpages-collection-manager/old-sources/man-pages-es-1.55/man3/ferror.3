.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)ferror.3	6.8 (Berkeley) 6/29/91
.\"
.\"
.\" Converted for Linux, Mon Nov 29 14:24:40 1993, faith@cs.unc.edu
.\" Added remark on EBADF for fileno, aeb, 2001-03-22
.\" Translated into Spanish, Mon Jan 12 1998, Gerardo Aburruzaga García
.\" <gerardo.aburruzaga@uca.es>
.\" Traducción revisada por Miguel Pérez Ibars <mpi79470@alu.um.es> el 14-febrero-2005
.\"
.TH FERROR 3  "16 octubre 2001" "BSD" "Manual del Programador de Linux"
.SH NOMBRE
clearerr, feof, ferror, fileno \- comprueban y reestablecen los
estados de un flujo de datos
.SH SINOPSIS
.B #include <stdio.h>
.sp
.BI "void clearerr( FILE *" flujo );
.br
.BI "int feof( FILE *" flujo );
.br
.BI "int ferror( FILE *" flujo );
.br
.BI "int fileno( FILE *" flujo );
.SH DESCRIPCIÓN
La función
.B clearerr
limpia los indicadores de fin-de-fichero y error para el flujo
indicado por
.IR flujo .
.PP
La función
.B feof
inspecciona el indicador de fin-de-fichero para el flujo indicado por
.IR flujo ,
devolviendo no cero si está puesto. El indicador de fin-de-fichero
sólo puede ser limpiado por la función
.BR clearerr .
.PP
La función
.B ferror
inspecciona el indicador de error para el flujo indicado por
.IR flujo ,
devolviendo no cero si está puesto. El indicador de error sólo puede
ser puesto a cero por la función
.B clearerr .
.PP
La función
.B fileno
examina el argumento
.I flujo
y devuelve su descriptor de fichero, como un entero.
.PP
Para las versiones no-bloqueantes, véase
.BR unlocked_stdio (3).
.SH ERRORES
Estas funciones no deberían fallar, y no ponen ningún valor en la
variable externa
.IR errno .
(Sin embargo, en caso de que
.B fileno
detecte que su argumento no es un flujo válido, debe devolver
\-1 y asignar a
.I errno
el valor
.BR EBADF .)
.SH "VÉASE TAMBIÉN"
.BR open "(2), " unlocked_stdio "(3), "stdio (3)
.SH CONFORME A
Las funciones
.BR clearerr ,
.BR feof ,
y
.BR ferror
son conformes con X3.159-1989 (``C ANSI'').

