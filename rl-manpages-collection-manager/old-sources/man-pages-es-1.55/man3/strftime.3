.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"     GNU texinfo documentation on glibc date/time functions.
.\" Modified Sat Jul 24 18:03:44 1993 by Rik Faith (faith@cs.unc.edu)
.\" Applied fix by Wolfgang Franke, aeb, 961011
.\" Corrected return value, aeb, 970307
.\" Translated into Spanish Wed Mar 11 13:24:34 CET 1998 by Gerardo
.\" Aburruzaga Garc√≠a <gerardo.aburruzaga@uca.es>
.\" Translation revised April 27 1998 by Juan Piernas <piernas@dif.um.es>
.\" Translation revised August 17 1998 by Juan Piernas <piernas@ditec.um.es>
.\" Added Single Unix Spec conversions and %z, aeb/esr, 990329.
.\" Translation revised April 12 1998 by Juan Piernas <piernas@ditec.um.es>
.\" TraducciÛn revisada por Miguel PÈrez Ibars <mpi79470@alu.um.es> el 1-enero-2005
.\"
.TH STRFTIME 3  "29 marzo 1999" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
strftime \- formatea fecha y hora
.SH SINOPSIS
.nf
.B #include <time.h>
.sp
.BI "size_t strftime(char *" s ", size_t " max ", const char *" format ,
.BI "				const struct tm *" tm );
.fi
.SH DESCRIPCI√ìN
La funci√≥n \fBstrftime()\fP formatea el tiempo descompuesto en campos \fItm\fP
seg√∫n la especificaci√≥n de formato \fIformat\fP y coloca el resultado
en el vector de caracteres \fIs\fP de tama√±o \fImax\fP.
.PP
Los caracteres normales de la cadena de formato se copian en \fIs\fP
sin conversi√≥n ninguna. Los especificadores de conversi√≥n se
introducen con un car√°cter de porcentaje `%', y se reemplazan en
\fIs\fP como sigue:
.TP
.B %a
El nombre abreviado del d√≠a de la semana seg√∫n la localizaci√≥n en curso.
.TP
.B %A
El nombre del d√≠a de la semana, completo, seg√∫n la localizaci√≥n en curso.
.TP
.B %b
El nombre abreviado del mes seg√∫n la localizaci√≥n en curso.
.TP
.B %B
El nombre completo del mes seg√∫n la localizaci√≥n en curso.
.TP
.B %c
La representaci√≥n preferida de fecha y hora para la localizaci√≥n en curso.
.TP
.B %C
El siglo (a√±o/100) como un entero de 2 d√≠gidos. (SU)
.TP
.B %d
El d√≠a del mes como un n√∫mero en base diez (en el rango de 01 a 31).
.TP
.B %D
Equivalente a %m/%d/%y. (Sip - s√≥lo para norteamericanos.
Los norteamericanos deben darse cuenta que en otros pa√≠ses %d/%m/%y es
bastante com√∫n. Esto significa que en un contexto internacional este formato
es ambiguo y no se deber√≠a usar). (SU)
.TP
.B %e
Como %d, el d√≠a del mes como un n√∫mero decimal, pero un cero inicial se
reemplaza por un espacio. (SU)
.TP
.B %E
Modificador; use formato alternativo, ver m√°s abajo. (SU)
.TP
.B %F
Equivalente a %Y-%m-%d (el formato de fecha de ISO 8601). (C99)
.TP
.B %G
El a√±o con siglo como un n√∫mero decimal seg√∫n el est√°ndar ISO 8601.
El a√±o de 4 d√≠gitos correspondiente al n√∫mero de la semana ISO (ver %V).
√âste tiene el mismo formato y valor que %y, salvo que si el n√∫mero de la
semana ISO pertenece al a√±o anterior o siguiente, ese a√±o se utiliza en su
lugar. (TZ).
.TP
.B %g
Como %G, pero sin siglo, es decir, con un a√±o de 2 d√≠gitos (00-99). (TZ)
.TP
.B %h
Equivalente a %b. (SU)
.TP
.B %H
La hora como un n√∫mero en base diez en formato de 24 horas (en el
rango de 00 a 23).
.TP
.B %I
La hora como un n√∫mero en base diez en formato de 12 horas (en el
rango de 01 a 12).
.TP
.B %j
El d√≠a juliano (d√≠a del a√±o) como un n√∫mero en base diez (en el rango
de 001 a 366).
.TP
.B %k
La hora (en un reloj de 24 horas) como un n√∫mero decimal (en el rango de 0 a
23); los d√≠gitos individuales son precedidos por un blanco. (Ver tambi√©n
%H). (TZ)
.TP
.B %l
La hora (en un reloj de 12 horas) como un n√∫mero decimal (en el rango de 1 a
12); los d√≠gitos individuales son precedidos por un blanco. (Ver  tamb√≠en
%I). (TZ).
.TP
.B %m
El mes como un n√∫mero en base diez (en el rango de 01 a 12).
.TP
.B %M
El minuto como un n√∫mero en base diez (en el rango de 00 a 59).
.TP
.B %n
Un car√°cter de nueva l√≠nea. (SU)
.TP
.B %O
Modificador; use un formato alternativo, ver m√°s abajo. (SU)
.TP
.B %p
O `AM' ("Ante Meridiem", antes del mediod√≠a) o `PM' ("Post Meridiem",
despu√©s del mediod√≠a) de acuerdo con el valor del tiempo dado, o la cadena de
caracteres correspondiente seg√∫n la localizaci√≥n en curso.
El medio d√≠a se trata como `pm' y la media noche como `am'.
.TP
.B %P
Como %p pero en letras min√∫sculas: `am' o `pm' o una cadena correspondiente
para la localizaci√≥n actual. (GNU)
.TP
.B %r
El tiempo en notaci√≥n a.m. o p.m..
En la localizaci√≥n POSIX esto es equivalente a `%I:%M:%S %p'. (SU)
.TP
.B %R
El tiempo en notaci√≥n de 24 horas (%H:%M). (SU)
Para una versi√≥n que incluya lo segundos, ver %T m√°s abajo.
.TP
.B %s
El n√∫mero de segundos desde la √âpoca, es decir, desde 1970-01-01
00:00:00 UTC. (TZ)
.TP
.B %S
El segundo como un n√∫mero decimal (en el rango de 00 a 61)
.TP
.B %t
Un car√°cter tabulador. (SU)
.TP
.B %T
El tiempo en notaci√≥n de 24 horas (%H:%M:%S). (SU)
.TP
.B %u
El d√≠a de la semana como un n√∫mero decimal, en el rango de 1 a 7, siendo 1
el Lunes.
Ver tambi√©n %w. (SU)
.TP
.B %U
El n√∫mero de la semana del a√±o actual como un n√∫mero en base decimal,
en el rango de 00 a 53, empezando por el primer domingo como el primer d√≠a
de la primera semana. Ver tambi√©n %V y %W. 
.TP
.B %W
El n√∫mero de la semana del a√±o actual como un n√∫mero decimal seg√∫n el
est√°ndar ISO 8601:1988, donde la semana 1 es la primera semana que tiene al
menos 4 d√≠as del a√±o actual y el lunes como el primer d√≠a de la semana. Ver
tambi√©n %U y %W. (SU)
.TP
.B %w
El d√≠a de la semana como un n√∫mero decimal, en el rango de 0 a 6, siendo el
domingo el cero.
Ver tambi√©n %u.
.TP
.B %W
El n√∫mero de la semana del a√±o actual como un n√∫mero decimal, en el rango de
00 a 53, empezando con el primer Lunes como el primer d√≠a de la primera
semana.
.TP
.B %x
La representaci√≥n preferida de la fecha (sin la hora) para la
localizaci√≥n en curso.
.TP
.B %X
La representaci√≥n preferida de la hora (sin la fecha) para la
localizaci√≥n en curso.
.TP
.B %y
El a√±o como un n√∫mero en base diez sin la centuria (en el rango de 00
a 99).
.TP
.B %Y
El a√±o como un n√∫mero en base diez, incluyendo la centuria.
.TP
.B %z
El huso horario como las horas de diferencia respecto a GMT.
Necesario para emitir fechas conformes a RFC822
(usando "%a, %d %b %Y %H:%M:%S %z"). (GNU)
.TP
.B %Z
La zona horaria, nombre o abreviatura.
.TP
.B %+
La fecha y hora en el formato de date(1). (TZ)
.TP
.B %%
Un car√°cter de porcentaje literal, '%'.
.PP
Algunos indicadores de conversi√≥n se pueden modificar precedi√©ndolos por un
modificador E u O para indicar que se debe usar un formato alternativo.
Si no existen formatos o especificaciones alternativos para la localizaci√≥n
actual, el comportamiento quedar√° como si se usara la especificaci√≥n de
conversi√≥n sin modificar. (SU)
`The Single Unix Specification' menciona %Ec, %EC, %Ex, %EX,
%Ry, %EY, %Od, %Oe, %OH, %OI, %Om, %OM, %OS, %Ou, %OU, %OV,
%Ow, %OW, %Oy, donde el efecto del modificador O es el de usar s√≠mbolos
num√©ricos alternativos (digamos, n√∫meros romanos) y el del modificador E es
el de usar un representaci√≥n alternativa dependiente de la localizaci√≥n.
.PP
La estructura para el tiempo descompuesto, \fItm\fP, se define
en \fI<time.h>\fP.
V√©ase tambi√©n
.BR ctime (3).
.SH "VALOR DEVUELTO"
La funci√≥n \fBstrftime()\fP devuelve el n√∫mero de caracteres puestos
en el vector \fIs\fP, sin incluir el car√°cter cero terminador (NUL),
suponiendo que la cadena, incluyendo el car√°cter cero terminador, cabe. En
caso contrario, devuelve 0 y el contenido del vector es indefinido. (Esto es
as√≠ al menos desde la versi√≥n 4.4.4 de libc; las versiones de libc muy
antiguas, tales como la libc 4.4.1, devolv√≠an \fImax\fP si el vector era
demasiado peque√±o).
.LP
D√©se cuenta que el valor devuelto 0 no indica necesariamente un error;
por ejemplo, en muchas localizaciones %p da lugar a una cadena vac√≠a.
.SH ENTORNO
Se usan las variables de entorno TZ y LC_TIME.
.SH "CONFORME A"
ANSI C, SVID 3, ISO 9899.
Existen inclusiones estrictas entre el conjunto de conversiones dadas en
ANSI C (sin marcar), aquellas dadas en `the Single Unix Specification'
(marcadas como SU), aquellas dadas en el paquete de huso horario de Olson
(marcadas TZ) y aquellas dadas en glibc (marcadas GNU), excepto que %+ no
est√° soportado en glibc2. Por otro lado, glibc2 tiene varias extensiones
m√°s. POSIX.1 s√≥lo referencia a ANSI C; POSIX.2 describe bajo
.BR date (1)
varias extensiones que se podr√≠an aplicar tambi√©n a
.BR strftime .
La conversi√≥n %F est√° en C99 y POSIX 1003.1-2001.
.SH FALLOS
Algunas versiones con fallos de gcc se quejan sobre el uso de %c:
.IR "advertencia: `%c' da sÛlo los 2 ˙ltimos dÌgitos del aÒo en algunas localizaciones".
.\" .IR "warning: `%c' yields only last 2 digits of year in some locales" .
Por supuesto los programadores insisten en usar %c, puesto que proporciona
la representaciÛn de fecha y hora preferida. Pueden encontrarse todo tipo de
extraÒos atajos para evitar este problema de gcc. Uno relativamente elegante es aÒadir
una funciÛn intermedia
.RS
size_t my_strftime(char *s, size_t max, const char *fmt,
const struct tm *tm) {
.br
	return strftime(s, max, fmt, tm);
.br
}
.RE
.SH "V√âASE TAMBI√âN"
.BR date (1),
.BR time (2),
.BR ctime (3),
.BR setlocale (3),
.BR sprintf (3)
