.\" Copyright (C) 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 18:26:16 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Thu Apr 11 17:11:33 1996 by Andries Brouwer (aeb@cwi.nl):
.\"     Corrected type of compar routines, as suggested by
.\"     Miguel Barreiro (enano@avalon.yaix.es).  Added example.
.\" Modified Sun Sep 24 20:15:46 2000 by aeb, following Petter Reinholdtsen.
.\" Modified 2001-12-26 by aeb, following Joey. Added versionsort.
.\"
.\" Translated 10 Feb 1998 by Vicente Pastor Gómez <VPASTORG@santandersupernet.com , vicpastor@hotmail.com>
.\" Traducción revisada por Miguel Pérez Ibars <mpi79470@alu.um.es> el 3-febrero-2005
.\"
.TH SCANDIR 3  "26 diciembre 2001" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
scandir, alphasort, versionsort \- busca en un directorio entradas coincidentes
.SH SINOPSIS
.nf
.B #include <dirent.h>
.sp
.BI "int scandir(const char *" dir ", struct dirent ***" namelist ,
.RS
.BI "int(*" select ")(const struct dirent *),"
.BI "int(*" compar ")(const struct dirent **, const struct dirent **));"
.RE
.sp
.BI "int alphasort(const void *" a ", const void *" b );
.br
.BI "int versionsort(const void *" a ", const void *" b );
.fi
.SH DESCRIPCIÓN
La función \fBscandir()\fP rastrea el directorio \fIdir\fP, llamando
\fIselect()\fP en cada entrada de directorio. Las entradas para las que
\fIselect()\fP devuelve un valor distinto de cero se almacenan en cadenas
(strings) reservadas vía \fBmalloc()\fP, ordenadas usando \fBqsort()\fP con
la función de comparación \fIcompar()\fP, y puestas en la matriz \fInamelist\fP
que está reservada vía \fBmalloc()\fP.
Si \fIselect\fP es NULL, se seleccionan todas las entradas.
.LP
Las funciones
.B alphasort()
y
.B versionsort()
pueden ser utilizadas como la función de comparación
.IR compar() .
La primera ordena las entradas de directorio usando
.BR strcoll (3),
la última usando
.BR strvers\%cmp (3)
sobre las cadenas \fI(*a)->d_name\fP y \fI(*b)->d_name\fP.
.SH "VALOR DEVUELTO"
La función \fBscandir()\fP devuelve el número de entradas de directorio
seleccionadas, o \-1 si hubo algún error.
.PP
Las funciones
.B alphasort()
y
.B versionsort()
devuelven un entero menor que, igual a, o mayor
que cero si el primer argumento se considera respectivamente menor que, igual
a, o mayor que el segundo argumento.
.SH "ERRORES"
.TP
.B ENOMEM
Memoria insuficiente para completar la operación.
.SH "CONFORME A"
Ninguna de estas funciones está en POSIX.
Las funciones
.B scandir()
y
.B alphasort()
son de BSD 4.3, y están disponibles bajo Linux desde libc4.
Libc4 y libc5 usan el prototipo más preciso
.sp
.nf
.BI "int alphasort(const struct dirent **" a ", const struct dirent **" b );
.fi
.sp
pero glibc 2.0 vuelve al prototipo impreciso de BSD.
.LP
La función
.B versionsort()
es una extensión de GNU, disponible desde glibc 2.1.
Desde glibc 2.1,
.B alphasort()
invoca a
.BR strcoll (3);
anteriormente usaba
.BR strcmp (3).
.SH EJEMPLO
.nf
/* imprimir ficheros en el directorio actual en orden inverso */
#include <dirent.h>
main(){
    struct dirent **namelist;
    int n;

    n = scandir(".", &namelist, 0, alphasort);
    if (n < 0)
        perror("scandir");
    else {
        while(n--) {
            printf("%s\en", namelist[n]->d_name);
            free(namelist[n]);
        }
        free(namelist);
    }
}
.fi
.SH "VÉASE TAMBIÉN"
.BR closedir (3),
.BR fnmatch (3),
.BR opendir (3),
.BR readdir (3),
.BR rewinddir (3),
.BR seekdir (3),
.BR strcmp (3),
.BR strcoll (3),
.BR strverscmp (3),
.BR telldir (3)
