.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Mon Mar 29 22:31:13 1993, David Metcalfe
.\" Modified Sun Jun  6 23:27:50 1993, David Metcalfe
.\" Modified Sat Jul 24 21:45:37 1993, Rik Faith (faith@cs.unc.edu)
.\"
.\" Traducida al castellano (con permiso) por:
.\" Sebastian Desimone (chipy@argenet.com.ar) (desimone@fasta.edu.ar)
.\" Modified 5 Jul 1996 Miguel A. Sepulveda (angel@vivaldi.princeton.edu)
.\" Translation revised June 16 1998 by Juan Piernas <piernas@dif.um.es>
.\" Traducción revisada por Miguel Pérez Ibars <mpi79470@alu.um.es> el 29-septiembre-2004
.\"
.TH ABS 3  "17 diciembre 2000" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
abs, labs, llabs, imaxabs \- calculan el valor absoluto de un entero.
.SH SINOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "int abs(int " j );
.br
.BI "long int labs(long int " j );
.br
.BI "long long int llabs(long long int " j );
.sp
.B #include <inttypes.h>
.sp
.BI "intmax_t imaxabs(intmax_t " j );
.fi
.SH DESCRIPCIÓN
La función \fBabs()\fP calcula el valor absoluto del argumento entero
\fIj\fP. Las funciones \fBlabs()\fP, \fBllabs()\fP y \fBimaxabs()\fP
calculan el valor absoluto del argumento \fIj\fP de tipo entero
apropiado para la función.
.SH "VALOR DEVUELTO"
Devuelve el valor absoluto del argumento entero, de tipo entero apropiado
para la función.
.SH "CONFORME A"
SVID 3, POSIX.1, BSD 4.3, ISO/IEC 9899 (C99).  POSIX.1 (edición de 1996) sólo
requiere la función \fBabs()\fP.  ISO/IEC 9899:1990 (C89) sólo
incluye las funciones \fBabs()\fP y \fBlabs()\fP; las funciones
\fBllabs()\fP y \fBimaxabs()\fP fueron añadidas en C99.
.SH OBSERVACIONES
Intentar tomar el valor absoluto del entero más negativo no está definido.
.PP
La función \fBllabs()\fP está incluida en glibc desde la versión 2.0, pero no
se encuentra en libc5 ni libc4. La función \fBimaxabs()\fP está incluida en
glibc desde la versión 2.1.1.
.PP
Para que la función \fBllabs()\fP sea declarada, puede ser necesario definir
\fB_ISOC99_SOURCE\fP o \fB_ISOC9X_SOURCE\fP (dependiendo de
la versión de glibc) antes de incluir cualquiera de las cabeceras estándar.
.PP
GCC maneja \fBabs()\fP y \fBlabs()\fP como funciones internas.  GCC
3.0 también maneja \fBllabs()\fP y \fBimaxabs()\fP como internas.
.SH "VÉASE TAMBIÉN"
.BR ceil (3), 
.BR floor (3), 
.BR fabs (3), 
.BR  rint (3)
