.\" Copyright 2002 walter harms (walter.harms@informatik.uni-oldenburg.de)
.\" Distributed under GPL
.\"
.\" Corrected, aeb, 2002-05-30
.\"
.\" Traducido por Miguel Pérez Ibars <mpi79470@alu.um.es> el 10-julio-2004
.\"
.TH A64L 3 "15 febrero 2002" "" "Manual del Programador de Linux"
.SH NOMBRE
a64l, l64a \- realizan la conversión entre enteros largos y base-64
.SH SINOPSIS
.B #include <stdlib.h>
.sp
.BI "long a64l(char *" str64 );
.sp
.BI "char *l64a(long " value );
.sp
.SH DESCRIPCIÓN
Estas funciones realizan la conversión entre enteros largos de 32 bits
y cadenas ASCII little-endian en base-64 (de longitud cero a seis).
Si la cadena usada como argumento para
.BR a64l ()
tiene una longitud mayor que seis, sólo se usarán los seis primeros bytes.
Si los enteros largos tienen más de 32 bits, 
.BR l64a ()
usa solamente los 32 bits de orden inferior de
.IR value ,
y
.BR a64l ()
extiende el signo de su resultado de 32 bits.
.LP
Los 64 dígitos del sistema base 64 son:
.RS
.nf
\&'.'	representa un 0
\&'/'	representa un 1
0-9	representa  2-11
A-Z	representa 12-37
a-z	representa 38-63
.fi
.RE
.br
Como ejemplo, 123 = 59*64^0 + 1*64^1 = "v/".
.SH OBSERVACIONES
El valor devuelto por
.BR a64l ()
puede ser un puntero a un buffer estático, que será sobreescrito 
posiblemente por llamadas posteriores.
.LP
El comportamiento de
.BR l64a ()
es indefinido cuando
.I value
es negativo. Si
.I value
es cero, devuelve una cadena vacía.
.LP
Estas funciones no funcionan correctamente en las versiones de 
glibc anteriores a 2.2.5
(ponen los digitos más significativos en primer lugar).
.SH "CONFORME A"
XPG 4.2, POSIX 1003.1-2001.
.SH "VÉASE TAMBIÉN"
.BR uuencode (1),
.BR itoa (3),
.BR strtoul (3)
