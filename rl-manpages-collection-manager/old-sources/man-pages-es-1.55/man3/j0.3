.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:08:17 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-08-25, aeb
.\" Translated into Spanish Mon Mar  2 15:57:12 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\" Traducción revisada por Miguel Pérez Ibars <mpi79470@alu.um.es> el 29-marzo-2005
.\"
.TH J0 3  "25 agosto 2002" "" "Manual del Programador de Linux"
.SH NOMBRE
j0, j0f, j0l, j1, j1f, j1l, jn, jnf, jnl,
y0, y0f, y0l, y1, y1f, y1l, yn, ynf, ynl \- funciones de Bessel
.SH SINOPSIS
.nf
.B #include <math.h>
.sp
.BI "double j0(double " x );
.br
.BI "double j1(double " x );
.br
.BI "double jn(int " n ", double " x );
.br
.BI "double y0(double " x );
.br
.BI "double y1(double " x );
.br
.BI "double yn(int " n ", double " x );
.sp
.BI "float j0f(float " x );
.br
.BI "float j1f(float " x );
.br
.BI "float jnf(int " n ", float " x );
.br
.BI "float y0f(float " x );
.br
.BI "float y1f(float " x );
.br
.BI "float ynf(int " n ", float " x );
.sp
.BI "long double j0l(long double " x );
.br
.BI "long double j1l(long double " x );
.br
.BI "long double jnl(int " n ", long double " x );
.br
.BI "long double y0l(long double " x );
.br
.BI "long double y1l(long double " x );
.br
.BI "long double ynl(int " n ", long double " x );
.fi
.SH DESCRIPCIÓN
Las funciones \fBj0()\fP y \fBj1()\fP devuelven las funciones de
Bessel de \fIx\fP de primera clase de órdenes 0 y 1,
respectivamente. La función \fBjn()\fP devuelve la función de Bessel
de \fIx\fP de primera clase de orden \fIn\fP.
.PP
Las funciones \fBy0()\fP e \fBy1()\fP devuelven las funciones de
Bessel de \fIx\fP de segunda clase de órdenes 0 y 1,
respectivamente. La función \fByn()\fP devuelve la función de Bessel
de \fIx\fP de segunda clase de orden \fIn\fP.
.PP
Para las funciones \fBy0()\fP, \fBy1()\fP e \fByn()\fP, el valor de
\fIx\fP debe ser positivo. Para valores negativos de \fIx\fP, estas
funciones devuelven \-HUGE_VAL.
.PP
Las funciones \fBj0f()\fP etc. y \fBj0l()\fP etc. son versiones que aceptan
y devuelven valores de coma flotante en simple y doble precisión largo, respectivamente.
.SH "CONFORME A"
Las funciones que devuelven un valor de coma flotante en doble precisión son
conformes con SVID 3, BSD 4.3, XPG4,
POSIX 1003.1-2001. Las otras funciones existen por analogía, y existen
en muchas plataformas.
.SH FALLOS
Hay errores de hasta 2e\-16 en los valores devueltos por \fBj0()\fP,
\fBj1()\fP y \fBjn()\fP para valores de \fIx\fP entre \-8 y 8.
