.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1993 Michael Haardt
.\" (michael@moria.de)
.\" Fri Apr  2 11:32:09 MET DST 1993
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Modified Sat Jul 24 15:37:39 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sat Feb 25 18:17:14 1995 by Jim Van Zandt <jrv@vanzandt.mv.com>
.\" Modified Sat Sep  2 22:33:09 1995 by Jim Van Zandt <jrv@vanzandt.mv.com>
.\" moved to man3, aeb, 950919
.\"
.\" Translated into Spanish Thu Mar 12 16:02:28 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\"
.TH TERMIOS 3 "12 Marzo 1998" "Linux" "Manual del Programador de Linux"
.SH NOMBRE
termios, tcgetattr, tcsetattr, tcsendbreak, tcdrain, tcflush, tcflow,
cfmakeraw, cfgetospeed, cfgetispeed, cfsetispeed, cfsetospeed,
tcgetpgrp, tcsetpgrp \- obtiene y pone
atributos de la terminal, controla la línea de la terminal, obtiene y
pone la velocidad de la línea, obtiene y pone la ID. de grupo de
procesos en primer plano de la terminal
.SH SINOPSIS
.ad l
.ft B
#include <termios.h>
.br
#include <unistd.h>
.sp
.BI "int tcgetattr ( int " fd ", struct termios *" termios_p " );"
.sp
.BI "int tcsetattr ( int " fd ", int " optional_actions ", struct termios *" termios_p " );"
.sp
.BI "int tcsendbreak ( int " fd ", int " duration " );"
.sp
.BI "int tcdrain ( int " fd " );"
.sp
.BI "int tcflush ( int " fd ", int " queue_selector " );"
.sp
.BI "int tcflow ( int " fd ", int " action " );"
.sp
.BI "int cfmakeraw ( struct termios *" termios_p " );"
.sp
.BI "speed_t cfgetospeed ( struct termios *" termios_p " );"
.sp
.BI "int cfsetospeed ( struct termios *" termios_p ", speed_t " speed " );"
.sp
.BI "speed_t cfgetispeed ( struct termios *" termios_p " );"
.sp
.BI "int cfsetispeed ( struct termios *" termios_p ", speed_t " speed " );"
.sp
.BI "pid_t tcgetpgrp ( int " fd " );"
.sp
.BI "int tcsetpgrp ( int " fd ", pid_t " pgrpid " );"
.ft P
.ad b
.SH DESCRIPCIÓN
Las funciones termios describen una interfaz general para las
terminales que sirve para controlar los puertos de comunicaciones
asícronas. 
.LP
Muchas de las funciones que aquí se describen poseen un argumento
\fItermios_p\fP que es un puntero a una estructura \fBtermios\fP.
Esta estructura contiene los miembros siguientes:
.ne 9
.sp
.RS
.nf
tcflag_t \fIc_iflag\fP;      /* modos de entrada */
tcflag_t \fIc_oflag\fP;      /* modos de salida */
tcflag_t \fIc_cflag\fP;      /* modos de control */
tcflag_t \fIc_lflag\fP;      /* modos locales */
cc_t \fIc_cc\fP[\fBNCCS\fP];       /* caracts. de control */
.RE
.sp
.fi
.PP
Constantes indicadoras \fIc_iflag\fP:
.IP \fBIGNBRK\fP
no hacer caso de la condición BREAK en la entrada
.IP \fBBRKINT\fP
si \fBIGNBRK\fP no está activo, generar \fBSIGINT\fP en caso de
condición BREAK, si no leer el BREAK como el carácter \\0.
.IP \fBIGNPAR\fP
No hacer caso de errores de marco y paridad.
.IP \fBPARMRK\fP
si \fBIGNPAR\fP no está activo, prefijar con \\377 \\0 un carácter con
un error de paridad o marco. Si ni \fBIGNPAR\fP ni \fBPARMRK\fP
están activos, leer un carácter con un error de paridad o marco como \\0.
.IP \fBINPCK\fP
permitir la comprobación de paridad en la entrada
.IP \fBISTRIP\fP
quitar o poner a cero el 8º bit
.IP \fBINLCR\fP
traducir NL a CR en la entrada
.IP \fBIGNCR\fP
no hacer caso del retorno de carro en la entrada
.IP \fBICRNL\fP
traducir retorno de carro a salto de línea en la entrada (a menos que
\fBIGNCR\fP esté activado)
.IP \fBIUCLC\fP
convertir letras mayúsculas a las minúsculas correspondientes en la entrada 
.IP \fBIXON\fP
activar el control de flujo XON/XOFF en la salida
.IP \fBIXANY\fP
activar que cualquier carácter reinicie la salida
.IP \fBIXOFF\fP
activar el control de flujo XON/XOFF en la entrada
.IP \fBIMAXBEL\fP
hacer sonar el pitido cuando la cola de entrada esté llena
.PP
Constantes indicadoras \fIc_oflag\fP:
.IP \fBOPOST\fP
activar el procesamiento definido por la implementación de la salida
.IP \fBOLCUC\fP
convertir las letras minúsculas en las correspondientes mayúsculas en
la salida
.IP \fBONLCR\fP
convertir NL a CR-NL en la salida
.IP \fBOCRNL\fP
convertir CR a NL en la salida
.IP \fBONOCR\fP
no sacar CR en la columna 0
.IP \fBONLRET\fP
no sacar CR
.IP \fBOFILL\fP
enviar caracteres de relleno para un retardo, en vez de usar un
retardo de tiempo
.IP \fBOFDEL\fP
el carácter de relleno es el ASCII DEL. Si no está activado, el
carácter de relleno es el ASCII NUL
.IP \fBNLDLY\fP
máscara de retardo del salto de línea. Los valores son \fBNL0\fP y \fBNL1\fP.
.IP \fBCRDLY\fP
máscara de retardo del retorno de carro. Los valores son \fBCR0\fP,
\fBCR1\fP, \fBCR2\fP, o \fBCR3\fP. 
.IP \fBTABDLY\fP
máscara de retardo del tabulador horizontal. Los valores son
\fBTAB0\fP, \fBTAB1\fP, \fBTAB2\fP, \fBTAB3\fP, o \fBXTABS\fP.
Un valor de XTABS expande tabuladores a espacios (con paradas del
tabulador cada 8 columnas). 
.IP \fBBSDLY\fP
máscara de retardo del espacio atrás. Los valores son \fBBS0\fP o \fBBS1\fP.
.IP \fBVTDLY\fP
máscara de retardo del tabulador vertical. Los valores son \fBVT0\fP o \fBVT1\fP.
.IP \fBFFDLY\fP
máscara de retardo del salto de página. Los valores son \fBFF0\fP o \fBFF1\fP.
.PP
Constantes indicadoras \fIc_cflag\fP:
.IP \fBCSIZE\fP
máscara de tamaño de carácter. Los valores son \fBCS5\fP, \fBCS6\fP,
\fBCS7\fP, o \fBCS8\fP. 
.IP \fBCSTOPB\fP
pone dos bits de parada, en vez de uno.
.IP \fBCREAD\fP
habilita receptor.
.IP \fBPARENB\fP
activa la generación de paridad en la salida y comprobación de paridad
para la entrada.
.IP \fBPARODD\fP
la paridad para la entrada y la salida es impar.
.IP \fBHUPCL\fP
las líneas de control de módem inferiores tras el último proceso
cierran el dispositivo (cuelgan).
.IP \fBCLOCAL\fP
no hace caso de las líneas de control del módem
.IP \fBCIBAUD\fP
máscara para las velocidades de entrada (sin uso).
.IP \fBCRTSCTS\fP
control de flujo.
.PP
Constantes indicadoras \fIc_lflag\fP:
.IP \fBISIG\fP
cuando se reciba cualquiera de los caracteres INTR, QUIT, SUSP, o DSUSP,
generar la señal correspondiente.
.IP \fBICANON\fP
activar el modo canónico. Esto habilita los caracteres especiales
EOF, EOL, EOL2, ERASE, KILL, REPRINT, STATUS, y WERASE, y
búferes por líneas.
.IP \fBXCASE\fP
si \fBICANON\fP también está activo, la terminal es sólo de letras
mayúsculas.
La entrada se convierte a minúsculas, salvo para caracteres precedidos
de \\. En la salida, las letras mayúsculas salen precedidas por \\ y
las minúsculas convertidas en mayúsculas.
.IP \fBECHO\fP
muestra caracteres de entrada.
.IP \fBECHOE\fP
si \fBICANON\fP está también activo, el carácter ERASE borra el
carácter anterior de la entrada, y el WERASE borra la palabra anterior.
.IP \fBECHOK\fP
si \fBICANON\fP también está activo, el carácter KILL borra la línea
en curso.
.IP \fBECHONL\fP
si \fBICANON\fP está también activo, muestra el carácter NL incluso si
no está activado ECHO.
.IP \fBECHOCTL\fP
si \fBECHO\fP también está activo, las señales de control ASCII
distintas de TAB, NL, START y STOP, se muestran como ^X, donde X es el
carácter cuyo código ASCII es 0x40 más el de la señal de control. Por
ejemplo, el carácter 0x08 (BS) se muestra como ^H.
.IP \fBECHOPRT\fP
si \fBICANON\fP y \fBIECHO\fP están también activos, los caracteres se
muestran mientras están siendo borrados.
.IP \fBECHOKE\fP
si \fBICANON\fP también está activo, KILL se muestra borrando cada
carácter de la línea, como se especifica por  \fBECHOE\fP y \fBECHOPRT\fP.
.IP \fBFLUSHO\fP
la salida se está volcando al dispositivo de salida. Esta opción se
cambia al teclear el carácter DISCARD.
.IP \fBNOFLSH\fP
inhabilita el volcado de las colas de entrada y salida cuando se estén
generando las señales SIGINT y SIGQUIT, y el de la cola de entrada
cuando se genere la señal SIGSUSP.
.IP \fBTOSTOP\fP
envía la señal SIGTTOU al grupo de proceso de un proceso en segundo
plano que trata de escribir a su terminal controladora.
.IP \fBPENDIN\fP
todos los caracteres de la cola de entrada se reimprimen cuando se lee
el siguiente carácter (\fBbash\fP maneja el \fItypeahead\fP así.)
.\" typeahead
.IP \fBIEXTEN\fP
habilita el procesado de entrada definido por la implementación.
.PP
.B tcgetattr()
obtiene los parámetros asociados con el objeto referido por \fIfd\fP y
los guarda en la estructura \fBtermios\fP referenciada por
\fItermios_p\fP.  Esta función puede llamarse desde un proceso en
segundo plano; sin embargo, los atributos de terminal pueden ser
modificados subsecuentemente por un proceso en primer plano.
.LP
.B tcsetattr()
establece los parámetros asociados con la terminal (a menos que se
requiera soporte del hardware subyacente que no esté disponible) desde
la estructura \fBtermios\fP referenciada por \fItermios_p\fP.  
\fIoptional_actions\fP especifica cuándo los cambios tienen efecto:
.IP \fBTCSANOW\fP
el cambio ocurre inmediatamente.
.IP \fBTCSADRAIN\fP
el cambio ocurre después de que  toda la salida escrita a
.I fd
haya sido transmitida. Esta función debería emplearse cuando se
cambien parámetros que afecten a la salida.
.IP \fBTCSAFLUSH\fP
el cambio ocurre después de que toda la salida escrita al objeto
referenciado por
.I fd
haya sido transmitida, y toda la entrada que se haya recibido pero no
leído será descartada antes de que se haga el cambio.
.LP
.B tcsendbreak()
transmite un flujo continuo de bits a cero durante un tiempo
determinado, si la terminal emplea transmisión de datos en serie
asíncrona. Si \fIduration\fP es cero, transmite bits ceros durante al
menos ¼ de segundo, y no más de ½ segundo. Si
\fIduration\fP no es cero, transmite bits cero durante
.IB duration * N
segundos, donde \fIN\fP es como poco 0,25 s y no más de 0,5 s.
.LP
Si la terminal no está utilizando la transmisión asíncrona de datos en
serie,
\fBtcsendbreak()\fP regresa sin tomar ninguna acción.
.LP
.B tcdrain()
espera hasta que toda la salida escrita al objeto referido por
.I fd
haya sido transmitida.
.LP
.B tcflush()
descarta datos escritos al objeto referido por
.I fd
pero no transmitidos, o datos recibidos pero no leídos, dependiendo
del valor de
.IR queue_selector :
.IP \fBTCIFLUSH\fP
vuelca datos recibidos pero no leídos.
.IP \fBTCOFLUSH\fP
vuelca datos escritos pero no transmitidos.
.IP \fBTCIOFLUSH\fP
vuelca tanto los datos recibidos pero no leídos, como los escritos
pero no transmitidos.
.LP
.B tcflow()
suspende la transmisión o recepción de datos en el objeto referido por
.IR fd ,
dependiendo del valor de
.IR action :
.IP \fBTCOOFF\fP
suspende la salida.
.IP \fBTCOON\fP
reanuda la salida suspendida.
.IP \fBTCIOFF\fP
transmite un carácter STOP, que hace que el dispositivo de terminal
deje de transmitir datos al sistema.
.IP \fBTCION\fP
transmite un carácter START, que hace que el dispositivo de terminal
empiece a transmitir datos del sistema.
.LP
El comportamiento predeterminado al abrir un fichero de terminal es
que ni su entrada ni su salida están suspendidas.
.LP
Las funciones de velocidad se proporcionan para obtener y poner los
valores de las velocidades de entrada y salida en la estructura
\fBtermios\fP.  Los nuevos valores no hacen efecto hasta que se llame
con éxito a \fBtcsetattr()\fP.

Poner la velocidad a \fBB0\fP significa decirle al módem que "cuelgue".
La velocidad de bits real correspondiente a \fBB38400\fP puede
alterarse con \fBsetserial\fP(8).	
.LP
Las velocidades de entrada y salida se guardan en la estructura
\fBtermios\fP. 
.LP
\fBcfmakeraw\fP establece los atributos de terminal como sigue:
.nf
            termios_p->c_iflag &= ~(IGNBRK|BRKINT|PARMRK|ISTRIP
                            |INLCR|IGNCR|ICRNL|IXON);
            termios_p->c_oflag &= ~OPOST;
            termios_p->c_lflag &= ~(ECHO|ECHONL|ICANON|ISIG|IEXTEN);
            termios_p->c_cflag &= ~(CSIZE|PARENB);
            termios_p->c_cflag |= CS8;
.fi
.LP
.B cfgetospeed()
devuelve la velocidad de salida guardada en la estructura
\fBtermios\fP apuntada por
.IR termios_p .
.LP
.B cfsetospeed()
establece la velocidad de salida, guardada en la estructura
\fBtermios\fP apuntada por \fItermios_p\fP, a \fIspeed\fP, que debe
ser una de estas constantes:
.nf
.ft B
	B0
	B50
	B75
	B110
	B134
	B150
	B200
	B300
	B600
	B1200
	B1800
	B2400
	B4800
	B9600
	B19200
	B38400
	B57600
	B115200
	B230400
.ft P
.fi
La velocidad de cero baudios, \fBB0\fP,
se emplea para terminar la conexión. Si se especifica B0, las lineas
de control del módem no serán reconocidas como activas más.
Normalmente, esto desconectará la línea.
.\" is specified, the modem control lines shall no longer be asserted.
\fBCBAUDEX\fP es una máscara
para las velocidades tras aquéllas definidas en POSIX.1 (57600 y más).
Así, \fBB57600\fP & \fBCBAUDEX\fP es distinto de cero.
.LP
.B cfgetispeed()
devuelve la velocidad de entrada guardada en la estructura \fBtermios\fP.
.LP
.B cfsetispeed()
establece la velocidad de entrada guardada en la estructura
\fBtermios\fP a
.IR speed .
Si la velocidad de entrada se pone a cero, la velocidad de entrada
será igual a la de salida.
.LP
.B tcgetpgrp()
devuelve la ID. de grupo de proceso del grupo de proceso en segundo
plano, ó \-1 en caso de error.
.LP
.B tcsetpgrp()
establece la ID. de grupo de proceso a \fIpgrpid\fP.  \fIpgrpid\fP
debe ser el ID de un grupo de proceso en la misma sesión.
.SH "VALOR DEVUELTO"
.LP
.B cfgetispeed()
devuelve la velocidad de entrada guardada en la estructura
\fBtermios\fP.
.LP
.B cfgetospeed()
devuelve la velocidad de salida guardada en la estructura \fBtermios\fP.
.LP
.B tcgetpgrp()
devuelve la ID. de grupo de proceso del grupo de proceso en primer
plano, ó \-1 en caso de error.
.LP
Todas las otras funciones devuelven:
.IP 0
en caso de éxito,
.IP \-1
en caso de fallo, y ponen un valor en
.I errno
para indicar el error.
.SH "VÉASE TAMBIÉN"
\fBsetserial\fP(8)
