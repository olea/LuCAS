.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\" and 1999 by Bruno Haible (haible@clisp.cons.org)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 18:20:12 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Tue Jul 15 16:49:10 1997 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Sun Jul  4 14:52:16 1999 by Bruno Haible (haible@clisp.cons.org)
.\" Modified Tue Aug 24 17:11:01 1999 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Tue Feb  6 03:31:55 2001 by Andries Brouwer (aeb@cwi.nl)
.\"
.\" Translated into Spanish Sun Mar  8 21:08:20 CET 1998 by
.\"	Gerardo Aburruzaga García <gerardo.aburruzaga@uca.es>
.\" Translation revised Mon Aug 17 1998 by Juan Piernas <piernas@ditec.um.es>
.\" Translation revised Tue Apr 18 2000 by Juan Piernas <piernas@ditec.um.es>
.\" Traducción revisada por Miguel Pérez Ibars <mpi79470@alu.um.es> el 3-febrero-2005
.\"
.TH SETLOCALE 3  "4 julio 1999" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
setlocale \- establece la localización en curso
.SH SINOPSIS
.nf
.B #include <locale.h>
.sp
.BI "char *setlocale(int " categoria ", const char * " localizacion ");"
.fi
.SH DESCRIPCIÓN
La función
.B setlocale()
se emplea para establecer o saber la localización en curso del
programa.
.PP
Si
.I localizacion
no es
.BR NULL ,
la localización actual del programa se modifica según los argumentos.
El argumento
.I categoria
determina qué partes de la localización actual del programa se deben
modificar.
.TP
.B LC_ALL
para todas las partes de la localización.
.TP
.B LC_COLLATE
para la concordancia en expresiones regulares (determina el significado de
las expresiones de rango y de las clases de equivalencia) y la ordenación de
cadenas.
.TP
.B LC_CTYPE
para la concordancia en expresiones regulares, la clasificación de caracteres,
la conversión, la comparación sensible a mayúsculas/minúsculas y la funciones
de caracteres anchos.
.TP
.B LC_MESSAGES
para los mensajes del lenguaje natural que son localizables.
.TP
.B LC_MONETARY
para el formato monetario.
.TP
.B LC_NUMERIC
para el formato de números (tal como el carácter separador de decimales o el
separador de miles).
.TP
.B LC_TIME
para los formatos de tiempo y fecha.
.PP
El argumento
.I localización
es un puntero a una cadena de caracteres que contiene la configuración
necesaria de
.IR categoría .
Tal cadena es bien una constante bien conocida como "C" o "es_ES" (ver más
abajo) o una cadena opaca devuelta por otra llamada a 
.BR setlocale .
.PP
Si
.I localización
es
.BR """""" ,
cada parte de la colalización que debe ser modificada se configura según las
variables de entorno. Los detalles son dependientes de la implementación.
Para glibc, primero
.\" [This is false on my system - must check which library versions do this]
.\" if
.\" .I category
.\" is LC_MESSAGES, the environment variable LANGUAGE is inspected,
.\" then
se inspecciona la variable de entorno LC_ALL (sin tener en cuenta la
.IR categoría ),
a continuación la variable de entorno con el mismo nombre que la categoría
(LC_COLLATE, LC_CTYPE, LC_MESSAGES, LC_MONETARY, LC_NUMERIC, LC_TIME)
y, finalmente, la variable de entorno LANG.
Se usa la primera variable de entorno que exista.
Si su valor no es una especificación de localización válida, no se cambia la
localización y
.B setlocale
devuelve NULL.
.\" The environment variable LANGUAGE may contain several, colon-separated,
.\" locale names.
.PP
La localización
.B """C"""
o
.B """POSIX"""
es una localización portable. Su parte LC_CTYPE corresponde al conjunto de
caracteres ASCII de 7 bits.
.PP
Típicamente, un nombre de localización es de la forma
.IR lenguaje "[_" territorio "][." conjuntocaract "][@" modificador "],"
donde
.I lenguaje
es un código de lenguaje ISO 639,
.I territorio
es un código de país ISO 3166, y
.I conjuntocaract
es un conjunto de caracteres o un identificador de codificación como
.B "ISO-8859-1"
o
.BR "UTF-8" .
Para una lista de todas las localizaciones soportadas, pruebe "locale -a", cf.\&
.BR locale (1).
.PP
Si
.I localización
es
.BR NULL ,
sólo se consulta la localización actual, no se modifica.
.PP
Al comienzo del programa principal, se selecciona por omisión la localización
transportable
.BR """C""" .
Un programa puede hacerse transportable para todas las localizaciones
llamando a
.B setlocale(LC_ALL, """""")
tras el inicio del programa, empleando los valores devueltos por una
llamada a
.B localeconv()
para la información dependiente de la localización, utilizando las funciones
de caracteres anchos y multibyte para el procesamiento de texto si
.BR "MB_CUR_MAX > 1" ,
y utilizando
.BR strcoll() ", " wcscoll()
o 
.BR strxfrm() ", " wcsxfrm()
para comparar cadenas de caracteres.
.SH "VALOR DEVUELTO"
Una llamada con éxito a
.B setlocale()
devuelve una cadena de caracteres opaca que corresponde a la localización
establecida. Esta cadena puede ser alojada en almacenamiento estático.
La cadena devuelta es tal que una llamada subsiguiente con esta cadena
y su categoría asociada, restaurará esa parte de la localización del
proceso. La función devuelve
.B NULL
si la petición no puede ser satisfecha.

.SH "CONFORME A"
C ANSI, POSIX.1
.SH OBSERVACIONES
Linux (esto es, GNU libc) admite las localizaciones transportables
.BR """C""" " y " """POSIX""" .
En los viejos tiempos solía haber soporte para el código europeo
ISO Latin-1, localización 
.B """ISO-8859-1"""
(e.g. en libc-4.5.21 y libc-4.6.27), y la localización cirílica (rusa)
.B """KOI-8"""
(más precisamente, "koi-8r") (e.g. en libc-4.6.27),
de forma que tener una variable de ambiente LC_CTYPE=ISO-8859-1
ya era suficiente para que isprint() devolviera la respuesta correcta.
Hoy día los europeos (y americanos) no angloparlantes tienen que trabajar un
poquito más (N.T.: ¡qué raro! :-) y debe instalarse los ficheros reales de
localizaciones para su idioma. 
.SH "VÉASE TAMBIÉN"
.BR locale (1),
.BR localedef (1),
.BR strcoll (3),
.BR isalpha (3),
.BR localeconv (3),
.BR strftime (3),
.BR charsets (4),
.BR locale (7)
