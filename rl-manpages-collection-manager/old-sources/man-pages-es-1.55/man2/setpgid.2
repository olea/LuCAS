.\" Copyright (c) 1983, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpgrp.2	6.4 (Berkeley) 3/10/91
.\"
.\" Modified 1993-07-24 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1995-04-15 by Michael Chastain <mec@shell.portal.com>:
.\"   Added 'getpgid'.
.\" Modified 1996-07-21 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 1996-11-06 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 1999-09-02 by Michael Haardt <michael@moria.de>
.\" Modified 2002-01-18 by Michael Kerrisk <mtk16@ext.canterbury.ac.nz>
.\" Modified 2003-01-20 by Andries Brouwer <aeb@cwi.nl>
.\" Translated into Spanish Mon Jan 26 1998 by Gerardo Aburruzaga
.\" Garc√≠a <gerardo.aburruzaga@uca.es>
.\" Translation revised Mon Aug 17 1998 by Juan Piernas <piernas@ditec.um.es>
.\" Translation revised Sun Apr 16 2000 by Juan Piernas <piernas@ditec.um.es>
.\" Revisado por Miguel PÈrez Ibars <mpi79470@alu.um.es> el 1-diciembre-2004
.\"
.TH SETPGID 2 "20 enero 2003" "Linux" "Manual del Programador de Linux"
.SH NOMBRE
setpgid, getpgid, setpgrp, getpgrp \- obtener/establecer el grupo de
procesos
.SH SINOPSIS
.B #include <unistd.h>
.sp
.BI "int setpgid(pid_t " pid ", pid_t " pgid );
.br
.BI "pid_t getpgid(pid_t " pid );
.br
.B int setpgrp(void);
.br
.B pid_t getpgrp(void);
.SH DESCRIPCI√ìN
.B setpgid
pone el ID del grupo del proceso especificado por 
.I pid
a
.IR pgid .
Si
.I pid
es cero, se emplea el PID del proceso en curso. Si
.I pgid
es cero, se emplea el PID del proceso especificado por
.IR pid .
Si \fBsetpgid\fP se utiliza para mover un proceso de un grupo de procesos a
otro (como hacen algunos shells cuando crean tuber√≠as), ambos grupos de
procesos deben formar parte de la misma sesi√≥n. En este caso, \fIpgid\fP
especifica el grupo de procesos existente en el que vamos a entrar, y
el ID de sesi√≥n de ese grupo de procesos debe coincidir con el ID de sesi√≥n
del proceso que quiere entrar.

.B getpgid
devuelve el ID del grupo de proceso del especificado por
.IR pid .
Si
.I pid
es cero, se emplea el PID del proceso en curso.

La llamada
.B setpgrp()
es equivalente a
.BR setpgid(0,0) .

De manera similar
.B getpgrp()
es equivalente a
.BR getpgid(0) .
Cada grupo de procesos es miembro de una sesi√≥n y cada proceso es miembro de
la sesi√≥n de la que su grupo de procesos es miembro.

Los grupos de proceso se emplean para la distribuci√≥n de se√±ales, y
por las terminales para arbitrar peticiones para su entrada: los
procesos que tienen el mismo grupo de proceso que la terminal son en
primer plano y pueden leer, mientras que otros se bloquear√°n con una
se√±al si intentan leer.

Estas llamadas se usan pues por programas como
.BR csh (1)
para crear grupos de proceso cuando implementan el control de trabajos.
Las llamadas
.B TIOCGPGRP
y
.B TIOCSPGRP
descritas en
.BR termios (3)
se emplean para obtener/poner el grupo de proceso de la terminal de control.

Si una sesi√≥n posee una terminal controladora, CLOCAL no est√°
configurada y si se cierra la sesi√≥n, entonces se enviar√° una se√±al SIGHUP al
lider de sesi√≥n. Si el lider de sesi√≥n existe, se enviar√° la se√±al SIGHUP a
cada proceso del grupo de procesos en primer plano de la terminal
controladora.

Si la terminaci√≥n del proceso hace que un grupo de procesos se quede
hu√©rfano y si cualquier miembro del grupo de procesos que se acaba de quedar
hu√©rfano se detiene, entonces se enviar√° una se√±al SIGHUP seguida de
una se√±al SIGCONT a cada proceso en el grupo de procesos que se acaba de
quedar hu√©rfano.

.SH "VALOR DEVUELTO"
En caso de √©xito,
.BR setpgid " y " setpgrp
devuelven cero. En caso de error. devuelven \-1 y ponen un valor
apropiado en \fIerrno\fP.

.B getpgid
devuelve un grupo de proceso si acaba bien; \-1 en caso de error, y 
pone un valor apropiado en \fIerrno\fP.

.B getpgrp
siempre devuelve el grupo de proceso actual.
.SH ERRORES
.TP
.B EINVAL
.I pgid
es menor que 0
(\fBsetpgid\fP, \fBsetpgrp\fP).
.TP
.B EACCES
Se intentÛ cambiar el identificador de grupo de procesos
de uno de los hijos del proceso invocador y el proceso hijo
ya habÌa realizado una llamada a \fBexecve\fP
(\fBsetpgid\fP, \fBsetpgrp\fP).
.TP
.B EPERM
Se intentÛ cambiar el grupo de procesos de un proceso
a otro grupo en una sesiÛn diferente, o cambiar el identificador
de grupo de procesos de uno de los hijos del proceso invocador
estando el proceso hijo en una sesiÛn diferente, o cambiar el
identificador de grupo de procesos de un lÌder de sesiÛn
(\fBsetpgid\fP, \fBsetpgrp\fP).
.TP
.B ESRCH
Para
.BR getpgid :
.I pid
no concuerda con ning√∫n proceso.
Para
.BR setpgid :
.I pid
no se corresponde con el proceso actual ni con uno de sus hijos.
.SH "CONFORME A"
Las funciones
.B setpgid
y
.B getpgrp
siguen el est√°ndar POSIX.1.
La funci√≥n
.B setpgrp
es de BSD 4.2.
La funci√≥n
.B getpgid
conforma con SVr4.
.SH OBSERVACIONES
POSIX tomÛ
.B setpgid
de la funciÛn BSD
.BR setpgrp .
SysV tambiÈn tiene una funciÛn con el mismo nombre, pero es idÈntica a
.BR setsid (2).
.LP
Para obtener los prototipos bajo glibc, debe definir tanto _XOPEN_SOURCE como
_XOPEN_SOURCE_EXTENDED, o usar "#define _XOPEN_SOURCE \fIn\fP"
para alg˙n entero \fIn\fP mayor o igual a 500.
.SH "V√âASE TAMBI√âN"
.BR getuid (2),
.BR setsid (2),
.BR tcgetpgrp (3),
.BR tcsetpgrp (3),
.BR termios (3)
