.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 2003 Andries E. Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Traducido por Miguel Pérez Ibars <mpi79470@alu.um.es> el 5-julio-2004
.\"
.TH ALLOC_HUGEPAGES 2 "2 febrero 2003" "Linux 2.5.36" "Manual del Programador de Linux"
.SH NOMBRE
alloc_hugepages, free_hugepages \- asigna o libera páginas de gran tamaño
.SH SINOPSIS
.BI "void *alloc_hugepages(int " key ", void *" addr ", size_t " len ", int " prot ", int " flag );
.\" asmlinkage unsigned long sys_alloc_hugepages(int key, unsigned long addr,
.\" unsigned long len, int prot, int flag);
.sp
.BI "int free_hugepages(void *" addr );
.\" asmlinkage int sys_free_hugepages(unsigned long addr);
.SH DESCRIPCIÓN
Las llamadas al sistema
.B alloc_hugepages
y
.B free_hugepages
fueron introducidas en Linux 2.5.36 y eliminadas de nuevo en la versión 2.5.54.
Existían sólo para arquitecturas i386 e ia64 (cuando se encontraba la opción CONFIG_HUGETLB_PAGE).
En Linux 2.4.20 existen los números de las llamadas al sistemas, pero las llamadas devuelven
ENOSYS.
.LP
En la arquitectura i386 el hardware de gestión de la memoria maneja páginas
ordinarias (4 KiB) y páginas grandes (2 o 4 MiB). De manera similar, la arquitectura
ia64 maneja páginas grandes de distintos tamaños. Estas llamadas al sistema sirven 
para ubicar páginas de gran tamaño en la memoria del proceso o para liberarlas.
Las páginas grandes están fijas en memoria, y no son intercambiadas (swapped).
.LP
El parámetro
.I key
es un identificador. Cuando es cero las páginas son privadas, y
no son heredadas por los hijos.
Cuando es positivo las páginas son compartidas con otras aplicaciones usando
el mismo identificador
.IR key ,
y heredadas por los procesos hijo.
.LP
El parámetro
.I addr
de
.B free_hugepages()
indica qué página está siendo liberada - es el valor devuelto por
una llamada a
.BR alloc_hugepages() .
(La memoria es realmente liberada por primera vez cuando todos los usuarios la
han liberado.)
El parámetro
.I addr
de
.B alloc_hugepages()
es una sugerencia, que el núcleo puede o no puede tomar.
Las direcciones deben estar debidamente alineadas.
.LP
El parámetro
.I len
es la longitud del segmento requerido. Debe ser un múltiplo
del tamaño de la página grande.
.LP
El parámetro
.I prot
especifica la protección de memoria del segmento.
Puede ser PROT_READ, PROT_WRITE, PROT_EXEC.
.LP
El parámetro
.I flag
es ignorado, a menos que
.I key
sea positivo. En tal caso, si
.I flag
es IPC_CREAT, se crea un nuevo segmento de página grande cuando
no existe ninguno con el identificador dado. Si esta opción no está
activa, se devuelve ENOENT cuando no existe tal segmento.
.IR 
.SH "VALOR DEVUELTO"
En caso de éxito,
.B alloc_hugepages
devuelve la dirección virtual asignada, y
.B free_hugepages
devuelve cero. En caso de error, se devuelve \-1, y se modifica
.I errno
con el valor apropiado.
.SH ERRORES
.TP
.B ENOSYS
La llamada al sistema no está soportada por este núcleo.
.SH "CONFORME A"
Esta llamadas existían sólo en Linux 2.5.36 - 2.5.54.
Estas llamadas son específicas de Linux para procesadores Intel, y no
deberían ser usadas en programas portables. De hecho, los números de las
llamadas al sistema están marcados para ser reutilizados, por lo que los
programas que las usen pueden comportarse de manera aleatoria con núcleos futuros.
.SH FICHEROS
.I /proc/sys/vm/nr_hugepages
Número de páginas hugetlb configuradas.
Puede ser leído y escrito.
.LP
.I /proc/meminfo
Proporciona información del número de páginas hugetlb configuradas y de su
tamaño en las tres variables HugePages_Total, HugePages_Free, Hugepagesize.
.SH OBSERVACIONES
Estas llamadas al sistema ya no existen. En la actualidad puede usarse el sistema
de ficheros hugetlbfs en su lugar. La memoria contenida en las páginas grandes
(si la CPU las soporta) se obtiene ubicando ficheros en este sistema de ficheros
virtual con mmap.
.LP
El número máximo de páginas grandes puede especificarse usando
el parámetro
.B hugepages=
en el arranque.

.\" requires CONFIG_HUGETLB_PAGE (under "Processor type and features")
.\" and CONFIG_HUGETLBFS (under "Filesystems").
.\" mount -t hugetlbfs hugetlbfs /huge
.\" SHM_HUGETLB

