.\" Copyright (C) 1996 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Written 11 April 1996 by Andries Brouwer <aeb@cwi.nl>
.\" 960412: Added comments from Stephen Tweedie
.\" Modified Tue Oct 22 22:28:41 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Mon Jan  5 20:31:04 1998 by aeb.
.\" Translated into Spanish Wed Feb 18 17:01:53 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\" Translation revised Mon Aug 17 1998 by Juan Piernas <piernas@ditec.um.es>
.\"
.TH SYSCTL 2 "11 abril 1996" "Linux 1.3.85" "Manual del Programador de Linux"
.SH NOMBRE
sysctl \- lee/escribe parámetros del sistema
.SH SINOPSIS
.B #include <unistd.h>
.sp
.B #include <linux/unistd.h>
.sp
.B #include <linux/sysctl.h>
.sp
.B _syscall1(int, _sysctl, struct __sysctl_args *, args);
.sp
.BI "int _sysctl(struct __sysctl_args *" args );
.SH DESCRIPCIÓN
La llamada
.B _sysctl
lee o escribe parámetros del núcleo. Por ejemplo, el nombre del
computador, o el número máximo de ficheros abiertos. El argumento
tiene la forma
.PP
.nf
struct __sysctl_args {
        int *name;        /* vector describiendo la variable */
        int nlen;         /* longitud de este vector */
        void *oldval;     /* 0 ó dir. donde guardar valor antiguo */
        size_t *oldlenp;  /* sitio disponible para el valor antiguo,
	               sobrescrito por el tamaño real de dicho valor */
        void *newval;     /* 0 ó dirección del nuevo valor */
        size_t newlen;    /* tamaño del nuevo valor */
};
.fi
.PP
Esta llamada efectúa una búsqueda en una estructura de árbol,
posiblemente parecido a un árbol de directorios bajo
.BR /proc/sys ,
y si lo pedido se encuentra, llama a alguna rutina apropiada para leer
o modificar el valor.

.SH EJEMPLO
.nf
#include <linux/unistd.h>
#include <linux/types.h>
#include <linux/sysctl.h>

_syscall1(int, _sysctl, struct __sysctl_args *, args);
int sysctl(int *name, int nlen, void *oldval, size_t *oldlenp,
           void *newval, size_t newlen)
{
        struct __sysctl_args args={name,nlen,oldval,oldlenp,newval,newlen};
        return _sysctl(&args);
}

#define SIZE(x) sizeof(x)/sizeof(x[0])
#define OSNAMESZ 100

char osname[OSNAMESZ];
int osnamelth;
int name[] = { CTL_KERN, KERN_OSTYPE };

main(){
        osnamelth = sizeof(osname);
        if (sysctl(name, SIZE(name), osname, &osnamelth, 0, 0))
                perror("sysctl");
        else
                printf("Esta máquina ejecuta %*s\en", osnamelth, osname);
        return 0;
}
.fi

.SH "VALOR DEVUELTO"
Tras una terminación exitosa,
.B _sysctl
devuelve 0. En otro caso, se devuelve el valor \-1 y se pone en
.I errno
un valor que indica el error.
.SH ERRORES
.TP
.B ENOTDIR
.I name
no se ha encontrado.
.TP
.B EPERM
No había permiso de paso para uno de los `directorios' encontrados, o
no había permiso de lectura donde
.I oldval
era no-cero, o no había permiso de escritura donde
.I newval
era no-cero.
.TP
.B EFAULT
La llamada pidió el valor anterior poniendo
.I oldval
como no NULL, pero se permitió un espacio cero en
.IR oldlenp .
.SH "CONFORME A"
Esta llamada es específica de Linux, y no debería emplearse en
programas pretendidamente transportables.
Una llamada
.B sysctl
ha estado presente en Linux desde la versión 1.3.57. Se originó en
4.4BSD. Sólo Linux tiene el espejo
.IR /proc/sys ,
y los esquemas de nomenclatura de objetos difieren entre Linux y BSD
4.4, pero la declaración de la función
.BR sysctl (2)
es la misma en ambos.
.SH FALLOS
Los nombres de los objetos varían entre versiones del núcleo.
ESTO HACE QUE ESTA LLAMADA AL SISTEMA SEA INÚTIL PARA LAS APLICACIONES.
Use en su lugar la interfaz
.IR /proc/sys .
.br
No todos los objetos disponibles están correctamente documentados.
.br
Aún no es posible cambiar el sistema operativo escribiendo en
.IR /proc/sys/kernel/ostype .
:-)
.SH "VÉASE TAMBIÉN"
.BR proc (5)
