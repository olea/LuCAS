.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 18:34:44 1993 by Rik Faith (faith@cs.unc.edu)
.\" Merged readv.[23], 2002-10-17, aeb
.\" Revisado por Miguel Pérez Ibars <mpi79470@alu.um.es> el 6-noviembre-2004
.\"
.TH READV 2  "17 octubre 2002" "" "Manual del Programador de Linux"
.SH NOMBRE
readv, writev \- leen o escriben datos en múltiples buffers
.SH SINOPSIS
.nf
.B #include <sys/uio.h>
.sp
.BI "ssize_t readv(int " fd ", const struct iovec *" vector ", int " count );
.sp
.BI "ssize_t writev(int " fd ", const struct iovec *" vector ", int " count );
.fi
.SH DESCRIPCIÓN
La función
.B readv()
lee
.I count
bloques del fichero asociado con el descriptor de fichero
.I fd
en múltiples buffers descritos por
.IR vector .
.PP
La función
.B writev()
escribe como máximo
.I count
bloques descritos por
.I vector
en el fichero asociado con el descriptor de fichero
.IR fd .
.PP
El puntero
.I vector
apunta a una estructura
.B iovec
definida en
.B <sys/uio.h>
como
.PP
.br
.nf
.in 10
struct iovec {
.in 14
void *iov_base;   /* Dirección de comienzo */
size_t iov_len;   /* Número de bytes */
.in 10
};
.fi
.PP
Los buffers son procesados en el orden especificado.
.PP
La función
.B readv()
trabaja exactamente igual que
.BR read (2)
salvo que rellena múltiples buffers.
.PP
La función
.B writev()
trabaja exactamente igual que
.BR write (2)
salvo que escribe múltiples buffers.
.PP
.SH "VALOR DEVUELTO"
En caso de éxito, la función
.B readv()
devuelve el número de bytes leídos; la función
.B writev()
devuelve el número de bytes escritos.
En caso de error, se devuelve \-1, y se modifica \fIerrno\fP con un valor apropiado.
.SH ERRORES
Los errores son los mismos que para
.BR read (2)
y
.BR write (2).
Adicionalmente se define el siguiente error.
.TP
.B EINVAL
La suma de los valores
.I iov_len
provoca un desbordamiento por arriba en un valor
.B ssize_t.
O bien,
el contador \fIcount\fR es cero o mayor que \fBMAX_IOVEC\fR.
.SH "CONFORME A"
4.4BSD (las funciones
.B readv
y
.B writev
aparecieron por primera vez en BSD 4.2), Unix98, POSIX 1003.1-2001.
La biblioteca libc5 de Linux usaba \fBsize_t\fR como tipo del parámetro \fIcount\fR,
e \fBint\fP como tipo devuelto por estas funciones.
.\" Las llamadas al sistma readv/writev tenían fallos antes de la versión 1.3.40 de Linux
.\" (Dice release.libc.)
.SH FALLOS
No es recomendable mezclar llamadas a funciones como
.B readv()
o
.BR writev() ,
que trabajan sobre descriptores de fichero, con funciones de la biblioteca
stdio; los resultados serán indefinidos y probablemente indeseados.
.SH "VÉASE TAMBIÉN"
.BR read (2),
.BR write (2)
