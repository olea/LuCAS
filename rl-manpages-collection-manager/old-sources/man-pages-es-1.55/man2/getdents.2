.\" Copyright 1995 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Written 11 June 1995 by Andries Brouwer (aeb@cwi.nl)
.\" Modified 22 July 1995 by Michael Chastain (mec@duracef.shout.net):
.\"   Derived from 'readdir.2'.
.\" Modified Tue Oct 22 08:11:14 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.\"
.\" Translated 22 Dec 1995 Miguel A. Sepulveda (miguel@typhoon.harvard.edu)
.\" Modified 1 Jul 1996 Miguel A. Sepulveda (angel@vivaldi.princeton.edu)
.\" Translation revised on Wed Apr 29 11:50:37 CEST 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\"
.TH GETDENTS 2  "1 julio 1996" "Linux 1.3.6" "Manual del Programador de Linux"
.SH NOMBRE
getdents \- obtiene las entradas de un directorio
.SH SINOPSIS
.nf
.B #include <unistd.h>
.B #include <linux/types.h>
.B #include <linux/dirent.h>
.B #include <linux/unistd.h>
.sp
.B _syscall3(int, getdents, uint, fd, struct dirent *, dirp, uint, count);
.sp
.BI "int getdents(unsigned int " fd ", struct dirent *" dirp ", unsigned int " count );
.fi
.SH DESCRIPCIÓN
.B getdents
lee varias estructuras
.I dirent
del directorio señalado por el puntero
.I fd
en el área de memoria señalada por 
.IR dirp .
El parámetro  
.I count
es el tamaño del área de memoria.
.PP
La  estructura
.I dirent
se declara de la siguente manera:
.PP
.RS
.nf
struct dirent
{
    long d_ino;               /* número de nodo-i */
    off_t d_off;              /* desplazamiento al próximo \fIdirent\fP */
    unsigned short d_reclen;  /* longitud de este \fIdirent\fP */
    char d_name [NAME_MAX+1]; /* Nombre del fichero (terminado en NUL) */
}
.fi
.RE
.PP
.I d_ino
es un número de nodo-i.
.I d_off
es la distancia desde el principio del directorio al comienzo del próximo
.IR dirent .
.I d_reclen
es el tamaño de todo el   
.IR dirent.
.I d_name
es un nombre de fichero terminado en NUL (el carácter de código 0).
.PP
Esta llamada sustituye a
.BR readdir (2).
.SH "VALOR DEVUELTO"
En caso de éxito de regresa el número de bytes leídos.
Si se llega al final del directorio se devuelve 0.
En caso de error se devuelve \-1, y en la variable
.I errno
se pone un valor apropiado.
.SH "ERRORES"
.TP
.B EBADF
Descriptor de fichero inválido
.IR fd .
.TP
.B EFAULT
El argumento apunta afuera del espacio de direcciones del proceso
llamador. 
.TP
.B EINVAL
El búfer del resultado es demasiado pequeño.
.TP
.B ENOENT
El directorio no existe.
.TP
.B ENOTDIR
El descriptor de fichero no se refiere a un directorio.
.SH "CONFORME A"
SVr4, SVID.  SVr4 documenta las condiciones de error adicionales
ENOLINK y EIO.
.SH "VÉASE TAMBIÉN"
.BR readdir (2),
.BR readdir (3).
