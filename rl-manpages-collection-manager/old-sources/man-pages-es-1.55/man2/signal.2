.\" Copyright (c) 2000 Andries Brouwer <aeb@cwi.nl>
.\" based on work by Rik Faith <faith@cs.unc.edu>
.\" and Mike Battersby <mike@starbug.apana.org.au>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Revisado por Miguel Pérez Ibars <mpi79470@alu.um.es> el 1-diciembre-2004
.\"
.TH SIGNAL 2 "28 abril 2000" "Linux 2.2" "Manual del Programador de Linux"
.SH NOMBRE
signal \- manejo de señales en ANSI C
.SH SINOPSIS
.B #include <signal.h>
.sp
.B typedef void (*sighandler_t)(int);
.sp
.BI "sighandler_t signal(int " signum ", sighandler_t " handler );
.SH DESCRIPCIÓN
La llamada al sistema
.BR signal ()
instala un nuevo manejador de señales para la señal con número
.IR signum .
El manejador de señales queda establecido a
.I sighandler
que puede ser una función especificada por el usuario o bien
.B SIG_IGN
o
.BR SIG_DFL .

Cuando llega una señal con número
.I signum
ocurre lo siguiente.
Si el manejador correspondiente está establecido a
.BR SIG_IGN ,
la señal es ignorada.
Si el manejador está establecido a
.BR SIG_DFL ,
se realiza la acción por defecto asociada a la señal (vea
.BR signal (7)).
Finalmente, si el manejador está establecido a una función
.I sighandler
lo primero que se hace es o bien restablecer el manejador
a SIG_DFL o un bloqueo de la señal que depende de la implementación,
invocando después a
.I sighandler
con el argumento
.IR signum .

Usar una función manejadora de señales para una señal
se llama "atrapar la señal".
Las señales
.B SIGKILL
y
.B SIGSTOP
no pueden ser atrapadas ni ignoradas.

.SH "VALOR DEVUELTO"
La función
.BR signal ()
devuelve el valor previo del manejador de señales, o
.B SIG_ERR
en caso de error.

.SH PORTABILIDAD
La función
.BR signal ()
original de Unix restablece el manejador a SIG_DFL, y System V
(y el núcleo de Linux y libc4,5) hace lo mismo.
Por otra parte, BSD no restablece el manejador, sino que bloquea
nuevas instancias de la señal para que no ocurran durante una llamada del manejador.
La biblioteca glibc2 sigue el comportamiento de BSD.

Si en un sistema con libc5 se incluye
.B "<bsd/signal.h>"
en lugar de
.B "<signal.h>"
entonces se redefine
.B signal
como
.B __bsd_signal
y signal tiene la semántica de BSD. Ésto no se recomienda.

Si en un sistema con glibc2 se define una macro de comprobación 
de características como
.B _XOPEN_SOURCE
o usa una función
.B sysv_signal
separada, se obtiene el comportamiento típico. Ésto no se recomienda.

Tratar de cambiar la semántica de esta llamada usando
defines e includes no es una buena idea. Es mejor evitar
.B signal
completamente, y usar
.BR sigaction (2)
en su lugar.

.SH OBSERVACIONES
Según POSIX, el comportamiento de un proceso es indefinido después de
ignorar una señal
.BR SIGFPE ,
.BR SIGILL ,
o
.B SIGSEGV
que no fue generada por las funciones
.BR kill (2)
o
.BR raise (3).
La división entera por cero tiene un resultado indefinido.
En algunas arquitecturas generará una señal
.B SIGFPE.
(También dividir el entero más negativo por \-1 puede generar
.BR SIGFPE .)
Ignorar esta señal puede llevar a un bucle infinito.
.PP
Según POSIX (3.3.1.3) no se especifica qué ocurre cuando
la señal
.B SIGCHLD
es puesta a
.BR SIG_IGN .
Aquí los comportamientos de BSD y SYSV difieren, provocando que
el software BSD que establece la acción para
.B SIGCHLD
en
.B SIG_IGN
falle sobre Linux.
.PP
El uso de
.B sighandler_t
es una extensión de GNU.
Varias versiones de libc predefinen este tipo; libc4 y libc5 definen
.IR SignalHandler ,
glibc define
.I sig_t
y, cuando
.B _GNU_SOURCE
está definida, también
.IR sighandler_t .
.SH "CONFORME A"
ANSI C

.SH "VÉASE TAMBIÉN"
.BR kill (1),
.BR kill (2),
.BR killpg (2),
.BR pause (2),
.BR raise (3),
.BR sigaction (2),
.BR signal (7),
.BR sigsetops (3),
.BR sigvec (2),
.BR alarm (2)
