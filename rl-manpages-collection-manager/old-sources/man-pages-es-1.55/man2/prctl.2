.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 1998 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Thu Nov 11 04:19:42 MET 1999, aeb: added PR_GET_PDEATHSIG
.\" Modified 27 Jun 02, Michael Kerrisk
.\" 	Added PR_SET_DUMPABLE, PR_GET_DUMPABLE, 
.\"	PR_SET_KEEPCAPS, PR_GET_KEEPCAPS
.\"
.\" FIXME: The following (applicable only on IA-64) are not currently
.\" described: PR_SET_UNALIGN, PR_GET_UNALIGN, PR_SET_FPEMU, PR_GET_FPEMU
.\"
.\" Translated 05 Sep 1998 by Carlos Costa Portela (c.c.portela@ieee.org)
.\" Translation revised Sat Jan  8 2000 by Juan Piernas <piernas@ditec.um.es>
.\" Revisado por Miguel Pérez Ibars <mpi79470@alu.um.es> el 6-noviembre-2004
.\"
.TH PRCTL 2 "27 junio 2002" "Linux 2.4.18" "Manual del Programador de Linux"
.SH NOMBRE
prctl \- operaciones sobre un proceso
.SH SINOPSIS
.B #include <sys/prctl.h>
.sp
.BI "int prctl(int " option ", unsigned long " arg2 ", unsigned long " arg3
.BI ", unsigned long " arg4 ", unsigned long " arg5 );
.SH DESCRIPCIÓN
.B prctl
es llamada con un primer argumento especificando qué hacer (con los valores
definidos en <\fIlinux/prctl.h\fP>) y con más parámetros cuyo significado
depende del primero. El primer argumento puede ser
.TP
.B PR_SET_PDEATHSIG
(desde Linux 2.1.57)
Establece la señal de terminación del proceso padre del proceso actual a
\fIarg2\fP (un valor de señal en el rango 1..maxsig, o cero para desactivar).
Ésta es la señal que el proceso actual recibirá cuando su padre muera. Este
valor se desactiva tras un fork().
.TP
.B PR_GET_PDEATHSIG
(desde Linux 2.3.15)
Almacena el valor actual de la señal de terminación del proceso padre en
el argumento (int *) \fIarg2\fP.
.TP
.B PR_SET_DUMPABLE
(desde Linux 2.4)
Establece el estado de la bandera que determina si se producen volcados de memoria
(core dumps) en la notificación de una señal cuyo comportamiento por defecto es
producir un volcado de memoria.
(Normalmente esta bandera se activa para un proceso por defecto, pero es puesta
a cero cuando un programa con el bit set-UID o set-GID es ejecutado y también por varias
llamadas al sistema que manipulan los valores de UID y GID de los procesos).
.I arg2
debe ser o bien 0 (el proceso no admite volcados de memoria) ó 1 (el proceso admite volcados de memoria).
.TP
.B PR_GET_DUMPABLE
(desde Linux 2.4)
Devuelve (como resultado de la función) el estado actual de la bandera
de volcado del proceso invocador.
.TP
.B PR_SET_KEEPCAPS
Establece el estado de la bandera "mantener capacidades" del proceso,
la cual determina si los conjuntos de capacidades efectivas y
permitidas del proceso se borran o no cuando los identificadores de
usuario del proceso cambian de tal manera que todos los
identificadores de usuario de los conjuntos real, efectivo y salvado
toman un valor distinto de cero cuando al menos uno de ellos
previamente tenía el valor 0.
(Por omisión, estos conjuntos de credenciales se borran).
.I arg2
debe ser o bien 0 (las capacidades se ponen a cero) ó 1 (las
capacidades se mantienen).
.TP
.B PR_GET_KEEPCAPS
Devuelve (como resultado de la función) el estado actual de la bandera
"mantener capacidades" del proceso invocador.
.SH "VALOR DEVUELTO"
.B PR_GET_DUMPABLE
y
.B PR_GET_KEEPCAPS
devuelven 0 ó 1 en caso de éxito.
Todos los demás valores
.I option
devuelven 0 en caso de éxito.
En caso de error, se devuelve \-1, y
.I errno
toma el valor adecuado.
.SH ERRORES
.TP
.B EINVAL
El valor de
.I option
no se reconoce, o es
.B PR_SET_PDEATHSIG
y
.I arg2
no es cero ni un número de señal.
.SH "CONFORME A"
Esta llamada es específica de Linux.
IRIX tiene una llamada al sistema ptctl (también introducida en Linux 2.1.44
como irix_prctl en la arquitectura MIPS),
con prototipo
.sp
.BI "ptrdiff_t prctl(int " option ", int " arg2 ", int " arg3 );
.sp
y opciones para obtener el máximo número de procesos por usuario, el
máximo número de procesadores que el proceso invocador puede usar, conocer si un
proceso concreto está actualmente bloqueado, obtener o activar el
tamaño de pila máximo, etc., etc.
.SH DISPONIBILIDAD
La llamada al sistema ptctl() fue introducida en Linux 2.1.57.
No hay función de biblioteca ptctl() todavía.
.SH "VÉASE TAMBIÉN"
.BR signal (2)
