.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) Tom Bjorkholm & Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" 1996-04-01 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written
.\" 1996-04-10 Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"            revision
.\"
.TH RR_GET_INTERVAL 2 "1996-04-10" "Linux 1.3.81" "Linux Programmer's Manual"
.SH NAME
sched_rr_get_interval  \- get the SCHED_RR interval for the named process
.SH SYNOPSIS
.B #include <sched.h>
.sp
\fBint sched_rr_get_interval(pid_t \fIpid\fB, struct timespec *\fItp\fB);
.sp
.nf
.ta 4n 12n 24n
\fBstruct timespec {
	time_t	tv_sec;	/* seconds */
	long	tv_nsec;	/* nanoseconds */
};
.ta
.fi
.SH DESCRIPTION
.B sched_rr_get_interval 
writes into the \fItimespec\fR structure pointed to by \fItp\fR the
round robin time quantum for the process identified by \fIpid\fR. If
\fIpid\fR is zero, the time quantum for the calling process is written
into *\fItp\fR. The identified process should be running under the
.I SCHED_RR 
scheduling policy.

The round robin time quantum value is not alterable under Linux
1.3.81.

POSIX systems on which
.B sched_rr_get_interval
is available define
.I _POSIX_PRIORITY_SCHEDULING
in <unistd.h>.

.SH RETURN VALUE
On success,
.B sched_rr_get_interval
returns 0.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B ESRCH
The process whose ID is \fIpid\fR could not be found.
.TP
.B ENOSYS
The system call is not yet implemented.
.SH "CONFORMING TO"
POSIX.1b (formerly POSIX.4)
.SH BUGS
As of Linux 1.3.81 \fBsched_rr_get_interval\fR returns with error
ENOSYS, because SCHED_RR has not yet been fully implemented and tested
properly.
.SH SEE ALSO
.BR sched_setscheduler (2) 
has a description of the Linux scheduling scheme.
.PP
.I Programming for the real world \- POSIX.4
by Bill O. Gallmeister, O'Reilly & Associates, Inc., ISBN 1-56592-074-0
.br
.I IEEE Std 1003.1b-1993
(POSIX.1b standard, formerly POSIX.4)
.br
.I ISO/IEC 9945-1:1996
