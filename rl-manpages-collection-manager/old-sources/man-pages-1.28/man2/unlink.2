.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Sat Jul 24 13:00:50 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Sun Sep  8 18:59:01 1996 by aeb following remarks by
.\"     Arnt Gulbrandsen <agulbra@troll.no>
.\" Modified Fri Jan 31 23:49:15 1997 by Eric S. Raymond <esr@thyrsus.com>
.\"
.TH UNLINK 2 "21 August 1997" "Linux 2.0.30" "Linux Programmer's Manual"
.SH NAME
unlink \- delete a name and possibly the file it refers to
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int unlink(const char *" pathname );
.SH DESCRIPTION
.B unlink
deletes a name from the filesystem. If that name was the
last link to a file and no processes have the file open the file is
deleted and the space it was using is made available for reuse.

If the name was the last link to a file but any processes still have
the file open the file will remain in existence until the last file
descriptor referring to it is closed.

If the name referred to a symbolic link the link is removed.

If the name referred to a socket, fifo or device the name for it is
removed but processes which have the object open may continue to use
it.
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EACCES
Write access to the directory containing
.I pathname
is not allowed for the process's effective uid, or one of the
directories in
.IR pathname
did not allow search (execute) permission.
.TP
.BR EPERM " or " EACCES
The directory containing
.I pathname
has the sticky-bit
.RB ( S_ISVTX )
set and the process's effective uid is neither the uid of the file to
be deleted nor that of the directory containing it.
.TP
.B EPERM
The file
.I pathname
is a directory.
.TP
.B EFAULT
.I pathname
points outside your accessible address space.
.TP
.B ENAMETOOLONG
.IR pathname " was too long."
.TP
.B ENOENT
A directory component in
.I pathname
does not exist or is a dangling symbolic link.
.TP
.B ENOTDIR
A component used as a directory in
.I pathname
is not, in fact, a directory.
.TP
.B EISDIR
.I pathname
refers to a directory.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B EROFS
.I pathname
refers to a file on a read-only filesystem.
.TP
.B ELOOP
Too many symbolic links were encountered in translating
.IR pathname .
.TP
.B EIO
An I/O error occurred.
.SH "CONFORMING TO"
SVr4, SVID, POSIX, X/OPEN, 4.3BSD.  SVr4 documents additional error
conditions EBUSY, EINTR, EMULTIHOP, ETXTBUSY, ENOLINK.
.SH BUGS
Infelicities in the protocol underlying NFS can cause the unexpected
disappearance of files which are still being used.
.SH "SEE ALSO"
.BR link (2),
.BR rename (2),
.BR open (2),
.BR rmdir (2),
.BR mknod (2),
.BR mkfifo (3),
.BR remove (3),
.BR rm (1)
