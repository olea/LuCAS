.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 21:27:01 1993 by Rik Faith (faith@cs.unc.edu)
.TH CLOCK 3  "April 21, 1993" "GNU" "Linux Programmer's Manual"
.SH NAME
clock \- Determine processor time
.SH SYNOPSIS
.nf
.B #include <time.h>
.sp
.B clock_t clock(void);
.fi
.SH DESCRIPTION
The
.B clock()
function returns an approximation of processor time used by the program.
.SH "RETURN VALUE"
The value returned is the CPU time used so far as a
.BR clock_t ;
to get the number of seconds used, divide by
.BR CLOCKS_PER_SEC .
.SH "CONFORMING TO"
ANSI C.
POSIX requires that CLOCKS_PER_SEC equals 1000000 independent
of the actual resolution.
.SH "BUGS"
The C standard allows for arbitrary values at the start of the program; take
the difference between the value returned from a call to
.B clock()
at the start of the program and the end to get maximum portability.
.PP
Note that the time can wrap around.  On a 32bit system where
CLOCKS_PER_SEC equals 1000000 this function will return the same
value approximately every 72 minutes.
.PP
The
.B times()
function call returns more information.
.SH "SEE ALSO"
.BR times (2)
