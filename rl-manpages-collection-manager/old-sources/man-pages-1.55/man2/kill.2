.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (michael@moria.de)
.\" Modified by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\" Modified Fri Jul 23 21:51:36 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Jul 25 10:53:24 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Wed Nov 01 18:56:43 1995 by Michael Haardt
.\"  (michael@cantor.informatik.rwth-aachen.de)
.\" Modified Sun Apr 14 17:04:32 1996 by Andries Brouwer (aeb@cwi.nl)
.\"  [added some polishing contributed by Mike Battersby (mib@deakin.edu.au)]
.\" Modified Sun Jul 21 21:25:26 1996 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Fri Jan 17 23:49:46 1997 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Tue Dec 18 10:53:02 2001 by Andries Brouwer (aeb@cwi.nl)
.\" Modified, 24 Jul 2002, Michael Kerrisk <mtk16@ext.canterbury.ac.nz>
.\"	Added note on historical rules enforced when an unprivileged process
.\"	sends a signal.
.\"
.TH KILL 2 2001-12-18 "Linux 2.5.0" "Linux Programmer's Manual"
.SH NAME
kill \- send signal to a process
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.br
.B #include <signal.h>
.sp
.BI "int kill(pid_t " pid ", int " sig );
.fi
.SH DESCRIPTION
The
.B kill
system call
can be used to send any signal to any process group or process.
.PP
If \fIpid\fP is positive, then signal \fIsig\fP is sent to \fIpid\fP.
.PP
If \fIpid\fP equals 0, then \fIsig\fP is sent to every process in the
process group of the current process.
.PP
If \fIpid\fP equals \-1, then \fIsig\fP is sent to every process except
for process 1 (init), but see below.
.PP
If \fIpid\fP is less than \-1, then \fIsig\fP is sent to every process
in the process group \fI\-pid\fP.
.PP
If \fIsig\fP is 0, then no signal is sent, but error checking is still
performed.
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EINVAL
An invalid signal was specified.
.TP
.B ESRCH
The pid or process group does not exist.
Note that an existing process might be a zombie,
a process which already committed termination, but
has not yet been \fBwait()\fPed for.
.TP
.B EPERM
The process does not have permission to send the signal
to any of the receiving processes.
For a process to have permission to send a signal to process
.I pid
it must either have root privileges, or the real or effective
user ID of the sending process must equal the real or
saved set-user-ID of the receiving process.
In the case of SIGCONT it suffices when the sending and receiving
processes belong to the same session.
.SH NOTES
It is impossible to send a signal to task number one, the init process, for
which it has not installed a signal handler.  This is done to assure the
system is not brought down accidentally.
.LP
POSIX 1003.1-2001 requires that \fIkill(-1,sig)\fP send \fIsig\fP
to all processes that the current process may send signals to,
except possibly for some implementation-defined system processes.
Linux allows a process to signal itself, but on Linux the call
\fIkill(-1,sig)\fP does not signal the current process.
.SH "LINUX HISTORY"
Across different kernel versions, Linux has enforced different rules
for the permissions required for an unprivileged process
to send a signal to another process.
.\" In the 0.* kernels things chopped and changed quite
.\" a bit - MTK, 24 Jul 02
In kernels 1.0 to 1.2.2, a signal could be sent if the
effective user ID of the sender matched that of the receiver,
or the real user ID of the sender matched that of the receiver.
From kernel 1.2.3 until 1.3.77, a signal could be sent if the
effective user ID of the sender matched either the real or effective
user ID of the receiver.
The current rules, which conform to POSIX 1003.1-2001, were adopted
in kernel 1.3.78.
.SH "CONFORMING TO"
SVr4, SVID, POSIX.1, X/OPEN, BSD 4.3, POSIX 1003.1-2001
.SH "SEE ALSO"
.BR _exit (2),
.BR killpg (2),
.BR signal (2),
.BR tkill (2),
.BR exit (3),
.BR signal (7)
