.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt <michael@moria.de>
.\" Modified Wed Jul 21 22:18:17 1993 by  Rik Faith <faith@cs.unc.edu>
.\" Modified 21 Aug 1994 by Michael Chastain <mec@shell.portal.com>
.\"   Fixed typoes.
.\" Modified 13 Jun 1996 by aeb - Added a warning: . may be outside / tree.
.\" Modified Wed Nov  6 03:50:45 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified by Joseph S. Myers <jsm28@cam.ac.uk>, 970821
.\"
.TH CHROOT 2 1997-08-21 "Linux 2.0.30" "Linux Programmer's Manual"
.SH NAME
chroot \- change root directory
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int chroot(const char *" path );
.SH DESCRIPTION
.B chroot
changes the root directory to that specified in
.IR path .
This directory will be used for path names beginning with /.  The root
directory is inherited by all children of the current process.

Only the super-user may change the root directory.

Note that this call does not change the current working directory,
so that `.' can be outside the tree rooted at `/'.
In particular, the super-user can escape from a `chroot jail'
by doing `mkdir foo; chroot foo; cd ..'.
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
Depending on the file system, other errors can be returned.  The more
general errors are listed below:

.TP
.B EPERM
The effective UID is not zero.
.TP
.B EFAULT
.I path
points outside your accessible address space.
.TP
.B ENAMETOOLONG
.I path
is too long.
.TP
.B ENOENT
The file does not exist.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B ENOTDIR
A component of
.I path
is not a directory.
.TP
.B EACCES
Search permission is denied on a component of the path prefix.
.TP
.B ELOOP
Too many symbolic links were encountered in resolving
.IR path .
.TP
.B EIO
An I/O error occurred.
.SH "CONFORMING TO"
SVr4, SVID, 4.4BSD, X/OPEN.  This function is not part of POSIX.1.
SVr4 documents additional EINTR, ENOLINK and EMULTIHOP error conditions.
X/OPEN does not document EIO, ENOMEM or EFAULT error conditions.
This interface is marked as legacy by X/OPEN.
.SH "SEE ALSO"
.BR chdir (2)
