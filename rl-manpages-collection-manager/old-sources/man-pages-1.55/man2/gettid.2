.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 2003 Abhijit Menon-Sen <ams@wiw.org>
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.TH GETTID 2 "2003-02-01" "Linux 2.4.20" "Linux Programmer's Manual"
.SH NAME
gettid \- get thread identification
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <linux/unistd.h>
.sp
.B _syscall0(pid_t,gettid)
.sp
.B pid_t gettid(void);
.SH DESCRIPTION
\fBgettid\fP returns the thread ID of the current process. This is equal
to the process ID (as returned by
.BR getpid (2)),
unless the process is part of a thread group (created by specifying
the CLONE_THREAD flag to the
.BR clone (2)
system call). All processes in the same thread group
have the same PID, but each one has a unique TID.
.SH "CONFORMING TO"
\fBgettid\fP is Linux specific and should not be used in programs that
are intended to be portable.
.SH "SEE ALSO"
.BR getpid (2),
.BR clone (2),
.BR fork (2)

