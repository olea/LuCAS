.\" Hey Emacs! This file is -*- nroff -*- source.
.\" This page is in the public domain. - aeb
.\"
.TH GRANTPT 3 "2003-01-30" "PTY Control" "Linux Programmer's Manual"
.SH NAME
grantpt \- grant access to the slave pseudotty
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "int grantpt(int " fd ");"
.fi
.SH DESCRIPTION
The
.BR grantpt ()
function changes the mode and owner of the slave pseudo-terminal device
(pty) corresponding to the master pty referred to by
.IR fd .
The user ID of the slave is set to the real UID of the calling process.
The group ID is set to an unspecified value (e.g. tty).
The mode of the slave is set to 0620 (crw\--w\-\-\-\-).
.PP
The behavior of
.BR grantpt ()
is unspecified if a signal handler is installed to catch SIGCHLD signals.
.SH "RETURN VALUE"
When successful, 
.BR grantpt ()
returns 0. Otherwise, it returns \-1 and sets
.I errno
appropriately.
.SH ERRORS
.TP
.B EBADF
The
.I fd
argument is not a valid open file descriptor.
.TP
.B EINVAL
The
.I fd
argument is valid but not associated with a master pty.
.TP
.B EACCES
The corresponding slave pty could not be accessed.
.SH "CONFORMING TO"
POSIX 1003.1-2001
.SH NOTES
This is part of the Unix98 pty support, see
.BR pts (4).
Many systems implement this function via a setuid helper binary
called "pt_chown". With Linux devpts no such helper binary is required.
.SH "SEE ALSO"
.BR open (2),
.BR getpt (3),
.BR ptsname (3),
.BR unlockpt (3),
.BR pts (4)
