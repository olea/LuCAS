.\" Copyright 2000 Nicolás Lichtmaier <nick@debian.org>
.\" Created 2000-07-22 00:52-0300
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.TH ENCRYPT 3 2000-07-22 GNU "Linux Programmer's Manual"
.SH NAME
encrypt \- Encrypt 64 bits messages
.SH SYNOPSIS
.B #define _XOPEN_SOURCE
.sp
.B #include <unistd.h>
.sp
.BI "void encrypt(char " block "[64], int " edflag );
.br
.BI "void setkey(const char *" key );
.SH DESCRIPTION
These functions encrypt and decrypt 64 bit messages.
The setkey() function sets the key used by encrypt(). The
.I key
parameter used here is an array of bytes, having each byte the
numerical value 1 or 0. The key[n] byte, where n=8*q-1, is ignored
consisting the key used of 56 bits.
.PP
The setkey() function modifies the passed buffer, encoding if
.I edflag
is 0, and decoding if 1 is being passed.
.PP
These functions are not reentrant.
.SH "RETURN VALUE"
These functions do not return any value.
.SH "CONFORMING TO"
SVID, SUSv2
.SH "SEE ALSO"
.BR crypt (3)
