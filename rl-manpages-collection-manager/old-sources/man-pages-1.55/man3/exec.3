.\" Copyright (c) 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)exec.3	6.4 (Berkeley) 4/19/91
.\"
.\" Converted for Linux, Mon Nov 29 11:12:48 1993, faith@cs.unc.edu
.\" Updated more for Linux, Tue Jul 15 11:54:18 1997, pacman@cqc.com
.\"
.TH EXEC 3  1993-11-29 "BSD MANPAGE" "Linux Programmer's Manual"
.SH NAME
execl, execlp, execle, execv, execvp \- execute a file
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.B extern char **environ;
.sp
.BI "int execl(const char *" path ", const char *" arg ", ...);"
.br
.BI "int execlp(const char *" file ", const char *" arg ", ...);"
.br
.BI "int execle(const char *" path ", const char *" arg
.BI ", ..., char * const " envp "[]);"
.br
.BI "int execv(const char *" path ", char *const " argv "[]);"
.br
.BI "int execvp(const char *" file ", char *const " argv "[]);"
.SH DESCRIPTION
The
.B exec
family of functions replaces the current process image with a new process
image.  The functions described in this manual page are front-ends for the
function
.BR execve (2).
(See the manual page for
.B execve
for detailed information about the replacement of the current process.)
.PP
The initial argument for these functions is the pathname of a file which is
to be executed.
.PP
The
.I "const char *arg"
and subsequent ellipses in the
.BR execl ,
.BR execlp ,
and
.B execle
functions can be thought of as
.IR arg0 ,
.IR arg1 ,
\&...,
.IR argn .
Together they describe a list of one or more pointers to null-terminated
strings that represent the argument list available to the executed program.
The first argument, by convention, should point to the file name associated
with the file being executed.  The list of arguments
.I must
be terminated by a
.B NULL
pointer.
.PP
The
.B execv
and
.B execvp
functions provide an array of pointers to null-terminated strings that
represent the argument list available to the new program.  The first
argument, by convention, should point to the file name associated with the
file being executed.  The array of pointers
.I must
be terminated by a
.B NULL
pointer.
.PP
The
.B execle
function also specifies the environment of the executed process by following
the
.B NULL
pointer that terminates the list of arguments in the parameter list or the
pointer to the argv array with an additional parameter.  This additional
parameter is an array of pointers to null-terminated strings and
.I must
be terminated by a
.B NULL
pointer.  The other functions take the environment for the new process
image from the external variable
.I environ
in the current process.
.PP
Some of these functions have special semantics.
.PP
The functions
.B execlp
and
.B execvp
will duplicate the actions of the shell in searching for an executable file
if the specified file name does not contain a slash (/) character.  The
search path is the path specified in the environment by the
.B PATH
variable.  If this variable isn't specified, the default path
``:/bin:/usr/bin'' is used.  In addition, certain
errors are treated specially.
.PP
If permission is denied for a file (the attempted
.B execve
returned
.BR EACCES ),
these functions will continue searching the rest of the search path.  If no
other file is found, however, they will return with the global variable
.I errno
set to
.BR EACCES .
.PP
If the header of a file isn't recognized (the attempted
.B execve
returned
.BR ENOEXEC ),
these functions will execute the shell with the path of the file as its
first argument.  (If this attempt fails, no further searching is done.)
.SH "RETURN VALUE"
If any of the
.B exec
functions returns, an error will have occurred.  The return value is \-1,
and the global variable
.I errno
will be set to indicate the error.
.SH FILES
.I /bin/sh
.SH ERRORS
All of these functions may fail and set
.I errno
for any of the errors specified for the library function
.BR execve (2).
.SH "SEE ALSO"
.BR sh (1),
.BR execve (2),
.BR fork (2),
.BR environ (5),
.BR ptrace (2)
.SH COMPATIBILITY
On some other systems the default path (used when the environment
does not contain the variable \fBPATH\fR) has the current working
directory listed after
.I /bin
and
.IR /usr/bin ,
as an anti-Trojan-horse measure. Linux uses here the
traditional "current directory first" default path.
.PP
The behavior of
.B execlp
and
.B execvp
when errors occur while attempting to execute the file is historic
practice, but has not traditionally been documented and is not specified by
the POSIX standard. BSD (and possibly other systems) do an automatic
sleep and retry if ETXTBSY is encountered. Linux treats it as a hard
error and returns immediately.
.PP
Traditionally, the functions
.B execlp
and
.B execvp
ignored all errors except for the ones described above and
.B ENOMEM
and
.BR E2BIG ,
upon which they returned.  They now return if any error other than the ones
described above occurs.
.SH "CONFORMING TO"
.BR execl ,
.BR execv ,
.BR execle ,
.B execlp
and
.B execvp
conform to
IEEE Std1003.1-88 (``POSIX.1'').
